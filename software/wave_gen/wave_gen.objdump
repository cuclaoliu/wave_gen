
wave_gen.elf:     file format elf32-littlenios2
wave_gen.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x01040244

Program Header:
    LOAD off    0x00001000 vaddr 0x01040000 paddr 0x01040000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x01040020 paddr 0x01040020 align 2**12
         filesz 0x00016d18 memsz 0x00016d18 flags r-x
    LOAD off    0x00017d38 vaddr 0x01056d38 paddr 0x01058824 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x0001a310 vaddr 0x0105a310 paddr 0x0105a310 align 2**12
         filesz 0x00000000 memsz 0x00000188 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  01040000  01040000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  01040020  01040020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0001646c  01040244  01040244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000688  010566b0  010566b0  000176b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  01056d38  01058824  00017d38  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000188  0105a310  0105a310  0001a310  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory2 00000000  0105a498  0105a498  00019824  2**0
                  CONTENTS
  7 .data_buffer  00000000  01080000  01080000  00019824  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00019824  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00001110  00000000  00000000  00019848  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00028ece  00000000  00000000  0001a958  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 0000a72f  00000000  00000000  00043826  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000e4cd  00000000  00000000  0004df55  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00002a28  00000000  00000000  0005c424  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    00004103  00000000  00000000  0005ee4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    0001e6eb  00000000  00000000  00062f4f  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000060  00000000  00000000  0008163c  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001b50  00000000  00000000  000816a0  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  00086c1a  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000a  00000000  00000000  00086c1d  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  00086c27  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  00086c28  2**0
                  CONTENTS, READONLY
 22 .sysid_hash   00000004  00000000  00000000  00086c29  2**0
                  CONTENTS, READONLY
 23 .sysid_base   00000004  00000000  00000000  00086c2d  2**0
                  CONTENTS, READONLY
 24 .sysid_time   00000004  00000000  00000000  00086c31  2**0
                  CONTENTS, READONLY
 25 .stderr_dev   00000009  00000000  00000000  00086c35  2**0
                  CONTENTS, READONLY
 26 .stdin_dev    00000009  00000000  00000000  00086c3e  2**0
                  CONTENTS, READONLY
 27 .stdout_dev   00000009  00000000  00000000  00086c47  2**0
                  CONTENTS, READONLY
 28 .sopc_system_name 00000009  00000000  00000000  00086c50  2**0
                  CONTENTS, READONLY
 29 .quartus_project_dir 0000000f  00000000  00000000  00086c59  2**0
                  CONTENTS, READONLY
 30 .jdi          0000465e  00000000  00000000  00086c68  2**0
                  CONTENTS, READONLY
 31 .sopcinfo     00093c57  00000000  00000000  0008b2c6  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
01040000 l    d  .entry	00000000 .entry
01040020 l    d  .exceptions	00000000 .exceptions
01040244 l    d  .text	00000000 .text
010566b0 l    d  .rodata	00000000 .rodata
01056d38 l    d  .rwdata	00000000 .rwdata
0105a310 l    d  .bss	00000000 .bss
0105a498 l    d  .onchip_memory2	00000000 .onchip_memory2
01080000 l    d  .data_buffer	00000000 .data_buffer
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../wave_gen_bsp//obj/HAL/src/crt0.o
0104028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 audio.c
0105a348 l     O .bss	00000028 reg_file
00000000 l    df *ABS*	00000000 debug.c
00000000 l    df *ABS*	00000000 i2c.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 s_sin.c
00000000 l    df *ABS*	00000000 e_rem_pio2.c
010568a8 l     O .rodata	00000108 two_over_pi
01056828 l     O .rodata	00000080 npio2_hw
00000000 l    df *ABS*	00000000 k_cos.c
00000000 l    df *ABS*	00000000 k_rem_pio2.c
010569f0 l     O .rodata	00000010 init_jk
010569b0 l     O .rodata	00000040 PIo2
00000000 l    df *ABS*	00000000 k_sin.c
00000000 l    df *ABS*	00000000 s_fabs.c
00000000 l    df *ABS*	00000000 s_floor.c
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 s_copysign.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
01056b46 l     O .rodata	00000010 zeroes.4389
01056b56 l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 vfprintf.c
01056b66 l     O .rodata	00000010 zeroes.4404
0104a0dc l     F .text	000000bc __sbprintf
01056b76 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 vsnprintf.c
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
0104a410 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0104bf40 l     F .text	00000008 __fp_unlock
0104bf54 l     F .text	0000019c __sinit.part.1
0104c0f0 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
01056d38 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0105717c l     O .rwdata	00000020 lc_ctype_charset
0105715c l     O .rwdata	00000020 lc_message_charset
0105719c l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
01056ba8 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
01056cdc l     O .rodata	00000010 blanks.4332
01056ccc l     O .rodata	00000010 zeroes.4333
00000000 l    df *ABS*	00000000 vfprintf.c
010508f8 l     F .text	000000fc __sprint_r.part.0
01056cfc l     O .rodata	00000010 blanks.4348
01056cec l     O .rodata	00000010 zeroes.4349
01051e84 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
01053da8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
01053eb4 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
01053ee0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
01053fcc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
010540ac l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
01054198 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0105436c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
01058814 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
010545e8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0105471c l     F .text	00000034 alt_dev_reg
01057784 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
01054a10 l     F .text	0000020c altera_avalon_jtag_uart_irq
01054c1c l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
01055254 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
010555e4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
01055a58 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
01055b98 l     F .text	0000003c alt_get_errno
01055bd4 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
0105a344 g     O .bss	00000004 alt_instruction_exception_handler
0104eb30 g     F .text	00000074 _mprec_log10
01041260 g     F .text	00000124 I2C_Read
0104ec1c g     F .text	0000008c __any_on
01052420 g     F .text	00000054 _isatty_r
01056bb4 g     O .rodata	00000028 __mprec_tinytens
010542a8 g     F .text	0000007c alt_main
01045ac0 g     F .text	000000c0 _puts_r
0105a398 g     O .bss	00000100 alt_irq
01043904 g     F .text	00000014 fabs
01052474 g     F .text	00000060 _lseek_r
01058824 g       *ABS*	00000000 __flash_rwdata_start
0104471c g     F .text	00000088 .hidden __eqdf2
0105a498 g       *ABS*	00000000 __alt_heap_start
01040290 g     F .text	00000188 AUDIO_Init
01045a84 g     F .text	0000003c printf
0105268c g     F .text	0000009c _wcrtomb_r
010404d8 g     F .text	00000078 AUDIO_AdcEnableHighPassFilter
0104f3ac g     F .text	0000005c __sseek
0104c290 g     F .text	00000010 __sinit
01052534 g     F .text	00000140 __swbuf_r
0104cd58 g     F .text	0000007c _setlocale_r
0104c0f8 g     F .text	00000068 __sfmoreglue
01054348 g     F .text	00000024 __malloc_unlock
0104da28 g     F .text	0000015c memmove
0104c278 g     F .text	00000018 _cleanup
01040d8c g     F .text	000000d0 aduio_RegWrite
01040f7c g     F .text	00000030 AUDIO_FifoClear
0104dcac g     F .text	000000a8 _Balloc
010447a4 g     F .text	000000dc .hidden __gtdf2
01055f90 g     F .text	00000024 altera_nios2_gen2_irq_init
01040f24 g     F .text	00000058 AUDIO_AdcFifoGetData
01041604 g     F .text	00000130 i2c_write
01040000 g     F .entry	0000001c __reset
01040020 g       *ABS*	00000000 __flash_exceptions_start
010523c4 g     F .text	0000005c _fstat_r
0105a328 g     O .bss	00000004 errno
01043918 g     F .text	000001ec floor
0104f328 g     F .text	00000008 __seofread
0104f6bc g     F .text	0000123c ___svfiprintf_internal_r
0105a330 g     O .bss	00000004 alt_argv
010607e4 g       *ABS*	00000000 _gp
010545b8 g     F .text	00000030 usleep
01057604 g     O .rwdata	00000180 alt_fd_list
01041c98 g     F .text	0000076c __ieee754_rem_pio2
01055fb4 g     F .text	00000090 alt_find_dev
0104d8e0 g     F .text	00000148 memcpy
0104bf48 g     F .text	0000000c _cleanup_r
01045914 g     F .text	000000dc .hidden __floatsidf
01055b1c g     F .text	0000007c alt_io_redirect
01053c0c g     F .text	000000f4 .hidden __ltdf2
010566b0 g       *ABS*	00000000 __DTOR_END__
01045b80 g     F .text	00000014 puts
01056280 g     F .text	0000009c alt_exception_cause_generated_bad_addr
0104f20c g     F .text	00000074 __fpclassifyd
0104ea8c g     F .text	000000a4 __ratio
01051e68 g     F .text	0000001c __vfiprintf_internal
01054e14 g     F .text	0000021c altera_avalon_jtag_uart_read
01045a54 g     F .text	00000030 _printf_r
01043db4 g     F .text	00000064 .hidden __udivsi3
01054008 g     F .text	000000a4 isatty
01040c74 g     F .text	0000008c AUDIO_EnableByPass
01056c04 g     O .rodata	000000c8 __mprec_tens
0104cdd4 g     F .text	0000000c __locale_charset
01042404 g     F .text	000004a4 __kernel_cos
0104a288 g     F .text	00000034 vsnprintf
010561f0 g     F .text	00000090 alt_icache_flush
01041384 g     F .text	0000017c I2C_MultipleRead
0105a324 g     O .bss	00000004 __malloc_top_pad
01040a4c g     F .text	00000114 AUDIO_SetLineInVol
010587ec g     O .rwdata	00000004 __mb_cur_max
0104ce04 g     F .text	0000000c _localeconv_r
0104e0b8 g     F .text	0000003c __i2b
0104c714 g     F .text	000004bc __sfvwrite_r
0104f280 g     F .text	00000054 _sbrk_r
010410d4 g     F .text	00000090 myprintf_dword_array
010524d4 g     F .text	00000060 _read_r
0105880c g     O .rwdata	00000004 alt_max_fd
010520b8 g     F .text	000000f0 _fclose_r
0104bf10 g     F .text	00000030 fflush
01040600 g     F .text	000000e0 AUDIO_DacEnableZeroCross
0105a320 g     O .bss	00000004 __malloc_max_sbrked_mem
01043638 g     F .text	000002cc __kernel_sin
01043e70 g     F .text	000008ac .hidden __adddf3
0104e834 g     F .text	0000010c __b2d
01052dec g     F .text	00000538 .hidden __umoddi3
010541d4 g     F .text	000000d4 lseek
010587e4 g     O .rwdata	00000004 _global_impure_ptr
0104eca8 g     F .text	00000564 _realloc_r
0105a498 g       *ABS*	00000000 __bss_end
01055968 g     F .text	000000f0 alt_iic_isr_register
01055e88 g     F .text	00000108 alt_tick
01052874 g     F .text	00000578 .hidden __udivdi3
01052320 g     F .text	00000024 _fputwc_r
01056bdc g     O .rodata	00000028 __mprec_bigtens
0104de9c g     F .text	00000104 __s2b
01053d00 g     F .text	000000a8 .hidden __floatunsidf
01040460 g     F .text	00000078 AUDIO_MicBoost
0104e574 g     F .text	00000060 __mcmp
0104c2b0 g     F .text	00000018 __fp_lock_all
0105591c g     F .text	0000004c alt_ic_irq_enabled
01041164 g     F .text	000000fc I2C_Write
01055dec g     F .text	0000009c alt_alarm_stop
0105a338 g     O .bss	00000004 alt_irq_active
010400fc g     F .exceptions	000000d4 alt_irq_handler
010575dc g     O .rwdata	00000028 alt_dev_null
010428a8 g     F .text	00000d90 __kernel_rem_pio2
01041500 g     F .text	0000008c i2c_start
0105559c g     F .text	00000048 alt_dcache_flush_all
0104dfa0 g     F .text	00000068 __hi0bits
01045894 g     F .text	00000080 .hidden __fixdfsi
01058824 g       *ABS*	00000000 __ram_rwdata_end
01058804 g     O .rwdata	00000008 alt_dev_list
01054624 g     F .text	000000f8 write
01056d38 g       *ABS*	00000000 __ram_rodata_end
01053f1c g     F .text	000000b0 fstat
01053c0c g     F .text	000000f4 .hidden __ledf2
01040fe0 g     F .text	0000006c myprintf
0104188c g     F .text	00000180 audio_setup
0104e2ec g     F .text	00000140 __pow5mult
01050a0c g     F .text	0000145c ___vfiprintf_internal_r
0105a318 g     O .bss	00000004 __nlocale_changed
01043e18 g     F .text	00000058 .hidden __umodsi3
01040d00 g     F .text	0000008c AUDIO_EnableSiteTone
0105a498 g       *ABS*	00000000 end
01054950 g     F .text	000000c0 altera_avalon_jtag_uart_init
010401d0 g     F .exceptions	00000074 alt_instruction_exception_entry
010566b0 g       *ABS*	00000000 __CTOR_LIST__
01080000 g       *ABS*	00000000 __alt_stack_pointer
010552cc g     F .text	0000007c alt_avalon_timer_sc_init
010459f0 g     F .text	00000064 .hidden __clzsi2
01055030 g     F .text	00000224 altera_avalon_jtag_uart_write
0104c2a0 g     F .text	00000004 __sfp_lock_acquire
0104d7fc g     F .text	000000e4 memchr
01047ec8 g     F .text	000021f8 ___vfprintf_internal_r
01045b94 g     F .text	00000058 _sprintf_r
0104c404 g     F .text	00000310 _free_r
0104cde0 g     F .text	00000010 __locale_mb_cur_max
010564fc g     F .text	00000180 __call_exitprocs
0105a314 g     O .bss	00000004 __mlocale_changed
010587f0 g     O .rwdata	00000004 __malloc_sbrk_base
01040244 g     F .text	0000004c _start
0105a33c g     O .bss	00000004 _alt_tick_rate
01041ba8 g     F .text	000000f0 sin
0104e42c g     F .text	00000148 __lshift
0105a340 g     O .bss	00000004 _alt_nticks
010543a8 g     F .text	000000fc read
01054788 g     F .text	00000064 alt_sys_init
0104f4ec g     F .text	000001d0 __ssprint_r
010563e4 g     F .text	00000118 __register_exitproc
010406e0 g     F .text	0000008c AUDIO_DacEnableSoftMute
0104e0f4 g     F .text	000001f8 __multiply
01054cbc g     F .text	00000068 altera_avalon_jtag_uart_close
01056d38 g       *ABS*	00000000 __ram_rwdata_start
010566b0 g       *ABS*	00000000 __ram_rodata_start
0105a370 g     O .bss	00000028 __malloc_current_mallinfo
0104e940 g     F .text	0000014c __d2b
010547ec g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0105614c g     F .text	000000a4 alt_get_fd
01055474 g     F .text	00000128 alt_busy_sleep
01051fa0 g     F .text	00000054 _close_r
01056368 g     F .text	0000007c memcmp
010548ac g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0105a498 g       *ABS*	00000000 __alt_stack_base
010548fc g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0104a2bc g     F .text	00000154 __swsetup_r
01053324 g     F .text	000008e8 .hidden __divdf3
0104c160 g     F .text	00000118 __sfp
0104eba4 g     F .text	00000078 __copybits
01040550 g     F .text	000000b0 AUDIO_DacDeemphasisControl
010571d4 g     O .rwdata	00000408 __malloc_av_
0104c2ac g     F .text	00000004 __sinit_lock_release
0104a198 g     F .text	000000f0 _vsnprintf_r
0104158c g     F .text	00000078 i2c_stop
01044880 g     F .text	00000718 .hidden __muldf3
0104f2d4 g     F .text	00000054 __sread
01056044 g     F .text	00000108 alt_find_file
01055620 g     F .text	000000a4 alt_dev_llist_insert
01054324 g     F .text	00000024 __malloc_lock
01054508 g     F .text	000000b0 sbrk
01045cf0 g     F .text	000021d8 ___svfprintf_internal_r
010408d8 g     F .text	00000090 AUDIO_SetInputSource
0104beb4 g     F .text	0000005c _fflush_r
01051ff4 g     F .text	000000c4 _calloc_r
01040418 g     F .text	00000048 AUDIO_InterfaceActive
0105a310 g       *ABS*	00000000 __bss_start
0104db84 g     F .text	00000128 memset
01041a0c g     F .text	0000019c main
0105a334 g     O .bss	00000004 alt_envp
0105a31c g     O .bss	00000004 __malloc_max_total_mem
0105484c g     F .text	00000060 altera_avalon_jtag_uart_write_fd
01041734 g     F .text	00000158 i2c_read
01052674 g     F .text	00000018 __swbuf
0104f408 g     F .text	00000008 __sclose
01080000 g       *ABS*	00000000 __alt_heap_limit
010521a8 g     F .text	00000014 fclose
0104a610 g     F .text	00001688 _dtoa_r
0104cff0 g     F .text	0000080c _malloc_r
010527e8 g     F .text	00000030 __ascii_wctomb
01058810 g     O .rwdata	00000004 alt_errno
0104cbd0 g     F .text	000000c4 _fwalk
01043cbc g     F .text	00000084 .hidden __divsi3
0104c2e0 g     F .text	00000124 _malloc_trim_r
010566b0 g       *ABS*	00000000 __CTOR_END__
010407f8 g     F .text	000000e0 AUDIO_LineInMute
0104f410 g     F .text	000000dc strcmp
0104076c g     F .text	0000008c AUDIO_MicMute
010566b0 g       *ABS*	00000000 __flash_rodata_start
010566b0 g       *ABS*	00000000 __DTOR_LIST__
01043ca0 g     F .text	0000001c copysign
0104471c g     F .text	00000088 .hidden __nedf2
01054750 g     F .text	00000038 alt_irq_init
010544a4 g     F .text	00000064 alt_release_fd
01045bec g     F .text	0000006c sprintf
01056a00 g     O .rodata	00000100 .hidden __clz_tab
01040fac g     F .text	00000034 debug_output
0105a310 g     O .bss	00000004 _PathLocale
0105631c g     F .text	00000014 atexit
01051f40 g     F .text	00000060 _write_r
0104ce10 g     F .text	00000018 setlocale
010587e8 g     O .rwdata	00000004 _impure_ptr
0105a32c g     O .bss	00000004 alt_argc
0104bc98 g     F .text	0000021c __sflush_r
01043b04 g     F .text	0000019c scalbn
01055724 g     F .text	00000060 _do_dtors
0104cdfc g     F .text	00000008 __locale_cjk_lang
01040ee8 g     F .text	0000003c AUDIO_AdcFifoNotEmpty
01040020 g       .exceptions	00000000 alt_irq_entry
01080000 g       *ABS*	00000000 __alt_mem_data_buffer
0104e7d0 g     F .text	00000064 __ulp
0104c2c8 g     F .text	00000018 __fp_unlock_all
01040e98 g     F .text	00000050 AUDIO_DacFifoSetData
010587fc g     O .rwdata	00000008 alt_fs_list
0104104c g     F .text	00000088 myprintf_hex_array
01040020 g       *ABS*	00000000 __ram_exceptions_start
01040968 g     F .text	000000e4 AUDIO_SetSampleRate
0104ce28 g     F .text	0000000c localeconv
01040000 g       *ABS*	00000000 __alt_mem_onchip_memory2
010557b8 g     F .text	00000050 alt_ic_isr_register
01058824 g       *ABS*	00000000 _edata
0105a498 g       *ABS*	00000000 _end
01040b60 g     F .text	00000114 AUDIO_SetLineOutVol
010521bc g     F .text	00000164 __fputwc
01040244 g       *ABS*	00000000 __ram_exceptions_end
01054d24 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
01055890 g     F .text	0000008c alt_ic_irq_disable
0104f330 g     F .text	0000007c __swrite
010587f4 g     O .rwdata	00000004 __malloc_trim_threshold
0104cdf0 g     F .text	0000000c __locale_msgcharset
01056330 g     F .text	00000038 exit
0104cc94 g     F .text	000000c4 _fwalk_reent
0104e5d4 g     F .text	000001fc __mdiff
01043d40 g     F .text	00000074 .hidden __modsi3
01080000 g       *ABS*	00000000 __alt_data_end
01040020 g     F .exceptions	00000000 alt_exception
0104c2a4 g     F .text	00000004 __sfp_lock_release
0105667c g     F .text	00000034 _exit
01055348 g     F .text	0000012c alt_alarm_start
0104ce34 g     F .text	000001bc __smakebuf_r
01045c58 g     F .text	00000098 strlen
01055c98 g     F .text	00000154 open
01040e5c g     F .text	0000003c AUDIO_DacFifoNotFull
010447a4 g     F .text	000000dc .hidden __gedf2
010587f8 g     O .rwdata	00000004 __wctomb
010509f4 g     F .text	00000018 __sprint_r
01055784 g     F .text	00000034 alt_icache_flush_all
01058818 g     O .rwdata	00000004 alt_priority_mask
01055808 g     F .text	00000088 alt_ic_irq_enable
0104a0c0 g     F .text	0000001c __vfprintf_internal
01052818 g     F .text	0000005c _wctomb_r
01044f98 g     F .text	000008fc .hidden __subdf3
0104e008 g     F .text	000000b0 __lo0bits
0105881c g     O .rwdata	00000008 alt_alarm_list
010556c4 g     F .text	00000060 _do_ctors
01052728 g     F .text	000000c0 wcrtomb
01053de4 g     F .text	000000d0 close
01054114 g     F .text	00000084 alt_load
01052344 g     F .text	00000080 fputwc
0104c2a8 g     F .text	00000004 __sinit_lock_acquire
0104dd7c g     F .text	00000120 __multadd
0104dd54 g     F .text	00000028 _Bfree



Disassembly of section .entry:

01040000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
 1040000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
 1040004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
 1040008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
 104000c:	00bffd16 	blt	zero,r2,1040004 <__alt_data_end+0xfffc0004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 1040010:	00404134 	movhi	at,260
    ori r1, r1, %lo(_start)
 1040014:	08409114 	ori	at,at,580
    jmp r1
 1040018:	0800683a 	jmp	at
 104001c:	00000000 	call	0 <__alt_mem_onchip_memory2-0x1040000>

Disassembly of section .exceptions:

01040020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 1040020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 1040024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 1040028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 104002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 1040030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 1040034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 1040038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 104003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 1040040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 1040044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 1040048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 104004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 1040050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 1040054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 1040058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 104005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 1040060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 1040064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 1040068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 104006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 1040070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 1040074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 1040078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 104007c:	10000326 	beq	r2,zero,104008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 1040080:	20000226 	beq	r4,zero,104008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 1040084:	10400fc0 	call	10400fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 1040088:	00000706 	br	10400a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
 104008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
 1040090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 1040094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 1040098:	10401d00 	call	10401d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 104009c:	1000021e 	bne	r2,zero,10400a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 10400a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 10400a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 10400a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 10400ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 10400b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 10400b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 10400b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 10400bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 10400c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 10400c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 10400c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 10400cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 10400d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 10400d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 10400d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 10400dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 10400e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 10400e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 10400e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 10400ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 10400f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 10400f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 10400f8:	ef80083a 	eret

010400fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 10400fc:	defff904 	addi	sp,sp,-28
 1040100:	dfc00615 	stw	ra,24(sp)
 1040104:	df000515 	stw	fp,20(sp)
 1040108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 104010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 1040110:	0005313a 	rdctl	r2,ipending
 1040114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 1040118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 104011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 1040120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 1040124:	00800044 	movi	r2,1
 1040128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 104012c:	e0fffb17 	ldw	r3,-20(fp)
 1040130:	e0bffc17 	ldw	r2,-16(fp)
 1040134:	1884703a 	and	r2,r3,r2
 1040138:	10001426 	beq	r2,zero,104018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 104013c:	008041b4 	movhi	r2,262
 1040140:	10a8e604 	addi	r2,r2,-23656
 1040144:	e0fffd17 	ldw	r3,-12(fp)
 1040148:	180690fa 	slli	r3,r3,3
 104014c:	10c5883a 	add	r2,r2,r3
 1040150:	10c00017 	ldw	r3,0(r2)
 1040154:	008041b4 	movhi	r2,262
 1040158:	10a8e604 	addi	r2,r2,-23656
 104015c:	e13ffd17 	ldw	r4,-12(fp)
 1040160:	200890fa 	slli	r4,r4,3
 1040164:	1105883a 	add	r2,r2,r4
 1040168:	10800104 	addi	r2,r2,4
 104016c:	10800017 	ldw	r2,0(r2)
 1040170:	1009883a 	mov	r4,r2
 1040174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 1040178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 104017c:	0005313a 	rdctl	r2,ipending
 1040180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 1040184:	e0bfff17 	ldw	r2,-4(fp)
 1040188:	00000706 	br	10401a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 104018c:	e0bffc17 	ldw	r2,-16(fp)
 1040190:	1085883a 	add	r2,r2,r2
 1040194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 1040198:	e0bffd17 	ldw	r2,-12(fp)
 104019c:	10800044 	addi	r2,r2,1
 10401a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 10401a4:	003fe106 	br	104012c <__alt_data_end+0xfffc012c>

    active = alt_irq_pending ();
 10401a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 10401ac:	e0bffb17 	ldw	r2,-20(fp)
 10401b0:	103fdb1e 	bne	r2,zero,1040120 <__alt_data_end+0xfffc0120>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 10401b4:	0001883a 	nop
}
 10401b8:	0001883a 	nop
 10401bc:	e037883a 	mov	sp,fp
 10401c0:	dfc00117 	ldw	ra,4(sp)
 10401c4:	df000017 	ldw	fp,0(sp)
 10401c8:	dec00204 	addi	sp,sp,8
 10401cc:	f800283a 	ret

010401d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 10401d0:	defffb04 	addi	sp,sp,-20
 10401d4:	dfc00415 	stw	ra,16(sp)
 10401d8:	df000315 	stw	fp,12(sp)
 10401dc:	df000304 	addi	fp,sp,12
 10401e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
 10401e4:	000531fa 	rdctl	r2,exception
 10401e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
 10401ec:	e0bffd17 	ldw	r2,-12(fp)
 10401f0:	10801f0c 	andi	r2,r2,124
 10401f4:	1004d0ba 	srli	r2,r2,2
 10401f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
 10401fc:	0005333a 	rdctl	r2,badaddr
 1040200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 1040204:	d0a6d817 	ldw	r2,-25760(gp)
 1040208:	10000726 	beq	r2,zero,1040228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 104020c:	d0a6d817 	ldw	r2,-25760(gp)
 1040210:	e0fffd17 	ldw	r3,-12(fp)
 1040214:	e1bffe17 	ldw	r6,-8(fp)
 1040218:	e17fff17 	ldw	r5,-4(fp)
 104021c:	1809883a 	mov	r4,r3
 1040220:	103ee83a 	callr	r2
 1040224:	00000206 	br	1040230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 1040228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 104022c:	0005883a 	mov	r2,zero
}
 1040230:	e037883a 	mov	sp,fp
 1040234:	dfc00117 	ldw	ra,4(sp)
 1040238:	df000017 	ldw	fp,0(sp)
 104023c:	dec00204 	addi	sp,sp,8
 1040240:	f800283a 	ret

Disassembly of section .text:

01040244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
 1040244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
 1040248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
 104024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
 1040250:	00bffd16 	blt	zero,r2,1040248 <__alt_data_end+0xfffc0248>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 1040254:	06c04234 	movhi	sp,264
    ori sp, sp, %lo(__alt_stack_pointer)
 1040258:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 104025c:	068041b4 	movhi	gp,262
    ori gp, gp, %lo(_gp)
 1040260:	d681f914 	ori	gp,gp,2020
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 1040264:	00804174 	movhi	r2,261
    ori r2, r2, %lo(__bss_start)
 1040268:	10a8c414 	ori	r2,r2,41744

    movhi r3, %hi(__bss_end)
 104026c:	00c04174 	movhi	r3,261
    ori r3, r3, %lo(__bss_end)
 1040270:	18e92614 	ori	r3,r3,42136

    beq r2, r3, 1f
 1040274:	10c00326 	beq	r2,r3,1040284 <_start+0x40>

0:
    stw zero, (r2)
 1040278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 104027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 1040280:	10fffd36 	bltu	r2,r3,1040278 <__alt_data_end+0xfffc0278>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 1040284:	10541140 	call	1054114 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 1040288:	10542a80 	call	10542a8 <alt_main>

0104028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 104028c:	003fff06 	br	104028c <__alt_data_end+0xfffc028c>

01040290 <AUDIO_Init>:

/////////////////////////////////////////////////////////////////////////
///////////// External function body ////////////////////////////////////
/////////////////////////////////////////////////////////////////////////

bool AUDIO_Init(void){
 1040290:	defffd04 	addi	sp,sp,-12
 1040294:	dfc00215 	stw	ra,8(sp)
 1040298:	df000115 	stw	fp,4(sp)
 104029c:	df000104 	addi	fp,sp,4
   bool bSuccess = TRUE;
 10402a0:	00800044 	movi	r2,1
 10402a4:	e0bfff15 	stw	r2,-4(fp)
    AUDIO_DEBUG(("[AUDIO] AUDIO_Init...\r\n"));
 10402a8:	01004174 	movhi	r4,261
 10402ac:	2119ac04 	addi	r4,r4,26288
 10402b0:	1040fe00 	call	1040fe0 <myprintf>

    if (bSuccess)
 10402b4:	e0bfff17 	ldw	r2,-4(fp)
 10402b8:	10000426 	beq	r2,zero,10402cc <AUDIO_Init+0x3c>
        bSuccess = aduio_RegWrite(15, 0x0000);  // reset
 10402bc:	000b883a 	mov	r5,zero
 10402c0:	010003c4 	movi	r4,15
 10402c4:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 10402c8:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
 10402cc:	e0bfff17 	ldw	r2,-4(fp)
 10402d0:	10000426 	beq	r2,zero,10402e4 <AUDIO_Init+0x54>
        bSuccess = aduio_RegWrite(9, 0x0000);  // inactive interface         
 10402d4:	000b883a 	mov	r5,zero
 10402d8:	01000244 	movi	r4,9
 10402dc:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 10402e0:	e0bfff15 	stw	r2,-4(fp)
       
    //usleep(20*1000);
    if (bSuccess)
 10402e4:	e0bfff17 	ldw	r2,-4(fp)
 10402e8:	10000426 	beq	r2,zero,10402fc <AUDIO_Init+0x6c>
        bSuccess = aduio_RegWrite(0, 0x0017);  // Left Line In: set left line in volume
 10402ec:	014005c4 	movi	r5,23
 10402f0:	0009883a 	mov	r4,zero
 10402f4:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 10402f8:	e0bfff15 	stw	r2,-4(fp)
        
    if (bSuccess)
 10402fc:	e0bfff17 	ldw	r2,-4(fp)
 1040300:	10000426 	beq	r2,zero,1040314 <AUDIO_Init+0x84>
        bSuccess = aduio_RegWrite(1, 0x0017);  // Right Line In: set right line in volume
 1040304:	014005c4 	movi	r5,23
 1040308:	01000044 	movi	r4,1
 104030c:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 1040310:	e0bfff15 	stw	r2,-4(fp)
        
    if (bSuccess)
 1040314:	e0bfff17 	ldw	r2,-4(fp)
 1040318:	10000426 	beq	r2,zero,104032c <AUDIO_Init+0x9c>
        bSuccess = aduio_RegWrite(2, 0x005B);  // Left Headphone Out: set left line out volume
 104031c:	014016c4 	movi	r5,91
 1040320:	01000084 	movi	r4,2
 1040324:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 1040328:	e0bfff15 	stw	r2,-4(fp)
        
    if (bSuccess)
 104032c:	e0bfff17 	ldw	r2,-4(fp)
 1040330:	10000426 	beq	r2,zero,1040344 <AUDIO_Init+0xb4>
        bSuccess = aduio_RegWrite(3, 0x005B);  // Right Headphone Out: set right line out volume
 1040334:	014016c4 	movi	r5,91
 1040338:	010000c4 	movi	r4,3
 104033c:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 1040340:	e0bfff15 	stw	r2,-4(fp)
        
    if (bSuccess)      
 1040344:	e0bfff17 	ldw	r2,-4(fp)
 1040348:	10000426 	beq	r2,zero,104035c <AUDIO_Init+0xcc>
        bSuccess = aduio_RegWrite(4, 0x0015);  // Analogue Audio Path Control: set mic as input and boost it, and enable dac
 104034c:	01400544 	movi	r5,21
 1040350:	01000104 	movi	r4,4
 1040354:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 1040358:	e0bfff15 	stw	r2,-4(fp)
                
    if (bSuccess)
 104035c:	e0bfff17 	ldw	r2,-4(fp)
 1040360:	10000426 	beq	r2,zero,1040374 <AUDIO_Init+0xe4>
        bSuccess = aduio_RegWrite(5, 0x0000);  // Digital Audio Path Control: disable soft mute         
 1040364:	000b883a 	mov	r5,zero
 1040368:	01000144 	movi	r4,5
 104036c:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 1040370:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
 1040374:	e0bfff17 	ldw	r2,-4(fp)
 1040378:	10000426 	beq	r2,zero,104038c <AUDIO_Init+0xfc>
        bSuccess = aduio_RegWrite(6, 0);  // power down control: power on all         
 104037c:	000b883a 	mov	r5,zero
 1040380:	01000184 	movi	r4,6
 1040384:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 1040388:	e0bfff15 	stw	r2,-4(fp)

    if (bSuccess)
 104038c:	e0bfff17 	ldw	r2,-4(fp)
 1040390:	10000426 	beq	r2,zero,10403a4 <AUDIO_Init+0x114>
        bSuccess = aduio_RegWrite(7, 0x0042);  // I2S, iwl=16-bits, Enable Master Mode         
 1040394:	01401084 	movi	r5,66
 1040398:	010001c4 	movi	r4,7
 104039c:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 10403a0:	e0bfff15 	stw	r2,-4(fp)
//        bSuccess = aduio_RegWrite(7, 0x0041);  // MSB-First, left justified, iwl=16-bits, Enable Master Mode         

    if (bSuccess)
 10403a4:	e0bfff17 	ldw	r2,-4(fp)
 10403a8:	10000426 	beq	r2,zero,10403bc <AUDIO_Init+0x12c>
        bSuccess = aduio_RegWrite(8, 0x0002);  // Normal, Base OVer-Sampleing Rate 384 fs (BOSR=1)         
 10403ac:	01400084 	movi	r5,2
 10403b0:	01000204 	movi	r4,8
 10403b4:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 10403b8:	e0bfff15 	stw	r2,-4(fp)


    if (bSuccess)
 10403bc:	e0bfff17 	ldw	r2,-4(fp)
 10403c0:	10000426 	beq	r2,zero,10403d4 <AUDIO_Init+0x144>
        bSuccess = aduio_RegWrite(9, 0x0001);  // active interface
 10403c4:	01400044 	movi	r5,1
 10403c8:	01000244 	movi	r4,9
 10403cc:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 10403d0:	e0bfff15 	stw	r2,-4(fp)
        
        
         
    AUDIO_DEBUG(("[AUDIO] AUDIO_Init %s\r\n", bSuccess?"success":"fail"));        
 10403d4:	e0bfff17 	ldw	r2,-4(fp)
 10403d8:	10000326 	beq	r2,zero,10403e8 <AUDIO_Init+0x158>
 10403dc:	00804174 	movhi	r2,261
 10403e0:	1099b204 	addi	r2,r2,26312
 10403e4:	00000206 	br	10403f0 <AUDIO_Init+0x160>
 10403e8:	00804174 	movhi	r2,261
 10403ec:	1099b404 	addi	r2,r2,26320
 10403f0:	100b883a 	mov	r5,r2
 10403f4:	01004174 	movhi	r4,261
 10403f8:	2119b604 	addi	r4,r4,26328
 10403fc:	1040fe00 	call	1040fe0 <myprintf>
    
    return bSuccess;
 1040400:	e0bfff17 	ldw	r2,-4(fp)

}
 1040404:	e037883a 	mov	sp,fp
 1040408:	dfc00117 	ldw	ra,4(sp)
 104040c:	df000017 	ldw	fp,0(sp)
 1040410:	dec00204 	addi	sp,sp,8
 1040414:	f800283a 	ret

01040418 <AUDIO_InterfaceActive>:

bool AUDIO_InterfaceActive(bool bActive){
 1040418:	defffc04 	addi	sp,sp,-16
 104041c:	dfc00315 	stw	ra,12(sp)
 1040420:	df000215 	stw	fp,8(sp)
 1040424:	df000204 	addi	fp,sp,8
 1040428:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    bSuccess = aduio_RegWrite(9, bActive?0x0001:0x0000); 
 104042c:	e0bfff17 	ldw	r2,-4(fp)
 1040430:	1004c03a 	cmpne	r2,r2,zero
 1040434:	10803fcc 	andi	r2,r2,255
 1040438:	100b883a 	mov	r5,r2
 104043c:	01000244 	movi	r4,9
 1040440:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 1040444:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;
 1040448:	e0bffe17 	ldw	r2,-8(fp)
}
 104044c:	e037883a 	mov	sp,fp
 1040450:	dfc00117 	ldw	ra,4(sp)
 1040454:	df000017 	ldw	fp,0(sp)
 1040458:	dec00204 	addi	sp,sp,8
 104045c:	f800283a 	ret

01040460 <AUDIO_MicBoost>:

bool AUDIO_MicBoost(bool bBoost){
 1040460:	defffb04 	addi	sp,sp,-20
 1040464:	dfc00415 	stw	ra,16(sp)
 1040468:	df000315 	stw	fp,12(sp)
 104046c:	df000304 	addi	fp,sp,12
 1040470:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    alt_u16 control;
    control = reg_file[4];
 1040474:	008041b4 	movhi	r2,262
 1040478:	10a8d204 	addi	r2,r2,-23736
 104047c:	1080020b 	ldhu	r2,8(r2)
 1040480:	e0bffd0d 	sth	r2,-12(fp)
    if (bBoost)
 1040484:	e0bfff17 	ldw	r2,-4(fp)
 1040488:	10000426 	beq	r2,zero,104049c <AUDIO_MicBoost+0x3c>
        control |= 0x0001;
 104048c:	e0bffd0b 	ldhu	r2,-12(fp)
 1040490:	10800054 	ori	r2,r2,1
 1040494:	e0bffd0d 	sth	r2,-12(fp)
 1040498:	00000406 	br	10404ac <AUDIO_MicBoost+0x4c>
    else        
        control &= 0xFFFE;
 104049c:	e0fffd0b 	ldhu	r3,-12(fp)
 10404a0:	00bfff84 	movi	r2,-2
 10404a4:	1884703a 	and	r2,r3,r2
 10404a8:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(4, control);  // Left Line In: set left line in volume
 10404ac:	e0bffd0b 	ldhu	r2,-12(fp)
 10404b0:	100b883a 	mov	r5,r2
 10404b4:	01000104 	movi	r4,4
 10404b8:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 10404bc:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;
 10404c0:	e0bffe17 	ldw	r2,-8(fp)
}
 10404c4:	e037883a 	mov	sp,fp
 10404c8:	dfc00117 	ldw	ra,4(sp)
 10404cc:	df000017 	ldw	fp,0(sp)
 10404d0:	dec00204 	addi	sp,sp,8
 10404d4:	f800283a 	ret

010404d8 <AUDIO_AdcEnableHighPassFilter>:

bool AUDIO_AdcEnableHighPassFilter(bool bEnable){
 10404d8:	defffb04 	addi	sp,sp,-20
 10404dc:	dfc00415 	stw	ra,16(sp)
 10404e0:	df000315 	stw	fp,12(sp)
 10404e4:	df000304 	addi	fp,sp,12
 10404e8:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    alt_u16 control;
    control = reg_file[5];
 10404ec:	008041b4 	movhi	r2,262
 10404f0:	10a8d204 	addi	r2,r2,-23736
 10404f4:	1080028b 	ldhu	r2,10(r2)
 10404f8:	e0bffd0d 	sth	r2,-12(fp)
    if (bEnable)
 10404fc:	e0bfff17 	ldw	r2,-4(fp)
 1040500:	10000526 	beq	r2,zero,1040518 <AUDIO_AdcEnableHighPassFilter+0x40>
        control &= 0xFFFE;
 1040504:	e0fffd0b 	ldhu	r3,-12(fp)
 1040508:	00bfff84 	movi	r2,-2
 104050c:	1884703a 	and	r2,r3,r2
 1040510:	e0bffd0d 	sth	r2,-12(fp)
 1040514:	00000306 	br	1040524 <AUDIO_AdcEnableHighPassFilter+0x4c>
    else        
        control |= 0x0001;
 1040518:	e0bffd0b 	ldhu	r2,-12(fp)
 104051c:	10800054 	ori	r2,r2,1
 1040520:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(5, control);  // Left Line In: set left line in volume
 1040524:	e0bffd0b 	ldhu	r2,-12(fp)
 1040528:	100b883a 	mov	r5,r2
 104052c:	01000144 	movi	r4,5
 1040530:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 1040534:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;    
 1040538:	e0bffe17 	ldw	r2,-8(fp)
}
 104053c:	e037883a 	mov	sp,fp
 1040540:	dfc00117 	ldw	ra,4(sp)
 1040544:	df000017 	ldw	fp,0(sp)
 1040548:	dec00204 	addi	sp,sp,8
 104054c:	f800283a 	ret

01040550 <AUDIO_DacDeemphasisControl>:



bool AUDIO_DacDeemphasisControl(alt_u8 deemphasis_type){
 1040550:	defffb04 	addi	sp,sp,-20
 1040554:	dfc00415 	stw	ra,16(sp)
 1040558:	df000315 	stw	fp,12(sp)
 104055c:	df000304 	addi	fp,sp,12
 1040560:	2005883a 	mov	r2,r4
 1040564:	e0bfff05 	stb	r2,-4(fp)
    bool bSuccess;
    alt_u16 control;
    control = reg_file[5];
 1040568:	008041b4 	movhi	r2,262
 104056c:	10a8d204 	addi	r2,r2,-23736
 1040570:	1080028b 	ldhu	r2,10(r2)
 1040574:	e0bffd0d 	sth	r2,-12(fp)
    control &= 0xFFF9;
 1040578:	e0fffd0b 	ldhu	r3,-12(fp)
 104057c:	00bffe44 	movi	r2,-7
 1040580:	1884703a 	and	r2,r3,r2
 1040584:	e0bffd0d 	sth	r2,-12(fp)
    switch(deemphasis_type){
 1040588:	e0bfff03 	ldbu	r2,-4(fp)
 104058c:	10c000a0 	cmpeqi	r3,r2,2
 1040590:	1800081e 	bne	r3,zero,10405b4 <AUDIO_DacDeemphasisControl+0x64>
 1040594:	10c000e0 	cmpeqi	r3,r2,3
 1040598:	18000a1e 	bne	r3,zero,10405c4 <AUDIO_DacDeemphasisControl+0x74>
 104059c:	10800060 	cmpeqi	r2,r2,1
 10405a0:	10000c26 	beq	r2,zero,10405d4 <AUDIO_DacDeemphasisControl+0x84>
        case DEEMPHASIS_48K: control |= ((0x03) << 1); break;
 10405a4:	e0bffd0b 	ldhu	r2,-12(fp)
 10405a8:	10800194 	ori	r2,r2,6
 10405ac:	e0bffd0d 	sth	r2,-12(fp)
 10405b0:	00000806 	br	10405d4 <AUDIO_DacDeemphasisControl+0x84>
        case DEEMPHASIS_44K1: control |= ((0x02) << 1); break;
 10405b4:	e0bffd0b 	ldhu	r2,-12(fp)
 10405b8:	10800114 	ori	r2,r2,4
 10405bc:	e0bffd0d 	sth	r2,-12(fp)
 10405c0:	00000406 	br	10405d4 <AUDIO_DacDeemphasisControl+0x84>
        case DEEMPHASIS_32K: control |= ((0x01) << 1); break;
 10405c4:	e0bffd0b 	ldhu	r2,-12(fp)
 10405c8:	10800094 	ori	r2,r2,2
 10405cc:	e0bffd0d 	sth	r2,-12(fp)
 10405d0:	0001883a 	nop
    }
    bSuccess = aduio_RegWrite(5, control);  // Left Line In: set left line in volume
 10405d4:	e0bffd0b 	ldhu	r2,-12(fp)
 10405d8:	100b883a 	mov	r5,r2
 10405dc:	01000144 	movi	r4,5
 10405e0:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 10405e4:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;       
 10405e8:	e0bffe17 	ldw	r2,-8(fp)
}
 10405ec:	e037883a 	mov	sp,fp
 10405f0:	dfc00117 	ldw	ra,4(sp)
 10405f4:	df000017 	ldw	fp,0(sp)
 10405f8:	dec00204 	addi	sp,sp,8
 10405fc:	f800283a 	ret

01040600 <AUDIO_DacEnableZeroCross>:

bool AUDIO_DacEnableZeroCross(bool bEnable){
 1040600:	defffa04 	addi	sp,sp,-24
 1040604:	dfc00515 	stw	ra,20(sp)
 1040608:	df000415 	stw	fp,16(sp)
 104060c:	df000404 	addi	fp,sp,16
 1040610:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    alt_u16 control_l, control_r;
    alt_u16 mask;
    control_l = reg_file[2];
 1040614:	008041b4 	movhi	r2,262
 1040618:	10a8d204 	addi	r2,r2,-23736
 104061c:	1080010b 	ldhu	r2,4(r2)
 1040620:	e0bffd0d 	sth	r2,-12(fp)
    control_r = reg_file[3];
 1040624:	008041b4 	movhi	r2,262
 1040628:	10a8d204 	addi	r2,r2,-23736
 104062c:	1080018b 	ldhu	r2,6(r2)
 1040630:	e0bffd8d 	sth	r2,-10(fp)
    mask = 0x01 << 7;
 1040634:	00802004 	movi	r2,128
 1040638:	e0bffe0d 	sth	r2,-8(fp)
    if (bEnable){
 104063c:	e0bfff17 	ldw	r2,-4(fp)
 1040640:	10000926 	beq	r2,zero,1040668 <AUDIO_DacEnableZeroCross+0x68>
        control_l |= mask;
 1040644:	e0fffd0b 	ldhu	r3,-12(fp)
 1040648:	e0bffe0b 	ldhu	r2,-8(fp)
 104064c:	1884b03a 	or	r2,r3,r2
 1040650:	e0bffd0d 	sth	r2,-12(fp)
        control_r |= mask;
 1040654:	e0fffd8b 	ldhu	r3,-10(fp)
 1040658:	e0bffe0b 	ldhu	r2,-8(fp)
 104065c:	1884b03a 	or	r2,r3,r2
 1040660:	e0bffd8d 	sth	r2,-10(fp)
 1040664:	00000c06 	br	1040698 <AUDIO_DacEnableZeroCross+0x98>
    }else{
        control_l &= ~mask;
 1040668:	e0bffe0b 	ldhu	r2,-8(fp)
 104066c:	0084303a 	nor	r2,zero,r2
 1040670:	1007883a 	mov	r3,r2
 1040674:	e0bffd0b 	ldhu	r2,-12(fp)
 1040678:	1884703a 	and	r2,r3,r2
 104067c:	e0bffd0d 	sth	r2,-12(fp)
        control_r &= ~mask;
 1040680:	e0bffe0b 	ldhu	r2,-8(fp)
 1040684:	0084303a 	nor	r2,zero,r2
 1040688:	1007883a 	mov	r3,r2
 104068c:	e0bffd8b 	ldhu	r2,-10(fp)
 1040690:	1884703a 	and	r2,r3,r2
 1040694:	e0bffd8d 	sth	r2,-10(fp)
    }
    bSuccess = aduio_RegWrite(2, control_l);  // Left Line In: set left line in volume
 1040698:	e0bffd0b 	ldhu	r2,-12(fp)
 104069c:	100b883a 	mov	r5,r2
 10406a0:	01000084 	movi	r4,2
 10406a4:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 10406a8:	e0bffc15 	stw	r2,-16(fp)
    if (bSuccess)
 10406ac:	e0bffc17 	ldw	r2,-16(fp)
 10406b0:	10000526 	beq	r2,zero,10406c8 <AUDIO_DacEnableZeroCross+0xc8>
        bSuccess = aduio_RegWrite(3, control_r);  // Left Line In: set left line in volume
 10406b4:	e0bffd8b 	ldhu	r2,-10(fp)
 10406b8:	100b883a 	mov	r5,r2
 10406bc:	010000c4 	movi	r4,3
 10406c0:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 10406c4:	e0bffc15 	stw	r2,-16(fp)
    return bSuccess;
 10406c8:	e0bffc17 	ldw	r2,-16(fp)
}
 10406cc:	e037883a 	mov	sp,fp
 10406d0:	dfc00117 	ldw	ra,4(sp)
 10406d4:	df000017 	ldw	fp,0(sp)
 10406d8:	dec00204 	addi	sp,sp,8
 10406dc:	f800283a 	ret

010406e0 <AUDIO_DacEnableSoftMute>:

bool AUDIO_DacEnableSoftMute(bool bEnable){
 10406e0:	defffb04 	addi	sp,sp,-20
 10406e4:	dfc00415 	stw	ra,16(sp)
 10406e8:	df000315 	stw	fp,12(sp)
 10406ec:	df000304 	addi	fp,sp,12
 10406f0:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    alt_u16 control;
    alt_u16 mask;
    control = reg_file[5];
 10406f4:	008041b4 	movhi	r2,262
 10406f8:	10a8d204 	addi	r2,r2,-23736
 10406fc:	1080028b 	ldhu	r2,10(r2)
 1040700:	e0bffd0d 	sth	r2,-12(fp)
    mask = 0x01 << 3;
 1040704:	00800204 	movi	r2,8
 1040708:	e0bffd8d 	sth	r2,-10(fp)
    if (bEnable)
 104070c:	e0bfff17 	ldw	r2,-4(fp)
 1040710:	10000526 	beq	r2,zero,1040728 <AUDIO_DacEnableSoftMute+0x48>
        control |= mask;
 1040714:	e0fffd0b 	ldhu	r3,-12(fp)
 1040718:	e0bffd8b 	ldhu	r2,-10(fp)
 104071c:	1884b03a 	or	r2,r3,r2
 1040720:	e0bffd0d 	sth	r2,-12(fp)
 1040724:	00000606 	br	1040740 <AUDIO_DacEnableSoftMute+0x60>
    else        
        control &= ~mask;
 1040728:	e0bffd8b 	ldhu	r2,-10(fp)
 104072c:	0084303a 	nor	r2,zero,r2
 1040730:	1007883a 	mov	r3,r2
 1040734:	e0bffd0b 	ldhu	r2,-12(fp)
 1040738:	1884703a 	and	r2,r3,r2
 104073c:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(5, control);  // Left Line In: set left line in volume
 1040740:	e0bffd0b 	ldhu	r2,-12(fp)
 1040744:	100b883a 	mov	r5,r2
 1040748:	01000144 	movi	r4,5
 104074c:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 1040750:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;      
 1040754:	e0bffe17 	ldw	r2,-8(fp)
}
 1040758:	e037883a 	mov	sp,fp
 104075c:	dfc00117 	ldw	ra,4(sp)
 1040760:	df000017 	ldw	fp,0(sp)
 1040764:	dec00204 	addi	sp,sp,8
 1040768:	f800283a 	ret

0104076c <AUDIO_MicMute>:

bool AUDIO_MicMute(bool bMute){
 104076c:	defffb04 	addi	sp,sp,-20
 1040770:	dfc00415 	stw	ra,16(sp)
 1040774:	df000315 	stw	fp,12(sp)
 1040778:	df000304 	addi	fp,sp,12
 104077c:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    alt_u16 control;
    alt_u16 mask;
    control = reg_file[4];
 1040780:	008041b4 	movhi	r2,262
 1040784:	10a8d204 	addi	r2,r2,-23736
 1040788:	1080020b 	ldhu	r2,8(r2)
 104078c:	e0bffd0d 	sth	r2,-12(fp)
    mask = 0x01 << 1;
 1040790:	00800084 	movi	r2,2
 1040794:	e0bffd8d 	sth	r2,-10(fp)
    if (bMute)
 1040798:	e0bfff17 	ldw	r2,-4(fp)
 104079c:	10000526 	beq	r2,zero,10407b4 <AUDIO_MicMute+0x48>
        control |= mask;
 10407a0:	e0fffd0b 	ldhu	r3,-12(fp)
 10407a4:	e0bffd8b 	ldhu	r2,-10(fp)
 10407a8:	1884b03a 	or	r2,r3,r2
 10407ac:	e0bffd0d 	sth	r2,-12(fp)
 10407b0:	00000606 	br	10407cc <AUDIO_MicMute+0x60>
    else        
        control &= ~mask;
 10407b4:	e0bffd8b 	ldhu	r2,-10(fp)
 10407b8:	0084303a 	nor	r2,zero,r2
 10407bc:	1007883a 	mov	r3,r2
 10407c0:	e0bffd0b 	ldhu	r2,-12(fp)
 10407c4:	1884703a 	and	r2,r3,r2
 10407c8:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(4, control);  // Left Line In: set left line in volume
 10407cc:	e0bffd0b 	ldhu	r2,-12(fp)
 10407d0:	100b883a 	mov	r5,r2
 10407d4:	01000104 	movi	r4,4
 10407d8:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 10407dc:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;        
 10407e0:	e0bffe17 	ldw	r2,-8(fp)
}
 10407e4:	e037883a 	mov	sp,fp
 10407e8:	dfc00117 	ldw	ra,4(sp)
 10407ec:	df000017 	ldw	fp,0(sp)
 10407f0:	dec00204 	addi	sp,sp,8
 10407f4:	f800283a 	ret

010407f8 <AUDIO_LineInMute>:

bool AUDIO_LineInMute(bool bMute){
 10407f8:	defffa04 	addi	sp,sp,-24
 10407fc:	dfc00515 	stw	ra,20(sp)
 1040800:	df000415 	stw	fp,16(sp)
 1040804:	df000404 	addi	fp,sp,16
 1040808:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    alt_u16 control_l, control_r;
    alt_u16 mask;
    control_l = reg_file[0];
 104080c:	008041b4 	movhi	r2,262
 1040810:	10a8d204 	addi	r2,r2,-23736
 1040814:	1080000b 	ldhu	r2,0(r2)
 1040818:	e0bffd0d 	sth	r2,-12(fp)
    control_r = reg_file[1];
 104081c:	008041b4 	movhi	r2,262
 1040820:	10a8d204 	addi	r2,r2,-23736
 1040824:	1080008b 	ldhu	r2,2(r2)
 1040828:	e0bffd8d 	sth	r2,-10(fp)
    mask = 0x01 << 7;
 104082c:	00802004 	movi	r2,128
 1040830:	e0bffe0d 	sth	r2,-8(fp)
    if (bMute){
 1040834:	e0bfff17 	ldw	r2,-4(fp)
 1040838:	10000926 	beq	r2,zero,1040860 <AUDIO_LineInMute+0x68>
        control_l |= mask;
 104083c:	e0fffd0b 	ldhu	r3,-12(fp)
 1040840:	e0bffe0b 	ldhu	r2,-8(fp)
 1040844:	1884b03a 	or	r2,r3,r2
 1040848:	e0bffd0d 	sth	r2,-12(fp)
        control_r |= mask;
 104084c:	e0fffd8b 	ldhu	r3,-10(fp)
 1040850:	e0bffe0b 	ldhu	r2,-8(fp)
 1040854:	1884b03a 	or	r2,r3,r2
 1040858:	e0bffd8d 	sth	r2,-10(fp)
 104085c:	00000c06 	br	1040890 <AUDIO_LineInMute+0x98>
    }else{        
        control_l &= ~mask;
 1040860:	e0bffe0b 	ldhu	r2,-8(fp)
 1040864:	0084303a 	nor	r2,zero,r2
 1040868:	1007883a 	mov	r3,r2
 104086c:	e0bffd0b 	ldhu	r2,-12(fp)
 1040870:	1884703a 	and	r2,r3,r2
 1040874:	e0bffd0d 	sth	r2,-12(fp)
        control_r &= ~mask;
 1040878:	e0bffe0b 	ldhu	r2,-8(fp)
 104087c:	0084303a 	nor	r2,zero,r2
 1040880:	1007883a 	mov	r3,r2
 1040884:	e0bffd8b 	ldhu	r2,-10(fp)
 1040888:	1884703a 	and	r2,r3,r2
 104088c:	e0bffd8d 	sth	r2,-10(fp)
    }        
    bSuccess = aduio_RegWrite(0, control_l);  // Left Line In: set left line in volume
 1040890:	e0bffd0b 	ldhu	r2,-12(fp)
 1040894:	100b883a 	mov	r5,r2
 1040898:	0009883a 	mov	r4,zero
 104089c:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 10408a0:	e0bffc15 	stw	r2,-16(fp)
    if (bSuccess)
 10408a4:	e0bffc17 	ldw	r2,-16(fp)
 10408a8:	10000526 	beq	r2,zero,10408c0 <AUDIO_LineInMute+0xc8>
        bSuccess = aduio_RegWrite(1, control_r);  // Left Line In: set left line in volume
 10408ac:	e0bffd8b 	ldhu	r2,-10(fp)
 10408b0:	100b883a 	mov	r5,r2
 10408b4:	01000044 	movi	r4,1
 10408b8:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 10408bc:	e0bffc15 	stw	r2,-16(fp)
    return bSuccess;        
 10408c0:	e0bffc17 	ldw	r2,-16(fp)
}
 10408c4:	e037883a 	mov	sp,fp
 10408c8:	dfc00117 	ldw	ra,4(sp)
 10408cc:	df000017 	ldw	fp,0(sp)
 10408d0:	dec00204 	addi	sp,sp,8
 10408d4:	f800283a 	ret

010408d8 <AUDIO_SetInputSource>:



bool AUDIO_SetInputSource(alt_u8 InputSource){
 10408d8:	defffb04 	addi	sp,sp,-20
 10408dc:	dfc00415 	stw	ra,16(sp)
 10408e0:	df000315 	stw	fp,12(sp)
 10408e4:	df000304 	addi	fp,sp,12
 10408e8:	2005883a 	mov	r2,r4
 10408ec:	e0bfff05 	stb	r2,-4(fp)
    bool bSuccess;
    alt_u16 control;
    alt_u16 mask;
    control = reg_file[4];
 10408f0:	008041b4 	movhi	r2,262
 10408f4:	10a8d204 	addi	r2,r2,-23736
 10408f8:	1080020b 	ldhu	r2,8(r2)
 10408fc:	e0bffd0d 	sth	r2,-12(fp)
    mask = 0x01 << 2;
 1040900:	00800104 	movi	r2,4
 1040904:	e0bffd8d 	sth	r2,-10(fp)
    if (InputSource == SOURCE_MIC)
 1040908:	e0bfff03 	ldbu	r2,-4(fp)
 104090c:	1000051e 	bne	r2,zero,1040924 <AUDIO_SetInputSource+0x4c>
        control |= mask;
 1040910:	e0fffd0b 	ldhu	r3,-12(fp)
 1040914:	e0bffd8b 	ldhu	r2,-10(fp)
 1040918:	1884b03a 	or	r2,r3,r2
 104091c:	e0bffd0d 	sth	r2,-12(fp)
 1040920:	00000606 	br	104093c <AUDIO_SetInputSource+0x64>
    else        
        control &= ~mask;
 1040924:	e0bffd8b 	ldhu	r2,-10(fp)
 1040928:	0084303a 	nor	r2,zero,r2
 104092c:	1007883a 	mov	r3,r2
 1040930:	e0bffd0b 	ldhu	r2,-12(fp)
 1040934:	1884703a 	and	r2,r3,r2
 1040938:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(4, control);  // Left Line In: set left line in volume
 104093c:	e0bffd0b 	ldhu	r2,-12(fp)
 1040940:	100b883a 	mov	r5,r2
 1040944:	01000104 	movi	r4,4
 1040948:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 104094c:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;       
 1040950:	e0bffe17 	ldw	r2,-8(fp)
}
 1040954:	e037883a 	mov	sp,fp
 1040958:	dfc00117 	ldw	ra,4(sp)
 104095c:	df000017 	ldw	fp,0(sp)
 1040960:	dec00204 	addi	sp,sp,8
 1040964:	f800283a 	ret

01040968 <AUDIO_SetSampleRate>:

// See datasheet page 39
bool AUDIO_SetSampleRate(alt_u8 SampleRate){
 1040968:	defffb04 	addi	sp,sp,-20
 104096c:	dfc00415 	stw	ra,16(sp)
 1040970:	df000315 	stw	fp,12(sp)
 1040974:	df000304 	addi	fp,sp,12
 1040978:	2005883a 	mov	r2,r4
 104097c:	e0bfff05 	stb	r2,-4(fp)
    bool bSuccess;
    alt_u16 control;
    control = 0;
 1040980:	e03ffd0d 	sth	zero,-12(fp)

    switch(SampleRate){
 1040984:	e0bfff03 	ldbu	r2,-4(fp)
 1040988:	10c001e8 	cmpgeui	r3,r2,7
 104098c:	1800211e 	bne	r3,zero,1040a14 <AUDIO_SetSampleRate+0xac>
 1040990:	100690ba 	slli	r3,r2,2
 1040994:	00804134 	movhi	r2,260
 1040998:	10826a04 	addi	r2,r2,2472
 104099c:	1885883a 	add	r2,r3,r2
 10409a0:	10800017 	ldw	r2,0(r2)
 10409a4:	1000683a 	jmp	r2
 10409a8:	010409c4 	movi	r4,4135
 10409ac:	010409cc 	andi	r4,zero,4135
 10409b0:	010409d8 	cmpnei	r4,zero,4135
 10409b4:	010409e4 	muli	r4,zero,4135
 10409b8:	010409f0 	cmpltui	r4,zero,4135
 10409bc:	010409fc 	xorhi	r4,zero,4135
 10409c0:	01040a08 	cmpgei	r4,zero,4136
         // MCLK = 18.432
        case RATE_ADC48K_DAC48K: control = (0x0) << 2; break;
 10409c4:	e03ffd0d 	sth	zero,-12(fp)
 10409c8:	00001206 	br	1040a14 <AUDIO_SetSampleRate+0xac>
        case RATE_ADC48K_DAC8K: control = (0x1) << 2; break;
 10409cc:	00800104 	movi	r2,4
 10409d0:	e0bffd0d 	sth	r2,-12(fp)
 10409d4:	00000f06 	br	1040a14 <AUDIO_SetSampleRate+0xac>
        case RATE_ADC8K_DAC48K: control = (0x2) << 2; break;
 10409d8:	00800204 	movi	r2,8
 10409dc:	e0bffd0d 	sth	r2,-12(fp)
 10409e0:	00000c06 	br	1040a14 <AUDIO_SetSampleRate+0xac>
        case RATE_ADC8K_DAC8K: control = (0x3) << 2; break;
 10409e4:	00800304 	movi	r2,12
 10409e8:	e0bffd0d 	sth	r2,-12(fp)
 10409ec:	00000906 	br	1040a14 <AUDIO_SetSampleRate+0xac>
        case RATE_ADC32K_DAC32K: control = (0x6) << 2; break;
 10409f0:	00800604 	movi	r2,24
 10409f4:	e0bffd0d 	sth	r2,-12(fp)
 10409f8:	00000606 	br	1040a14 <AUDIO_SetSampleRate+0xac>
        case RATE_ADC96K_DAC96K: control = (0x7) << 2; break;
 10409fc:	00800704 	movi	r2,28
 1040a00:	e0bffd0d 	sth	r2,-12(fp)
 1040a04:	00000306 	br	1040a14 <AUDIO_SetSampleRate+0xac>
        case RATE_ADC44K1_DAC44K1: control = (0x8) << 2; break;
 1040a08:	00800804 	movi	r2,32
 1040a0c:	e0bffd0d 	sth	r2,-12(fp)
 1040a10:	0001883a 	nop
        // MCLK = 11.2896
      //  case RATE_ADC44K1_DAC8K: control = (0x9) << 2; break;
      //  case RATE_ADC8K_DAC44K1: control = (0xA) << 2; break;
    }
    control |= 0x02; // BOSR=1 (384fs = 384*48k = 18.432M)
 1040a14:	e0bffd0b 	ldhu	r2,-12(fp)
 1040a18:	10800094 	ori	r2,r2,2
 1040a1c:	e0bffd0d 	sth	r2,-12(fp)
        
    bSuccess = aduio_RegWrite(8, control);  // Left Line In: set left line in volume
 1040a20:	e0bffd0b 	ldhu	r2,-12(fp)
 1040a24:	100b883a 	mov	r5,r2
 1040a28:	01000204 	movi	r4,8
 1040a2c:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 1040a30:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;      
 1040a34:	e0bffe17 	ldw	r2,-8(fp)
}
 1040a38:	e037883a 	mov	sp,fp
 1040a3c:	dfc00117 	ldw	ra,4(sp)
 1040a40:	df000017 	ldw	fp,0(sp)
 1040a44:	dec00204 	addi	sp,sp,8
 1040a48:	f800283a 	ret

01040a4c <AUDIO_SetLineInVol>:





bool AUDIO_SetLineInVol(alt_u16 l_vol, alt_u16 r_vol){
 1040a4c:	defffa04 	addi	sp,sp,-24
 1040a50:	dfc00515 	stw	ra,20(sp)
 1040a54:	df000415 	stw	fp,16(sp)
 1040a58:	df000404 	addi	fp,sp,16
 1040a5c:	2007883a 	mov	r3,r4
 1040a60:	2805883a 	mov	r2,r5
 1040a64:	e0fffe0d 	sth	r3,-8(fp)
 1040a68:	e0bfff0d 	sth	r2,-4(fp)
    bool bSuccess;
    alt_u16 control;
    
    // left
    control = reg_file[0];
 1040a6c:	008041b4 	movhi	r2,262
 1040a70:	10a8d204 	addi	r2,r2,-23736
 1040a74:	1080000b 	ldhu	r2,0(r2)
 1040a78:	e0bffd0d 	sth	r2,-12(fp)
    control &= 0xFFE0;
 1040a7c:	e0fffd0b 	ldhu	r3,-12(fp)
 1040a80:	00bff804 	movi	r2,-32
 1040a84:	1884703a 	and	r2,r3,r2
 1040a88:	e0bffd0d 	sth	r2,-12(fp)
    control += l_vol & 0x1F;
 1040a8c:	e0bffe0b 	ldhu	r2,-8(fp)
 1040a90:	108007cc 	andi	r2,r2,31
 1040a94:	1007883a 	mov	r3,r2
 1040a98:	e0bffd0b 	ldhu	r2,-12(fp)
 1040a9c:	1885883a 	add	r2,r3,r2
 1040aa0:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(0, control);
 1040aa4:	e0bffd0b 	ldhu	r2,-12(fp)
 1040aa8:	100b883a 	mov	r5,r2
 1040aac:	0009883a 	mov	r4,zero
 1040ab0:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 1040ab4:	e0bffc15 	stw	r2,-16(fp)
    
    if (bSuccess){
 1040ab8:	e0bffc17 	ldw	r2,-16(fp)
 1040abc:	10001326 	beq	r2,zero,1040b0c <AUDIO_SetLineInVol+0xc0>
        // right
        control = reg_file[1];
 1040ac0:	008041b4 	movhi	r2,262
 1040ac4:	10a8d204 	addi	r2,r2,-23736
 1040ac8:	1080008b 	ldhu	r2,2(r2)
 1040acc:	e0bffd0d 	sth	r2,-12(fp)
        control &= 0xFFE0;
 1040ad0:	e0fffd0b 	ldhu	r3,-12(fp)
 1040ad4:	00bff804 	movi	r2,-32
 1040ad8:	1884703a 	and	r2,r3,r2
 1040adc:	e0bffd0d 	sth	r2,-12(fp)
        control += r_vol & 0x1F;
 1040ae0:	e0bfff0b 	ldhu	r2,-4(fp)
 1040ae4:	108007cc 	andi	r2,r2,31
 1040ae8:	1007883a 	mov	r3,r2
 1040aec:	e0bffd0b 	ldhu	r2,-12(fp)
 1040af0:	1885883a 	add	r2,r3,r2
 1040af4:	e0bffd0d 	sth	r2,-12(fp)
        bSuccess = aduio_RegWrite(1, control);        
 1040af8:	e0bffd0b 	ldhu	r2,-12(fp)
 1040afc:	100b883a 	mov	r5,r2
 1040b00:	01000044 	movi	r4,1
 1040b04:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 1040b08:	e0bffc15 	stw	r2,-16(fp)
    }
    
    AUDIO_DEBUG(("[AUDIO] set Line-In vol(%d,%d) %s\r\n", l_vol, r_vol, bSuccess?"success":"fail"));        
 1040b0c:	e0fffe0b 	ldhu	r3,-8(fp)
 1040b10:	e13fff0b 	ldhu	r4,-4(fp)
 1040b14:	e0bffc17 	ldw	r2,-16(fp)
 1040b18:	10000326 	beq	r2,zero,1040b28 <AUDIO_SetLineInVol+0xdc>
 1040b1c:	00804174 	movhi	r2,261
 1040b20:	1099b204 	addi	r2,r2,26312
 1040b24:	00000206 	br	1040b30 <AUDIO_SetLineInVol+0xe4>
 1040b28:	00804174 	movhi	r2,261
 1040b2c:	1099b404 	addi	r2,r2,26320
 1040b30:	100f883a 	mov	r7,r2
 1040b34:	200d883a 	mov	r6,r4
 1040b38:	180b883a 	mov	r5,r3
 1040b3c:	01004174 	movhi	r4,261
 1040b40:	2119bc04 	addi	r4,r4,26352
 1040b44:	1040fe00 	call	1040fe0 <myprintf>
    return bSuccess;
 1040b48:	e0bffc17 	ldw	r2,-16(fp)
}
 1040b4c:	e037883a 	mov	sp,fp
 1040b50:	dfc00117 	ldw	ra,4(sp)
 1040b54:	df000017 	ldw	fp,0(sp)
 1040b58:	dec00204 	addi	sp,sp,8
 1040b5c:	f800283a 	ret

01040b60 <AUDIO_SetLineOutVol>:

bool AUDIO_SetLineOutVol(alt_u16 l_vol, alt_u16 r_vol){
 1040b60:	defffa04 	addi	sp,sp,-24
 1040b64:	dfc00515 	stw	ra,20(sp)
 1040b68:	df000415 	stw	fp,16(sp)
 1040b6c:	df000404 	addi	fp,sp,16
 1040b70:	2007883a 	mov	r3,r4
 1040b74:	2805883a 	mov	r2,r5
 1040b78:	e0fffe0d 	sth	r3,-8(fp)
 1040b7c:	e0bfff0d 	sth	r2,-4(fp)
    bool bSuccess;
    alt_u16 control;

 
    // left
    control = reg_file[2];
 1040b80:	008041b4 	movhi	r2,262
 1040b84:	10a8d204 	addi	r2,r2,-23736
 1040b88:	1080010b 	ldhu	r2,4(r2)
 1040b8c:	e0bffd0d 	sth	r2,-12(fp)
    control &= 0xFF80;
 1040b90:	e0fffd0b 	ldhu	r3,-12(fp)
 1040b94:	00bfe004 	movi	r2,-128
 1040b98:	1884703a 	and	r2,r3,r2
 1040b9c:	e0bffd0d 	sth	r2,-12(fp)
    control += l_vol & 0x7F;
 1040ba0:	e0bffe0b 	ldhu	r2,-8(fp)
 1040ba4:	10801fcc 	andi	r2,r2,127
 1040ba8:	1007883a 	mov	r3,r2
 1040bac:	e0bffd0b 	ldhu	r2,-12(fp)
 1040bb0:	1885883a 	add	r2,r3,r2
 1040bb4:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(2, control);
 1040bb8:	e0bffd0b 	ldhu	r2,-12(fp)
 1040bbc:	100b883a 	mov	r5,r2
 1040bc0:	01000084 	movi	r4,2
 1040bc4:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 1040bc8:	e0bffc15 	stw	r2,-16(fp)
    
    if (bSuccess){
 1040bcc:	e0bffc17 	ldw	r2,-16(fp)
 1040bd0:	10001326 	beq	r2,zero,1040c20 <AUDIO_SetLineOutVol+0xc0>
        // right
        control = reg_file[3];
 1040bd4:	008041b4 	movhi	r2,262
 1040bd8:	10a8d204 	addi	r2,r2,-23736
 1040bdc:	1080018b 	ldhu	r2,6(r2)
 1040be0:	e0bffd0d 	sth	r2,-12(fp)
        control &= 0xFF80;
 1040be4:	e0fffd0b 	ldhu	r3,-12(fp)
 1040be8:	00bfe004 	movi	r2,-128
 1040bec:	1884703a 	and	r2,r3,r2
 1040bf0:	e0bffd0d 	sth	r2,-12(fp)
        control += r_vol & 0x7F;
 1040bf4:	e0bfff0b 	ldhu	r2,-4(fp)
 1040bf8:	10801fcc 	andi	r2,r2,127
 1040bfc:	1007883a 	mov	r3,r2
 1040c00:	e0bffd0b 	ldhu	r2,-12(fp)
 1040c04:	1885883a 	add	r2,r3,r2
 1040c08:	e0bffd0d 	sth	r2,-12(fp)
        bSuccess = aduio_RegWrite(3, control);        
 1040c0c:	e0bffd0b 	ldhu	r2,-12(fp)
 1040c10:	100b883a 	mov	r5,r2
 1040c14:	010000c4 	movi	r4,3
 1040c18:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 1040c1c:	e0bffc15 	stw	r2,-16(fp)
    }    
    
    AUDIO_DEBUG(("[AUDIO] set Line-Out vol(%d,%d) %s\r\n", l_vol, r_vol, bSuccess?"success":"fail"));
 1040c20:	e0fffe0b 	ldhu	r3,-8(fp)
 1040c24:	e13fff0b 	ldhu	r4,-4(fp)
 1040c28:	e0bffc17 	ldw	r2,-16(fp)
 1040c2c:	10000326 	beq	r2,zero,1040c3c <AUDIO_SetLineOutVol+0xdc>
 1040c30:	00804174 	movhi	r2,261
 1040c34:	1099b204 	addi	r2,r2,26312
 1040c38:	00000206 	br	1040c44 <AUDIO_SetLineOutVol+0xe4>
 1040c3c:	00804174 	movhi	r2,261
 1040c40:	1099b404 	addi	r2,r2,26320
 1040c44:	100f883a 	mov	r7,r2
 1040c48:	200d883a 	mov	r6,r4
 1040c4c:	180b883a 	mov	r5,r3
 1040c50:	01004174 	movhi	r4,261
 1040c54:	2119c504 	addi	r4,r4,26388
 1040c58:	1040fe00 	call	1040fe0 <myprintf>
    
    return bSuccess;
 1040c5c:	e0bffc17 	ldw	r2,-16(fp)
}
 1040c60:	e037883a 	mov	sp,fp
 1040c64:	dfc00117 	ldw	ra,4(sp)
 1040c68:	df000017 	ldw	fp,0(sp)
 1040c6c:	dec00204 	addi	sp,sp,8
 1040c70:	f800283a 	ret

01040c74 <AUDIO_EnableByPass>:


bool AUDIO_EnableByPass(bool bEnable){
 1040c74:	defffb04 	addi	sp,sp,-20
 1040c78:	dfc00415 	stw	ra,16(sp)
 1040c7c:	df000315 	stw	fp,12(sp)
 1040c80:	df000304 	addi	fp,sp,12
 1040c84:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    alt_u16 control;
    alt_u16 mask;
    control = reg_file[4];
 1040c88:	008041b4 	movhi	r2,262
 1040c8c:	10a8d204 	addi	r2,r2,-23736
 1040c90:	1080020b 	ldhu	r2,8(r2)
 1040c94:	e0bffd0d 	sth	r2,-12(fp)
    mask = 0x01 << 3;
 1040c98:	00800204 	movi	r2,8
 1040c9c:	e0bffd8d 	sth	r2,-10(fp)
    if (bEnable)
 1040ca0:	e0bfff17 	ldw	r2,-4(fp)
 1040ca4:	10000526 	beq	r2,zero,1040cbc <AUDIO_EnableByPass+0x48>
        control |= mask;
 1040ca8:	e0fffd0b 	ldhu	r3,-12(fp)
 1040cac:	e0bffd8b 	ldhu	r2,-10(fp)
 1040cb0:	1884b03a 	or	r2,r3,r2
 1040cb4:	e0bffd0d 	sth	r2,-12(fp)
 1040cb8:	00000606 	br	1040cd4 <AUDIO_EnableByPass+0x60>
    else        
        control &= ~mask;
 1040cbc:	e0bffd8b 	ldhu	r2,-10(fp)
 1040cc0:	0084303a 	nor	r2,zero,r2
 1040cc4:	1007883a 	mov	r3,r2
 1040cc8:	e0bffd0b 	ldhu	r2,-12(fp)
 1040ccc:	1884703a 	and	r2,r3,r2
 1040cd0:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(4, control); 
 1040cd4:	e0bffd0b 	ldhu	r2,-12(fp)
 1040cd8:	100b883a 	mov	r5,r2
 1040cdc:	01000104 	movi	r4,4
 1040ce0:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 1040ce4:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;  	
 1040ce8:	e0bffe17 	ldw	r2,-8(fp)
}
 1040cec:	e037883a 	mov	sp,fp
 1040cf0:	dfc00117 	ldw	ra,4(sp)
 1040cf4:	df000017 	ldw	fp,0(sp)
 1040cf8:	dec00204 	addi	sp,sp,8
 1040cfc:	f800283a 	ret

01040d00 <AUDIO_EnableSiteTone>:

bool AUDIO_EnableSiteTone(bool bEnable){
 1040d00:	defffb04 	addi	sp,sp,-20
 1040d04:	dfc00415 	stw	ra,16(sp)
 1040d08:	df000315 	stw	fp,12(sp)
 1040d0c:	df000304 	addi	fp,sp,12
 1040d10:	e13fff15 	stw	r4,-4(fp)
    bool bSuccess;
    alt_u16 control;
    alt_u16 mask;
    control = reg_file[4];
 1040d14:	008041b4 	movhi	r2,262
 1040d18:	10a8d204 	addi	r2,r2,-23736
 1040d1c:	1080020b 	ldhu	r2,8(r2)
 1040d20:	e0bffd0d 	sth	r2,-12(fp)
    mask = 0x01 << 5;
 1040d24:	00800804 	movi	r2,32
 1040d28:	e0bffd8d 	sth	r2,-10(fp)
    if (bEnable)
 1040d2c:	e0bfff17 	ldw	r2,-4(fp)
 1040d30:	10000526 	beq	r2,zero,1040d48 <AUDIO_EnableSiteTone+0x48>
        control |= mask;
 1040d34:	e0fffd0b 	ldhu	r3,-12(fp)
 1040d38:	e0bffd8b 	ldhu	r2,-10(fp)
 1040d3c:	1884b03a 	or	r2,r3,r2
 1040d40:	e0bffd0d 	sth	r2,-12(fp)
 1040d44:	00000606 	br	1040d60 <AUDIO_EnableSiteTone+0x60>
    else        
        control &= ~mask;
 1040d48:	e0bffd8b 	ldhu	r2,-10(fp)
 1040d4c:	0084303a 	nor	r2,zero,r2
 1040d50:	1007883a 	mov	r3,r2
 1040d54:	e0bffd0b 	ldhu	r2,-12(fp)
 1040d58:	1884703a 	and	r2,r3,r2
 1040d5c:	e0bffd0d 	sth	r2,-12(fp)
    bSuccess = aduio_RegWrite(4, control); 
 1040d60:	e0bffd0b 	ldhu	r2,-12(fp)
 1040d64:	100b883a 	mov	r5,r2
 1040d68:	01000104 	movi	r4,4
 1040d6c:	1040d8c0 	call	1040d8c <aduio_RegWrite>
 1040d70:	e0bffe15 	stw	r2,-8(fp)
    return bSuccess;        
 1040d74:	e0bffe17 	ldw	r2,-8(fp)
}
 1040d78:	e037883a 	mov	sp,fp
 1040d7c:	dfc00117 	ldw	ra,4(sp)
 1040d80:	df000017 	ldw	fp,0(sp)
 1040d84:	dec00204 	addi	sp,sp,8
 1040d88:	f800283a 	ret

01040d8c <aduio_RegWrite>:

/////////////////////////////////////////////////////////////////////////
///////////// Interla function body ////////////////////////////////////
/////////////////////////////////////////////////////////////////////////

bool aduio_RegWrite(alt_u8 reg_index, alt_u16 data16){
 1040d8c:	defff904 	addi	sp,sp,-28
 1040d90:	dfc00615 	stw	ra,24(sp)
 1040d94:	df000515 	stw	fp,20(sp)
 1040d98:	df000504 	addi	fp,sp,20
 1040d9c:	2007883a 	mov	r3,r4
 1040da0:	2805883a 	mov	r2,r5
 1040da4:	e0fffe05 	stb	r3,-8(fp)
 1040da8:	e0bfff0d 	sth	r2,-4(fp)
    bool bSuccess;
    alt_u8 data, control;
    if (reg_index <= 10)
 1040dac:	e0bffe03 	ldbu	r2,-8(fp)
 1040db0:	108002e8 	cmpgeui	r2,r2,11
 1040db4:	1000071e 	bne	r2,zero,1040dd4 <aduio_RegWrite+0x48>
        reg_file[reg_index] = data16;
 1040db8:	e0fffe03 	ldbu	r3,-8(fp)
 1040dbc:	008041b4 	movhi	r2,262
 1040dc0:	10a8d204 	addi	r2,r2,-23736
 1040dc4:	18c7883a 	add	r3,r3,r3
 1040dc8:	10c5883a 	add	r2,r2,r3
 1040dcc:	e0ffff0b 	ldhu	r3,-4(fp)
 1040dd0:	10c0000d 	sth	r3,0(r2)
    data = data16 & 0xFF;
 1040dd4:	e0bfff0b 	ldhu	r2,-4(fp)
 1040dd8:	e0bffc05 	stb	r2,-16(fp)
    control = (reg_index << 1) & 0xFE;
 1040ddc:	e0bffe03 	ldbu	r2,-8(fp)
 1040de0:	1085883a 	add	r2,r2,r2
 1040de4:	e0bffc45 	stb	r2,-15(fp)
    control |= ((data16 >> 8) & 0x01);
 1040de8:	e0bfff0b 	ldhu	r2,-4(fp)
 1040dec:	1004d23a 	srli	r2,r2,8
 1040df0:	1080004c 	andi	r2,r2,1
 1040df4:	1007883a 	mov	r3,r2
 1040df8:	e0bffc43 	ldbu	r2,-15(fp)
 1040dfc:	1884b03a 	or	r2,r3,r2
 1040e00:	e0bffc45 	stb	r2,-15(fp)
    //AUDIO_DEBUG(("[AUDIO] set audio reg[%02d] = %04Xh\r\n", reg_index, data16));
    bSuccess = I2C_Write(I2C_SCL_BASE, I2C_SDA_BASE, I2C_AUDIO_ADDR, control, data);
 1040e04:	e0fffc43 	ldbu	r3,-15(fp)
 1040e08:	e0bffc03 	ldbu	r2,-16(fp)
 1040e0c:	d8800015 	stw	r2,0(sp)
 1040e10:	180f883a 	mov	r7,r3
 1040e14:	01800d04 	movi	r6,52
 1040e18:	000b883a 	mov	r5,zero
 1040e1c:	01000404 	movi	r4,16
 1040e20:	10411640 	call	1041164 <I2C_Write>
 1040e24:	e0bffd15 	stw	r2,-12(fp)
    if (!bSuccess) 
 1040e28:	e0bffd17 	ldw	r2,-12(fp)
 1040e2c:	1000031e 	bne	r2,zero,1040e3c <aduio_RegWrite+0xb0>
        AUDIO_DEBUG(("[AUDIO] write reg fail!!!!\r\n"));
 1040e30:	01004174 	movhi	r4,261
 1040e34:	2119cf04 	addi	r4,r4,26428
 1040e38:	1040fe00 	call	1040fe0 <myprintf>
    usleep(50*1000);  // wait audio chip read        
 1040e3c:	0130d414 	movui	r4,50000
 1040e40:	10545b80 	call	10545b8 <usleep>
    return bSuccess;        
 1040e44:	e0bffd17 	ldw	r2,-12(fp)
}
 1040e48:	e037883a 	mov	sp,fp
 1040e4c:	dfc00117 	ldw	ra,4(sp)
 1040e50:	df000017 	ldw	fp,0(sp)
 1040e54:	dec00204 	addi	sp,sp,8
 1040e58:	f800283a 	ret

01040e5c <AUDIO_DacFifoNotFull>:

/////////////////////////////////////////////////////////////////////////
///////////// Audio Play & Recor ////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////
// check whether the dac-fifo is full.
bool AUDIO_DacFifoNotFull(void){
 1040e5c:	defffe04 	addi	sp,sp,-8
 1040e60:	df000115 	stw	fp,4(sp)
 1040e64:	df000104 	addi	fp,sp,4
    bool bReady;
    bReady = AUDIO_DAC_FULL()?FALSE:TRUE;
 1040e68:	00804234 	movhi	r2,264
 1040e6c:	10880d04 	addi	r2,r2,8244
 1040e70:	10800037 	ldwio	r2,0(r2)
 1040e74:	1080004c 	andi	r2,r2,1
 1040e78:	1005003a 	cmpeq	r2,r2,zero
 1040e7c:	10803fcc 	andi	r2,r2,255
 1040e80:	e0bfff15 	stw	r2,-4(fp)
    return bReady;
 1040e84:	e0bfff17 	ldw	r2,-4(fp)
}
 1040e88:	e037883a 	mov	sp,fp
 1040e8c:	df000017 	ldw	fp,0(sp)
 1040e90:	dec00104 	addi	sp,sp,4
 1040e94:	f800283a 	ret

01040e98 <AUDIO_DacFifoSetData>:

// call AUDIO_PlayIsReady to make sure the fifo is not full before call this function 
void AUDIO_DacFifoSetData(short ch_left, short ch_right){
 1040e98:	defffd04 	addi	sp,sp,-12
 1040e9c:	df000215 	stw	fp,8(sp)
 1040ea0:	df000204 	addi	fp,sp,8
 1040ea4:	2007883a 	mov	r3,r4
 1040ea8:	2805883a 	mov	r2,r5
 1040eac:	e0fffe0d 	sth	r3,-8(fp)
 1040eb0:	e0bfff0d 	sth	r2,-4(fp)
    AUDIO_DAC_WRITE_L(ch_left);
 1040eb4:	e0fffe0f 	ldh	r3,-8(fp)
 1040eb8:	00804234 	movhi	r2,264
 1040ebc:	10880804 	addi	r2,r2,8224
 1040ec0:	10c00035 	stwio	r3,0(r2)
    AUDIO_DAC_WRITE_R(ch_right);
 1040ec4:	e0ffff0f 	ldh	r3,-4(fp)
 1040ec8:	00804234 	movhi	r2,264
 1040ecc:	10880904 	addi	r2,r2,8228
 1040ed0:	10c00035 	stwio	r3,0(r2)
}
 1040ed4:	0001883a 	nop
 1040ed8:	e037883a 	mov	sp,fp
 1040edc:	df000017 	ldw	fp,0(sp)
 1040ee0:	dec00104 	addi	sp,sp,4
 1040ee4:	f800283a 	ret

01040ee8 <AUDIO_AdcFifoNotEmpty>:

// wheck whether there is data available in adc-fifo
bool AUDIO_AdcFifoNotEmpty(void){
 1040ee8:	defffe04 	addi	sp,sp,-8
 1040eec:	df000115 	stw	fp,4(sp)
 1040ef0:	df000104 	addi	fp,sp,4
    bool bReady;
    bReady = AUDIO_ADC_EMPTY()?FALSE:TRUE;
 1040ef4:	00804234 	movhi	r2,264
 1040ef8:	10880d04 	addi	r2,r2,8244
 1040efc:	10800037 	ldwio	r2,0(r2)
 1040f00:	1080008c 	andi	r2,r2,2
 1040f04:	1005003a 	cmpeq	r2,r2,zero
 1040f08:	10803fcc 	andi	r2,r2,255
 1040f0c:	e0bfff15 	stw	r2,-4(fp)
    return bReady;
 1040f10:	e0bfff17 	ldw	r2,-4(fp)
}
 1040f14:	e037883a 	mov	sp,fp
 1040f18:	df000017 	ldw	fp,0(sp)
 1040f1c:	dec00104 	addi	sp,sp,4
 1040f20:	f800283a 	ret

01040f24 <AUDIO_AdcFifoGetData>:


// make sure the data is available before call this fucntion
void AUDIO_AdcFifoGetData(short *pch_left, short *pch_right){
 1040f24:	defffd04 	addi	sp,sp,-12
 1040f28:	df000215 	stw	fp,8(sp)
 1040f2c:	df000204 	addi	fp,sp,8
 1040f30:	e13ffe15 	stw	r4,-8(fp)
 1040f34:	e17fff15 	stw	r5,-4(fp)
    *pch_left = AUDIO_ADC_READ_L();
 1040f38:	00804234 	movhi	r2,264
 1040f3c:	10880a04 	addi	r2,r2,8232
 1040f40:	10800037 	ldwio	r2,0(r2)
 1040f44:	1007883a 	mov	r3,r2
 1040f48:	e0bffe17 	ldw	r2,-8(fp)
 1040f4c:	10c0000d 	sth	r3,0(r2)
    *pch_right = AUDIO_ADC_READ_R();
 1040f50:	00804234 	movhi	r2,264
 1040f54:	10880b04 	addi	r2,r2,8236
 1040f58:	10800037 	ldwio	r2,0(r2)
 1040f5c:	1007883a 	mov	r3,r2
 1040f60:	e0bfff17 	ldw	r2,-4(fp)
 1040f64:	10c0000d 	sth	r3,0(r2)
    
}
 1040f68:	0001883a 	nop
 1040f6c:	e037883a 	mov	sp,fp
 1040f70:	df000017 	ldw	fp,0(sp)
 1040f74:	dec00104 	addi	sp,sp,4
 1040f78:	f800283a 	ret

01040f7c <AUDIO_FifoClear>:

void AUDIO_FifoClear(void){
 1040f7c:	deffff04 	addi	sp,sp,-4
 1040f80:	df000015 	stw	fp,0(sp)
 1040f84:	d839883a 	mov	fp,sp
    AUDIO_FIFO_CLEAR();
 1040f88:	00c00044 	movi	r3,1
 1040f8c:	00804234 	movhi	r2,264
 1040f90:	10880c04 	addi	r2,r2,8240
 1040f94:	10c00035 	stwio	r3,0(r2)
}
 1040f98:	0001883a 	nop
 1040f9c:	e037883a 	mov	sp,fp
 1040fa0:	df000017 	ldw	fp,0(sp)
 1040fa4:	dec00104 	addi	sp,sp,4
 1040fa8:	f800283a 	ret

01040fac <debug_output>:
    if (!UART_IsOpened())
        UART_Open();
    UART_WriteString(pMessage);  // UART debug
}
#else
void debug_output(char *pMessage){
 1040fac:	defffd04 	addi	sp,sp,-12
 1040fb0:	dfc00215 	stw	ra,8(sp)
 1040fb4:	df000115 	stw	fp,4(sp)
 1040fb8:	df000104 	addi	fp,sp,4
 1040fbc:	e13fff15 	stw	r4,-4(fp)
    printf(pMessage);
 1040fc0:	e13fff17 	ldw	r4,-4(fp)
 1040fc4:	1045a840 	call	1045a84 <printf>
}
 1040fc8:	0001883a 	nop
 1040fcc:	e037883a 	mov	sp,fp
 1040fd0:	dfc00117 	ldw	ra,4(sp)
 1040fd4:	df000017 	ldw	fp,0(sp)
 1040fd8:	dec00204 	addi	sp,sp,8
 1040fdc:	f800283a 	ret

01040fe0 <myprintf>:

#endif


int myprintf(char *format, ...){
 1040fe0:	deff7804 	addi	sp,sp,-544
 1040fe4:	dfc08415 	stw	ra,528(sp)
 1040fe8:	df008315 	stw	fp,524(sp)
 1040fec:	df008304 	addi	fp,sp,524
 1040ff0:	e13fff15 	stw	r4,-4(fp)
 1040ff4:	e1400215 	stw	r5,8(fp)
 1040ff8:	e1800315 	stw	r6,12(fp)
 1040ffc:	e1c00415 	stw	r7,16(fp)
    int rc;
    char szText[512];
    
    va_list paramList;
    va_start(paramList, format);
 1041000:	e0800204 	addi	r2,fp,8
 1041004:	e0bffe15 	stw	r2,-8(fp)
    rc = vsnprintf(szText, 512, format, paramList);
 1041008:	e0fffe17 	ldw	r3,-8(fp)
 104100c:	e0bf7e04 	addi	r2,fp,-520
 1041010:	180f883a 	mov	r7,r3
 1041014:	e1bfff17 	ldw	r6,-4(fp)
 1041018:	01408004 	movi	r5,512
 104101c:	1009883a 	mov	r4,r2
 1041020:	104a2880 	call	104a288 <vsnprintf>
 1041024:	e0bf7d15 	stw	r2,-524(fp)
    va_end(paramList);
    
    debug_output(szText);
 1041028:	e0bf7e04 	addi	r2,fp,-520
 104102c:	1009883a 	mov	r4,r2
 1041030:	1040fac0 	call	1040fac <debug_output>

    return rc;    
 1041034:	e0bf7d17 	ldw	r2,-524(fp)
}
 1041038:	e037883a 	mov	sp,fp
 104103c:	dfc00117 	ldw	ra,4(sp)
 1041040:	df000017 	ldw	fp,0(sp)
 1041044:	dec00504 	addi	sp,sp,20
 1041048:	f800283a 	ret

0104104c <myprintf_hex_array>:


int myprintf_hex_array(unsigned char *pHex, int len){
 104104c:	defff704 	addi	sp,sp,-36
 1041050:	dfc00815 	stw	ra,32(sp)
 1041054:	df000715 	stw	fp,28(sp)
 1041058:	df000704 	addi	fp,sp,28
 104105c:	e13ffe15 	stw	r4,-8(fp)
 1041060:	e17fff15 	stw	r5,-4(fp)
    int i;
    unsigned char szText[16];
    for(i=0;i<len;i++){
 1041064:	e03ff915 	stw	zero,-28(fp)
 1041068:	00001106 	br	10410b0 <myprintf_hex_array+0x64>
        sprintf(szText, "[%02X]", *(pHex+i));
 104106c:	e0bff917 	ldw	r2,-28(fp)
 1041070:	e0fffe17 	ldw	r3,-8(fp)
 1041074:	1885883a 	add	r2,r3,r2
 1041078:	10800003 	ldbu	r2,0(r2)
 104107c:	10c03fcc 	andi	r3,r2,255
 1041080:	e0bffa04 	addi	r2,fp,-24
 1041084:	180d883a 	mov	r6,r3
 1041088:	01404174 	movhi	r5,261
 104108c:	2959d704 	addi	r5,r5,26460
 1041090:	1009883a 	mov	r4,r2
 1041094:	1045bec0 	call	1045bec <sprintf>
        DEBUG((szText));
 1041098:	e0bffa04 	addi	r2,fp,-24
 104109c:	1009883a 	mov	r4,r2
 10410a0:	1040fe00 	call	1040fe0 <myprintf>


int myprintf_hex_array(unsigned char *pHex, int len){
    int i;
    unsigned char szText[16];
    for(i=0;i<len;i++){
 10410a4:	e0bff917 	ldw	r2,-28(fp)
 10410a8:	10800044 	addi	r2,r2,1
 10410ac:	e0bff915 	stw	r2,-28(fp)
 10410b0:	e0fff917 	ldw	r3,-28(fp)
 10410b4:	e0bfff17 	ldw	r2,-4(fp)
 10410b8:	18bfec16 	blt	r3,r2,104106c <__alt_data_end+0xfffc106c>
        sprintf(szText, "[%02X]", *(pHex+i));
        DEBUG((szText));
    }
    return len;
 10410bc:	e0bfff17 	ldw	r2,-4(fp)
}
 10410c0:	e037883a 	mov	sp,fp
 10410c4:	dfc00117 	ldw	ra,4(sp)
 10410c8:	df000017 	ldw	fp,0(sp)
 10410cc:	dec00204 	addi	sp,sp,8
 10410d0:	f800283a 	ret

010410d4 <myprintf_dword_array>:

int  myprintf_dword_array(unsigned int *pArray, int nElementCount){
 10410d4:	defff704 	addi	sp,sp,-36
 10410d8:	dfc00815 	stw	ra,32(sp)
 10410dc:	df000715 	stw	fp,28(sp)
 10410e0:	df000704 	addi	fp,sp,28
 10410e4:	e13ffe15 	stw	r4,-8(fp)
 10410e8:	e17fff15 	stw	r5,-4(fp)
    int i;
    char szText[16];
    for(i=0;i<nElementCount;i++){
 10410ec:	e03ff915 	stw	zero,-28(fp)
 10410f0:	00001306 	br	1041140 <myprintf_dword_array+0x6c>
        sprintf(szText, "[%08X]", *(pArray+i));
 10410f4:	e0bff917 	ldw	r2,-28(fp)
 10410f8:	1085883a 	add	r2,r2,r2
 10410fc:	1085883a 	add	r2,r2,r2
 1041100:	1007883a 	mov	r3,r2
 1041104:	e0bffe17 	ldw	r2,-8(fp)
 1041108:	10c5883a 	add	r2,r2,r3
 104110c:	10c00017 	ldw	r3,0(r2)
 1041110:	e0bffa04 	addi	r2,fp,-24
 1041114:	180d883a 	mov	r6,r3
 1041118:	01404174 	movhi	r5,261
 104111c:	2959d904 	addi	r5,r5,26468
 1041120:	1009883a 	mov	r4,r2
 1041124:	1045bec0 	call	1045bec <sprintf>
        DEBUG((szText));
 1041128:	e0bffa04 	addi	r2,fp,-24
 104112c:	1009883a 	mov	r4,r2
 1041130:	1040fe00 	call	1040fe0 <myprintf>
}

int  myprintf_dword_array(unsigned int *pArray, int nElementCount){
    int i;
    char szText[16];
    for(i=0;i<nElementCount;i++){
 1041134:	e0bff917 	ldw	r2,-28(fp)
 1041138:	10800044 	addi	r2,r2,1
 104113c:	e0bff915 	stw	r2,-28(fp)
 1041140:	e0fff917 	ldw	r3,-28(fp)
 1041144:	e0bfff17 	ldw	r2,-4(fp)
 1041148:	18bfea16 	blt	r3,r2,10410f4 <__alt_data_end+0xfffc10f4>
        sprintf(szText, "[%08X]", *(pArray+i));
        DEBUG((szText));
    }
    return nElementCount;
 104114c:	e0bfff17 	ldw	r2,-4(fp)
}
 1041150:	e037883a 	mov	sp,fp
 1041154:	dfc00117 	ldw	ra,4(sp)
 1041158:	df000017 	ldw	fp,0(sp)
 104115c:	dec00204 	addi	sp,sp,8
 1041160:	f800283a 	ret

01041164 <I2C_Write>:
bool i2c_write(alt_u32 clk_base, alt_u32 data_base, alt_u8 Data);
void i2c_read(alt_u32 clk_base, alt_u32 data_base, alt_u8 *pData, bool bAck);



bool I2C_Write(alt_u32 clk_base, alt_u32 data_base, alt_8 DeviceAddr, alt_u8 ControlAddr, alt_u8 ControlData){
 1041164:	defff804 	addi	sp,sp,-32
 1041168:	dfc00715 	stw	ra,28(sp)
 104116c:	df000615 	stw	fp,24(sp)
 1041170:	df000604 	addi	fp,sp,24
 1041174:	e13ffb15 	stw	r4,-20(fp)
 1041178:	e17ffc15 	stw	r5,-16(fp)
 104117c:	3009883a 	mov	r4,r6
 1041180:	3807883a 	mov	r3,r7
 1041184:	e0800217 	ldw	r2,8(fp)
 1041188:	e13ffd05 	stb	r4,-12(fp)
 104118c:	e0fffe05 	stb	r3,-8(fp)
 1041190:	e0bfff05 	stb	r2,-4(fp)
    bool bSuccess = TRUE;
 1041194:	00800044 	movi	r2,1
 1041198:	e0bffa15 	stw	r2,-24(fp)
    //alt_u8 DeviceAddr;

    // device id
    //DeviceAddr = HMB_E2_I2C_ID;

    i2c_start(clk_base, data_base);
 104119c:	e17ffc17 	ldw	r5,-16(fp)
 10411a0:	e13ffb17 	ldw	r4,-20(fp)
 10411a4:	10415000 	call	1041500 <i2c_start>
    if (!i2c_write(clk_base, data_base, DeviceAddr)){  // send ID
 10411a8:	e0bffd03 	ldbu	r2,-12(fp)
 10411ac:	10803fcc 	andi	r2,r2,255
 10411b0:	100d883a 	mov	r6,r2
 10411b4:	e17ffc17 	ldw	r5,-16(fp)
 10411b8:	e13ffb17 	ldw	r4,-20(fp)
 10411bc:	10416040 	call	1041604 <i2c_write>
 10411c0:	1000041e 	bne	r2,zero,10411d4 <I2C_Write+0x70>
        bSuccess = FALSE;
 10411c4:	e03ffa15 	stw	zero,-24(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address NACK!\n"));
 10411c8:	01004174 	movhi	r4,261
 10411cc:	2119db04 	addi	r4,r4,26476
 10411d0:	1040fe00 	call	1040fe0 <myprintf>
    }
    if (bSuccess && !i2c_write(clk_base, data_base, ControlAddr)){ // send sub-address
 10411d4:	e0bffa17 	ldw	r2,-24(fp)
 10411d8:	10000a26 	beq	r2,zero,1041204 <I2C_Write+0xa0>
 10411dc:	e0bffe03 	ldbu	r2,-8(fp)
 10411e0:	100d883a 	mov	r6,r2
 10411e4:	e17ffc17 	ldw	r5,-16(fp)
 10411e8:	e13ffb17 	ldw	r4,-20(fp)
 10411ec:	10416040 	call	1041604 <i2c_write>
 10411f0:	1000041e 	bne	r2,zero,1041204 <I2C_Write+0xa0>
        bSuccess = FALSE;
 10411f4:	e03ffa15 	stw	zero,-24(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: SubAddress NACK!\n"));
 10411f8:	01004174 	movhi	r4,261
 10411fc:	2119e304 	addi	r4,r4,26508
 1041200:	1040fe00 	call	1040fe0 <myprintf>
    }
    if (bSuccess && !i2c_write(clk_base, data_base, ControlData)){
 1041204:	e0bffa17 	ldw	r2,-24(fp)
 1041208:	10000a26 	beq	r2,zero,1041234 <I2C_Write+0xd0>
 104120c:	e0bfff03 	ldbu	r2,-4(fp)
 1041210:	100d883a 	mov	r6,r2
 1041214:	e17ffc17 	ldw	r5,-16(fp)
 1041218:	e13ffb17 	ldw	r4,-20(fp)
 104121c:	10416040 	call	1041604 <i2c_write>
 1041220:	1000041e 	bne	r2,zero,1041234 <I2C_Write+0xd0>
        bSuccess = FALSE;
 1041224:	e03ffa15 	stw	zero,-24(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: write NACK!\n"));
 1041228:	01004174 	movhi	r4,261
 104122c:	2119ec04 	addi	r4,r4,26544
 1041230:	1040fe00 	call	1040fe0 <myprintf>
    }
    i2c_stop(clk_base, data_base);
 1041234:	e17ffc17 	ldw	r5,-16(fp)
 1041238:	e13ffb17 	ldw	r4,-20(fp)
 104123c:	104158c0 	call	104158c <i2c_stop>

    usleep(7*1000); // delay to wait EE2 ready (at least 5 ms delay is required)
 1041240:	0106d604 	movi	r4,7000
 1041244:	10545b80 	call	10545b8 <usleep>

    return bSuccess;
 1041248:	e0bffa17 	ldw	r2,-24(fp)


}
 104124c:	e037883a 	mov	sp,fp
 1041250:	dfc00117 	ldw	ra,4(sp)
 1041254:	df000017 	ldw	fp,0(sp)
 1041258:	dec00204 	addi	sp,sp,8
 104125c:	f800283a 	ret

01041260 <I2C_Read>:

bool I2C_Read(alt_u32 clk_base, alt_u32 data_base, alt_8 DeviceAddr, alt_u8 ControlAddr, alt_u8 *pControlData){
 1041260:	defff904 	addi	sp,sp,-28
 1041264:	dfc00615 	stw	ra,24(sp)
 1041268:	df000515 	stw	fp,20(sp)
 104126c:	df000504 	addi	fp,sp,20
 1041270:	e13ffc15 	stw	r4,-16(fp)
 1041274:	e17ffd15 	stw	r5,-12(fp)
 1041278:	3007883a 	mov	r3,r6
 104127c:	3805883a 	mov	r2,r7
 1041280:	e0fffe05 	stb	r3,-8(fp)
 1041284:	e0bfff05 	stb	r2,-4(fp)
    bool bSuccess = TRUE;
 1041288:	00800044 	movi	r2,1
 104128c:	e0bffb15 	stw	r2,-20(fp)
    //alt_u8 DeviceAddr;

    // device id
    //DeviceAddr = HMB_E2_I2C_ID;

    i2c_start(clk_base, data_base);
 1041290:	e17ffd17 	ldw	r5,-12(fp)
 1041294:	e13ffc17 	ldw	r4,-16(fp)
 1041298:	10415000 	call	1041500 <i2c_start>
    if (!i2c_write(clk_base, data_base, DeviceAddr)){  // send ID
 104129c:	e0bffe03 	ldbu	r2,-8(fp)
 10412a0:	10803fcc 	andi	r2,r2,255
 10412a4:	100d883a 	mov	r6,r2
 10412a8:	e17ffd17 	ldw	r5,-12(fp)
 10412ac:	e13ffc17 	ldw	r4,-16(fp)
 10412b0:	10416040 	call	1041604 <i2c_write>
 10412b4:	1000041e 	bne	r2,zero,10412c8 <I2C_Read+0x68>
        bSuccess = FALSE;
 10412b8:	e03ffb15 	stw	zero,-20(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address NACK!\n"));
 10412bc:	01004174 	movhi	r4,261
 10412c0:	2119db04 	addi	r4,r4,26476
 10412c4:	1040fe00 	call	1040fe0 <myprintf>
    }
    if (bSuccess && !i2c_write(clk_base, data_base, ControlAddr)){ // send sub-address
 10412c8:	e0bffb17 	ldw	r2,-20(fp)
 10412cc:	10000a26 	beq	r2,zero,10412f8 <I2C_Read+0x98>
 10412d0:	e0bfff03 	ldbu	r2,-4(fp)
 10412d4:	100d883a 	mov	r6,r2
 10412d8:	e17ffd17 	ldw	r5,-12(fp)
 10412dc:	e13ffc17 	ldw	r4,-16(fp)
 10412e0:	10416040 	call	1041604 <i2c_write>
 10412e4:	1000041e 	bne	r2,zero,10412f8 <I2C_Read+0x98>
        bSuccess = FALSE;
 10412e8:	e03ffb15 	stw	zero,-20(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: SubAddress NACK!\n"));
 10412ec:	01004174 	movhi	r4,261
 10412f0:	2119e304 	addi	r4,r4,26508
 10412f4:	1040fe00 	call	1040fe0 <myprintf>
    }
    i2c_start(clk_base, data_base);  // restart
 10412f8:	e17ffd17 	ldw	r5,-12(fp)
 10412fc:	e13ffc17 	ldw	r4,-16(fp)
 1041300:	10415000 	call	1041500 <i2c_start>
    DeviceAddr |= 1; // Read
 1041304:	e0bffe03 	ldbu	r2,-8(fp)
 1041308:	10800054 	ori	r2,r2,1
 104130c:	e0bffe05 	stb	r2,-8(fp)
    if (bSuccess && !i2c_write(clk_base, data_base, DeviceAddr)){  // send id
 1041310:	e0bffb17 	ldw	r2,-20(fp)
 1041314:	10000b26 	beq	r2,zero,1041344 <I2C_Read+0xe4>
 1041318:	e0bffe03 	ldbu	r2,-8(fp)
 104131c:	10803fcc 	andi	r2,r2,255
 1041320:	100d883a 	mov	r6,r2
 1041324:	e17ffd17 	ldw	r5,-12(fp)
 1041328:	e13ffc17 	ldw	r4,-16(fp)
 104132c:	10416040 	call	1041604 <i2c_write>
 1041330:	1000041e 	bne	r2,zero,1041344 <I2C_Read+0xe4>
        bSuccess = FALSE;
 1041334:	e03ffb15 	stw	zero,-20(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address+1 NACK!\n"));
 1041338:	01004174 	movhi	r4,261
 104133c:	2119f404 	addi	r4,r4,26576
 1041340:	1040fe00 	call	1040fe0 <myprintf>
    }

    if (bSuccess){
 1041344:	e0bffb17 	ldw	r2,-20(fp)
 1041348:	10000526 	beq	r2,zero,1041360 <I2C_Read+0x100>
        i2c_read(clk_base, data_base, pControlData, FALSE);  // read
 104134c:	000f883a 	mov	r7,zero
 1041350:	e1800217 	ldw	r6,8(fp)
 1041354:	e17ffd17 	ldw	r5,-12(fp)
 1041358:	e13ffc17 	ldw	r4,-16(fp)
 104135c:	10417340 	call	1041734 <i2c_read>
    }
    i2c_stop(clk_base, data_base);
 1041360:	e17ffd17 	ldw	r5,-12(fp)
 1041364:	e13ffc17 	ldw	r4,-16(fp)
 1041368:	104158c0 	call	104158c <i2c_stop>

    return bSuccess;
 104136c:	e0bffb17 	ldw	r2,-20(fp)
}
 1041370:	e037883a 	mov	sp,fp
 1041374:	dfc00117 	ldw	ra,4(sp)
 1041378:	df000017 	ldw	fp,0(sp)
 104137c:	dec00204 	addi	sp,sp,8
 1041380:	f800283a 	ret

01041384 <I2C_MultipleRead>:

bool I2C_MultipleRead(alt_u32 clk_base, alt_u32 data_base, alt_8 DeviceAddr, alt_u8 szData[], alt_u16 len){
 1041384:	defff604 	addi	sp,sp,-40
 1041388:	dfc00915 	stw	ra,36(sp)
 104138c:	df000815 	stw	fp,32(sp)
 1041390:	df000804 	addi	fp,sp,32
 1041394:	e13ffb15 	stw	r4,-20(fp)
 1041398:	e17ffc15 	stw	r5,-16(fp)
 104139c:	3007883a 	mov	r3,r6
 10413a0:	e1fffe15 	stw	r7,-8(fp)
 10413a4:	e0800217 	ldw	r2,8(fp)
 10413a8:	e0fffd05 	stb	r3,-12(fp)
 10413ac:	e0bfff0d 	sth	r2,-4(fp)
    int i;
    bool bSuccess = TRUE;
 10413b0:	00800044 	movi	r2,1
 10413b4:	e0bff915 	stw	r2,-28(fp)
    //alt_u8 DeviceAddr,
    alt_u8 ControlAddr = 0;
 10413b8:	e03ffa05 	stb	zero,-24(fp)


    // device id
    //DeviceAddr = HMB_E2_I2C_ID;

    i2c_start(clk_base, data_base);
 10413bc:	e17ffc17 	ldw	r5,-16(fp)
 10413c0:	e13ffb17 	ldw	r4,-20(fp)
 10413c4:	10415000 	call	1041500 <i2c_start>
    if (!i2c_write(clk_base, data_base, DeviceAddr)){  // send ID
 10413c8:	e0bffd03 	ldbu	r2,-12(fp)
 10413cc:	10803fcc 	andi	r2,r2,255
 10413d0:	100d883a 	mov	r6,r2
 10413d4:	e17ffc17 	ldw	r5,-16(fp)
 10413d8:	e13ffb17 	ldw	r4,-20(fp)
 10413dc:	10416040 	call	1041604 <i2c_write>
 10413e0:	1000041e 	bne	r2,zero,10413f4 <I2C_MultipleRead+0x70>
        bSuccess = FALSE;
 10413e4:	e03ff915 	stw	zero,-28(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address NACK!\n"));
 10413e8:	01004174 	movhi	r4,261
 10413ec:	2119db04 	addi	r4,r4,26476
 10413f0:	1040fe00 	call	1040fe0 <myprintf>
    }
    if (bSuccess && !i2c_write(clk_base, data_base, ControlAddr)){ // send sub-address
 10413f4:	e0bff917 	ldw	r2,-28(fp)
 10413f8:	10000a26 	beq	r2,zero,1041424 <I2C_MultipleRead+0xa0>
 10413fc:	e0bffa03 	ldbu	r2,-24(fp)
 1041400:	100d883a 	mov	r6,r2
 1041404:	e17ffc17 	ldw	r5,-16(fp)
 1041408:	e13ffb17 	ldw	r4,-20(fp)
 104140c:	10416040 	call	1041604 <i2c_write>
 1041410:	1000041e 	bne	r2,zero,1041424 <I2C_MultipleRead+0xa0>
        bSuccess = FALSE;
 1041414:	e03ff915 	stw	zero,-28(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: SubAddress NACK!\n"));
 1041418:	01004174 	movhi	r4,261
 104141c:	2119e304 	addi	r4,r4,26508
 1041420:	1040fe00 	call	1040fe0 <myprintf>
    }
    if (bSuccess)
 1041424:	e0bff917 	ldw	r2,-28(fp)
 1041428:	10000326 	beq	r2,zero,1041438 <I2C_MultipleRead+0xb4>
        i2c_start(clk_base, data_base);  // restart
 104142c:	e17ffc17 	ldw	r5,-16(fp)
 1041430:	e13ffb17 	ldw	r4,-20(fp)
 1041434:	10415000 	call	1041500 <i2c_start>
    DeviceAddr |= 1; // Read
 1041438:	e0bffd03 	ldbu	r2,-12(fp)
 104143c:	10800054 	ori	r2,r2,1
 1041440:	e0bffd05 	stb	r2,-12(fp)
    if (bSuccess && !i2c_write(clk_base, data_base, DeviceAddr)){  // send id
 1041444:	e0bff917 	ldw	r2,-28(fp)
 1041448:	10000b26 	beq	r2,zero,1041478 <I2C_MultipleRead+0xf4>
 104144c:	e0bffd03 	ldbu	r2,-12(fp)
 1041450:	10803fcc 	andi	r2,r2,255
 1041454:	100d883a 	mov	r6,r2
 1041458:	e17ffc17 	ldw	r5,-16(fp)
 104145c:	e13ffb17 	ldw	r4,-20(fp)
 1041460:	10416040 	call	1041604 <i2c_write>
 1041464:	1000041e 	bne	r2,zero,1041478 <I2C_MultipleRead+0xf4>
        bSuccess = FALSE;
 1041468:	e03ff915 	stw	zero,-28(fp)
        I2C_DEBUG(("I2C HMB_E2 Fail: Address+1 NACK!\n"));
 104146c:	01004174 	movhi	r4,261
 1041470:	2119f404 	addi	r4,r4,26576
 1041474:	1040fe00 	call	1040fe0 <myprintf>
    }

    if (bSuccess){
 1041478:	e0bff917 	ldw	r2,-28(fp)
 104147c:	10001726 	beq	r2,zero,10414dc <I2C_MultipleRead+0x158>
        for(i=0;i<len && bSuccess;i++){
 1041480:	e03ff815 	stw	zero,-32(fp)
 1041484:	00001006 	br	10414c8 <I2C_MultipleRead+0x144>
            i2c_read(clk_base, data_base, &szData[i], (i==(len-1))?FALSE:TRUE);  // read
 1041488:	e0bff817 	ldw	r2,-32(fp)
 104148c:	e0fffe17 	ldw	r3,-8(fp)
 1041490:	1889883a 	add	r4,r3,r2
 1041494:	e0bfff0b 	ldhu	r2,-4(fp)
 1041498:	10ffffc4 	addi	r3,r2,-1
 104149c:	e0bff817 	ldw	r2,-32(fp)
 10414a0:	1884c03a 	cmpne	r2,r3,r2
 10414a4:	10803fcc 	andi	r2,r2,255
 10414a8:	100f883a 	mov	r7,r2
 10414ac:	200d883a 	mov	r6,r4
 10414b0:	e17ffc17 	ldw	r5,-16(fp)
 10414b4:	e13ffb17 	ldw	r4,-20(fp)
 10414b8:	10417340 	call	1041734 <i2c_read>
        bSuccess = FALSE;
        I2C_DEBUG(("I2C HMB_E2 Fail: Address+1 NACK!\n"));
    }

    if (bSuccess){
        for(i=0;i<len && bSuccess;i++){
 10414bc:	e0bff817 	ldw	r2,-32(fp)
 10414c0:	10800044 	addi	r2,r2,1
 10414c4:	e0bff815 	stw	r2,-32(fp)
 10414c8:	e0bfff0b 	ldhu	r2,-4(fp)
 10414cc:	e0fff817 	ldw	r3,-32(fp)
 10414d0:	1880020e 	bge	r3,r2,10414dc <I2C_MultipleRead+0x158>
 10414d4:	e0bff917 	ldw	r2,-28(fp)
 10414d8:	103feb1e 	bne	r2,zero,1041488 <__alt_data_end+0xfffc1488>
            i2c_read(clk_base, data_base, &szData[i], (i==(len-1))?FALSE:TRUE);  // read
        }
    }
    i2c_stop(clk_base, data_base);
 10414dc:	e17ffc17 	ldw	r5,-16(fp)
 10414e0:	e13ffb17 	ldw	r4,-20(fp)
 10414e4:	104158c0 	call	104158c <i2c_stop>

    return bSuccess;
 10414e8:	e0bff917 	ldw	r2,-28(fp)

}
 10414ec:	e037883a 	mov	sp,fp
 10414f0:	dfc00117 	ldw	ra,4(sp)
 10414f4:	df000017 	ldw	fp,0(sp)
 10414f8:	dec00204 	addi	sp,sp,8
 10414fc:	f800283a 	ret

01041500 <i2c_start>:
///////////// Interncal function (i2cXXX) body //////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////


//SDA 1->0 while SCL=1
void i2c_start(alt_u32 clk_base, alt_u32 data_base){
 1041500:	defffc04 	addi	sp,sp,-16
 1041504:	dfc00315 	stw	ra,12(sp)
 1041508:	df000215 	stw	fp,8(sp)
 104150c:	df000204 	addi	fp,sp,8
 1041510:	e13ffe15 	stw	r4,-8(fp)
 1041514:	e17fff15 	stw	r5,-4(fp)

    // make sure it is in normal state
    SDA_DIR_OUT(data_base);  // data output enabled
 1041518:	e0bfff17 	ldw	r2,-4(fp)
 104151c:	10800104 	addi	r2,r2,4
 1041520:	1007883a 	mov	r3,r2
 1041524:	00800044 	movi	r2,1
 1041528:	18800035 	stwio	r2,0(r3)



    // start condition
    SDA_HIGH(data_base); // data high
 104152c:	e0bfff17 	ldw	r2,-4(fp)
 1041530:	00c00044 	movi	r3,1
 1041534:	10c00035 	stwio	r3,0(r2)
    SCL_HIGH(clk_base);
 1041538:	e0bffe17 	ldw	r2,-8(fp)
 104153c:	00c00044 	movi	r3,1
 1041540:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY;
 1041544:	01000044 	movi	r4,1
 1041548:	10545b80 	call	10545b8 <usleep>

    SDA_LOW(data_base); // data low
 104154c:	e0bfff17 	ldw	r2,-4(fp)
 1041550:	0007883a 	mov	r3,zero
 1041554:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY;
 1041558:	01000044 	movi	r4,1
 104155c:	10545b80 	call	10545b8 <usleep>
    SCL_LOW(clk_base); // clock low
 1041560:	e0bffe17 	ldw	r2,-8(fp)
 1041564:	0007883a 	mov	r3,zero
 1041568:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY;
 104156c:	01000044 	movi	r4,1
 1041570:	10545b80 	call	10545b8 <usleep>
}
 1041574:	0001883a 	nop
 1041578:	e037883a 	mov	sp,fp
 104157c:	dfc00117 	ldw	ra,4(sp)
 1041580:	df000017 	ldw	fp,0(sp)
 1041584:	dec00204 	addi	sp,sp,8
 1041588:	f800283a 	ret

0104158c <i2c_stop>:

// SDA 0->1 while SCL=1
void i2c_stop(alt_u32 clk_base, alt_u32 data_base){
 104158c:	defffc04 	addi	sp,sp,-16
 1041590:	dfc00315 	stw	ra,12(sp)
 1041594:	df000215 	stw	fp,8(sp)
 1041598:	df000204 	addi	fp,sp,8
 104159c:	e13ffe15 	stw	r4,-8(fp)
 10415a0:	e17fff15 	stw	r5,-4(fp)
    // assume SCL = 0

    SDA_DIR_OUT(data_base);  // data output enabled
 10415a4:	e0bfff17 	ldw	r2,-4(fp)
 10415a8:	10800104 	addi	r2,r2,4
 10415ac:	1007883a 	mov	r3,r2
 10415b0:	00800044 	movi	r2,1
 10415b4:	18800035 	stwio	r2,0(r3)
    SDA_LOW(data_base); // Data Low
 10415b8:	e0bfff17 	ldw	r2,-4(fp)
 10415bc:	0007883a 	mov	r3,zero
 10415c0:	10c00035 	stwio	r3,0(r2)
    //SCL_DELAY;
    SCL_HIGH(clk_base);  // clock high
 10415c4:	e0bffe17 	ldw	r2,-8(fp)
 10415c8:	00c00044 	movi	r3,1
 10415cc:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock high long delay
 10415d0:	01000044 	movi	r4,1
 10415d4:	10545b80 	call	10545b8 <usleep>
    SDA_HIGH(data_base); // data high
 10415d8:	e0bfff17 	ldw	r2,-4(fp)
 10415dc:	00c00044 	movi	r3,1
 10415e0:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // data high delay
 10415e4:	01000044 	movi	r4,1
 10415e8:	10545b80 	call	10545b8 <usleep>
}
 10415ec:	0001883a 	nop
 10415f0:	e037883a 	mov	sp,fp
 10415f4:	dfc00117 	ldw	ra,4(sp)
 10415f8:	df000017 	ldw	fp,0(sp)
 10415fc:	dec00204 	addi	sp,sp,8
 1041600:	f800283a 	ret

01041604 <i2c_write>:

bool i2c_write(alt_u32 clk_base, alt_u32 data_base, alt_u8 Data){ // return true if device response ack
 1041604:	defff804 	addi	sp,sp,-32
 1041608:	dfc00715 	stw	ra,28(sp)
 104160c:	df000615 	stw	fp,24(sp)
 1041610:	df000604 	addi	fp,sp,24
 1041614:	e13ffd15 	stw	r4,-12(fp)
 1041618:	e17ffe15 	stw	r5,-8(fp)
 104161c:	3005883a 	mov	r2,r6
 1041620:	e0bfff05 	stb	r2,-4(fp)
    alt_u8 Mask = 0x80;
 1041624:	00bfe004 	movi	r2,-128
 1041628:	e0bffa05 	stb	r2,-24(fp)
    bool bAck;
    int i;

    // assume, SCL = 0

    SDA_DIR_OUT(data_base);  // data write mode
 104162c:	e0bffe17 	ldw	r2,-8(fp)
 1041630:	10800104 	addi	r2,r2,4
 1041634:	1007883a 	mov	r3,r2
 1041638:	00800044 	movi	r2,1
 104163c:	18800035 	stwio	r2,0(r3)

    for(i=0;i<8;i++){
 1041640:	e03ffb15 	stw	zero,-20(fp)
 1041644:	00001f06 	br	10416c4 <i2c_write+0xc0>
        SCL_LOW(clk_base);  // new, make sure data change at clk low
 1041648:	e0bffd17 	ldw	r2,-12(fp)
 104164c:	0007883a 	mov	r3,zero
 1041650:	10c00035 	stwio	r3,0(r2)
        // output data on bus
        if (Data & Mask){ // there is a delay in this command
 1041654:	e0ffff03 	ldbu	r3,-4(fp)
 1041658:	e0bffa03 	ldbu	r2,-24(fp)
 104165c:	1884703a 	and	r2,r3,r2
 1041660:	10803fcc 	andi	r2,r2,255
 1041664:	10000426 	beq	r2,zero,1041678 <i2c_write+0x74>
            SDA_HIGH(data_base);
 1041668:	e0bffe17 	ldw	r2,-8(fp)
 104166c:	00c00044 	movi	r3,1
 1041670:	10c00035 	stwio	r3,0(r2)
 1041674:	00000306 	br	1041684 <i2c_write+0x80>
        }else{
            SDA_LOW(data_base);
 1041678:	e0bffe17 	ldw	r2,-8(fp)
 104167c:	0007883a 	mov	r3,zero
 1041680:	10c00035 	stwio	r3,0(r2)
        }
        Mask >>= 1; // there is a delay in this command
 1041684:	e0bffa03 	ldbu	r2,-24(fp)
 1041688:	1004d07a 	srli	r2,r2,1
 104168c:	e0bffa05 	stb	r2,-24(fp)
        // clock high
        SCL_HIGH(clk_base);
 1041690:	e0bffd17 	ldw	r2,-12(fp)
 1041694:	00c00044 	movi	r3,1
 1041698:	10c00035 	stwio	r3,0(r2)
        SCL_DELAY;
 104169c:	01000044 	movi	r4,1
 10416a0:	10545b80 	call	10545b8 <usleep>
        SCL_LOW(clk_base);
 10416a4:	e0bffd17 	ldw	r2,-12(fp)
 10416a8:	0007883a 	mov	r3,zero
 10416ac:	10c00035 	stwio	r3,0(r2)
        SCL_DELAY;
 10416b0:	01000044 	movi	r4,1
 10416b4:	10545b80 	call	10545b8 <usleep>

    // assume, SCL = 0

    SDA_DIR_OUT(data_base);  // data write mode

    for(i=0;i<8;i++){
 10416b8:	e0bffb17 	ldw	r2,-20(fp)
 10416bc:	10800044 	addi	r2,r2,1
 10416c0:	e0bffb15 	stw	r2,-20(fp)
 10416c4:	e0bffb17 	ldw	r2,-20(fp)
 10416c8:	10800210 	cmplti	r2,r2,8
 10416cc:	103fde1e 	bne	r2,zero,1041648 <__alt_data_end+0xfffc1648>
        SCL_LOW(clk_base);
        SCL_DELAY;
    }

    //===== get ack
    SDA_DIR_IN(data_base);  // data read mode
 10416d0:	e0bffe17 	ldw	r2,-8(fp)
 10416d4:	10800104 	addi	r2,r2,4
 10416d8:	0007883a 	mov	r3,zero
 10416dc:	10c00035 	stwio	r3,0(r2)
    //SCL_DELAY;
    // clock high
    SCL_HIGH(clk_base);  // clock high
 10416e0:	e0bffd17 	ldw	r2,-12(fp)
 10416e4:	00c00044 	movi	r3,1
 10416e8:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY;  // clock high delay
 10416ec:	01000044 	movi	r4,1
 10416f0:	10545b80 	call	10545b8 <usleep>
    bAck = SDA_READ(data_base)?FALSE:TRUE;  // get ack
 10416f4:	e0bffe17 	ldw	r2,-8(fp)
 10416f8:	10800037 	ldwio	r2,0(r2)
 10416fc:	1005003a 	cmpeq	r2,r2,zero
 1041700:	10803fcc 	andi	r2,r2,255
 1041704:	e0bffc15 	stw	r2,-16(fp)
    //SCL_DELAY;
    //SDA_DIR_OUT;
    SCL_LOW(clk_base); // clock low
 1041708:	e0bffd17 	ldw	r2,-12(fp)
 104170c:	0007883a 	mov	r3,zero
 1041710:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock low delay
 1041714:	01000044 	movi	r4,1
 1041718:	10545b80 	call	10545b8 <usleep>
    return bAck;
 104171c:	e0bffc17 	ldw	r2,-16(fp)
}
 1041720:	e037883a 	mov	sp,fp
 1041724:	dfc00117 	ldw	ra,4(sp)
 1041728:	df000017 	ldw	fp,0(sp)
 104172c:	dec00204 	addi	sp,sp,8
 1041730:	f800283a 	ret

01041734 <i2c_read>:

void i2c_read(alt_u32 clk_base, alt_u32 data_base, alt_u8 *pData, bool bAck){ // return true if device response ack
 1041734:	defff804 	addi	sp,sp,-32
 1041738:	dfc00715 	stw	ra,28(sp)
 104173c:	df000615 	stw	fp,24(sp)
 1041740:	df000604 	addi	fp,sp,24
 1041744:	e13ffc15 	stw	r4,-16(fp)
 1041748:	e17ffd15 	stw	r5,-12(fp)
 104174c:	e1bffe15 	stw	r6,-8(fp)
 1041750:	e1ffff15 	stw	r7,-4(fp)
    alt_u8 Data=0;
 1041754:	e03ffa05 	stb	zero,-24(fp)
    int i;

    // assume SCL = low

    SDA_DIR_IN(data_base);  // set data read mode
 1041758:	e0bffd17 	ldw	r2,-12(fp)
 104175c:	10800104 	addi	r2,r2,4
 1041760:	0007883a 	mov	r3,zero
 1041764:	10c00035 	stwio	r3,0(r2)
    SCL_LOW(clk_base); // clock low
 1041768:	e0bffc17 	ldw	r2,-16(fp)
 104176c:	0007883a 	mov	r3,zero
 1041770:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock low delay
 1041774:	01000044 	movi	r4,1
 1041778:	10545b80 	call	10545b8 <usleep>

    for(i=0;i<8;i++){
 104177c:	e03ffb15 	stw	zero,-20(fp)
 1041780:	00001606 	br	10417dc <i2c_read+0xa8>
        Data <<= 1;
 1041784:	e0bffa03 	ldbu	r2,-24(fp)
 1041788:	1085883a 	add	r2,r2,r2
 104178c:	e0bffa05 	stb	r2,-24(fp)
        SCL_HIGH(clk_base);  // clock high
 1041790:	e0bffc17 	ldw	r2,-16(fp)
 1041794:	00c00044 	movi	r3,1
 1041798:	10c00035 	stwio	r3,0(r2)
        SCL_DELAY;
 104179c:	01000044 	movi	r4,1
 10417a0:	10545b80 	call	10545b8 <usleep>
        if (SDA_READ(data_base))  // read data
 10417a4:	e0bffd17 	ldw	r2,-12(fp)
 10417a8:	10800037 	ldwio	r2,0(r2)
 10417ac:	10000326 	beq	r2,zero,10417bc <i2c_read+0x88>
            Data |= 0x01;
 10417b0:	e0bffa03 	ldbu	r2,-24(fp)
 10417b4:	10800054 	ori	r2,r2,1
 10417b8:	e0bffa05 	stb	r2,-24(fp)
        SCL_LOW(clk_base);  // clock log
 10417bc:	e0bffc17 	ldw	r2,-16(fp)
 10417c0:	0007883a 	mov	r3,zero
 10417c4:	10c00035 	stwio	r3,0(r2)
        SCL_DELAY;
 10417c8:	01000044 	movi	r4,1
 10417cc:	10545b80 	call	10545b8 <usleep>

    SDA_DIR_IN(data_base);  // set data read mode
    SCL_LOW(clk_base); // clock low
    SCL_DELAY; // clock low delay

    for(i=0;i<8;i++){
 10417d0:	e0bffb17 	ldw	r2,-20(fp)
 10417d4:	10800044 	addi	r2,r2,1
 10417d8:	e0bffb15 	stw	r2,-20(fp)
 10417dc:	e0bffb17 	ldw	r2,-20(fp)
 10417e0:	10800210 	cmplti	r2,r2,8
 10417e4:	103fe71e 	bne	r2,zero,1041784 <__alt_data_end+0xfffc1784>
        SCL_LOW(clk_base);  // clock log
        SCL_DELAY;
    }

    // send ACK
    SCL_LOW(clk_base);  // new, make sure data change at clk low
 10417e8:	e0bffc17 	ldw	r2,-16(fp)
 10417ec:	0007883a 	mov	r3,zero
 10417f0:	10c00035 	stwio	r3,0(r2)
    SDA_DIR_OUT(data_base);  // set data write mode
 10417f4:	e0bffd17 	ldw	r2,-12(fp)
 10417f8:	10800104 	addi	r2,r2,4
 10417fc:	1007883a 	mov	r3,r2
 1041800:	00800044 	movi	r2,1
 1041804:	18800035 	stwio	r2,0(r3)
    if (bAck)
 1041808:	e0bfff17 	ldw	r2,-4(fp)
 104180c:	10000426 	beq	r2,zero,1041820 <i2c_read+0xec>
        SDA_LOW(data_base);
 1041810:	e0bffd17 	ldw	r2,-12(fp)
 1041814:	0007883a 	mov	r3,zero
 1041818:	10c00035 	stwio	r3,0(r2)
 104181c:	00000306 	br	104182c <i2c_read+0xf8>
    else
        SDA_HIGH(data_base);
 1041820:	e0bffd17 	ldw	r2,-12(fp)
 1041824:	00c00044 	movi	r3,1
 1041828:	10c00035 	stwio	r3,0(r2)
    SCL_HIGH(clk_base); // clock high
 104182c:	e0bffc17 	ldw	r2,-16(fp)
 1041830:	00c00044 	movi	r3,1
 1041834:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock high  delay
 1041838:	01000044 	movi	r4,1
 104183c:	10545b80 	call	10545b8 <usleep>
    SCL_LOW(clk_base); // clock low
 1041840:	e0bffc17 	ldw	r2,-16(fp)
 1041844:	0007883a 	mov	r3,zero
 1041848:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // clock low delay
 104184c:	01000044 	movi	r4,1
 1041850:	10545b80 	call	10545b8 <usleep>
    SDA_LOW(data_base);  // data low
 1041854:	e0bffd17 	ldw	r2,-12(fp)
 1041858:	0007883a 	mov	r3,zero
 104185c:	10c00035 	stwio	r3,0(r2)
    SCL_DELAY; // data low delay
 1041860:	01000044 	movi	r4,1
 1041864:	10545b80 	call	10545b8 <usleep>
//    SDA_DIR_IN;  // set data read mode

    *pData = Data;
 1041868:	e0bffe17 	ldw	r2,-8(fp)
 104186c:	e0fffa03 	ldbu	r3,-24(fp)
 1041870:	10c00005 	stb	r3,0(r2)
}
 1041874:	0001883a 	nop
 1041878:	e037883a 	mov	sp,fp
 104187c:	dfc00117 	ldw	ra,4(sp)
 1041880:	df000017 	ldw	fp,0(sp)
 1041884:	dec00204 	addi	sp,sp,8
 1041888:	f800283a 	ret

0104188c <audio_setup>:
#define LINEOUT_DEFUALT_VOL 0x5d
#define PI 3.14159265
#define SINE_WAVE_LENGTH	1024
#define SCALE		16384

bool audio_setup(AUDIO_FUNC audio_func, int sample_rate){
 104188c:	defffb04 	addi	sp,sp,-20
 1041890:	dfc00415 	stw	ra,16(sp)
 1041894:	df000315 	stw	fp,12(sp)
 1041898:	df000304 	addi	fp,sp,12
 104189c:	e13ffe15 	stw	r4,-8(fp)
 10418a0:	e17fff15 	stw	r5,-4(fp)
    bool bSuccess = TRUE;
 10418a4:	00800044 	movi	r2,1
 10418a8:	e0bffd15 	stw	r2,-12(fp)
    AUDIO_InterfaceActive(FALSE);
 10418ac:	0009883a 	mov	r4,zero
 10418b0:	10404180 	call	1040418 <AUDIO_InterfaceActive>
    //
    if (audio_func == MIC_RECORD){
 10418b4:	e0bffe17 	ldw	r2,-8(fp)
 10418b8:	10000d1e 	bne	r2,zero,10418f0 <audio_setup+0x64>
        AUDIO_SetInputSource(SOURCE_MIC);
 10418bc:	0009883a 	mov	r4,zero
 10418c0:	10408d80 	call	10408d8 <AUDIO_SetInputSource>
        AUDIO_DacEnableSoftMute(TRUE);
 10418c4:	01000044 	movi	r4,1
 10418c8:	10406e00 	call	10406e0 <AUDIO_DacEnableSoftMute>
        AUDIO_AdcEnableHighPassFilter(FALSE);
 10418cc:	0009883a 	mov	r4,zero
 10418d0:	10404d80 	call	10404d8 <AUDIO_AdcEnableHighPassFilter>
        AUDIO_MicBoost(FALSE);
 10418d4:	0009883a 	mov	r4,zero
 10418d8:	10404600 	call	1040460 <AUDIO_MicBoost>
        AUDIO_MicMute(FALSE);
 10418dc:	0009883a 	mov	r4,zero
 10418e0:	104076c0 	call	104076c <AUDIO_MicMute>
        AUDIO_LineInMute(TRUE);
 10418e4:	01000044 	movi	r4,1
 10418e8:	10407f80 	call	10407f8 <AUDIO_LineInMute>
 10418ec:	00002506 	br	1041984 <audio_setup+0xf8>
    }else if (audio_func == LINEIN_RECORD){
 10418f0:	e0bffe17 	ldw	r2,-8(fp)
 10418f4:	10800058 	cmpnei	r2,r2,1
 10418f8:	10000e1e 	bne	r2,zero,1041934 <audio_setup+0xa8>
        AUDIO_SetInputSource(SOURCE_LINEIN);
 10418fc:	01000044 	movi	r4,1
 1041900:	10408d80 	call	10408d8 <AUDIO_SetInputSource>
        AUDIO_DacEnableSoftMute(TRUE);
 1041904:	01000044 	movi	r4,1
 1041908:	10406e00 	call	10406e0 <AUDIO_DacEnableSoftMute>
        AUDIO_AdcEnableHighPassFilter(FALSE);
 104190c:	0009883a 	mov	r4,zero
 1041910:	10404d80 	call	10404d8 <AUDIO_AdcEnableHighPassFilter>
        AUDIO_MicMute(TRUE);
 1041914:	01000044 	movi	r4,1
 1041918:	104076c0 	call	104076c <AUDIO_MicMute>
        AUDIO_LineInMute(FALSE);
 104191c:	0009883a 	mov	r4,zero
 1041920:	10407f80 	call	10407f8 <AUDIO_LineInMute>
        AUDIO_SetLineInVol(0x17, 0x17);  // max 0x1F, min:0; 0x17: 0dB (assume max input is 2.0v rms)
 1041924:	014005c4 	movi	r5,23
 1041928:	010005c4 	movi	r4,23
 104192c:	1040a4c0 	call	1040a4c <AUDIO_SetLineInVol>
 1041930:	00001406 	br	1041984 <audio_setup+0xf8>
    }else if (audio_func == LINEOUT_PLAY){
 1041934:	e0bffe17 	ldw	r2,-8(fp)
 1041938:	10800098 	cmpnei	r2,r2,2
 104193c:	1000111e 	bne	r2,zero,1041984 <audio_setup+0xf8>
        AUDIO_DacEnableSoftMute(TRUE);
 1041940:	01000044 	movi	r4,1
 1041944:	10406e00 	call	10406e0 <AUDIO_DacEnableSoftMute>
        AUDIO_MicBoost(FALSE);
 1041948:	0009883a 	mov	r4,zero
 104194c:	10404600 	call	1040460 <AUDIO_MicBoost>
        AUDIO_MicMute(TRUE);
 1041950:	01000044 	movi	r4,1
 1041954:	104076c0 	call	104076c <AUDIO_MicMute>
        AUDIO_LineInMute(FALSE);
 1041958:	0009883a 	mov	r4,zero
 104195c:	10407f80 	call	10407f8 <AUDIO_LineInMute>
        AUDIO_DacEnableSoftMute(FALSE);
 1041960:	0009883a 	mov	r4,zero
 1041964:	10406e00 	call	10406e0 <AUDIO_DacEnableSoftMute>
        //AUDIO_DacDeemphasisControl(DEEMPHASIS_48K);
        AUDIO_DacEnableZeroCross(TRUE);
 1041968:	01000044 	movi	r4,1
 104196c:	10406000 	call	1040600 <AUDIO_DacEnableZeroCross>
        AUDIO_SetLineOutVol(LINEOUT_DEFUALT_VOL, LINEOUT_DEFUALT_VOL); // max 7F, min: 30, 0x79: 0 db
 1041970:	01401744 	movi	r5,93
 1041974:	01001744 	movi	r4,93
 1041978:	1040b600 	call	1040b60 <AUDIO_SetLineOutVol>
        AUDIO_DacEnableSoftMute(FALSE);
 104197c:	0009883a 	mov	r4,zero
 1041980:	10406e00 	call	10406e0 <AUDIO_DacEnableSoftMute>
    }

    if (sample_rate == 8000)
 1041984:	e0bfff17 	ldw	r2,-4(fp)
 1041988:	1087d018 	cmpnei	r2,r2,8000
 104198c:	1000031e 	bne	r2,zero,104199c <audio_setup+0x110>
        AUDIO_SetSampleRate(RATE_ADC8K_DAC8K);
 1041990:	010000c4 	movi	r4,3
 1041994:	10409680 	call	1040968 <AUDIO_SetSampleRate>
 1041998:	00001406 	br	10419ec <audio_setup+0x160>
    else if (sample_rate == 32000)
 104199c:	e0bfff17 	ldw	r2,-4(fp)
 10419a0:	109f4018 	cmpnei	r2,r2,32000
 10419a4:	1000031e 	bne	r2,zero,10419b4 <audio_setup+0x128>
        AUDIO_SetSampleRate(RATE_ADC32K_DAC32K);
 10419a8:	01000104 	movi	r4,4
 10419ac:	10409680 	call	1040968 <AUDIO_SetSampleRate>
 10419b0:	00000e06 	br	10419ec <audio_setup+0x160>
    else if (sample_rate == 48000)
 10419b4:	e0ffff17 	ldw	r3,-4(fp)
 10419b8:	00aee014 	movui	r2,48000
 10419bc:	1880031e 	bne	r3,r2,10419cc <audio_setup+0x140>
        AUDIO_SetSampleRate(RATE_ADC48K_DAC48K);
 10419c0:	0009883a 	mov	r4,zero
 10419c4:	10409680 	call	1040968 <AUDIO_SetSampleRate>
 10419c8:	00000806 	br	10419ec <audio_setup+0x160>
    else if (sample_rate == 44100)
 10419cc:	e0ffff17 	ldw	r3,-4(fp)
 10419d0:	00ab1114 	movui	r2,44100
 10419d4:	1880031e 	bne	r3,r2,10419e4 <audio_setup+0x158>
        AUDIO_SetSampleRate(RATE_ADC44K1_DAC44K1);
 10419d8:	01000184 	movi	r4,6
 10419dc:	10409680 	call	1040968 <AUDIO_SetSampleRate>
 10419e0:	00000206 	br	10419ec <audio_setup+0x160>
    else
        AUDIO_SetSampleRate(RATE_ADC96K_DAC96K);
 10419e4:	01000144 	movi	r4,5
 10419e8:	10409680 	call	1040968 <AUDIO_SetSampleRate>
    //
    AUDIO_InterfaceActive(TRUE);
 10419ec:	01000044 	movi	r4,1
 10419f0:	10404180 	call	1040418 <AUDIO_InterfaceActive>

    return bSuccess;
 10419f4:	e0bffd17 	ldw	r2,-12(fp)
}
 10419f8:	e037883a 	mov	sp,fp
 10419fc:	dfc00117 	ldw	ra,4(sp)
 1041a00:	df000017 	ldw	fp,0(sp)
 1041a04:	dec00204 	addi	sp,sp,8
 1041a08:	f800283a 	ret

01041a0c <main>:

int main()
{
 1041a0c:	defff204 	addi	sp,sp,-56
 1041a10:	dfc00d15 	stw	ra,52(sp)
 1041a14:	df000c15 	stw	fp,48(sp)
 1041a18:	dc000b15 	stw	r16,44(sp)
 1041a1c:	df000c04 	addi	fp,sp,48
    int i = 0, step = 2;
 1041a20:	e03ff415 	stw	zero,-48(fp)
 1041a24:	00800084 	movi	r2,2
 1041a28:	e0bff515 	stw	r2,-44(fp)
    double x, y, MIN_RADIAN;
    short data = 0;
 1041a2c:	e03ff60d 	sth	zero,-40(fp)
    short *pBuf;

    if (!AUDIO_Init()){
 1041a30:	10402900 	call	1040290 <AUDIO_Init>
 1041a34:	1000031e 	bne	r2,zero,1041a44 <main+0x38>
        printf("Audio Init Error\r\n");
 1041a38:	01004174 	movhi	r4,261
 1041a3c:	2119fd04 	addi	r4,r4,26612
 1041a40:	1045b800 	call	1045b80 <puts>
    }
    //AUDIO_REG_READ();
    AUDIO_FifoClear();
 1041a44:	1040f7c0 	call	1040f7c <AUDIO_FifoClear>
    int sample_rate = 96000;
 1041a48:	00800074 	movhi	r2,1
 1041a4c:	109dc004 	addi	r2,r2,30464
 1041a50:	e0bff715 	stw	r2,-36(fp)
    audio_setup(LINEOUT_PLAY, sample_rate);
 1041a54:	e17ff717 	ldw	r5,-36(fp)
 1041a58:	01000084 	movi	r4,2
 1041a5c:	104188c0 	call	104188c <audio_setup>
    printf("playing (sample rate = %d)...\r\n", sample_rate);
 1041a60:	e17ff717 	ldw	r5,-36(fp)
 1041a64:	01004174 	movhi	r4,261
 1041a68:	211a0204 	addi	r4,r4,26632
 1041a6c:	1045a840 	call	1045a84 <printf>

    MIN_RADIAN = 2 * PI / SINE_WAVE_LENGTH;
 1041a70:	0094f274 	movhi	r2,21449
 1041a74:	10b53c44 	addi	r2,r2,-11023
 1041a78:	e0bff815 	stw	r2,-32(fp)
 1041a7c:	008fde74 	movhi	r2,16249
 1041a80:	10887ec4 	addi	r2,r2,8699
 1041a84:	e0bff915 	stw	r2,-28(fp)

    pBuf = (short *)DATA_BUFFER_BASE;
 1041a88:	00804234 	movhi	r2,264
 1041a8c:	e0bffa15 	stw	r2,-24(fp)
    for (i = 0; i < SINE_WAVE_LENGTH; i++){
 1041a90:	e03ff415 	stw	zero,-48(fp)
 1041a94:	00002706 	br	1041b34 <main+0x128>
 	   x = MIN_RADIAN * i;
 1041a98:	e13ff417 	ldw	r4,-48(fp)
 1041a9c:	10459140 	call	1045914 <__floatsidf>
 1041aa0:	1011883a 	mov	r8,r2
 1041aa4:	1813883a 	mov	r9,r3
 1041aa8:	e1bff817 	ldw	r6,-32(fp)
 1041aac:	e1fff917 	ldw	r7,-28(fp)
 1041ab0:	4009883a 	mov	r4,r8
 1041ab4:	480b883a 	mov	r5,r9
 1041ab8:	10448800 	call	1044880 <__muldf3>
 1041abc:	1009883a 	mov	r4,r2
 1041ac0:	180b883a 	mov	r5,r3
 1041ac4:	e13ffb15 	stw	r4,-20(fp)
 1041ac8:	e17ffc15 	stw	r5,-16(fp)
 	   y = sin(x) * SCALE;
 1041acc:	e13ffb17 	ldw	r4,-20(fp)
 1041ad0:	e17ffc17 	ldw	r5,-16(fp)
 1041ad4:	1041ba80 	call	1041ba8 <sin>
 1041ad8:	1011883a 	mov	r8,r2
 1041adc:	1813883a 	mov	r9,r3
 1041ae0:	000d883a 	mov	r6,zero
 1041ae4:	01d03434 	movhi	r7,16592
 1041ae8:	4009883a 	mov	r4,r8
 1041aec:	480b883a 	mov	r5,r9
 1041af0:	10448800 	call	1044880 <__muldf3>
 1041af4:	1009883a 	mov	r4,r2
 1041af8:	180b883a 	mov	r5,r3
 1041afc:	e13ffd15 	stw	r4,-12(fp)
 1041b00:	e17ffe15 	stw	r5,-8(fp)
 	   *(pBuf+i) = y;
 1041b04:	e0bff417 	ldw	r2,-48(fp)
 1041b08:	1085883a 	add	r2,r2,r2
 1041b0c:	1007883a 	mov	r3,r2
 1041b10:	e0bffa17 	ldw	r2,-24(fp)
 1041b14:	10e1883a 	add	r16,r2,r3
 1041b18:	e13ffd17 	ldw	r4,-12(fp)
 1041b1c:	e17ffe17 	ldw	r5,-8(fp)
 1041b20:	10458940 	call	1045894 <__fixdfsi>
 1041b24:	8080000d 	sth	r2,0(r16)
    printf("playing (sample rate = %d)...\r\n", sample_rate);

    MIN_RADIAN = 2 * PI / SINE_WAVE_LENGTH;

    pBuf = (short *)DATA_BUFFER_BASE;
    for (i = 0; i < SINE_WAVE_LENGTH; i++){
 1041b28:	e0bff417 	ldw	r2,-48(fp)
 1041b2c:	10800044 	addi	r2,r2,1
 1041b30:	e0bff415 	stw	r2,-48(fp)
 1041b34:	e0bff417 	ldw	r2,-48(fp)
 1041b38:	10810010 	cmplti	r2,r2,1024
 1041b3c:	103fd61e 	bne	r2,zero,1041a98 <__alt_data_end+0xfffc1a98>
 	   x = MIN_RADIAN * i;
 	   y = sin(x) * SCALE;
 	   *(pBuf+i) = y;
    }
    //step = 2;
    i = 0;
 1041b40:	e03ff415 	stw	zero,-48(fp)
    // infinite loop
    while(1){
       // continue playing
       if (AUDIO_DacFifoNotFull()){
 1041b44:	1040e5c0 	call	1040e5c <AUDIO_DacFifoNotFull>
 1041b48:	103ffe26 	beq	r2,zero,1041b44 <__alt_data_end+0xfffc1b44>
    	   data = *(pBuf+i);
 1041b4c:	e0bff417 	ldw	r2,-48(fp)
 1041b50:	1085883a 	add	r2,r2,r2
 1041b54:	1007883a 	mov	r3,r2
 1041b58:	e0bffa17 	ldw	r2,-24(fp)
 1041b5c:	10c5883a 	add	r2,r2,r3
 1041b60:	1080000b 	ldhu	r2,0(r2)
 1041b64:	e0bff60d 	sth	r2,-40(fp)
    	   //IOWR_ALTERA_AVALON_PIO_DATA(LEDR_BASE, data);
    	   //printf("i:%d, data: %d\r\n", i, data);
           AUDIO_DacFifoSetData(data, data);
 1041b68:	e0bff60f 	ldh	r2,-40(fp)
 1041b6c:	e0fff60f 	ldh	r3,-40(fp)
 1041b70:	180b883a 	mov	r5,r3
 1041b74:	1009883a 	mov	r4,r2
 1041b78:	1040e980 	call	1040e98 <AUDIO_DacFifoSetData>
    	   i += step;
 1041b7c:	e0fff417 	ldw	r3,-48(fp)
 1041b80:	e0bff517 	ldw	r2,-44(fp)
 1041b84:	1885883a 	add	r2,r3,r2
 1041b88:	e0bff415 	stw	r2,-48(fp)
    	   if (i >= SINE_WAVE_LENGTH)
 1041b8c:	e0bff417 	ldw	r2,-48(fp)
 1041b90:	10810010 	cmplti	r2,r2,1024
 1041b94:	103feb1e 	bne	r2,zero,1041b44 <__alt_data_end+0xfffc1b44>
    		   i -= SINE_WAVE_LENGTH;
 1041b98:	e0bff417 	ldw	r2,-48(fp)
 1041b9c:	10bf0004 	addi	r2,r2,-1024
 1041ba0:	e0bff415 	stw	r2,-48(fp)
        }
    }
 1041ba4:	003fe706 	br	1041b44 <__alt_data_end+0xfffc1b44>

01041ba8 <sin>:
 1041ba8:	00a00034 	movhi	r2,32768
 1041bac:	defffa04 	addi	sp,sp,-24
 1041bb0:	10bfffc4 	addi	r2,r2,-1
 1041bb4:	00cffa74 	movhi	r3,16361
 1041bb8:	dfc00515 	stw	ra,20(sp)
 1041bbc:	2884703a 	and	r2,r5,r2
 1041bc0:	18c87ec4 	addi	r3,r3,8699
 1041bc4:	1880180e 	bge	r3,r2,1041c28 <sin+0x80>
 1041bc8:	00dffc34 	movhi	r3,32752
 1041bcc:	18ffffc4 	addi	r3,r3,-1
 1041bd0:	1880060e 	bge	r3,r2,1041bec <sin+0x44>
 1041bd4:	280f883a 	mov	r7,r5
 1041bd8:	200d883a 	mov	r6,r4
 1041bdc:	1044f980 	call	1044f98 <__subdf3>
 1041be0:	dfc00517 	ldw	ra,20(sp)
 1041be4:	dec00604 	addi	sp,sp,24
 1041be8:	f800283a 	ret
 1041bec:	d9800104 	addi	r6,sp,4
 1041bf0:	1041c980 	call	1041c98 <__ieee754_rem_pio2>
 1041bf4:	108000cc 	andi	r2,r2,3
 1041bf8:	00c00044 	movi	r3,1
 1041bfc:	10c01926 	beq	r2,r3,1041c64 <sin+0xbc>
 1041c00:	01000084 	movi	r4,2
 1041c04:	11000f26 	beq	r2,r4,1041c44 <sin+0x9c>
 1041c08:	10001c26 	beq	r2,zero,1041c7c <sin+0xd4>
 1041c0c:	d9800317 	ldw	r6,12(sp)
 1041c10:	d9c00417 	ldw	r7,16(sp)
 1041c14:	d9000117 	ldw	r4,4(sp)
 1041c18:	d9400217 	ldw	r5,8(sp)
 1041c1c:	10424040 	call	1042404 <__kernel_cos>
 1041c20:	18e0003c 	xorhi	r3,r3,32768
 1041c24:	003fee06 	br	1041be0 <__alt_data_end+0xfffc1be0>
 1041c28:	d8000015 	stw	zero,0(sp)
 1041c2c:	000d883a 	mov	r6,zero
 1041c30:	000f883a 	mov	r7,zero
 1041c34:	10436380 	call	1043638 <__kernel_sin>
 1041c38:	dfc00517 	ldw	ra,20(sp)
 1041c3c:	dec00604 	addi	sp,sp,24
 1041c40:	f800283a 	ret
 1041c44:	d9800317 	ldw	r6,12(sp)
 1041c48:	d9c00417 	ldw	r7,16(sp)
 1041c4c:	d9000117 	ldw	r4,4(sp)
 1041c50:	d9400217 	ldw	r5,8(sp)
 1041c54:	d8c00015 	stw	r3,0(sp)
 1041c58:	10436380 	call	1043638 <__kernel_sin>
 1041c5c:	18e0003c 	xorhi	r3,r3,32768
 1041c60:	003fdf06 	br	1041be0 <__alt_data_end+0xfffc1be0>
 1041c64:	d9800317 	ldw	r6,12(sp)
 1041c68:	d9c00417 	ldw	r7,16(sp)
 1041c6c:	d9000117 	ldw	r4,4(sp)
 1041c70:	d9400217 	ldw	r5,8(sp)
 1041c74:	10424040 	call	1042404 <__kernel_cos>
 1041c78:	003fd906 	br	1041be0 <__alt_data_end+0xfffc1be0>
 1041c7c:	d9800317 	ldw	r6,12(sp)
 1041c80:	d9c00417 	ldw	r7,16(sp)
 1041c84:	d9000117 	ldw	r4,4(sp)
 1041c88:	d9400217 	ldw	r5,8(sp)
 1041c8c:	d8c00015 	stw	r3,0(sp)
 1041c90:	10436380 	call	1043638 <__kernel_sin>
 1041c94:	003fd206 	br	1041be0 <__alt_data_end+0xfffc1be0>

01041c98 <__ieee754_rem_pio2>:
 1041c98:	02200034 	movhi	r8,32768
 1041c9c:	deffea04 	addi	sp,sp,-88
 1041ca0:	423fffc4 	addi	r8,r8,-1
 1041ca4:	00cffa74 	movhi	r3,16361
 1041ca8:	ddc01315 	stw	r23,76(sp)
 1041cac:	dc400d15 	stw	r17,52(sp)
 1041cb0:	dfc01515 	stw	ra,84(sp)
 1041cb4:	df001415 	stw	fp,80(sp)
 1041cb8:	dd801215 	stw	r22,72(sp)
 1041cbc:	dd401115 	stw	r21,68(sp)
 1041cc0:	dd001015 	stw	r20,64(sp)
 1041cc4:	dcc00f15 	stw	r19,60(sp)
 1041cc8:	dc800e15 	stw	r18,56(sp)
 1041ccc:	dc000c15 	stw	r16,48(sp)
 1041cd0:	2a2e703a 	and	r23,r5,r8
 1041cd4:	18c87ec4 	addi	r3,r3,8699
 1041cd8:	2823883a 	mov	r17,r5
 1041cdc:	1dc0790e 	bge	r3,r23,1041ec4 <__ieee754_rem_pio2+0x22c>
 1041ce0:	009000f4 	movhi	r2,16387
 1041ce4:	10b65ec4 	addi	r2,r2,-9861
 1041ce8:	3021883a 	mov	r16,r6
 1041cec:	2027883a 	mov	r19,r4
 1041cf0:	15c02316 	blt	r2,r23,1041d80 <__ieee754_rem_pio2+0xe8>
 1041cf4:	01cffe74 	movhi	r7,16377
 1041cf8:	39c87ec4 	addi	r7,r7,8699
 1041cfc:	01951034 	movhi	r6,21568
 1041d00:	01417a0e 	bge	zero,r5,10422ec <__ieee754_rem_pio2+0x654>
 1041d04:	1044f980 	call	1044f98 <__subdf3>
 1041d08:	1025883a 	mov	r18,r2
 1041d0c:	008ffe74 	movhi	r2,16377
 1041d10:	10887ec4 	addi	r2,r2,8699
 1041d14:	1823883a 	mov	r17,r3
 1041d18:	b8808426 	beq	r23,r2,1041f2c <__ieee754_rem_pio2+0x294>
 1041d1c:	018698b4 	movhi	r6,6754
 1041d20:	01cf7474 	movhi	r7,15825
 1041d24:	3198cc44 	addi	r6,r6,25393
 1041d28:	39ed1844 	addi	r7,r7,-19359
 1041d2c:	9009883a 	mov	r4,r18
 1041d30:	180b883a 	mov	r5,r3
 1041d34:	1044f980 	call	1044f98 <__subdf3>
 1041d38:	100d883a 	mov	r6,r2
 1041d3c:	180f883a 	mov	r7,r3
 1041d40:	9009883a 	mov	r4,r18
 1041d44:	880b883a 	mov	r5,r17
 1041d48:	80800015 	stw	r2,0(r16)
 1041d4c:	80c00115 	stw	r3,4(r16)
 1041d50:	1044f980 	call	1044f98 <__subdf3>
 1041d54:	018698b4 	movhi	r6,6754
 1041d58:	01cf7474 	movhi	r7,15825
 1041d5c:	3198cc44 	addi	r6,r6,25393
 1041d60:	39ed1844 	addi	r7,r7,-19359
 1041d64:	1009883a 	mov	r4,r2
 1041d68:	180b883a 	mov	r5,r3
 1041d6c:	1044f980 	call	1044f98 <__subdf3>
 1041d70:	80800215 	stw	r2,8(r16)
 1041d74:	80c00315 	stw	r3,12(r16)
 1041d78:	00800044 	movi	r2,1
 1041d7c:	00005606 	br	1041ed8 <__ieee754_rem_pio2+0x240>
 1041d80:	00904e74 	movhi	r2,16697
 1041d84:	10887ec4 	addi	r2,r2,8699
 1041d88:	15c0830e 	bge	r2,r23,1041f98 <__ieee754_rem_pio2+0x300>
 1041d8c:	009ffc34 	movhi	r2,32752
 1041d90:	10bfffc4 	addi	r2,r2,-1
 1041d94:	15c05c16 	blt	r2,r23,1041f08 <__ieee754_rem_pio2+0x270>
 1041d98:	b829d53a 	srai	r20,r23,20
 1041d9c:	a53efa84 	addi	r20,r20,-1046
 1041da0:	a024953a 	slli	r18,r20,20
 1041da4:	bca5c83a 	sub	r18,r23,r18
 1041da8:	900b883a 	mov	r5,r18
 1041dac:	10458940 	call	1045894 <__fixdfsi>
 1041db0:	1009883a 	mov	r4,r2
 1041db4:	10459140 	call	1045914 <__floatsidf>
 1041db8:	9809883a 	mov	r4,r19
 1041dbc:	900b883a 	mov	r5,r18
 1041dc0:	100d883a 	mov	r6,r2
 1041dc4:	180f883a 	mov	r7,r3
 1041dc8:	d8800215 	stw	r2,8(sp)
 1041dcc:	d8c00315 	stw	r3,12(sp)
 1041dd0:	1044f980 	call	1044f98 <__subdf3>
 1041dd4:	000d883a 	mov	r6,zero
 1041dd8:	01d05c34 	movhi	r7,16752
 1041ddc:	1009883a 	mov	r4,r2
 1041de0:	180b883a 	mov	r5,r3
 1041de4:	10448800 	call	1044880 <__muldf3>
 1041de8:	180b883a 	mov	r5,r3
 1041dec:	1009883a 	mov	r4,r2
 1041df0:	182b883a 	mov	r21,r3
 1041df4:	102d883a 	mov	r22,r2
 1041df8:	10458940 	call	1045894 <__fixdfsi>
 1041dfc:	1009883a 	mov	r4,r2
 1041e00:	10459140 	call	1045914 <__floatsidf>
 1041e04:	100d883a 	mov	r6,r2
 1041e08:	180f883a 	mov	r7,r3
 1041e0c:	b009883a 	mov	r4,r22
 1041e10:	a80b883a 	mov	r5,r21
 1041e14:	1027883a 	mov	r19,r2
 1041e18:	1825883a 	mov	r18,r3
 1041e1c:	d8800415 	stw	r2,16(sp)
 1041e20:	d8c00515 	stw	r3,20(sp)
 1041e24:	1044f980 	call	1044f98 <__subdf3>
 1041e28:	000d883a 	mov	r6,zero
 1041e2c:	01d05c34 	movhi	r7,16752
 1041e30:	1009883a 	mov	r4,r2
 1041e34:	180b883a 	mov	r5,r3
 1041e38:	10448800 	call	1044880 <__muldf3>
 1041e3c:	000d883a 	mov	r6,zero
 1041e40:	000f883a 	mov	r7,zero
 1041e44:	1009883a 	mov	r4,r2
 1041e48:	180b883a 	mov	r5,r3
 1041e4c:	d8800615 	stw	r2,24(sp)
 1041e50:	d8c00715 	stw	r3,28(sp)
 1041e54:	104471c0 	call	104471c <__eqdf2>
 1041e58:	1001431e 	bne	r2,zero,1042368 <__ieee754_rem_pio2+0x6d0>
 1041e5c:	000f883a 	mov	r7,zero
 1041e60:	000d883a 	mov	r6,zero
 1041e64:	9809883a 	mov	r4,r19
 1041e68:	900b883a 	mov	r5,r18
 1041e6c:	104471c0 	call	104471c <__eqdf2>
 1041e70:	100f003a 	cmpeq	r7,r2,zero
 1041e74:	00800084 	movi	r2,2
 1041e78:	11cfc83a 	sub	r7,r2,r7
 1041e7c:	00800084 	movi	r2,2
 1041e80:	d8800015 	stw	r2,0(sp)
 1041e84:	00804174 	movhi	r2,261
 1041e88:	109a2a04 	addi	r2,r2,26792
 1041e8c:	d8800115 	stw	r2,4(sp)
 1041e90:	a00d883a 	mov	r6,r20
 1041e94:	800b883a 	mov	r5,r16
 1041e98:	d9000204 	addi	r4,sp,8
 1041e9c:	10428a80 	call	10428a8 <__kernel_rem_pio2>
 1041ea0:	88000d0e 	bge	r17,zero,1041ed8 <__ieee754_rem_pio2+0x240>
 1041ea4:	81000117 	ldw	r4,4(r16)
 1041ea8:	80c00317 	ldw	r3,12(r16)
 1041eac:	0085c83a 	sub	r2,zero,r2
 1041eb0:	2120003c 	xorhi	r4,r4,32768
 1041eb4:	18e0003c 	xorhi	r3,r3,32768
 1041eb8:	81000115 	stw	r4,4(r16)
 1041ebc:	80c00315 	stw	r3,12(r16)
 1041ec0:	00000506 	br	1041ed8 <__ieee754_rem_pio2+0x240>
 1041ec4:	31000015 	stw	r4,0(r6)
 1041ec8:	31400115 	stw	r5,4(r6)
 1041ecc:	30000215 	stw	zero,8(r6)
 1041ed0:	30000315 	stw	zero,12(r6)
 1041ed4:	0005883a 	mov	r2,zero
 1041ed8:	dfc01517 	ldw	ra,84(sp)
 1041edc:	df001417 	ldw	fp,80(sp)
 1041ee0:	ddc01317 	ldw	r23,76(sp)
 1041ee4:	dd801217 	ldw	r22,72(sp)
 1041ee8:	dd401117 	ldw	r21,68(sp)
 1041eec:	dd001017 	ldw	r20,64(sp)
 1041ef0:	dcc00f17 	ldw	r19,60(sp)
 1041ef4:	dc800e17 	ldw	r18,56(sp)
 1041ef8:	dc400d17 	ldw	r17,52(sp)
 1041efc:	dc000c17 	ldw	r16,48(sp)
 1041f00:	dec01604 	addi	sp,sp,88
 1041f04:	f800283a 	ret
 1041f08:	200d883a 	mov	r6,r4
 1041f0c:	280f883a 	mov	r7,r5
 1041f10:	1044f980 	call	1044f98 <__subdf3>
 1041f14:	80800215 	stw	r2,8(r16)
 1041f18:	80800015 	stw	r2,0(r16)
 1041f1c:	80c00315 	stw	r3,12(r16)
 1041f20:	80c00115 	stw	r3,4(r16)
 1041f24:	0005883a 	mov	r2,zero
 1041f28:	003feb06 	br	1041ed8 <__alt_data_end+0xfffc1ed8>
 1041f2c:	01cf7474 	movhi	r7,15825
 1041f30:	9009883a 	mov	r4,r18
 1041f34:	39ed1844 	addi	r7,r7,-19359
 1041f38:	01869834 	movhi	r6,6752
 1041f3c:	180b883a 	mov	r5,r3
 1041f40:	1044f980 	call	1044f98 <__subdf3>
 1041f44:	018b80f4 	movhi	r6,11779
 1041f48:	01cee8f4 	movhi	r7,15267
 1041f4c:	319c1cc4 	addi	r6,r6,28787
 1041f50:	39c66284 	addi	r7,r7,6538
 1041f54:	1009883a 	mov	r4,r2
 1041f58:	180b883a 	mov	r5,r3
 1041f5c:	1025883a 	mov	r18,r2
 1041f60:	1823883a 	mov	r17,r3
 1041f64:	1044f980 	call	1044f98 <__subdf3>
 1041f68:	100d883a 	mov	r6,r2
 1041f6c:	180f883a 	mov	r7,r3
 1041f70:	9009883a 	mov	r4,r18
 1041f74:	880b883a 	mov	r5,r17
 1041f78:	80800015 	stw	r2,0(r16)
 1041f7c:	80c00115 	stw	r3,4(r16)
 1041f80:	1044f980 	call	1044f98 <__subdf3>
 1041f84:	018b80f4 	movhi	r6,11779
 1041f88:	01cee8f4 	movhi	r7,15267
 1041f8c:	319c1cc4 	addi	r6,r6,28787
 1041f90:	39c66284 	addi	r7,r7,6538
 1041f94:	003f7306 	br	1041d64 <__alt_data_end+0xfffc1d64>
 1041f98:	10439040 	call	1043904 <fabs>
 1041f9c:	019b72b4 	movhi	r6,28106
 1041fa0:	01cff934 	movhi	r7,16356
 1041fa4:	31b220c4 	addi	r6,r6,-14205
 1041fa8:	39d7cc04 	addi	r7,r7,24368
 1041fac:	1009883a 	mov	r4,r2
 1041fb0:	180b883a 	mov	r5,r3
 1041fb4:	102d883a 	mov	r22,r2
 1041fb8:	182b883a 	mov	r21,r3
 1041fbc:	10448800 	call	1044880 <__muldf3>
 1041fc0:	000d883a 	mov	r6,zero
 1041fc4:	01cff834 	movhi	r7,16352
 1041fc8:	1009883a 	mov	r4,r2
 1041fcc:	180b883a 	mov	r5,r3
 1041fd0:	1043e700 	call	1043e70 <__adddf3>
 1041fd4:	180b883a 	mov	r5,r3
 1041fd8:	1009883a 	mov	r4,r2
 1041fdc:	10458940 	call	1045894 <__fixdfsi>
 1041fe0:	1009883a 	mov	r4,r2
 1041fe4:	1025883a 	mov	r18,r2
 1041fe8:	10459140 	call	1045914 <__floatsidf>
 1041fec:	01cffe74 	movhi	r7,16377
 1041ff0:	39c87ec4 	addi	r7,r7,8699
 1041ff4:	01951034 	movhi	r6,21568
 1041ff8:	1009883a 	mov	r4,r2
 1041ffc:	180b883a 	mov	r5,r3
 1042000:	1029883a 	mov	r20,r2
 1042004:	1827883a 	mov	r19,r3
 1042008:	10448800 	call	1044880 <__muldf3>
 104200c:	b009883a 	mov	r4,r22
 1042010:	a80b883a 	mov	r5,r21
 1042014:	100d883a 	mov	r6,r2
 1042018:	180f883a 	mov	r7,r3
 104201c:	1044f980 	call	1044f98 <__subdf3>
 1042020:	018698b4 	movhi	r6,6754
 1042024:	01cf7474 	movhi	r7,15825
 1042028:	a009883a 	mov	r4,r20
 104202c:	3198cc44 	addi	r6,r6,25393
 1042030:	39ed1844 	addi	r7,r7,-19359
 1042034:	980b883a 	mov	r5,r19
 1042038:	1039883a 	mov	fp,r2
 104203c:	d8c00815 	stw	r3,32(sp)
 1042040:	10448800 	call	1044880 <__muldf3>
 1042044:	010007c4 	movi	r4,31
 1042048:	e017883a 	mov	r11,fp
 104204c:	da800817 	ldw	r10,32(sp)
 1042050:	102d883a 	mov	r22,r2
 1042054:	182b883a 	mov	r21,r3
 1042058:	24802816 	blt	r4,r18,10420fc <__ieee754_rem_pio2+0x464>
 104205c:	913fffc4 	addi	r4,r18,-1
 1042060:	2109883a 	add	r4,r4,r4
 1042064:	01404174 	movhi	r5,261
 1042068:	2109883a 	add	r4,r4,r4
 104206c:	295a0a04 	addi	r5,r5,26664
 1042070:	2909883a 	add	r4,r5,r4
 1042074:	21000017 	ldw	r4,0(r4)
 1042078:	b9002026 	beq	r23,r4,10420fc <__ieee754_rem_pio2+0x464>
 104207c:	100d883a 	mov	r6,r2
 1042080:	180f883a 	mov	r7,r3
 1042084:	e009883a 	mov	r4,fp
 1042088:	500b883a 	mov	r5,r10
 104208c:	da800b15 	stw	r10,44(sp)
 1042090:	df000a15 	stw	fp,40(sp)
 1042094:	1044f980 	call	1044f98 <__subdf3>
 1042098:	da800b17 	ldw	r10,44(sp)
 104209c:	dac00a17 	ldw	r11,40(sp)
 10420a0:	1019883a 	mov	r12,r2
 10420a4:	1813883a 	mov	r9,r3
 10420a8:	80800015 	stw	r2,0(r16)
 10420ac:	80c00115 	stw	r3,4(r16)
 10420b0:	600d883a 	mov	r6,r12
 10420b4:	480f883a 	mov	r7,r9
 10420b8:	5809883a 	mov	r4,r11
 10420bc:	500b883a 	mov	r5,r10
 10420c0:	da400b15 	stw	r9,44(sp)
 10420c4:	db000a15 	stw	r12,40(sp)
 10420c8:	1044f980 	call	1044f98 <__subdf3>
 10420cc:	b00d883a 	mov	r6,r22
 10420d0:	a80f883a 	mov	r7,r21
 10420d4:	1009883a 	mov	r4,r2
 10420d8:	180b883a 	mov	r5,r3
 10420dc:	1044f980 	call	1044f98 <__subdf3>
 10420e0:	80800215 	stw	r2,8(r16)
 10420e4:	80c00315 	stw	r3,12(r16)
 10420e8:	da400b17 	ldw	r9,44(sp)
 10420ec:	db000a17 	ldw	r12,40(sp)
 10420f0:	88009f16 	blt	r17,zero,1042370 <__ieee754_rem_pio2+0x6d8>
 10420f4:	9005883a 	mov	r2,r18
 10420f8:	003f7706 	br	1041ed8 <__alt_data_end+0xfffc1ed8>
 10420fc:	d9400817 	ldw	r5,32(sp)
 1042100:	100d883a 	mov	r6,r2
 1042104:	180f883a 	mov	r7,r3
 1042108:	e009883a 	mov	r4,fp
 104210c:	da800b15 	stw	r10,44(sp)
 1042110:	dac00a15 	stw	r11,40(sp)
 1042114:	1044f980 	call	1044f98 <__subdf3>
 1042118:	1019883a 	mov	r12,r2
 104211c:	1804d53a 	srli	r2,r3,20
 1042120:	b811d53a 	srai	r8,r23,20
 1042124:	1813883a 	mov	r9,r3
 1042128:	1081ffcc 	andi	r2,r2,2047
 104212c:	80c00115 	stw	r3,4(r16)
 1042130:	83000015 	stw	r12,0(r16)
 1042134:	4085c83a 	sub	r2,r8,r2
 1042138:	00c00404 	movi	r3,16
 104213c:	da800b17 	ldw	r10,44(sp)
 1042140:	dac00a17 	ldw	r11,40(sp)
 1042144:	18bfda0e 	bge	r3,r2,10420b0 <__alt_data_end+0xfffc20b0>
 1042148:	01cf7474 	movhi	r7,15825
 104214c:	39ed1844 	addi	r7,r7,-19359
 1042150:	01869834 	movhi	r6,6752
 1042154:	a009883a 	mov	r4,r20
 1042158:	980b883a 	mov	r5,r19
 104215c:	da000a15 	stw	r8,40(sp)
 1042160:	10448800 	call	1044880 <__muldf3>
 1042164:	d9400817 	ldw	r5,32(sp)
 1042168:	100d883a 	mov	r6,r2
 104216c:	180f883a 	mov	r7,r3
 1042170:	e009883a 	mov	r4,fp
 1042174:	102d883a 	mov	r22,r2
 1042178:	182b883a 	mov	r21,r3
 104217c:	1044f980 	call	1044f98 <__subdf3>
 1042180:	d9400817 	ldw	r5,32(sp)
 1042184:	100d883a 	mov	r6,r2
 1042188:	180f883a 	mov	r7,r3
 104218c:	e009883a 	mov	r4,fp
 1042190:	182f883a 	mov	r23,r3
 1042194:	d8800915 	stw	r2,36(sp)
 1042198:	1044f980 	call	1044f98 <__subdf3>
 104219c:	b00d883a 	mov	r6,r22
 10421a0:	a80f883a 	mov	r7,r21
 10421a4:	1009883a 	mov	r4,r2
 10421a8:	180b883a 	mov	r5,r3
 10421ac:	1044f980 	call	1044f98 <__subdf3>
 10421b0:	018b80f4 	movhi	r6,11779
 10421b4:	01cee8f4 	movhi	r7,15267
 10421b8:	319c1cc4 	addi	r6,r6,28787
 10421bc:	39c66284 	addi	r7,r7,6538
 10421c0:	a009883a 	mov	r4,r20
 10421c4:	980b883a 	mov	r5,r19
 10421c8:	102d883a 	mov	r22,r2
 10421cc:	182b883a 	mov	r21,r3
 10421d0:	10448800 	call	1044880 <__muldf3>
 10421d4:	b00d883a 	mov	r6,r22
 10421d8:	a80f883a 	mov	r7,r21
 10421dc:	1009883a 	mov	r4,r2
 10421e0:	180b883a 	mov	r5,r3
 10421e4:	1044f980 	call	1044f98 <__subdf3>
 10421e8:	d9000917 	ldw	r4,36(sp)
 10421ec:	100d883a 	mov	r6,r2
 10421f0:	180f883a 	mov	r7,r3
 10421f4:	b80b883a 	mov	r5,r23
 10421f8:	102d883a 	mov	r22,r2
 10421fc:	182b883a 	mov	r21,r3
 1042200:	1044f980 	call	1044f98 <__subdf3>
 1042204:	1019883a 	mov	r12,r2
 1042208:	1804d53a 	srli	r2,r3,20
 104220c:	da000a17 	ldw	r8,40(sp)
 1042210:	83000015 	stw	r12,0(r16)
 1042214:	1081ffcc 	andi	r2,r2,2047
 1042218:	4091c83a 	sub	r8,r8,r2
 104221c:	80c00115 	stw	r3,4(r16)
 1042220:	00800c44 	movi	r2,49
 1042224:	1813883a 	mov	r9,r3
 1042228:	1200730e 	bge	r2,r8,10423f8 <__ieee754_rem_pio2+0x760>
 104222c:	01cee8f4 	movhi	r7,15267
 1042230:	39c66284 	addi	r7,r7,6538
 1042234:	018b8034 	movhi	r6,11776
 1042238:	a009883a 	mov	r4,r20
 104223c:	980b883a 	mov	r5,r19
 1042240:	10448800 	call	1044880 <__muldf3>
 1042244:	d9000917 	ldw	r4,36(sp)
 1042248:	100d883a 	mov	r6,r2
 104224c:	180f883a 	mov	r7,r3
 1042250:	b80b883a 	mov	r5,r23
 1042254:	102d883a 	mov	r22,r2
 1042258:	182b883a 	mov	r21,r3
 104225c:	1044f980 	call	1044f98 <__subdf3>
 1042260:	d9000917 	ldw	r4,36(sp)
 1042264:	100d883a 	mov	r6,r2
 1042268:	180f883a 	mov	r7,r3
 104226c:	b80b883a 	mov	r5,r23
 1042270:	d8c00b15 	stw	r3,44(sp)
 1042274:	d8800a15 	stw	r2,40(sp)
 1042278:	1044f980 	call	1044f98 <__subdf3>
 104227c:	b00d883a 	mov	r6,r22
 1042280:	a80f883a 	mov	r7,r21
 1042284:	1009883a 	mov	r4,r2
 1042288:	180b883a 	mov	r5,r3
 104228c:	1044f980 	call	1044f98 <__subdf3>
 1042290:	01894834 	movhi	r6,9504
 1042294:	01ce5f34 	movhi	r7,14716
 1042298:	31927044 	addi	r6,r6,18881
 104229c:	39e0e684 	addi	r7,r7,-31846
 10422a0:	a009883a 	mov	r4,r20
 10422a4:	980b883a 	mov	r5,r19
 10422a8:	102d883a 	mov	r22,r2
 10422ac:	182b883a 	mov	r21,r3
 10422b0:	10448800 	call	1044880 <__muldf3>
 10422b4:	b00d883a 	mov	r6,r22
 10422b8:	a80f883a 	mov	r7,r21
 10422bc:	1009883a 	mov	r4,r2
 10422c0:	180b883a 	mov	r5,r3
 10422c4:	1044f980 	call	1044f98 <__subdf3>
 10422c8:	dac00a17 	ldw	r11,40(sp)
 10422cc:	da800b17 	ldw	r10,44(sp)
 10422d0:	102d883a 	mov	r22,r2
 10422d4:	182b883a 	mov	r21,r3
 10422d8:	100d883a 	mov	r6,r2
 10422dc:	180f883a 	mov	r7,r3
 10422e0:	5809883a 	mov	r4,r11
 10422e4:	500b883a 	mov	r5,r10
 10422e8:	003f6a06 	br	1042094 <__alt_data_end+0xfffc2094>
 10422ec:	1043e700 	call	1043e70 <__adddf3>
 10422f0:	1025883a 	mov	r18,r2
 10422f4:	008ffe74 	movhi	r2,16377
 10422f8:	10887ec4 	addi	r2,r2,8699
 10422fc:	1823883a 	mov	r17,r3
 1042300:	b8802226 	beq	r23,r2,104238c <__ieee754_rem_pio2+0x6f4>
 1042304:	018698b4 	movhi	r6,6754
 1042308:	01cf7474 	movhi	r7,15825
 104230c:	3198cc44 	addi	r6,r6,25393
 1042310:	39ed1844 	addi	r7,r7,-19359
 1042314:	9009883a 	mov	r4,r18
 1042318:	180b883a 	mov	r5,r3
 104231c:	1043e700 	call	1043e70 <__adddf3>
 1042320:	100d883a 	mov	r6,r2
 1042324:	180f883a 	mov	r7,r3
 1042328:	9009883a 	mov	r4,r18
 104232c:	880b883a 	mov	r5,r17
 1042330:	80800015 	stw	r2,0(r16)
 1042334:	80c00115 	stw	r3,4(r16)
 1042338:	1044f980 	call	1044f98 <__subdf3>
 104233c:	018698b4 	movhi	r6,6754
 1042340:	01cf7474 	movhi	r7,15825
 1042344:	3198cc44 	addi	r6,r6,25393
 1042348:	39ed1844 	addi	r7,r7,-19359
 104234c:	1009883a 	mov	r4,r2
 1042350:	180b883a 	mov	r5,r3
 1042354:	1043e700 	call	1043e70 <__adddf3>
 1042358:	80800215 	stw	r2,8(r16)
 104235c:	80c00315 	stw	r3,12(r16)
 1042360:	00bfffc4 	movi	r2,-1
 1042364:	003edc06 	br	1041ed8 <__alt_data_end+0xfffc1ed8>
 1042368:	01c000c4 	movi	r7,3
 104236c:	003ec306 	br	1041e7c <__alt_data_end+0xfffc1e7c>
 1042370:	4a60003c 	xorhi	r9,r9,32768
 1042374:	18e0003c 	xorhi	r3,r3,32768
 1042378:	83000015 	stw	r12,0(r16)
 104237c:	82400115 	stw	r9,4(r16)
 1042380:	80c00315 	stw	r3,12(r16)
 1042384:	0485c83a 	sub	r2,zero,r18
 1042388:	003ed306 	br	1041ed8 <__alt_data_end+0xfffc1ed8>
 104238c:	01cf7474 	movhi	r7,15825
 1042390:	9009883a 	mov	r4,r18
 1042394:	39ed1844 	addi	r7,r7,-19359
 1042398:	01869834 	movhi	r6,6752
 104239c:	180b883a 	mov	r5,r3
 10423a0:	1043e700 	call	1043e70 <__adddf3>
 10423a4:	018b80f4 	movhi	r6,11779
 10423a8:	01cee8f4 	movhi	r7,15267
 10423ac:	319c1cc4 	addi	r6,r6,28787
 10423b0:	39c66284 	addi	r7,r7,6538
 10423b4:	1009883a 	mov	r4,r2
 10423b8:	180b883a 	mov	r5,r3
 10423bc:	1025883a 	mov	r18,r2
 10423c0:	1823883a 	mov	r17,r3
 10423c4:	1043e700 	call	1043e70 <__adddf3>
 10423c8:	100d883a 	mov	r6,r2
 10423cc:	180f883a 	mov	r7,r3
 10423d0:	9009883a 	mov	r4,r18
 10423d4:	880b883a 	mov	r5,r17
 10423d8:	80800015 	stw	r2,0(r16)
 10423dc:	80c00115 	stw	r3,4(r16)
 10423e0:	1044f980 	call	1044f98 <__subdf3>
 10423e4:	018b80f4 	movhi	r6,11779
 10423e8:	01cee8f4 	movhi	r7,15267
 10423ec:	319c1cc4 	addi	r6,r6,28787
 10423f0:	39c66284 	addi	r7,r7,6538
 10423f4:	003fd506 	br	104234c <__alt_data_end+0xfffc234c>
 10423f8:	dac00917 	ldw	r11,36(sp)
 10423fc:	b815883a 	mov	r10,r23
 1042400:	003f2b06 	br	10420b0 <__alt_data_end+0xfffc20b0>

01042404 <__kernel_cos>:
 1042404:	defff304 	addi	sp,sp,-52
 1042408:	dc000315 	stw	r16,12(sp)
 104240c:	04200034 	movhi	r16,32768
 1042410:	843fffc4 	addi	r16,r16,-1
 1042414:	008f9034 	movhi	r2,15936
 1042418:	df000b15 	stw	fp,44(sp)
 104241c:	ddc00a15 	stw	r23,40(sp)
 1042420:	dd800915 	stw	r22,36(sp)
 1042424:	dcc00615 	stw	r19,24(sp)
 1042428:	dfc00c15 	stw	ra,48(sp)
 104242c:	dd400815 	stw	r21,32(sp)
 1042430:	dd000715 	stw	r20,28(sp)
 1042434:	dc800515 	stw	r18,20(sp)
 1042438:	dc400415 	stw	r17,16(sp)
 104243c:	2c20703a 	and	r16,r5,r16
 1042440:	10bfffc4 	addi	r2,r2,-1
 1042444:	2827883a 	mov	r19,r5
 1042448:	202d883a 	mov	r22,r4
 104244c:	302f883a 	mov	r23,r6
 1042450:	3839883a 	mov	fp,r7
 1042454:	14007516 	blt	r2,r16,104262c <__kernel_cos+0x228>
 1042458:	10458940 	call	1045894 <__fixdfsi>
 104245c:	10010f26 	beq	r2,zero,104289c <__kernel_cos+0x498>
 1042460:	b00d883a 	mov	r6,r22
 1042464:	980f883a 	mov	r7,r19
 1042468:	b009883a 	mov	r4,r22
 104246c:	980b883a 	mov	r5,r19
 1042470:	10448800 	call	1044880 <__muldf3>
 1042474:	01afa234 	movhi	r6,48776
 1042478:	01ef6a74 	movhi	r7,48553
 104247c:	318e3504 	addi	r6,r6,14548
 1042480:	39feba44 	addi	r7,r7,-1303
 1042484:	1009883a 	mov	r4,r2
 1042488:	180b883a 	mov	r5,r3
 104248c:	102b883a 	mov	r21,r2
 1042490:	1829883a 	mov	r20,r3
 1042494:	10448800 	call	1044880 <__muldf3>
 1042498:	01af6d74 	movhi	r6,48565
 104249c:	01cf88b4 	movhi	r7,15906
 10424a0:	31ac7104 	addi	r6,r6,-20028
 10424a4:	39fba784 	addi	r7,r7,-4450
 10424a8:	1009883a 	mov	r4,r2
 10424ac:	180b883a 	mov	r5,r3
 10424b0:	1043e700 	call	1043e70 <__adddf3>
 10424b4:	a80d883a 	mov	r6,r21
 10424b8:	a00f883a 	mov	r7,r20
 10424bc:	1009883a 	mov	r4,r2
 10424c0:	180b883a 	mov	r5,r3
 10424c4:	10448800 	call	1044880 <__muldf3>
 10424c8:	01a02734 	movhi	r6,32924
 10424cc:	01cfa4b4 	movhi	r7,16018
 10424d0:	3194ab44 	addi	r6,r6,21165
 10424d4:	39df93c4 	addi	r7,r7,32335
 10424d8:	1009883a 	mov	r4,r2
 10424dc:	180b883a 	mov	r5,r3
 10424e0:	1044f980 	call	1044f98 <__subdf3>
 10424e4:	a80d883a 	mov	r6,r21
 10424e8:	a00f883a 	mov	r7,r20
 10424ec:	1009883a 	mov	r4,r2
 10424f0:	180b883a 	mov	r5,r3
 10424f4:	10448800 	call	1044880 <__muldf3>
 10424f8:	018672f4 	movhi	r6,6603
 10424fc:	01cfbeb4 	movhi	r7,16122
 1042500:	31856404 	addi	r6,r6,5520
 1042504:	39c06804 	addi	r7,r7,416
 1042508:	1009883a 	mov	r4,r2
 104250c:	180b883a 	mov	r5,r3
 1042510:	1043e700 	call	1043e70 <__adddf3>
 1042514:	a80d883a 	mov	r6,r21
 1042518:	a00f883a 	mov	r7,r20
 104251c:	1009883a 	mov	r4,r2
 1042520:	180b883a 	mov	r5,r3
 1042524:	10448800 	call	1044880 <__muldf3>
 1042528:	0185b074 	movhi	r6,5825
 104252c:	01cfd5f4 	movhi	r7,16215
 1042530:	31945dc4 	addi	r6,r6,20855
 1042534:	39f05b04 	addi	r7,r7,-16020
 1042538:	1009883a 	mov	r4,r2
 104253c:	180b883a 	mov	r5,r3
 1042540:	1044f980 	call	1044f98 <__subdf3>
 1042544:	a80d883a 	mov	r6,r21
 1042548:	a00f883a 	mov	r7,r20
 104254c:	1009883a 	mov	r4,r2
 1042550:	180b883a 	mov	r5,r3
 1042554:	10448800 	call	1044880 <__muldf3>
 1042558:	01955574 	movhi	r6,21845
 104255c:	01cfe974 	movhi	r7,16293
 1042560:	31955304 	addi	r6,r6,21836
 1042564:	39d55544 	addi	r7,r7,21845
 1042568:	1009883a 	mov	r4,r2
 104256c:	180b883a 	mov	r5,r3
 1042570:	1043e700 	call	1043e70 <__adddf3>
 1042574:	a80d883a 	mov	r6,r21
 1042578:	a00f883a 	mov	r7,r20
 104257c:	1009883a 	mov	r4,r2
 1042580:	180b883a 	mov	r5,r3
 1042584:	10448800 	call	1044880 <__muldf3>
 1042588:	1017883a 	mov	r11,r2
 104258c:	1815883a 	mov	r10,r3
 1042590:	a809883a 	mov	r4,r21
 1042594:	a00b883a 	mov	r5,r20
 1042598:	000d883a 	mov	r6,zero
 104259c:	01cff834 	movhi	r7,16352
 10425a0:	da800215 	stw	r10,8(sp)
 10425a4:	dac00115 	stw	r11,4(sp)
 10425a8:	10448800 	call	1044880 <__muldf3>
 10425ac:	dac00117 	ldw	r11,4(sp)
 10425b0:	da800217 	ldw	r10,8(sp)
 10425b4:	a809883a 	mov	r4,r21
 10425b8:	580d883a 	mov	r6,r11
 10425bc:	500f883a 	mov	r7,r10
 10425c0:	a00b883a 	mov	r5,r20
 10425c4:	1023883a 	mov	r17,r2
 10425c8:	1821883a 	mov	r16,r3
 10425cc:	10448800 	call	1044880 <__muldf3>
 10425d0:	b80d883a 	mov	r6,r23
 10425d4:	e00f883a 	mov	r7,fp
 10425d8:	b009883a 	mov	r4,r22
 10425dc:	980b883a 	mov	r5,r19
 10425e0:	1029883a 	mov	r20,r2
 10425e4:	1825883a 	mov	r18,r3
 10425e8:	10448800 	call	1044880 <__muldf3>
 10425ec:	a009883a 	mov	r4,r20
 10425f0:	900b883a 	mov	r5,r18
 10425f4:	100d883a 	mov	r6,r2
 10425f8:	180f883a 	mov	r7,r3
 10425fc:	1044f980 	call	1044f98 <__subdf3>
 1042600:	8809883a 	mov	r4,r17
 1042604:	800b883a 	mov	r5,r16
 1042608:	100d883a 	mov	r6,r2
 104260c:	180f883a 	mov	r7,r3
 1042610:	1044f980 	call	1044f98 <__subdf3>
 1042614:	100d883a 	mov	r6,r2
 1042618:	180f883a 	mov	r7,r3
 104261c:	0009883a 	mov	r4,zero
 1042620:	014ffc34 	movhi	r5,16368
 1042624:	1044f980 	call	1044f98 <__subdf3>
 1042628:	00008b06 	br	1042858 <__kernel_cos+0x454>
 104262c:	200d883a 	mov	r6,r4
 1042630:	280f883a 	mov	r7,r5
 1042634:	10448800 	call	1044880 <__muldf3>
 1042638:	01afa234 	movhi	r6,48776
 104263c:	01ef6a74 	movhi	r7,48553
 1042640:	318e3504 	addi	r6,r6,14548
 1042644:	39feba44 	addi	r7,r7,-1303
 1042648:	1009883a 	mov	r4,r2
 104264c:	180b883a 	mov	r5,r3
 1042650:	1025883a 	mov	r18,r2
 1042654:	1823883a 	mov	r17,r3
 1042658:	10448800 	call	1044880 <__muldf3>
 104265c:	01af6d74 	movhi	r6,48565
 1042660:	01cf88b4 	movhi	r7,15906
 1042664:	31ac7104 	addi	r6,r6,-20028
 1042668:	39fba784 	addi	r7,r7,-4450
 104266c:	1009883a 	mov	r4,r2
 1042670:	180b883a 	mov	r5,r3
 1042674:	1043e700 	call	1043e70 <__adddf3>
 1042678:	900d883a 	mov	r6,r18
 104267c:	880f883a 	mov	r7,r17
 1042680:	1009883a 	mov	r4,r2
 1042684:	180b883a 	mov	r5,r3
 1042688:	10448800 	call	1044880 <__muldf3>
 104268c:	01a02734 	movhi	r6,32924
 1042690:	01cfa4b4 	movhi	r7,16018
 1042694:	3194ab44 	addi	r6,r6,21165
 1042698:	39df93c4 	addi	r7,r7,32335
 104269c:	1009883a 	mov	r4,r2
 10426a0:	180b883a 	mov	r5,r3
 10426a4:	1044f980 	call	1044f98 <__subdf3>
 10426a8:	900d883a 	mov	r6,r18
 10426ac:	880f883a 	mov	r7,r17
 10426b0:	1009883a 	mov	r4,r2
 10426b4:	180b883a 	mov	r5,r3
 10426b8:	10448800 	call	1044880 <__muldf3>
 10426bc:	018672f4 	movhi	r6,6603
 10426c0:	01cfbeb4 	movhi	r7,16122
 10426c4:	31856404 	addi	r6,r6,5520
 10426c8:	39c06804 	addi	r7,r7,416
 10426cc:	1009883a 	mov	r4,r2
 10426d0:	180b883a 	mov	r5,r3
 10426d4:	1043e700 	call	1043e70 <__adddf3>
 10426d8:	900d883a 	mov	r6,r18
 10426dc:	880f883a 	mov	r7,r17
 10426e0:	1009883a 	mov	r4,r2
 10426e4:	180b883a 	mov	r5,r3
 10426e8:	10448800 	call	1044880 <__muldf3>
 10426ec:	0185b074 	movhi	r6,5825
 10426f0:	01cfd5f4 	movhi	r7,16215
 10426f4:	31945dc4 	addi	r6,r6,20855
 10426f8:	39f05b04 	addi	r7,r7,-16020
 10426fc:	1009883a 	mov	r4,r2
 1042700:	180b883a 	mov	r5,r3
 1042704:	1044f980 	call	1044f98 <__subdf3>
 1042708:	900d883a 	mov	r6,r18
 104270c:	880f883a 	mov	r7,r17
 1042710:	1009883a 	mov	r4,r2
 1042714:	180b883a 	mov	r5,r3
 1042718:	10448800 	call	1044880 <__muldf3>
 104271c:	01955574 	movhi	r6,21845
 1042720:	01cfe974 	movhi	r7,16293
 1042724:	31955304 	addi	r6,r6,21836
 1042728:	39d55544 	addi	r7,r7,21845
 104272c:	1009883a 	mov	r4,r2
 1042730:	180b883a 	mov	r5,r3
 1042734:	1043e700 	call	1043e70 <__adddf3>
 1042738:	900d883a 	mov	r6,r18
 104273c:	880f883a 	mov	r7,r17
 1042740:	1009883a 	mov	r4,r2
 1042744:	180b883a 	mov	r5,r3
 1042748:	10448800 	call	1044880 <__muldf3>
 104274c:	1013883a 	mov	r9,r2
 1042750:	1017883a 	mov	r11,r2
 1042754:	008ff4f4 	movhi	r2,16339
 1042758:	108ccc84 	addi	r2,r2,13106
 104275c:	1811883a 	mov	r8,r3
 1042760:	902b883a 	mov	r21,r18
 1042764:	8829883a 	mov	r20,r17
 1042768:	1815883a 	mov	r10,r3
 104276c:	143f880e 	bge	r2,r16,1042590 <__alt_data_end+0xfffc2590>
 1042770:	008ffa74 	movhi	r2,16361
 1042774:	14004416 	blt	r2,r16,1042888 <__kernel_cos+0x484>
 1042778:	00bff834 	movhi	r2,65504
 104277c:	80a1883a 	add	r16,r16,r2
 1042780:	000d883a 	mov	r6,zero
 1042784:	800f883a 	mov	r7,r16
 1042788:	0009883a 	mov	r4,zero
 104278c:	014ffc34 	movhi	r5,16368
 1042790:	da400115 	stw	r9,4(sp)
 1042794:	d8c00215 	stw	r3,8(sp)
 1042798:	1044f980 	call	1044f98 <__subdf3>
 104279c:	da000217 	ldw	r8,8(sp)
 10427a0:	da400117 	ldw	r9,4(sp)
 10427a4:	102b883a 	mov	r21,r2
 10427a8:	d8c00015 	stw	r3,0(sp)
 10427ac:	9009883a 	mov	r4,r18
 10427b0:	880b883a 	mov	r5,r17
 10427b4:	000d883a 	mov	r6,zero
 10427b8:	01cff834 	movhi	r7,16352
 10427bc:	da000215 	stw	r8,8(sp)
 10427c0:	da400115 	stw	r9,4(sp)
 10427c4:	10448800 	call	1044880 <__muldf3>
 10427c8:	800f883a 	mov	r7,r16
 10427cc:	000d883a 	mov	r6,zero
 10427d0:	1009883a 	mov	r4,r2
 10427d4:	180b883a 	mov	r5,r3
 10427d8:	1044f980 	call	1044f98 <__subdf3>
 10427dc:	da400117 	ldw	r9,4(sp)
 10427e0:	da000217 	ldw	r8,8(sp)
 10427e4:	9009883a 	mov	r4,r18
 10427e8:	480d883a 	mov	r6,r9
 10427ec:	400f883a 	mov	r7,r8
 10427f0:	880b883a 	mov	r5,r17
 10427f4:	1029883a 	mov	r20,r2
 10427f8:	1821883a 	mov	r16,r3
 10427fc:	10448800 	call	1044880 <__muldf3>
 1042800:	b80d883a 	mov	r6,r23
 1042804:	e00f883a 	mov	r7,fp
 1042808:	b009883a 	mov	r4,r22
 104280c:	980b883a 	mov	r5,r19
 1042810:	1025883a 	mov	r18,r2
 1042814:	1823883a 	mov	r17,r3
 1042818:	10448800 	call	1044880 <__muldf3>
 104281c:	100d883a 	mov	r6,r2
 1042820:	180f883a 	mov	r7,r3
 1042824:	9009883a 	mov	r4,r18
 1042828:	880b883a 	mov	r5,r17
 104282c:	1044f980 	call	1044f98 <__subdf3>
 1042830:	100d883a 	mov	r6,r2
 1042834:	180f883a 	mov	r7,r3
 1042838:	a009883a 	mov	r4,r20
 104283c:	800b883a 	mov	r5,r16
 1042840:	1044f980 	call	1044f98 <__subdf3>
 1042844:	d9400017 	ldw	r5,0(sp)
 1042848:	100d883a 	mov	r6,r2
 104284c:	180f883a 	mov	r7,r3
 1042850:	a809883a 	mov	r4,r21
 1042854:	1044f980 	call	1044f98 <__subdf3>
 1042858:	dfc00c17 	ldw	ra,48(sp)
 104285c:	df000b17 	ldw	fp,44(sp)
 1042860:	ddc00a17 	ldw	r23,40(sp)
 1042864:	dd800917 	ldw	r22,36(sp)
 1042868:	dd400817 	ldw	r21,32(sp)
 104286c:	dd000717 	ldw	r20,28(sp)
 1042870:	dcc00617 	ldw	r19,24(sp)
 1042874:	dc800517 	ldw	r18,20(sp)
 1042878:	dc400417 	ldw	r17,16(sp)
 104287c:	dc000317 	ldw	r16,12(sp)
 1042880:	dec00d04 	addi	sp,sp,52
 1042884:	f800283a 	ret
 1042888:	008ff9f4 	movhi	r2,16359
 104288c:	002b883a 	mov	r21,zero
 1042890:	d8800015 	stw	r2,0(sp)
 1042894:	040ff4b4 	movhi	r16,16338
 1042898:	003fc406 	br	10427ac <__alt_data_end+0xfffc27ac>
 104289c:	0005883a 	mov	r2,zero
 10428a0:	00cffc34 	movhi	r3,16368
 10428a4:	003fec06 	br	1042858 <__alt_data_end+0xfffc2858>

010428a8 <__kernel_rem_pio2>:
 10428a8:	deff5a04 	addi	sp,sp,-664
 10428ac:	da00a617 	ldw	r8,664(sp)
 10428b0:	00c04174 	movhi	r3,261
 10428b4:	18da7c04 	addi	r3,r3,27120
 10428b8:	4205883a 	add	r2,r8,r8
 10428bc:	1085883a 	add	r2,r2,r2
 10428c0:	1885883a 	add	r2,r3,r2
 10428c4:	d9008e15 	stw	r4,568(sp)
 10428c8:	d9408f15 	stw	r5,572(sp)
 10428cc:	313fff44 	addi	r4,r6,-3
 10428d0:	01400604 	movi	r5,24
 10428d4:	dd80a215 	stw	r22,648(sp)
 10428d8:	dc009c15 	stw	r16,624(sp)
 10428dc:	dfc0a515 	stw	ra,660(sp)
 10428e0:	df00a415 	stw	fp,656(sp)
 10428e4:	ddc0a315 	stw	r23,652(sp)
 10428e8:	dd40a115 	stw	r21,644(sp)
 10428ec:	dd00a015 	stw	r20,640(sp)
 10428f0:	dcc09f15 	stw	r19,636(sp)
 10428f4:	dc809e15 	stw	r18,632(sp)
 10428f8:	dc409d15 	stw	r17,628(sp)
 10428fc:	3021883a 	mov	r16,r6
 1042900:	d9c09315 	stw	r7,588(sp)
 1042904:	15800017 	ldw	r22,0(r2)
 1042908:	1043cbc0 	call	1043cbc <__divsi3>
 104290c:	da009317 	ldw	r8,588(sp)
 1042910:	d8809215 	stw	r2,584(sp)
 1042914:	423fffc4 	addi	r8,r8,-1
 1042918:	da008d15 	stw	r8,564(sp)
 104291c:	10033b16 	blt	r2,zero,104360c <__kernel_rem_pio2+0xd64>
 1042920:	da009217 	ldw	r8,584(sp)
 1042924:	d9009217 	ldw	r4,584(sp)
 1042928:	42000044 	addi	r8,r8,1
 104292c:	40fffa24 	muli	r3,r8,-24
 1042930:	da009515 	stw	r8,596(sp)
 1042934:	da008d17 	ldw	r8,564(sp)
 1042938:	1c07883a 	add	r3,r3,r16
 104293c:	d8c09015 	stw	r3,576(sp)
 1042940:	b205883a 	add	r2,r22,r8
 1042944:	2223c83a 	sub	r17,r4,r8
 1042948:	10001016 	blt	r2,zero,104298c <__kernel_rem_pio2+0xe4>
 104294c:	da00a717 	ldw	r8,668(sp)
 1042950:	8c65883a 	add	r18,r17,r17
 1042954:	94a5883a 	add	r18,r18,r18
 1042958:	1445883a 	add	r2,r2,r17
 104295c:	dcc05004 	addi	r19,sp,320
 1042960:	44a5883a 	add	r18,r8,r18
 1042964:	14000044 	addi	r16,r2,1
 1042968:	88015316 	blt	r17,zero,1042eb8 <__kernel_rem_pio2+0x610>
 104296c:	91000017 	ldw	r4,0(r18)
 1042970:	10459140 	call	1045914 <__floatsidf>
 1042974:	98800015 	stw	r2,0(r19)
 1042978:	98c00115 	stw	r3,4(r19)
 104297c:	8c400044 	addi	r17,r17,1
 1042980:	9cc00204 	addi	r19,r19,8
 1042984:	94800104 	addi	r18,r18,4
 1042988:	8c3ff71e 	bne	r17,r16,1042968 <__alt_data_end+0xfffc2968>
 104298c:	b0002816 	blt	r22,zero,1042a30 <__kernel_rem_pio2+0x188>
 1042990:	da008d17 	ldw	r8,564(sp)
 1042994:	b4c00044 	addi	r19,r22,1
 1042998:	982690fa 	slli	r19,r19,3
 104299c:	402490fa 	slli	r18,r8,3
 10429a0:	da008e17 	ldw	r8,568(sp)
 10429a4:	d8805004 	addi	r2,sp,320
 10429a8:	94000204 	addi	r16,r18,8
 10429ac:	d823883a 	mov	r17,sp
 10429b0:	14a5883a 	add	r18,r2,r18
 10429b4:	dcef883a 	add	r23,sp,r19
 10429b8:	4421883a 	add	r16,r8,r16
 10429bc:	dd809115 	stw	r22,580(sp)
 10429c0:	4039883a 	mov	fp,r8
 10429c4:	da008d17 	ldw	r8,564(sp)
 10429c8:	40016016 	blt	r8,zero,1042f4c <__kernel_rem_pio2+0x6a4>
 10429cc:	e027883a 	mov	r19,fp
 10429d0:	9029883a 	mov	r20,r18
 10429d4:	002d883a 	mov	r22,zero
 10429d8:	002b883a 	mov	r21,zero
 10429dc:	a1800017 	ldw	r6,0(r20)
 10429e0:	a1c00117 	ldw	r7,4(r20)
 10429e4:	99000017 	ldw	r4,0(r19)
 10429e8:	99400117 	ldw	r5,4(r19)
 10429ec:	9cc00204 	addi	r19,r19,8
 10429f0:	a53ffe04 	addi	r20,r20,-8
 10429f4:	10448800 	call	1044880 <__muldf3>
 10429f8:	b009883a 	mov	r4,r22
 10429fc:	a80b883a 	mov	r5,r21
 1042a00:	100d883a 	mov	r6,r2
 1042a04:	180f883a 	mov	r7,r3
 1042a08:	1043e700 	call	1043e70 <__adddf3>
 1042a0c:	102d883a 	mov	r22,r2
 1042a10:	182b883a 	mov	r21,r3
 1042a14:	9c3ff11e 	bne	r19,r16,10429dc <__alt_data_end+0xfffc29dc>
 1042a18:	8d800015 	stw	r22,0(r17)
 1042a1c:	8d400115 	stw	r21,4(r17)
 1042a20:	8c400204 	addi	r17,r17,8
 1042a24:	94800204 	addi	r18,r18,8
 1042a28:	8dffe61e 	bne	r17,r23,10429c4 <__alt_data_end+0xfffc29c4>
 1042a2c:	dd809117 	ldw	r22,580(sp)
 1042a30:	00d00034 	movhi	r3,16384
 1042a34:	da009317 	ldw	r8,588(sp)
 1042a38:	18ffff84 	addi	r3,r3,-2
 1042a3c:	b0c7883a 	add	r3,r22,r3
 1042a40:	18c7883a 	add	r3,r3,r3
 1042a44:	402090fa 	slli	r16,r8,3
 1042a48:	18c7883a 	add	r3,r3,r3
 1042a4c:	da007804 	addi	r8,sp,480
 1042a50:	40d1883a 	add	r8,r8,r3
 1042a54:	b0bfffc4 	addi	r2,r22,-1
 1042a58:	da009615 	stw	r8,600(sp)
 1042a5c:	da008e17 	ldw	r8,568(sp)
 1042a60:	1085883a 	add	r2,r2,r2
 1042a64:	1085883a 	add	r2,r2,r2
 1042a68:	19000104 	addi	r4,r3,4
 1042a6c:	d885883a 	add	r2,sp,r2
 1042a70:	4421883a 	add	r16,r8,r16
 1042a74:	da007804 	addi	r8,sp,480
 1042a78:	4111883a 	add	r8,r8,r4
 1042a7c:	10807804 	addi	r2,r2,480
 1042a80:	da009715 	stw	r8,604(sp)
 1042a84:	b025883a 	mov	r18,r22
 1042a88:	d8809815 	stw	r2,608(sp)
 1042a8c:	dd809415 	stw	r22,592(sp)
 1042a90:	900490fa 	slli	r2,r18,3
 1042a94:	d885883a 	add	r2,sp,r2
 1042a98:	17000017 	ldw	fp,0(r2)
 1042a9c:	15400117 	ldw	r21,4(r2)
 1042aa0:	04802b0e 	bge	zero,r18,1042b50 <__kernel_rem_pio2+0x2a8>
 1042aa4:	00880034 	movhi	r2,8192
 1042aa8:	10bfffc4 	addi	r2,r2,-1
 1042aac:	90a9883a 	add	r20,r18,r2
 1042ab0:	a02890fa 	slli	r20,r20,3
 1042ab4:	dc407804 	addi	r17,sp,480
 1042ab8:	dcfffe04 	addi	r19,sp,-8
 1042abc:	dd29883a 	add	r20,sp,r20
 1042ac0:	000d883a 	mov	r6,zero
 1042ac4:	01cf9c34 	movhi	r7,15984
 1042ac8:	e009883a 	mov	r4,fp
 1042acc:	a80b883a 	mov	r5,r21
 1042ad0:	10448800 	call	1044880 <__muldf3>
 1042ad4:	180b883a 	mov	r5,r3
 1042ad8:	1009883a 	mov	r4,r2
 1042adc:	10458940 	call	1045894 <__fixdfsi>
 1042ae0:	1009883a 	mov	r4,r2
 1042ae4:	10459140 	call	1045914 <__floatsidf>
 1042ae8:	000d883a 	mov	r6,zero
 1042aec:	01d05c34 	movhi	r7,16752
 1042af0:	1009883a 	mov	r4,r2
 1042af4:	180b883a 	mov	r5,r3
 1042af8:	102f883a 	mov	r23,r2
 1042afc:	182d883a 	mov	r22,r3
 1042b00:	10448800 	call	1044880 <__muldf3>
 1042b04:	100d883a 	mov	r6,r2
 1042b08:	180f883a 	mov	r7,r3
 1042b0c:	e009883a 	mov	r4,fp
 1042b10:	a80b883a 	mov	r5,r21
 1042b14:	1044f980 	call	1044f98 <__subdf3>
 1042b18:	180b883a 	mov	r5,r3
 1042b1c:	1009883a 	mov	r4,r2
 1042b20:	10458940 	call	1045894 <__fixdfsi>
 1042b24:	a1800017 	ldw	r6,0(r20)
 1042b28:	a1c00117 	ldw	r7,4(r20)
 1042b2c:	88800015 	stw	r2,0(r17)
 1042b30:	b809883a 	mov	r4,r23
 1042b34:	b00b883a 	mov	r5,r22
 1042b38:	1043e700 	call	1043e70 <__adddf3>
 1042b3c:	a53ffe04 	addi	r20,r20,-8
 1042b40:	1039883a 	mov	fp,r2
 1042b44:	182b883a 	mov	r21,r3
 1042b48:	8c400104 	addi	r17,r17,4
 1042b4c:	a4ffdc1e 	bne	r20,r19,1042ac0 <__alt_data_end+0xfffc2ac0>
 1042b50:	d9809017 	ldw	r6,576(sp)
 1042b54:	a80b883a 	mov	r5,r21
 1042b58:	e009883a 	mov	r4,fp
 1042b5c:	1043b040 	call	1043b04 <scalbn>
 1042b60:	000d883a 	mov	r6,zero
 1042b64:	01cff034 	movhi	r7,16320
 1042b68:	1009883a 	mov	r4,r2
 1042b6c:	180b883a 	mov	r5,r3
 1042b70:	1027883a 	mov	r19,r2
 1042b74:	1823883a 	mov	r17,r3
 1042b78:	10448800 	call	1044880 <__muldf3>
 1042b7c:	1009883a 	mov	r4,r2
 1042b80:	180b883a 	mov	r5,r3
 1042b84:	10439180 	call	1043918 <floor>
 1042b88:	000d883a 	mov	r6,zero
 1042b8c:	01d00834 	movhi	r7,16416
 1042b90:	1009883a 	mov	r4,r2
 1042b94:	180b883a 	mov	r5,r3
 1042b98:	10448800 	call	1044880 <__muldf3>
 1042b9c:	100d883a 	mov	r6,r2
 1042ba0:	180f883a 	mov	r7,r3
 1042ba4:	9809883a 	mov	r4,r19
 1042ba8:	880b883a 	mov	r5,r17
 1042bac:	1044f980 	call	1044f98 <__subdf3>
 1042bb0:	180b883a 	mov	r5,r3
 1042bb4:	1009883a 	mov	r4,r2
 1042bb8:	1827883a 	mov	r19,r3
 1042bbc:	1029883a 	mov	r20,r2
 1042bc0:	10458940 	call	1045894 <__fixdfsi>
 1042bc4:	1009883a 	mov	r4,r2
 1042bc8:	1023883a 	mov	r17,r2
 1042bcc:	10459140 	call	1045914 <__floatsidf>
 1042bd0:	a009883a 	mov	r4,r20
 1042bd4:	100d883a 	mov	r6,r2
 1042bd8:	180f883a 	mov	r7,r3
 1042bdc:	980b883a 	mov	r5,r19
 1042be0:	1044f980 	call	1044f98 <__subdf3>
 1042be4:	d9009017 	ldw	r4,576(sp)
 1042be8:	1013883a 	mov	r9,r2
 1042bec:	102b883a 	mov	r21,r2
 1042bf0:	1811883a 	mov	r8,r3
 1042bf4:	0100b30e 	bge	zero,r4,1042ec4 <__kernel_rem_pio2+0x61c>
 1042bf8:	90bfffc4 	addi	r2,r18,-1
 1042bfc:	1085883a 	add	r2,r2,r2
 1042c00:	1085883a 	add	r2,r2,r2
 1042c04:	d885883a 	add	r2,sp,r2
 1042c08:	10807804 	addi	r2,r2,480
 1042c0c:	d9809017 	ldw	r6,576(sp)
 1042c10:	11400017 	ldw	r5,0(r2)
 1042c14:	01000604 	movi	r4,24
 1042c18:	2189c83a 	sub	r4,r4,r6
 1042c1c:	290dd83a 	sra	r6,r5,r4
 1042c20:	d9c09017 	ldw	r7,576(sp)
 1042c24:	04c005c4 	movi	r19,23
 1042c28:	3108983a 	sll	r4,r6,r4
 1042c2c:	99e7c83a 	sub	r19,r19,r7
 1042c30:	89a3883a 	add	r17,r17,r6
 1042c34:	2909c83a 	sub	r4,r5,r4
 1042c38:	24e7d83a 	sra	r19,r4,r19
 1042c3c:	11000015 	stw	r4,0(r2)
 1042c40:	04c02a0e 	bge	zero,r19,1042cec <__kernel_rem_pio2+0x444>
 1042c44:	8c400044 	addi	r17,r17,1
 1042c48:	0481570e 	bge	zero,r18,10431a8 <__kernel_rem_pio2+0x900>
 1042c4c:	02804034 	movhi	r10,256
 1042c50:	52bfffc4 	addi	r10,r10,-1
 1042c54:	d8807804 	addi	r2,sp,480
 1042c58:	000b883a 	mov	r5,zero
 1042c5c:	0029883a 	mov	r20,zero
 1042c60:	01c04034 	movhi	r7,256
 1042c64:	00000706 	br	1042c84 <__kernel_rem_pio2+0x3dc>
 1042c68:	390dc83a 	sub	r6,r7,r4
 1042c6c:	20000226 	beq	r4,zero,1042c78 <__kernel_rem_pio2+0x3d0>
 1042c70:	11800015 	stw	r6,0(r2)
 1042c74:	05000044 	movi	r20,1
 1042c78:	29400044 	addi	r5,r5,1
 1042c7c:	10800104 	addi	r2,r2,4
 1042c80:	2c80080e 	bge	r5,r18,1042ca4 <__kernel_rem_pio2+0x3fc>
 1042c84:	11000017 	ldw	r4,0(r2)
 1042c88:	a03ff726 	beq	r20,zero,1042c68 <__alt_data_end+0xfffc2c68>
 1042c8c:	5109c83a 	sub	r4,r10,r4
 1042c90:	11000015 	stw	r4,0(r2)
 1042c94:	29400044 	addi	r5,r5,1
 1042c98:	05000044 	movi	r20,1
 1042c9c:	10800104 	addi	r2,r2,4
 1042ca0:	2cbff816 	blt	r5,r18,1042c84 <__alt_data_end+0xfffc2c84>
 1042ca4:	d9009017 	ldw	r4,576(sp)
 1042ca8:	01000e0e 	bge	zero,r4,1042ce4 <__kernel_rem_pio2+0x43c>
 1042cac:	00800044 	movi	r2,1
 1042cb0:	20808d26 	beq	r4,r2,1042ee8 <__kernel_rem_pio2+0x640>
 1042cb4:	00800084 	movi	r2,2
 1042cb8:	20800a1e 	bne	r4,r2,1042ce4 <__kernel_rem_pio2+0x43c>
 1042cbc:	90bfffc4 	addi	r2,r18,-1
 1042cc0:	1085883a 	add	r2,r2,r2
 1042cc4:	1085883a 	add	r2,r2,r2
 1042cc8:	d885883a 	add	r2,sp,r2
 1042ccc:	10807804 	addi	r2,r2,480
 1042cd0:	11400017 	ldw	r5,0(r2)
 1042cd4:	01001034 	movhi	r4,64
 1042cd8:	213fffc4 	addi	r4,r4,-1
 1042cdc:	2908703a 	and	r4,r5,r4
 1042ce0:	11000015 	stw	r4,0(r2)
 1042ce4:	00800084 	movi	r2,2
 1042ce8:	98805d26 	beq	r19,r2,1042e60 <__kernel_rem_pio2+0x5b8>
 1042cec:	400b883a 	mov	r5,r8
 1042cf0:	000d883a 	mov	r6,zero
 1042cf4:	000f883a 	mov	r7,zero
 1042cf8:	a809883a 	mov	r4,r21
 1042cfc:	da009b15 	stw	r8,620(sp)
 1042d00:	104471c0 	call	104471c <__eqdf2>
 1042d04:	da009b17 	ldw	r8,620(sp)
 1042d08:	10012b1e 	bne	r2,zero,10431b8 <__kernel_rem_pio2+0x910>
 1042d0c:	da009417 	ldw	r8,592(sp)
 1042d10:	917fffc4 	addi	r5,r18,-1
 1042d14:	2a000e16 	blt	r5,r8,1042d50 <__kernel_rem_pio2+0x4a8>
 1042d18:	00900034 	movhi	r2,16384
 1042d1c:	10bfffc4 	addi	r2,r2,-1
 1042d20:	9085883a 	add	r2,r18,r2
 1042d24:	1085883a 	add	r2,r2,r2
 1042d28:	d9809717 	ldw	r6,604(sp)
 1042d2c:	1085883a 	add	r2,r2,r2
 1042d30:	d9007804 	addi	r4,sp,480
 1042d34:	0007883a 	mov	r3,zero
 1042d38:	2085883a 	add	r2,r4,r2
 1042d3c:	11000017 	ldw	r4,0(r2)
 1042d40:	10bfff04 	addi	r2,r2,-4
 1042d44:	1906b03a 	or	r3,r3,r4
 1042d48:	11bffc1e 	bne	r2,r6,1042d3c <__alt_data_end+0xfffc2d3c>
 1042d4c:	1800821e 	bne	r3,zero,1042f58 <__kernel_rem_pio2+0x6b0>
 1042d50:	da009817 	ldw	r8,608(sp)
 1042d54:	40800017 	ldw	r2,0(r8)
 1042d58:	1001151e 	bne	r2,zero,10431b0 <__kernel_rem_pio2+0x908>
 1042d5c:	d8809617 	ldw	r2,600(sp)
 1042d60:	05000044 	movi	r20,1
 1042d64:	10bfff04 	addi	r2,r2,-4
 1042d68:	10c00117 	ldw	r3,4(r2)
 1042d6c:	a5000044 	addi	r20,r20,1
 1042d70:	183ffc26 	beq	r3,zero,1042d64 <__alt_data_end+0xfffc2d64>
 1042d74:	9529883a 	add	r20,r18,r20
 1042d78:	90800044 	addi	r2,r18,1
 1042d7c:	dd009115 	stw	r20,580(sp)
 1042d80:	a0803216 	blt	r20,r2,1042e4c <__kernel_rem_pio2+0x5a4>
 1042d84:	da009317 	ldw	r8,588(sp)
 1042d88:	d8c09117 	ldw	r3,580(sp)
 1042d8c:	44a3883a 	add	r17,r8,r18
 1042d90:	da009217 	ldw	r8,584(sp)
 1042d94:	882290fa 	slli	r17,r17,3
 1042d98:	40a5883a 	add	r18,r8,r2
 1042d9c:	da009517 	ldw	r8,596(sp)
 1042da0:	100490fa 	slli	r2,r2,3
 1042da4:	94a5883a 	add	r18,r18,r18
 1042da8:	40eb883a 	add	r21,r8,r3
 1042dac:	da00a717 	ldw	r8,668(sp)
 1042db0:	ad6b883a 	add	r21,r21,r21
 1042db4:	94a5883a 	add	r18,r18,r18
 1042db8:	ad6b883a 	add	r21,r21,r21
 1042dbc:	d8c05004 	addi	r3,sp,320
 1042dc0:	44a5883a 	add	r18,r8,r18
 1042dc4:	1c63883a 	add	r17,r3,r17
 1042dc8:	d8a7883a 	add	r19,sp,r2
 1042dcc:	456b883a 	add	r21,r8,r21
 1042dd0:	91000017 	ldw	r4,0(r18)
 1042dd4:	10459140 	call	1045914 <__floatsidf>
 1042dd8:	da008d17 	ldw	r8,564(sp)
 1042ddc:	88800015 	stw	r2,0(r17)
 1042de0:	88c00115 	stw	r3,4(r17)
 1042de4:	40001b16 	blt	r8,zero,1042e54 <__kernel_rem_pio2+0x5ac>
 1042de8:	dd008e17 	ldw	r20,568(sp)
 1042dec:	882d883a 	mov	r22,r17
 1042df0:	002f883a 	mov	r23,zero
 1042df4:	0039883a 	mov	fp,zero
 1042df8:	b1800017 	ldw	r6,0(r22)
 1042dfc:	b1c00117 	ldw	r7,4(r22)
 1042e00:	a1000017 	ldw	r4,0(r20)
 1042e04:	a1400117 	ldw	r5,4(r20)
 1042e08:	a5000204 	addi	r20,r20,8
 1042e0c:	b5bffe04 	addi	r22,r22,-8
 1042e10:	10448800 	call	1044880 <__muldf3>
 1042e14:	b809883a 	mov	r4,r23
 1042e18:	e00b883a 	mov	r5,fp
 1042e1c:	100d883a 	mov	r6,r2
 1042e20:	180f883a 	mov	r7,r3
 1042e24:	1043e700 	call	1043e70 <__adddf3>
 1042e28:	102f883a 	mov	r23,r2
 1042e2c:	1839883a 	mov	fp,r3
 1042e30:	a43ff11e 	bne	r20,r16,1042df8 <__alt_data_end+0xfffc2df8>
 1042e34:	9dc00015 	stw	r23,0(r19)
 1042e38:	9f000115 	stw	fp,4(r19)
 1042e3c:	94800104 	addi	r18,r18,4
 1042e40:	8c400204 	addi	r17,r17,8
 1042e44:	9cc00204 	addi	r19,r19,8
 1042e48:	957fe11e 	bne	r18,r21,1042dd0 <__alt_data_end+0xfffc2dd0>
 1042e4c:	dc809117 	ldw	r18,580(sp)
 1042e50:	003f0f06 	br	1042a90 <__alt_data_end+0xfffc2a90>
 1042e54:	002f883a 	mov	r23,zero
 1042e58:	0039883a 	mov	fp,zero
 1042e5c:	003ff506 	br	1042e34 <__alt_data_end+0xfffc2e34>
 1042e60:	480d883a 	mov	r6,r9
 1042e64:	180f883a 	mov	r7,r3
 1042e68:	0009883a 	mov	r4,zero
 1042e6c:	014ffc34 	movhi	r5,16368
 1042e70:	1044f980 	call	1044f98 <__subdf3>
 1042e74:	102b883a 	mov	r21,r2
 1042e78:	1811883a 	mov	r8,r3
 1042e7c:	a03f9b26 	beq	r20,zero,1042cec <__alt_data_end+0xfffc2cec>
 1042e80:	d9809017 	ldw	r6,576(sp)
 1042e84:	0009883a 	mov	r4,zero
 1042e88:	014ffc34 	movhi	r5,16368
 1042e8c:	d8c09b15 	stw	r3,620(sp)
 1042e90:	1043b040 	call	1043b04 <scalbn>
 1042e94:	da009b17 	ldw	r8,620(sp)
 1042e98:	a809883a 	mov	r4,r21
 1042e9c:	100d883a 	mov	r6,r2
 1042ea0:	400b883a 	mov	r5,r8
 1042ea4:	180f883a 	mov	r7,r3
 1042ea8:	1044f980 	call	1044f98 <__subdf3>
 1042eac:	102b883a 	mov	r21,r2
 1042eb0:	1811883a 	mov	r8,r3
 1042eb4:	003f8d06 	br	1042cec <__alt_data_end+0xfffc2cec>
 1042eb8:	0005883a 	mov	r2,zero
 1042ebc:	0007883a 	mov	r3,zero
 1042ec0:	003eac06 	br	1042974 <__alt_data_end+0xfffc2974>
 1042ec4:	d8809017 	ldw	r2,576(sp)
 1042ec8:	1000121e 	bne	r2,zero,1042f14 <__kernel_rem_pio2+0x66c>
 1042ecc:	90bfffc4 	addi	r2,r18,-1
 1042ed0:	1085883a 	add	r2,r2,r2
 1042ed4:	1085883a 	add	r2,r2,r2
 1042ed8:	d885883a 	add	r2,sp,r2
 1042edc:	14c07817 	ldw	r19,480(r2)
 1042ee0:	9827d5fa 	srai	r19,r19,23
 1042ee4:	003f5606 	br	1042c40 <__alt_data_end+0xfffc2c40>
 1042ee8:	90bfffc4 	addi	r2,r18,-1
 1042eec:	1085883a 	add	r2,r2,r2
 1042ef0:	1085883a 	add	r2,r2,r2
 1042ef4:	d885883a 	add	r2,sp,r2
 1042ef8:	10807804 	addi	r2,r2,480
 1042efc:	11000017 	ldw	r4,0(r2)
 1042f00:	01402034 	movhi	r5,128
 1042f04:	297fffc4 	addi	r5,r5,-1
 1042f08:	2148703a 	and	r4,r4,r5
 1042f0c:	11000015 	stw	r4,0(r2)
 1042f10:	003f7406 	br	1042ce4 <__alt_data_end+0xfffc2ce4>
 1042f14:	4809883a 	mov	r4,r9
 1042f18:	180b883a 	mov	r5,r3
 1042f1c:	000d883a 	mov	r6,zero
 1042f20:	01cff834 	movhi	r7,16352
 1042f24:	d8c09a15 	stw	r3,616(sp)
 1042f28:	d8c09b15 	stw	r3,620(sp)
 1042f2c:	da409915 	stw	r9,612(sp)
 1042f30:	10447a40 	call	10447a4 <__gedf2>
 1042f34:	d8c09a17 	ldw	r3,616(sp)
 1042f38:	da009b17 	ldw	r8,620(sp)
 1042f3c:	da409917 	ldw	r9,612(sp)
 1042f40:	1000920e 	bge	r2,zero,104318c <__kernel_rem_pio2+0x8e4>
 1042f44:	0027883a 	mov	r19,zero
 1042f48:	003f6806 	br	1042cec <__alt_data_end+0xfffc2cec>
 1042f4c:	002d883a 	mov	r22,zero
 1042f50:	002b883a 	mov	r21,zero
 1042f54:	003eb006 	br	1042a18 <__alt_data_end+0xfffc2a18>
 1042f58:	2945883a 	add	r2,r5,r5
 1042f5c:	da009017 	ldw	r8,576(sp)
 1042f60:	1085883a 	add	r2,r2,r2
 1042f64:	d885883a 	add	r2,sp,r2
 1042f68:	10807817 	ldw	r2,480(r2)
 1042f6c:	423ffa04 	addi	r8,r8,-24
 1042f70:	dc409115 	stw	r17,580(sp)
 1042f74:	dcc08d15 	stw	r19,564(sp)
 1042f78:	da009015 	stw	r8,576(sp)
 1042f7c:	dd809417 	ldw	r22,592(sp)
 1042f80:	2823883a 	mov	r17,r5
 1042f84:	10000e1e 	bne	r2,zero,1042fc0 <__kernel_rem_pio2+0x718>
 1042f88:	00900034 	movhi	r2,16384
 1042f8c:	10bfffc4 	addi	r2,r2,-1
 1042f90:	2885883a 	add	r2,r5,r2
 1042f94:	1085883a 	add	r2,r2,r2
 1042f98:	d8c07804 	addi	r3,sp,480
 1042f9c:	1085883a 	add	r2,r2,r2
 1042fa0:	1885883a 	add	r2,r3,r2
 1042fa4:	4007883a 	mov	r3,r8
 1042fa8:	10bfff04 	addi	r2,r2,-4
 1042fac:	11000117 	ldw	r4,4(r2)
 1042fb0:	8c7fffc4 	addi	r17,r17,-1
 1042fb4:	18fffa04 	addi	r3,r3,-24
 1042fb8:	203ffb26 	beq	r4,zero,1042fa8 <__alt_data_end+0xfffc2fa8>
 1042fbc:	d8c09015 	stw	r3,576(sp)
 1042fc0:	d9809017 	ldw	r6,576(sp)
 1042fc4:	0009883a 	mov	r4,zero
 1042fc8:	014ffc34 	movhi	r5,16368
 1042fcc:	1043b040 	call	1043b04 <scalbn>
 1042fd0:	1029883a 	mov	r20,r2
 1042fd4:	182b883a 	mov	r21,r3
 1042fd8:	88018416 	blt	r17,zero,10435ec <__kernel_rem_pio2+0xd44>
 1042fdc:	881090fa 	slli	r8,r17,3
 1042fe0:	d8c07804 	addi	r3,sp,480
 1042fe4:	da008e15 	stw	r8,568(sp)
 1042fe8:	d8808e17 	ldw	r2,568(sp)
 1042fec:	8c51883a 	add	r8,r17,r17
 1042ff0:	4211883a 	add	r8,r8,r8
 1042ff4:	d8a1883a 	add	r16,sp,r2
 1042ff8:	1a25883a 	add	r18,r3,r8
 1042ffc:	da3ffe04 	addi	r8,sp,-8
 1043000:	da008c15 	stw	r8,560(sp)
 1043004:	8039883a 	mov	fp,r16
 1043008:	91000017 	ldw	r4,0(r18)
 104300c:	e73ffe04 	addi	fp,fp,-8
 1043010:	94bfff04 	addi	r18,r18,-4
 1043014:	10459140 	call	1045914 <__floatsidf>
 1043018:	a00d883a 	mov	r6,r20
 104301c:	a80f883a 	mov	r7,r21
 1043020:	1009883a 	mov	r4,r2
 1043024:	180b883a 	mov	r5,r3
 1043028:	10448800 	call	1044880 <__muldf3>
 104302c:	a009883a 	mov	r4,r20
 1043030:	a80b883a 	mov	r5,r21
 1043034:	e0800215 	stw	r2,8(fp)
 1043038:	e0c00315 	stw	r3,12(fp)
 104303c:	000d883a 	mov	r6,zero
 1043040:	01cf9c34 	movhi	r7,15984
 1043044:	10448800 	call	1044880 <__muldf3>
 1043048:	da008c17 	ldw	r8,560(sp)
 104304c:	1029883a 	mov	r20,r2
 1043050:	182b883a 	mov	r21,r3
 1043054:	e23fec1e 	bne	fp,r8,1043008 <__alt_data_end+0xfffc3008>
 1043058:	0029883a 	mov	r20,zero
 104305c:	b0004f16 	blt	r22,zero,104319c <__kernel_rem_pio2+0x8f4>
 1043060:	05404174 	movhi	r21,261
 1043064:	014ffe74 	movhi	r5,16377
 1043068:	ad5a6e04 	addi	r21,r21,27064
 104306c:	8027883a 	mov	r19,r16
 1043070:	01100034 	movhi	r4,16384
 1043074:	29487ec4 	addi	r5,r5,8699
 1043078:	0039883a 	mov	fp,zero
 104307c:	002f883a 	mov	r23,zero
 1043080:	0025883a 	mov	r18,zero
 1043084:	00000506 	br	104309c <__kernel_rem_pio2+0x7f4>
 1043088:	9cc00204 	addi	r19,r19,8
 104308c:	a4800f16 	blt	r20,r18,10430cc <__kernel_rem_pio2+0x824>
 1043090:	a9000017 	ldw	r4,0(r21)
 1043094:	a9400117 	ldw	r5,4(r21)
 1043098:	ad400204 	addi	r21,r21,8
 104309c:	99800017 	ldw	r6,0(r19)
 10430a0:	99c00117 	ldw	r7,4(r19)
 10430a4:	94800044 	addi	r18,r18,1
 10430a8:	10448800 	call	1044880 <__muldf3>
 10430ac:	e009883a 	mov	r4,fp
 10430b0:	b80b883a 	mov	r5,r23
 10430b4:	100d883a 	mov	r6,r2
 10430b8:	180f883a 	mov	r7,r3
 10430bc:	1043e700 	call	1043e70 <__adddf3>
 10430c0:	1039883a 	mov	fp,r2
 10430c4:	182f883a 	mov	r23,r3
 10430c8:	b4bfef0e 	bge	r22,r18,1043088 <__alt_data_end+0xfffc3088>
 10430cc:	a00490fa 	slli	r2,r20,3
 10430d0:	da008c17 	ldw	r8,560(sp)
 10430d4:	843ffe04 	addi	r16,r16,-8
 10430d8:	d885883a 	add	r2,sp,r2
 10430dc:	10802804 	addi	r2,r2,160
 10430e0:	17000015 	stw	fp,0(r2)
 10430e4:	15c00115 	stw	r23,4(r2)
 10430e8:	a5000044 	addi	r20,r20,1
 10430ec:	823fdb1e 	bne	r16,r8,104305c <__alt_data_end+0xfffc305c>
 10430f0:	da00a617 	ldw	r8,664(sp)
 10430f4:	00800084 	movi	r2,2
 10430f8:	12006616 	blt	r2,r8,1043294 <__kernel_rem_pio2+0x9ec>
 10430fc:	0200de16 	blt	zero,r8,1043478 <__kernel_rem_pio2+0xbd0>
 1043100:	4000141e 	bne	r8,zero,1043154 <__kernel_rem_pio2+0x8ac>
 1043104:	da008e17 	ldw	r8,568(sp)
 1043108:	d8802804 	addi	r2,sp,160
 104310c:	0007883a 	mov	r3,zero
 1043110:	1225883a 	add	r18,r2,r8
 1043114:	043fffc4 	movi	r16,-1
 1043118:	0005883a 	mov	r2,zero
 104311c:	91800017 	ldw	r6,0(r18)
 1043120:	91c00117 	ldw	r7,4(r18)
 1043124:	1009883a 	mov	r4,r2
 1043128:	180b883a 	mov	r5,r3
 104312c:	8c7fffc4 	addi	r17,r17,-1
 1043130:	1043e700 	call	1043e70 <__adddf3>
 1043134:	94bffe04 	addi	r18,r18,-8
 1043138:	8c3ff81e 	bne	r17,r16,104311c <__alt_data_end+0xfffc311c>
 104313c:	da008d17 	ldw	r8,564(sp)
 1043140:	40000126 	beq	r8,zero,1043148 <__kernel_rem_pio2+0x8a0>
 1043144:	18e0003c 	xorhi	r3,r3,32768
 1043148:	da008f17 	ldw	r8,572(sp)
 104314c:	40800015 	stw	r2,0(r8)
 1043150:	40c00115 	stw	r3,4(r8)
 1043154:	da009117 	ldw	r8,580(sp)
 1043158:	408001cc 	andi	r2,r8,7
 104315c:	dfc0a517 	ldw	ra,660(sp)
 1043160:	df00a417 	ldw	fp,656(sp)
 1043164:	ddc0a317 	ldw	r23,652(sp)
 1043168:	dd80a217 	ldw	r22,648(sp)
 104316c:	dd40a117 	ldw	r21,644(sp)
 1043170:	dd00a017 	ldw	r20,640(sp)
 1043174:	dcc09f17 	ldw	r19,636(sp)
 1043178:	dc809e17 	ldw	r18,632(sp)
 104317c:	dc409d17 	ldw	r17,628(sp)
 1043180:	dc009c17 	ldw	r16,624(sp)
 1043184:	dec0a604 	addi	sp,sp,664
 1043188:	f800283a 	ret
 104318c:	8c400044 	addi	r17,r17,1
 1043190:	04810d0e 	bge	zero,r18,10435c8 <__kernel_rem_pio2+0xd20>
 1043194:	04c00084 	movi	r19,2
 1043198:	003eac06 	br	1042c4c <__alt_data_end+0xfffc2c4c>
 104319c:	0039883a 	mov	fp,zero
 10431a0:	002f883a 	mov	r23,zero
 10431a4:	003fc906 	br	10430cc <__alt_data_end+0xfffc30cc>
 10431a8:	0029883a 	mov	r20,zero
 10431ac:	003ebd06 	br	1042ca4 <__alt_data_end+0xfffc2ca4>
 10431b0:	05000044 	movi	r20,1
 10431b4:	003eef06 	br	1042d74 <__alt_data_end+0xfffc2d74>
 10431b8:	4029883a 	mov	r20,r8
 10431bc:	da009017 	ldw	r8,576(sp)
 10431c0:	a809883a 	mov	r4,r21
 10431c4:	a00b883a 	mov	r5,r20
 10431c8:	020dc83a 	sub	r6,zero,r8
 10431cc:	dc409115 	stw	r17,580(sp)
 10431d0:	dd809417 	ldw	r22,592(sp)
 10431d4:	dcc08d15 	stw	r19,564(sp)
 10431d8:	1043b040 	call	1043b04 <scalbn>
 10431dc:	000d883a 	mov	r6,zero
 10431e0:	01d05c34 	movhi	r7,16752
 10431e4:	1009883a 	mov	r4,r2
 10431e8:	180b883a 	mov	r5,r3
 10431ec:	102b883a 	mov	r21,r2
 10431f0:	1823883a 	mov	r17,r3
 10431f4:	10447a40 	call	10447a4 <__gedf2>
 10431f8:	1000e916 	blt	r2,zero,10435a0 <__kernel_rem_pio2+0xcf8>
 10431fc:	000d883a 	mov	r6,zero
 1043200:	01cf9c34 	movhi	r7,15984
 1043204:	880b883a 	mov	r5,r17
 1043208:	a809883a 	mov	r4,r21
 104320c:	10448800 	call	1044880 <__muldf3>
 1043210:	180b883a 	mov	r5,r3
 1043214:	1009883a 	mov	r4,r2
 1043218:	10458940 	call	1045894 <__fixdfsi>
 104321c:	1029883a 	mov	r20,r2
 1043220:	9485883a 	add	r2,r18,r18
 1043224:	1085883a 	add	r2,r2,r2
 1043228:	a009883a 	mov	r4,r20
 104322c:	d8a1883a 	add	r16,sp,r2
 1043230:	10459140 	call	1045914 <__floatsidf>
 1043234:	000d883a 	mov	r6,zero
 1043238:	01d05c34 	movhi	r7,16752
 104323c:	1009883a 	mov	r4,r2
 1043240:	180b883a 	mov	r5,r3
 1043244:	10448800 	call	1044880 <__muldf3>
 1043248:	880b883a 	mov	r5,r17
 104324c:	100d883a 	mov	r6,r2
 1043250:	180f883a 	mov	r7,r3
 1043254:	a809883a 	mov	r4,r21
 1043258:	1044f980 	call	1044f98 <__subdf3>
 104325c:	180b883a 	mov	r5,r3
 1043260:	1009883a 	mov	r4,r2
 1043264:	10458940 	call	1045894 <__fixdfsi>
 1043268:	da009017 	ldw	r8,576(sp)
 104326c:	94400044 	addi	r17,r18,1
 1043270:	8c47883a 	add	r3,r17,r17
 1043274:	84007804 	addi	r16,r16,480
 1043278:	18c7883a 	add	r3,r3,r3
 104327c:	80800015 	stw	r2,0(r16)
 1043280:	d8c7883a 	add	r3,sp,r3
 1043284:	42000604 	addi	r8,r8,24
 1043288:	da009015 	stw	r8,576(sp)
 104328c:	1d007815 	stw	r20,480(r3)
 1043290:	003f4b06 	br	1042fc0 <__alt_data_end+0xfffc2fc0>
 1043294:	da00a617 	ldw	r8,664(sp)
 1043298:	008000c4 	movi	r2,3
 104329c:	40bfad1e 	bne	r8,r2,1043154 <__alt_data_end+0xfffc3154>
 10432a0:	0440bc0e 	bge	zero,r17,1043594 <__kernel_rem_pio2+0xcec>
 10432a4:	da008e17 	ldw	r8,568(sp)
 10432a8:	882090fa 	slli	r16,r17,3
 10432ac:	dd402804 	addi	r21,sp,160
 10432b0:	da05883a 	add	r2,sp,r8
 10432b4:	10802804 	addi	r2,r2,160
 10432b8:	15c00017 	ldw	r23,0(r2)
 10432bc:	15800117 	ldw	r22,4(r2)
 10432c0:	8029883a 	mov	r20,r16
 10432c4:	843ffe04 	addi	r16,r16,-8
 10432c8:	ac21883a 	add	r16,r21,r16
 10432cc:	ad29883a 	add	r20,r21,r20
 10432d0:	dac02604 	addi	r11,sp,152
 10432d4:	8811883a 	mov	r8,r17
 10432d8:	84400017 	ldw	r17,0(r16)
 10432dc:	87000117 	ldw	fp,4(r16)
 10432e0:	b80d883a 	mov	r6,r23
 10432e4:	b00f883a 	mov	r7,r22
 10432e8:	8809883a 	mov	r4,r17
 10432ec:	e00b883a 	mov	r5,fp
 10432f0:	da009b15 	stw	r8,620(sp)
 10432f4:	dac09915 	stw	r11,612(sp)
 10432f8:	1043e700 	call	1043e70 <__adddf3>
 10432fc:	100d883a 	mov	r6,r2
 1043300:	180f883a 	mov	r7,r3
 1043304:	8809883a 	mov	r4,r17
 1043308:	e00b883a 	mov	r5,fp
 104330c:	1027883a 	mov	r19,r2
 1043310:	1825883a 	mov	r18,r3
 1043314:	1044f980 	call	1044f98 <__subdf3>
 1043318:	b80d883a 	mov	r6,r23
 104331c:	b00f883a 	mov	r7,r22
 1043320:	1009883a 	mov	r4,r2
 1043324:	180b883a 	mov	r5,r3
 1043328:	1043e700 	call	1043e70 <__adddf3>
 104332c:	dac09917 	ldw	r11,612(sp)
 1043330:	a0800015 	stw	r2,0(r20)
 1043334:	a0c00115 	stw	r3,4(r20)
 1043338:	84c00015 	stw	r19,0(r16)
 104333c:	84800115 	stw	r18,4(r16)
 1043340:	843ffe04 	addi	r16,r16,-8
 1043344:	a53ffe04 	addi	r20,r20,-8
 1043348:	982f883a 	mov	r23,r19
 104334c:	902d883a 	mov	r22,r18
 1043350:	da009b17 	ldw	r8,620(sp)
 1043354:	5c3fe01e 	bne	r11,r16,10432d8 <__alt_data_end+0xfffc32d8>
 1043358:	00800044 	movi	r2,1
 104335c:	12008d0e 	bge	r2,r8,1043594 <__kernel_rem_pio2+0xcec>
 1043360:	402090fa 	slli	r16,r8,3
 1043364:	da008e17 	ldw	r8,568(sp)
 1043368:	8023883a 	mov	r17,r16
 104336c:	da05883a 	add	r2,sp,r8
 1043370:	10802804 	addi	r2,r2,160
 1043374:	15800017 	ldw	r22,0(r2)
 1043378:	15000117 	ldw	r20,4(r2)
 104337c:	ac63883a 	add	r17,r21,r17
 1043380:	843ffe04 	addi	r16,r16,-8
 1043384:	ac21883a 	add	r16,r21,r16
 1043388:	8825883a 	mov	r18,r17
 104338c:	8811883a 	mov	r8,r17
 1043390:	84400017 	ldw	r17,0(r16)
 1043394:	87000117 	ldw	fp,4(r16)
 1043398:	b009883a 	mov	r4,r22
 104339c:	a00b883a 	mov	r5,r20
 10433a0:	880d883a 	mov	r6,r17
 10433a4:	e00f883a 	mov	r7,fp
 10433a8:	da009b15 	stw	r8,620(sp)
 10433ac:	1043e700 	call	1043e70 <__adddf3>
 10433b0:	100d883a 	mov	r6,r2
 10433b4:	180f883a 	mov	r7,r3
 10433b8:	8809883a 	mov	r4,r17
 10433bc:	e00b883a 	mov	r5,fp
 10433c0:	102f883a 	mov	r23,r2
 10433c4:	1827883a 	mov	r19,r3
 10433c8:	1044f980 	call	1044f98 <__subdf3>
 10433cc:	b00d883a 	mov	r6,r22
 10433d0:	a00f883a 	mov	r7,r20
 10433d4:	1009883a 	mov	r4,r2
 10433d8:	180b883a 	mov	r5,r3
 10433dc:	1043e700 	call	1043e70 <__adddf3>
 10433e0:	90800015 	stw	r2,0(r18)
 10433e4:	90c00115 	stw	r3,4(r18)
 10433e8:	85c00015 	stw	r23,0(r16)
 10433ec:	84c00115 	stw	r19,4(r16)
 10433f0:	843ffe04 	addi	r16,r16,-8
 10433f4:	94bffe04 	addi	r18,r18,-8
 10433f8:	b82d883a 	mov	r22,r23
 10433fc:	9829883a 	mov	r20,r19
 1043400:	da009b17 	ldw	r8,620(sp)
 1043404:	ac3fe21e 	bne	r21,r16,1043390 <__alt_data_end+0xfffc3390>
 1043408:	4023883a 	mov	r17,r8
 104340c:	dc002a04 	addi	r16,sp,168
 1043410:	0005883a 	mov	r2,zero
 1043414:	0007883a 	mov	r3,zero
 1043418:	89800017 	ldw	r6,0(r17)
 104341c:	89c00117 	ldw	r7,4(r17)
 1043420:	1009883a 	mov	r4,r2
 1043424:	8c7ffe04 	addi	r17,r17,-8
 1043428:	180b883a 	mov	r5,r3
 104342c:	1043e700 	call	1043e70 <__adddf3>
 1043430:	847ff91e 	bne	r16,r17,1043418 <__alt_data_end+0xfffc3418>
 1043434:	da008d17 	ldw	r8,564(sp)
 1043438:	40004726 	beq	r8,zero,1043558 <__kernel_rem_pio2+0xcb0>
 104343c:	d9002b17 	ldw	r4,172(sp)
 1043440:	d9402917 	ldw	r5,164(sp)
 1043444:	d9802a17 	ldw	r6,168(sp)
 1043448:	da008f17 	ldw	r8,572(sp)
 104344c:	d9c02817 	ldw	r7,160(sp)
 1043450:	2960003c 	xorhi	r5,r5,32768
 1043454:	2120003c 	xorhi	r4,r4,32768
 1043458:	18e0003c 	xorhi	r3,r3,32768
 104345c:	41c00015 	stw	r7,0(r8)
 1043460:	41400115 	stw	r5,4(r8)
 1043464:	41800215 	stw	r6,8(r8)
 1043468:	41000315 	stw	r4,12(r8)
 104346c:	40800415 	stw	r2,16(r8)
 1043470:	40c00515 	stw	r3,20(r8)
 1043474:	003f3706 	br	1043154 <__alt_data_end+0xfffc3154>
 1043478:	da008e17 	ldw	r8,568(sp)
 104347c:	d8802804 	addi	r2,sp,160
 1043480:	dc002604 	addi	r16,sp,152
 1043484:	1225883a 	add	r18,r2,r8
 1043488:	0007883a 	mov	r3,zero
 104348c:	0005883a 	mov	r2,zero
 1043490:	91800017 	ldw	r6,0(r18)
 1043494:	91c00117 	ldw	r7,4(r18)
 1043498:	1009883a 	mov	r4,r2
 104349c:	94bffe04 	addi	r18,r18,-8
 10434a0:	180b883a 	mov	r5,r3
 10434a4:	1043e700 	call	1043e70 <__adddf3>
 10434a8:	943ff91e 	bne	r18,r16,1043490 <__alt_data_end+0xfffc3490>
 10434ac:	da008d17 	ldw	r8,564(sp)
 10434b0:	d9002817 	ldw	r4,160(sp)
 10434b4:	d9402917 	ldw	r5,164(sp)
 10434b8:	40001a26 	beq	r8,zero,1043524 <__kernel_rem_pio2+0xc7c>
 10434bc:	da008f17 	ldw	r8,572(sp)
 10434c0:	19a0003c 	xorhi	r6,r3,32768
 10434c4:	180f883a 	mov	r7,r3
 10434c8:	41800115 	stw	r6,4(r8)
 10434cc:	40800015 	stw	r2,0(r8)
 10434d0:	100d883a 	mov	r6,r2
 10434d4:	1044f980 	call	1044f98 <__subdf3>
 10434d8:	04400c0e 	bge	zero,r17,104350c <__kernel_rem_pio2+0xc64>
 10434dc:	dc002a04 	addi	r16,sp,168
 10434e0:	04800044 	movi	r18,1
 10434e4:	81800017 	ldw	r6,0(r16)
 10434e8:	81c00117 	ldw	r7,4(r16)
 10434ec:	1009883a 	mov	r4,r2
 10434f0:	180b883a 	mov	r5,r3
 10434f4:	94800044 	addi	r18,r18,1
 10434f8:	1043e700 	call	1043e70 <__adddf3>
 10434fc:	84000204 	addi	r16,r16,8
 1043500:	8cbff80e 	bge	r17,r18,10434e4 <__alt_data_end+0xfffc34e4>
 1043504:	da008d17 	ldw	r8,564(sp)
 1043508:	40004226 	beq	r8,zero,1043614 <__kernel_rem_pio2+0xd6c>
 104350c:	da008f17 	ldw	r8,572(sp)
 1043510:	1009883a 	mov	r4,r2
 1043514:	18a0003c 	xorhi	r2,r3,32768
 1043518:	41000215 	stw	r4,8(r8)
 104351c:	40800315 	stw	r2,12(r8)
 1043520:	003f0c06 	br	1043154 <__alt_data_end+0xfffc3154>
 1043524:	da008f17 	ldw	r8,572(sp)
 1043528:	100d883a 	mov	r6,r2
 104352c:	180f883a 	mov	r7,r3
 1043530:	40800015 	stw	r2,0(r8)
 1043534:	40c00115 	stw	r3,4(r8)
 1043538:	1044f980 	call	1044f98 <__subdf3>
 104353c:	047fe716 	blt	zero,r17,10434dc <__alt_data_end+0xfffc34dc>
 1043540:	da008f17 	ldw	r8,572(sp)
 1043544:	1009883a 	mov	r4,r2
 1043548:	1805883a 	mov	r2,r3
 104354c:	41000215 	stw	r4,8(r8)
 1043550:	40800315 	stw	r2,12(r8)
 1043554:	003eff06 	br	1043154 <__alt_data_end+0xfffc3154>
 1043558:	da008f17 	ldw	r8,572(sp)
 104355c:	d9802817 	ldw	r6,160(sp)
 1043560:	d9402a17 	ldw	r5,168(sp)
 1043564:	d9002b17 	ldw	r4,172(sp)
 1043568:	41800015 	stw	r6,0(r8)
 104356c:	d9802917 	ldw	r6,164(sp)
 1043570:	41400215 	stw	r5,8(r8)
 1043574:	41000315 	stw	r4,12(r8)
 1043578:	41800115 	stw	r6,4(r8)
 104357c:	40800415 	stw	r2,16(r8)
 1043580:	40c00515 	stw	r3,20(r8)
 1043584:	003ef306 	br	1043154 <__alt_data_end+0xfffc3154>
 1043588:	da00a617 	ldw	r8,664(sp)
 104358c:	008000c4 	movi	r2,3
 1043590:	40bef01e 	bne	r8,r2,1043154 <__alt_data_end+0xfffc3154>
 1043594:	0005883a 	mov	r2,zero
 1043598:	0007883a 	mov	r3,zero
 104359c:	003fa506 	br	1043434 <__alt_data_end+0xfffc3434>
 10435a0:	9485883a 	add	r2,r18,r18
 10435a4:	1085883a 	add	r2,r2,r2
 10435a8:	d8a1883a 	add	r16,sp,r2
 10435ac:	880b883a 	mov	r5,r17
 10435b0:	a809883a 	mov	r4,r21
 10435b4:	84007804 	addi	r16,r16,480
 10435b8:	10458940 	call	1045894 <__fixdfsi>
 10435bc:	80800015 	stw	r2,0(r16)
 10435c0:	9023883a 	mov	r17,r18
 10435c4:	003e7e06 	br	1042fc0 <__alt_data_end+0xfffc2fc0>
 10435c8:	a80d883a 	mov	r6,r21
 10435cc:	400f883a 	mov	r7,r8
 10435d0:	0009883a 	mov	r4,zero
 10435d4:	014ffc34 	movhi	r5,16368
 10435d8:	1044f980 	call	1044f98 <__subdf3>
 10435dc:	102b883a 	mov	r21,r2
 10435e0:	1811883a 	mov	r8,r3
 10435e4:	04c00084 	movi	r19,2
 10435e8:	003dc006 	br	1042cec <__alt_data_end+0xfffc2cec>
 10435ec:	da00a617 	ldw	r8,664(sp)
 10435f0:	00800084 	movi	r2,2
 10435f4:	123fe416 	blt	r2,r8,1043588 <__alt_data_end+0xfffc3588>
 10435f8:	02000c16 	blt	zero,r8,104362c <__kernel_rem_pio2+0xd84>
 10435fc:	403ed51e 	bne	r8,zero,1043154 <__alt_data_end+0xfffc3154>
 1043600:	0005883a 	mov	r2,zero
 1043604:	0007883a 	mov	r3,zero
 1043608:	003ecc06 	br	104313c <__alt_data_end+0xfffc313c>
 104360c:	d8009215 	stw	zero,584(sp)
 1043610:	003cc306 	br	1042920 <__alt_data_end+0xfffc2920>
 1043614:	da008f17 	ldw	r8,572(sp)
 1043618:	1009883a 	mov	r4,r2
 104361c:	1805883a 	mov	r2,r3
 1043620:	41000215 	stw	r4,8(r8)
 1043624:	40800315 	stw	r2,12(r8)
 1043628:	003eca06 	br	1043154 <__alt_data_end+0xfffc3154>
 104362c:	0005883a 	mov	r2,zero
 1043630:	0007883a 	mov	r3,zero
 1043634:	003f9d06 	br	10434ac <__alt_data_end+0xfffc34ac>

01043638 <__kernel_sin>:
 1043638:	00a00034 	movhi	r2,32768
 104363c:	defff404 	addi	sp,sp,-48
 1043640:	10bfffc4 	addi	r2,r2,-1
 1043644:	00cf9034 	movhi	r3,15936
 1043648:	ddc00915 	stw	r23,36(sp)
 104364c:	dd800815 	stw	r22,32(sp)
 1043650:	dc400315 	stw	r17,12(sp)
 1043654:	dc000215 	stw	r16,8(sp)
 1043658:	dfc00b15 	stw	ra,44(sp)
 104365c:	df000a15 	stw	fp,40(sp)
 1043660:	dd400715 	stw	r21,28(sp)
 1043664:	dd000615 	stw	r20,24(sp)
 1043668:	dcc00515 	stw	r19,20(sp)
 104366c:	dc800415 	stw	r18,16(sp)
 1043670:	2884703a 	and	r2,r5,r2
 1043674:	18ffffc4 	addi	r3,r3,-1
 1043678:	2821883a 	mov	r16,r5
 104367c:	2023883a 	mov	r17,r4
 1043680:	302f883a 	mov	r23,r6
 1043684:	382d883a 	mov	r22,r7
 1043688:	18800216 	blt	r3,r2,1043694 <__kernel_sin+0x5c>
 104368c:	10458940 	call	1045894 <__fixdfsi>
 1043690:	10009926 	beq	r2,zero,10438f8 <__kernel_sin+0x2c0>
 1043694:	880d883a 	mov	r6,r17
 1043698:	800f883a 	mov	r7,r16
 104369c:	8809883a 	mov	r4,r17
 10436a0:	800b883a 	mov	r5,r16
 10436a4:	10448800 	call	1044880 <__muldf3>
 10436a8:	100d883a 	mov	r6,r2
 10436ac:	180f883a 	mov	r7,r3
 10436b0:	8809883a 	mov	r4,r17
 10436b4:	800b883a 	mov	r5,r16
 10436b8:	1027883a 	mov	r19,r2
 10436bc:	1825883a 	mov	r18,r3
 10436c0:	10448800 	call	1044880 <__muldf3>
 10436c4:	0196b434 	movhi	r6,23248
 10436c8:	01cf79b4 	movhi	r7,15846
 10436cc:	31b55f04 	addi	r6,r6,-10884
 10436d0:	39f64e84 	addi	r7,r7,-9926
 10436d4:	9809883a 	mov	r4,r19
 10436d8:	900b883a 	mov	r5,r18
 10436dc:	102b883a 	mov	r21,r2
 10436e0:	1829883a 	mov	r20,r3
 10436e4:	10448800 	call	1044880 <__muldf3>
 10436e8:	01a28b34 	movhi	r6,35372
 10436ec:	01cf96f4 	movhi	r7,15963
 10436f0:	31a73ac4 	addi	r6,r6,-25365
 10436f4:	39f97984 	addi	r7,r7,-6682
 10436f8:	1009883a 	mov	r4,r2
 10436fc:	180b883a 	mov	r5,r3
 1043700:	1044f980 	call	1044f98 <__subdf3>
 1043704:	980d883a 	mov	r6,r19
 1043708:	900f883a 	mov	r7,r18
 104370c:	1009883a 	mov	r4,r2
 1043710:	180b883a 	mov	r5,r3
 1043714:	10448800 	call	1044880 <__muldf3>
 1043718:	0195ecb4 	movhi	r6,22450
 104371c:	01cfb1f4 	movhi	r7,16071
 1043720:	31bf9f44 	addi	r6,r6,-387
 1043724:	39c778c4 	addi	r7,r7,7651
 1043728:	1009883a 	mov	r4,r2
 104372c:	180b883a 	mov	r5,r3
 1043730:	1043e700 	call	1043e70 <__adddf3>
 1043734:	980d883a 	mov	r6,r19
 1043738:	900f883a 	mov	r7,r18
 104373c:	1009883a 	mov	r4,r2
 1043740:	180b883a 	mov	r5,r3
 1043744:	10448800 	call	1044880 <__muldf3>
 1043748:	01867074 	movhi	r6,6593
 104374c:	01cfcab4 	movhi	r7,16170
 1043750:	31987544 	addi	r6,r6,25045
 1043754:	39c06804 	addi	r7,r7,416
 1043758:	1009883a 	mov	r4,r2
 104375c:	180b883a 	mov	r5,r3
 1043760:	1044f980 	call	1044f98 <__subdf3>
 1043764:	980d883a 	mov	r6,r19
 1043768:	900f883a 	mov	r7,r18
 104376c:	1009883a 	mov	r4,r2
 1043770:	180b883a 	mov	r5,r3
 1043774:	10448800 	call	1044880 <__muldf3>
 1043778:	01844474 	movhi	r6,4369
 104377c:	01cfe074 	movhi	r7,16257
 1043780:	31be2984 	addi	r6,r6,-1882
 1043784:	39c44444 	addi	r7,r7,4369
 1043788:	1009883a 	mov	r4,r2
 104378c:	180b883a 	mov	r5,r3
 1043790:	1043e700 	call	1043e70 <__adddf3>
 1043794:	1011883a 	mov	r8,r2
 1043798:	d8800c17 	ldw	r2,48(sp)
 104379c:	1839883a 	mov	fp,r3
 10437a0:	10003e26 	beq	r2,zero,104389c <__kernel_sin+0x264>
 10437a4:	000d883a 	mov	r6,zero
 10437a8:	01cff834 	movhi	r7,16352
 10437ac:	b809883a 	mov	r4,r23
 10437b0:	b00b883a 	mov	r5,r22
 10437b4:	da000015 	stw	r8,0(sp)
 10437b8:	10448800 	call	1044880 <__muldf3>
 10437bc:	da000017 	ldw	r8,0(sp)
 10437c0:	e00f883a 	mov	r7,fp
 10437c4:	a809883a 	mov	r4,r21
 10437c8:	400d883a 	mov	r6,r8
 10437cc:	a00b883a 	mov	r5,r20
 10437d0:	d8c00115 	stw	r3,4(sp)
 10437d4:	d8800015 	stw	r2,0(sp)
 10437d8:	10448800 	call	1044880 <__muldf3>
 10437dc:	da800017 	ldw	r10,0(sp)
 10437e0:	da400117 	ldw	r9,4(sp)
 10437e4:	100d883a 	mov	r6,r2
 10437e8:	5009883a 	mov	r4,r10
 10437ec:	480b883a 	mov	r5,r9
 10437f0:	180f883a 	mov	r7,r3
 10437f4:	1044f980 	call	1044f98 <__subdf3>
 10437f8:	980d883a 	mov	r6,r19
 10437fc:	900f883a 	mov	r7,r18
 1043800:	1009883a 	mov	r4,r2
 1043804:	180b883a 	mov	r5,r3
 1043808:	10448800 	call	1044880 <__muldf3>
 104380c:	b80d883a 	mov	r6,r23
 1043810:	b00f883a 	mov	r7,r22
 1043814:	1009883a 	mov	r4,r2
 1043818:	180b883a 	mov	r5,r3
 104381c:	1044f980 	call	1044f98 <__subdf3>
 1043820:	01955574 	movhi	r6,21845
 1043824:	01cff174 	movhi	r7,16325
 1043828:	31955244 	addi	r6,r6,21833
 104382c:	39d55544 	addi	r7,r7,21845
 1043830:	a809883a 	mov	r4,r21
 1043834:	a00b883a 	mov	r5,r20
 1043838:	1027883a 	mov	r19,r2
 104383c:	1825883a 	mov	r18,r3
 1043840:	10448800 	call	1044880 <__muldf3>
 1043844:	100d883a 	mov	r6,r2
 1043848:	180f883a 	mov	r7,r3
 104384c:	9809883a 	mov	r4,r19
 1043850:	900b883a 	mov	r5,r18
 1043854:	1043e700 	call	1043e70 <__adddf3>
 1043858:	100d883a 	mov	r6,r2
 104385c:	180f883a 	mov	r7,r3
 1043860:	8809883a 	mov	r4,r17
 1043864:	800b883a 	mov	r5,r16
 1043868:	1044f980 	call	1044f98 <__subdf3>
 104386c:	dfc00b17 	ldw	ra,44(sp)
 1043870:	df000a17 	ldw	fp,40(sp)
 1043874:	ddc00917 	ldw	r23,36(sp)
 1043878:	dd800817 	ldw	r22,32(sp)
 104387c:	dd400717 	ldw	r21,28(sp)
 1043880:	dd000617 	ldw	r20,24(sp)
 1043884:	dcc00517 	ldw	r19,20(sp)
 1043888:	dc800417 	ldw	r18,16(sp)
 104388c:	dc400317 	ldw	r17,12(sp)
 1043890:	dc000217 	ldw	r16,8(sp)
 1043894:	dec00c04 	addi	sp,sp,48
 1043898:	f800283a 	ret
 104389c:	400d883a 	mov	r6,r8
 10438a0:	9809883a 	mov	r4,r19
 10438a4:	900b883a 	mov	r5,r18
 10438a8:	180f883a 	mov	r7,r3
 10438ac:	10448800 	call	1044880 <__muldf3>
 10438b0:	01955574 	movhi	r6,21845
 10438b4:	01cff174 	movhi	r7,16325
 10438b8:	31955244 	addi	r6,r6,21833
 10438bc:	39d55544 	addi	r7,r7,21845
 10438c0:	1009883a 	mov	r4,r2
 10438c4:	180b883a 	mov	r5,r3
 10438c8:	1044f980 	call	1044f98 <__subdf3>
 10438cc:	a80d883a 	mov	r6,r21
 10438d0:	a00f883a 	mov	r7,r20
 10438d4:	1009883a 	mov	r4,r2
 10438d8:	180b883a 	mov	r5,r3
 10438dc:	10448800 	call	1044880 <__muldf3>
 10438e0:	880d883a 	mov	r6,r17
 10438e4:	800f883a 	mov	r7,r16
 10438e8:	1009883a 	mov	r4,r2
 10438ec:	180b883a 	mov	r5,r3
 10438f0:	1043e700 	call	1043e70 <__adddf3>
 10438f4:	003fdd06 	br	104386c <__alt_data_end+0xfffc386c>
 10438f8:	8805883a 	mov	r2,r17
 10438fc:	8007883a 	mov	r3,r16
 1043900:	003fda06 	br	104386c <__alt_data_end+0xfffc386c>

01043904 <fabs>:
 1043904:	00e00034 	movhi	r3,32768
 1043908:	18ffffc4 	addi	r3,r3,-1
 104390c:	2005883a 	mov	r2,r4
 1043910:	28c6703a 	and	r3,r5,r3
 1043914:	f800283a 	ret

01043918 <floor>:
 1043918:	2811d53a 	srai	r8,r5,20
 104391c:	defffa04 	addi	sp,sp,-24
 1043920:	dcc00315 	stw	r19,12(sp)
 1043924:	4201ffcc 	andi	r8,r8,2047
 1043928:	dc800215 	stw	r18,8(sp)
 104392c:	dc400115 	stw	r17,4(sp)
 1043930:	dc000015 	stw	r16,0(sp)
 1043934:	dfc00515 	stw	ra,20(sp)
 1043938:	dd000415 	stw	r20,16(sp)
 104393c:	44bf0044 	addi	r18,r8,-1023
 1043940:	018004c4 	movi	r6,19
 1043944:	2821883a 	mov	r16,r5
 1043948:	2005883a 	mov	r2,r4
 104394c:	280f883a 	mov	r7,r5
 1043950:	2827883a 	mov	r19,r5
 1043954:	2023883a 	mov	r17,r4
 1043958:	34801916 	blt	r6,r18,10439c0 <floor+0xa8>
 104395c:	90003c16 	blt	r18,zero,1043a50 <floor+0x138>
 1043960:	05000434 	movhi	r20,16
 1043964:	a53fffc4 	addi	r20,r20,-1
 1043968:	a4a9d83a 	sra	r20,r20,r18
 104396c:	2d0c703a 	and	r6,r5,r20
 1043970:	310cb03a 	or	r6,r6,r4
 1043974:	30001626 	beq	r6,zero,10439d0 <floor+0xb8>
 1043978:	01a20034 	movhi	r6,34816
 104397c:	01df8e34 	movhi	r7,32312
 1043980:	319d6704 	addi	r6,r6,30108
 1043984:	39f90f04 	addi	r7,r7,-7108
 1043988:	1043e700 	call	1043e70 <__adddf3>
 104398c:	000d883a 	mov	r6,zero
 1043990:	000f883a 	mov	r7,zero
 1043994:	1009883a 	mov	r4,r2
 1043998:	180b883a 	mov	r5,r3
 104399c:	10447a40 	call	10447a4 <__gedf2>
 10439a0:	0080040e 	bge	zero,r2,10439b4 <floor+0x9c>
 10439a4:	80003c16 	blt	r16,zero,1043a98 <floor+0x180>
 10439a8:	0520303a 	nor	r16,zero,r20
 10439ac:	84e0703a 	and	r16,r16,r19
 10439b0:	0023883a 	mov	r17,zero
 10439b4:	8805883a 	mov	r2,r17
 10439b8:	8007883a 	mov	r3,r16
 10439bc:	00000506 	br	10439d4 <floor+0xbc>
 10439c0:	01800cc4 	movi	r6,51
 10439c4:	34800b0e 	bge	r6,r18,10439f4 <floor+0xdc>
 10439c8:	01810004 	movi	r6,1024
 10439cc:	91802f26 	beq	r18,r6,1043a8c <floor+0x174>
 10439d0:	3807883a 	mov	r3,r7
 10439d4:	dfc00517 	ldw	ra,20(sp)
 10439d8:	dd000417 	ldw	r20,16(sp)
 10439dc:	dcc00317 	ldw	r19,12(sp)
 10439e0:	dc800217 	ldw	r18,8(sp)
 10439e4:	dc400117 	ldw	r17,4(sp)
 10439e8:	dc000017 	ldw	r16,0(sp)
 10439ec:	dec00604 	addi	sp,sp,24
 10439f0:	f800283a 	ret
 10439f4:	423efb44 	addi	r8,r8,-1043
 10439f8:	053fffc4 	movi	r20,-1
 10439fc:	a228d83a 	srl	r20,r20,r8
 1043a00:	250c703a 	and	r6,r4,r20
 1043a04:	303ff226 	beq	r6,zero,10439d0 <__alt_data_end+0xfffc39d0>
 1043a08:	01a20034 	movhi	r6,34816
 1043a0c:	01df8e34 	movhi	r7,32312
 1043a10:	319d6704 	addi	r6,r6,30108
 1043a14:	39f90f04 	addi	r7,r7,-7108
 1043a18:	1043e700 	call	1043e70 <__adddf3>
 1043a1c:	000d883a 	mov	r6,zero
 1043a20:	000f883a 	mov	r7,zero
 1043a24:	1009883a 	mov	r4,r2
 1043a28:	180b883a 	mov	r5,r3
 1043a2c:	10447a40 	call	10447a4 <__gedf2>
 1043a30:	00bfe00e 	bge	zero,r2,10439b4 <__alt_data_end+0xfffc39b4>
 1043a34:	80001c16 	blt	r16,zero,1043aa8 <floor+0x190>
 1043a38:	0510303a 	nor	r8,zero,r20
 1043a3c:	9821883a 	mov	r16,r19
 1043a40:	8a22703a 	and	r17,r17,r8
 1043a44:	8805883a 	mov	r2,r17
 1043a48:	8007883a 	mov	r3,r16
 1043a4c:	003fe106 	br	10439d4 <__alt_data_end+0xfffc39d4>
 1043a50:	01a20034 	movhi	r6,34816
 1043a54:	01df8e34 	movhi	r7,32312
 1043a58:	319d6704 	addi	r6,r6,30108
 1043a5c:	39f90f04 	addi	r7,r7,-7108
 1043a60:	1043e700 	call	1043e70 <__adddf3>
 1043a64:	000d883a 	mov	r6,zero
 1043a68:	000f883a 	mov	r7,zero
 1043a6c:	1009883a 	mov	r4,r2
 1043a70:	180b883a 	mov	r5,r3
 1043a74:	10447a40 	call	10447a4 <__gedf2>
 1043a78:	00bfce0e 	bge	zero,r2,10439b4 <__alt_data_end+0xfffc39b4>
 1043a7c:	80001516 	blt	r16,zero,1043ad4 <floor+0x1bc>
 1043a80:	0023883a 	mov	r17,zero
 1043a84:	0021883a 	mov	r16,zero
 1043a88:	003fca06 	br	10439b4 <__alt_data_end+0xfffc39b4>
 1043a8c:	200d883a 	mov	r6,r4
 1043a90:	1043e700 	call	1043e70 <__adddf3>
 1043a94:	003fcf06 	br	10439d4 <__alt_data_end+0xfffc39d4>
 1043a98:	00800434 	movhi	r2,16
 1043a9c:	14a5d83a 	sra	r18,r2,r18
 1043aa0:	84a7883a 	add	r19,r16,r18
 1043aa4:	003fc006 	br	10439a8 <__alt_data_end+0xfffc39a8>
 1043aa8:	00800504 	movi	r2,20
 1043aac:	90801326 	beq	r18,r2,1043afc <floor+0x1e4>
 1043ab0:	00800d04 	movi	r2,52
 1043ab4:	14a5c83a 	sub	r18,r2,r18
 1043ab8:	00800044 	movi	r2,1
 1043abc:	1484983a 	sll	r2,r2,r18
 1043ac0:	1445883a 	add	r2,r2,r17
 1043ac4:	14400b2e 	bgeu	r2,r17,1043af4 <floor+0x1dc>
 1043ac8:	84c00044 	addi	r19,r16,1
 1043acc:	1023883a 	mov	r17,r2
 1043ad0:	003fd906 	br	1043a38 <__alt_data_end+0xfffc3a38>
 1043ad4:	00a00034 	movhi	r2,32768
 1043ad8:	10bfffc4 	addi	r2,r2,-1
 1043adc:	8084703a 	and	r2,r16,r2
 1043ae0:	1462b03a 	or	r17,r2,r17
 1043ae4:	883fb326 	beq	r17,zero,10439b4 <__alt_data_end+0xfffc39b4>
 1043ae8:	0023883a 	mov	r17,zero
 1043aec:	042ffc34 	movhi	r16,49136
 1043af0:	003fb006 	br	10439b4 <__alt_data_end+0xfffc39b4>
 1043af4:	1023883a 	mov	r17,r2
 1043af8:	003fcf06 	br	1043a38 <__alt_data_end+0xfffc3a38>
 1043afc:	84c00044 	addi	r19,r16,1
 1043b00:	003fcd06 	br	1043a38 <__alt_data_end+0xfffc3a38>

01043b04 <scalbn>:
 1043b04:	2a1ffc2c 	andhi	r8,r5,32752
 1043b08:	4011d53a 	srai	r8,r8,20
 1043b0c:	defffe04 	addi	sp,sp,-8
 1043b10:	dc000015 	stw	r16,0(sp)
 1043b14:	dfc00115 	stw	ra,4(sp)
 1043b18:	280f883a 	mov	r7,r5
 1043b1c:	2015883a 	mov	r10,r4
 1043b20:	3021883a 	mov	r16,r6
 1043b24:	40001e1e 	bne	r8,zero,1043ba0 <scalbn+0x9c>
 1043b28:	00a00034 	movhi	r2,32768
 1043b2c:	10bfffc4 	addi	r2,r2,-1
 1043b30:	2884703a 	and	r2,r5,r2
 1043b34:	1104b03a 	or	r2,r2,r4
 1043b38:	10002226 	beq	r2,zero,1043bc4 <scalbn+0xc0>
 1043b3c:	01d0d434 	movhi	r7,17232
 1043b40:	000d883a 	mov	r6,zero
 1043b44:	10448800 	call	1044880 <__muldf3>
 1043b48:	013ffff4 	movhi	r4,65535
 1043b4c:	210f2c04 	addi	r4,r4,15536
 1043b50:	1015883a 	mov	r10,r2
 1043b54:	180f883a 	mov	r7,r3
 1043b58:	81002a16 	blt	r16,r4,1043c04 <scalbn+0x100>
 1043b5c:	191ffc2c 	andhi	r4,r3,32752
 1043b60:	2009d53a 	srai	r4,r4,20
 1043b64:	223ff284 	addi	r8,r4,-54
 1043b68:	8211883a 	add	r8,r16,r8
 1043b6c:	0081ff84 	movi	r2,2046
 1043b70:	12002f16 	blt	r2,r8,1043c30 <scalbn+0x12c>
 1043b74:	0200190e 	bge	zero,r8,1043bdc <scalbn+0xd8>
 1043b78:	4010953a 	slli	r8,r8,20
 1043b7c:	01600434 	movhi	r5,32784
 1043b80:	297fffc4 	addi	r5,r5,-1
 1043b84:	194e703a 	and	r7,r3,r5
 1043b88:	5005883a 	mov	r2,r10
 1043b8c:	3a06b03a 	or	r3,r7,r8
 1043b90:	dfc00117 	ldw	ra,4(sp)
 1043b94:	dc000017 	ldw	r16,0(sp)
 1043b98:	dec00204 	addi	sp,sp,8
 1043b9c:	f800283a 	ret
 1043ba0:	0081ffc4 	movi	r2,2047
 1043ba4:	2807883a 	mov	r3,r5
 1043ba8:	40bfef1e 	bne	r8,r2,1043b68 <__alt_data_end+0xfffc3b68>
 1043bac:	200d883a 	mov	r6,r4
 1043bb0:	1043e700 	call	1043e70 <__adddf3>
 1043bb4:	dfc00117 	ldw	ra,4(sp)
 1043bb8:	dc000017 	ldw	r16,0(sp)
 1043bbc:	dec00204 	addi	sp,sp,8
 1043bc0:	f800283a 	ret
 1043bc4:	2005883a 	mov	r2,r4
 1043bc8:	2807883a 	mov	r3,r5
 1043bcc:	dfc00117 	ldw	ra,4(sp)
 1043bd0:	dc000017 	ldw	r16,0(sp)
 1043bd4:	dec00204 	addi	sp,sp,8
 1043bd8:	f800283a 	ret
 1043bdc:	00bff2c4 	movi	r2,-53
 1043be0:	4080240e 	bge	r8,r2,1043c74 <scalbn+0x170>
 1043be4:	00b0d414 	movui	r2,50000
 1043be8:	14001116 	blt	r2,r16,1043c30 <scalbn+0x12c>
 1043bec:	0130be74 	movhi	r4,49913
 1043bf0:	01406974 	movhi	r5,421
 1043bf4:	213cd644 	addi	r4,r4,-3239
 1043bf8:	295b87c4 	addi	r5,r5,28191
 1043bfc:	500d883a 	mov	r6,r10
 1043c00:	1043ca00 	call	1043ca0 <copysign>
 1043c04:	01b0be74 	movhi	r6,49913
 1043c08:	01c06974 	movhi	r7,421
 1043c0c:	31bcd644 	addi	r6,r6,-3239
 1043c10:	39db87c4 	addi	r7,r7,28191
 1043c14:	1009883a 	mov	r4,r2
 1043c18:	180b883a 	mov	r5,r3
 1043c1c:	10448800 	call	1044880 <__muldf3>
 1043c20:	dfc00117 	ldw	ra,4(sp)
 1043c24:	dc000017 	ldw	r16,0(sp)
 1043c28:	dec00204 	addi	sp,sp,8
 1043c2c:	f800283a 	ret
 1043c30:	01220034 	movhi	r4,34816
 1043c34:	015f8e34 	movhi	r5,32312
 1043c38:	500d883a 	mov	r6,r10
 1043c3c:	211d6704 	addi	r4,r4,30108
 1043c40:	29790f04 	addi	r5,r5,-7108
 1043c44:	1043ca00 	call	1043ca0 <copysign>
 1043c48:	01a20034 	movhi	r6,34816
 1043c4c:	01df8e34 	movhi	r7,32312
 1043c50:	319d6704 	addi	r6,r6,30108
 1043c54:	39f90f04 	addi	r7,r7,-7108
 1043c58:	1009883a 	mov	r4,r2
 1043c5c:	180b883a 	mov	r5,r3
 1043c60:	10448800 	call	1044880 <__muldf3>
 1043c64:	dfc00117 	ldw	ra,4(sp)
 1043c68:	dc000017 	ldw	r16,0(sp)
 1043c6c:	dec00204 	addi	sp,sp,8
 1043c70:	f800283a 	ret
 1043c74:	42000d84 	addi	r8,r8,54
 1043c78:	4012953a 	slli	r9,r8,20
 1043c7c:	01e00434 	movhi	r7,32784
 1043c80:	39ffffc4 	addi	r7,r7,-1
 1043c84:	19ca703a 	and	r5,r3,r7
 1043c88:	000d883a 	mov	r6,zero
 1043c8c:	01cf2434 	movhi	r7,15504
 1043c90:	5009883a 	mov	r4,r10
 1043c94:	494ab03a 	or	r5,r9,r5
 1043c98:	10448800 	call	1044880 <__muldf3>
 1043c9c:	003fbc06 	br	1043b90 <__alt_data_end+0xfffc3b90>

01043ca0 <copysign>:
 1043ca0:	2005883a 	mov	r2,r4
 1043ca4:	01200034 	movhi	r4,32768
 1043ca8:	213fffc4 	addi	r4,r4,-1
 1043cac:	38e0002c 	andhi	r3,r7,32768
 1043cb0:	290a703a 	and	r5,r5,r4
 1043cb4:	28c6b03a 	or	r3,r5,r3
 1043cb8:	f800283a 	ret

01043cbc <__divsi3>:
 1043cbc:	20001b16 	blt	r4,zero,1043d2c <__divsi3+0x70>
 1043cc0:	000f883a 	mov	r7,zero
 1043cc4:	28001616 	blt	r5,zero,1043d20 <__divsi3+0x64>
 1043cc8:	200d883a 	mov	r6,r4
 1043ccc:	29001a2e 	bgeu	r5,r4,1043d38 <__divsi3+0x7c>
 1043cd0:	00800804 	movi	r2,32
 1043cd4:	00c00044 	movi	r3,1
 1043cd8:	00000106 	br	1043ce0 <__divsi3+0x24>
 1043cdc:	10000d26 	beq	r2,zero,1043d14 <__divsi3+0x58>
 1043ce0:	294b883a 	add	r5,r5,r5
 1043ce4:	10bfffc4 	addi	r2,r2,-1
 1043ce8:	18c7883a 	add	r3,r3,r3
 1043cec:	293ffb36 	bltu	r5,r4,1043cdc <__alt_data_end+0xfffc3cdc>
 1043cf0:	0005883a 	mov	r2,zero
 1043cf4:	18000726 	beq	r3,zero,1043d14 <__divsi3+0x58>
 1043cf8:	0005883a 	mov	r2,zero
 1043cfc:	31400236 	bltu	r6,r5,1043d08 <__divsi3+0x4c>
 1043d00:	314dc83a 	sub	r6,r6,r5
 1043d04:	10c4b03a 	or	r2,r2,r3
 1043d08:	1806d07a 	srli	r3,r3,1
 1043d0c:	280ad07a 	srli	r5,r5,1
 1043d10:	183ffa1e 	bne	r3,zero,1043cfc <__alt_data_end+0xfffc3cfc>
 1043d14:	38000126 	beq	r7,zero,1043d1c <__divsi3+0x60>
 1043d18:	0085c83a 	sub	r2,zero,r2
 1043d1c:	f800283a 	ret
 1043d20:	014bc83a 	sub	r5,zero,r5
 1043d24:	39c0005c 	xori	r7,r7,1
 1043d28:	003fe706 	br	1043cc8 <__alt_data_end+0xfffc3cc8>
 1043d2c:	0109c83a 	sub	r4,zero,r4
 1043d30:	01c00044 	movi	r7,1
 1043d34:	003fe306 	br	1043cc4 <__alt_data_end+0xfffc3cc4>
 1043d38:	00c00044 	movi	r3,1
 1043d3c:	003fee06 	br	1043cf8 <__alt_data_end+0xfffc3cf8>

01043d40 <__modsi3>:
 1043d40:	20001716 	blt	r4,zero,1043da0 <__modsi3+0x60>
 1043d44:	000f883a 	mov	r7,zero
 1043d48:	2005883a 	mov	r2,r4
 1043d4c:	28001216 	blt	r5,zero,1043d98 <__modsi3+0x58>
 1043d50:	2900162e 	bgeu	r5,r4,1043dac <__modsi3+0x6c>
 1043d54:	01800804 	movi	r6,32
 1043d58:	00c00044 	movi	r3,1
 1043d5c:	00000106 	br	1043d64 <__modsi3+0x24>
 1043d60:	30000a26 	beq	r6,zero,1043d8c <__modsi3+0x4c>
 1043d64:	294b883a 	add	r5,r5,r5
 1043d68:	31bfffc4 	addi	r6,r6,-1
 1043d6c:	18c7883a 	add	r3,r3,r3
 1043d70:	293ffb36 	bltu	r5,r4,1043d60 <__alt_data_end+0xfffc3d60>
 1043d74:	18000526 	beq	r3,zero,1043d8c <__modsi3+0x4c>
 1043d78:	1806d07a 	srli	r3,r3,1
 1043d7c:	11400136 	bltu	r2,r5,1043d84 <__modsi3+0x44>
 1043d80:	1145c83a 	sub	r2,r2,r5
 1043d84:	280ad07a 	srli	r5,r5,1
 1043d88:	183ffb1e 	bne	r3,zero,1043d78 <__alt_data_end+0xfffc3d78>
 1043d8c:	38000126 	beq	r7,zero,1043d94 <__modsi3+0x54>
 1043d90:	0085c83a 	sub	r2,zero,r2
 1043d94:	f800283a 	ret
 1043d98:	014bc83a 	sub	r5,zero,r5
 1043d9c:	003fec06 	br	1043d50 <__alt_data_end+0xfffc3d50>
 1043da0:	0109c83a 	sub	r4,zero,r4
 1043da4:	01c00044 	movi	r7,1
 1043da8:	003fe706 	br	1043d48 <__alt_data_end+0xfffc3d48>
 1043dac:	00c00044 	movi	r3,1
 1043db0:	003ff106 	br	1043d78 <__alt_data_end+0xfffc3d78>

01043db4 <__udivsi3>:
 1043db4:	200d883a 	mov	r6,r4
 1043db8:	2900152e 	bgeu	r5,r4,1043e10 <__udivsi3+0x5c>
 1043dbc:	28001416 	blt	r5,zero,1043e10 <__udivsi3+0x5c>
 1043dc0:	00800804 	movi	r2,32
 1043dc4:	00c00044 	movi	r3,1
 1043dc8:	00000206 	br	1043dd4 <__udivsi3+0x20>
 1043dcc:	10000e26 	beq	r2,zero,1043e08 <__udivsi3+0x54>
 1043dd0:	28000516 	blt	r5,zero,1043de8 <__udivsi3+0x34>
 1043dd4:	294b883a 	add	r5,r5,r5
 1043dd8:	10bfffc4 	addi	r2,r2,-1
 1043ddc:	18c7883a 	add	r3,r3,r3
 1043de0:	293ffa36 	bltu	r5,r4,1043dcc <__alt_data_end+0xfffc3dcc>
 1043de4:	18000826 	beq	r3,zero,1043e08 <__udivsi3+0x54>
 1043de8:	0005883a 	mov	r2,zero
 1043dec:	31400236 	bltu	r6,r5,1043df8 <__udivsi3+0x44>
 1043df0:	314dc83a 	sub	r6,r6,r5
 1043df4:	10c4b03a 	or	r2,r2,r3
 1043df8:	1806d07a 	srli	r3,r3,1
 1043dfc:	280ad07a 	srli	r5,r5,1
 1043e00:	183ffa1e 	bne	r3,zero,1043dec <__alt_data_end+0xfffc3dec>
 1043e04:	f800283a 	ret
 1043e08:	0005883a 	mov	r2,zero
 1043e0c:	f800283a 	ret
 1043e10:	00c00044 	movi	r3,1
 1043e14:	003ff406 	br	1043de8 <__alt_data_end+0xfffc3de8>

01043e18 <__umodsi3>:
 1043e18:	2005883a 	mov	r2,r4
 1043e1c:	2900122e 	bgeu	r5,r4,1043e68 <__umodsi3+0x50>
 1043e20:	28001116 	blt	r5,zero,1043e68 <__umodsi3+0x50>
 1043e24:	01800804 	movi	r6,32
 1043e28:	00c00044 	movi	r3,1
 1043e2c:	00000206 	br	1043e38 <__umodsi3+0x20>
 1043e30:	30000c26 	beq	r6,zero,1043e64 <__umodsi3+0x4c>
 1043e34:	28000516 	blt	r5,zero,1043e4c <__umodsi3+0x34>
 1043e38:	294b883a 	add	r5,r5,r5
 1043e3c:	31bfffc4 	addi	r6,r6,-1
 1043e40:	18c7883a 	add	r3,r3,r3
 1043e44:	293ffa36 	bltu	r5,r4,1043e30 <__alt_data_end+0xfffc3e30>
 1043e48:	18000626 	beq	r3,zero,1043e64 <__umodsi3+0x4c>
 1043e4c:	1806d07a 	srli	r3,r3,1
 1043e50:	11400136 	bltu	r2,r5,1043e58 <__umodsi3+0x40>
 1043e54:	1145c83a 	sub	r2,r2,r5
 1043e58:	280ad07a 	srli	r5,r5,1
 1043e5c:	183ffb1e 	bne	r3,zero,1043e4c <__alt_data_end+0xfffc3e4c>
 1043e60:	f800283a 	ret
 1043e64:	f800283a 	ret
 1043e68:	00c00044 	movi	r3,1
 1043e6c:	003ff706 	br	1043e4c <__alt_data_end+0xfffc3e4c>

01043e70 <__adddf3>:
 1043e70:	02c00434 	movhi	r11,16
 1043e74:	5affffc4 	addi	r11,r11,-1
 1043e78:	2806d7fa 	srli	r3,r5,31
 1043e7c:	2ad4703a 	and	r10,r5,r11
 1043e80:	3ad2703a 	and	r9,r7,r11
 1043e84:	3804d53a 	srli	r2,r7,20
 1043e88:	3018d77a 	srli	r12,r6,29
 1043e8c:	280ad53a 	srli	r5,r5,20
 1043e90:	501490fa 	slli	r10,r10,3
 1043e94:	2010d77a 	srli	r8,r4,29
 1043e98:	481290fa 	slli	r9,r9,3
 1043e9c:	380ed7fa 	srli	r7,r7,31
 1043ea0:	defffb04 	addi	sp,sp,-20
 1043ea4:	dc800215 	stw	r18,8(sp)
 1043ea8:	dc400115 	stw	r17,4(sp)
 1043eac:	dc000015 	stw	r16,0(sp)
 1043eb0:	dfc00415 	stw	ra,16(sp)
 1043eb4:	dcc00315 	stw	r19,12(sp)
 1043eb8:	1c803fcc 	andi	r18,r3,255
 1043ebc:	2c01ffcc 	andi	r16,r5,2047
 1043ec0:	5210b03a 	or	r8,r10,r8
 1043ec4:	202290fa 	slli	r17,r4,3
 1043ec8:	1081ffcc 	andi	r2,r2,2047
 1043ecc:	4b12b03a 	or	r9,r9,r12
 1043ed0:	300c90fa 	slli	r6,r6,3
 1043ed4:	91c07526 	beq	r18,r7,10440ac <__adddf3+0x23c>
 1043ed8:	8087c83a 	sub	r3,r16,r2
 1043edc:	00c0ab0e 	bge	zero,r3,104418c <__adddf3+0x31c>
 1043ee0:	10002a1e 	bne	r2,zero,1043f8c <__adddf3+0x11c>
 1043ee4:	4984b03a 	or	r2,r9,r6
 1043ee8:	1000961e 	bne	r2,zero,1044144 <__adddf3+0x2d4>
 1043eec:	888001cc 	andi	r2,r17,7
 1043ef0:	10000726 	beq	r2,zero,1043f10 <__adddf3+0xa0>
 1043ef4:	888003cc 	andi	r2,r17,15
 1043ef8:	00c00104 	movi	r3,4
 1043efc:	10c00426 	beq	r2,r3,1043f10 <__adddf3+0xa0>
 1043f00:	88c7883a 	add	r3,r17,r3
 1043f04:	1c63803a 	cmpltu	r17,r3,r17
 1043f08:	4451883a 	add	r8,r8,r17
 1043f0c:	1823883a 	mov	r17,r3
 1043f10:	4080202c 	andhi	r2,r8,128
 1043f14:	10005926 	beq	r2,zero,104407c <__adddf3+0x20c>
 1043f18:	84000044 	addi	r16,r16,1
 1043f1c:	0081ffc4 	movi	r2,2047
 1043f20:	8080ba26 	beq	r16,r2,104420c <__adddf3+0x39c>
 1043f24:	00bfe034 	movhi	r2,65408
 1043f28:	10bfffc4 	addi	r2,r2,-1
 1043f2c:	4090703a 	and	r8,r8,r2
 1043f30:	4004977a 	slli	r2,r8,29
 1043f34:	4010927a 	slli	r8,r8,9
 1043f38:	8822d0fa 	srli	r17,r17,3
 1043f3c:	8401ffcc 	andi	r16,r16,2047
 1043f40:	4010d33a 	srli	r8,r8,12
 1043f44:	9007883a 	mov	r3,r18
 1043f48:	1444b03a 	or	r2,r2,r17
 1043f4c:	8401ffcc 	andi	r16,r16,2047
 1043f50:	8020953a 	slli	r16,r16,20
 1043f54:	18c03fcc 	andi	r3,r3,255
 1043f58:	01000434 	movhi	r4,16
 1043f5c:	213fffc4 	addi	r4,r4,-1
 1043f60:	180697fa 	slli	r3,r3,31
 1043f64:	4110703a 	and	r8,r8,r4
 1043f68:	4410b03a 	or	r8,r8,r16
 1043f6c:	40c6b03a 	or	r3,r8,r3
 1043f70:	dfc00417 	ldw	ra,16(sp)
 1043f74:	dcc00317 	ldw	r19,12(sp)
 1043f78:	dc800217 	ldw	r18,8(sp)
 1043f7c:	dc400117 	ldw	r17,4(sp)
 1043f80:	dc000017 	ldw	r16,0(sp)
 1043f84:	dec00504 	addi	sp,sp,20
 1043f88:	f800283a 	ret
 1043f8c:	0081ffc4 	movi	r2,2047
 1043f90:	80bfd626 	beq	r16,r2,1043eec <__alt_data_end+0xfffc3eec>
 1043f94:	4a402034 	orhi	r9,r9,128
 1043f98:	00800e04 	movi	r2,56
 1043f9c:	10c09f16 	blt	r2,r3,104421c <__adddf3+0x3ac>
 1043fa0:	008007c4 	movi	r2,31
 1043fa4:	10c0c216 	blt	r2,r3,10442b0 <__adddf3+0x440>
 1043fa8:	00800804 	movi	r2,32
 1043fac:	10c5c83a 	sub	r2,r2,r3
 1043fb0:	488a983a 	sll	r5,r9,r2
 1043fb4:	30c8d83a 	srl	r4,r6,r3
 1043fb8:	3084983a 	sll	r2,r6,r2
 1043fbc:	48c6d83a 	srl	r3,r9,r3
 1043fc0:	290cb03a 	or	r6,r5,r4
 1043fc4:	1004c03a 	cmpne	r2,r2,zero
 1043fc8:	308cb03a 	or	r6,r6,r2
 1043fcc:	898dc83a 	sub	r6,r17,r6
 1043fd0:	89a3803a 	cmpltu	r17,r17,r6
 1043fd4:	40d1c83a 	sub	r8,r8,r3
 1043fd8:	4451c83a 	sub	r8,r8,r17
 1043fdc:	3023883a 	mov	r17,r6
 1043fe0:	4080202c 	andhi	r2,r8,128
 1043fe4:	10002326 	beq	r2,zero,1044074 <__adddf3+0x204>
 1043fe8:	04c02034 	movhi	r19,128
 1043fec:	9cffffc4 	addi	r19,r19,-1
 1043ff0:	44e6703a 	and	r19,r8,r19
 1043ff4:	98007626 	beq	r19,zero,10441d0 <__adddf3+0x360>
 1043ff8:	9809883a 	mov	r4,r19
 1043ffc:	10459f00 	call	10459f0 <__clzsi2>
 1044000:	10fffe04 	addi	r3,r2,-8
 1044004:	010007c4 	movi	r4,31
 1044008:	20c07716 	blt	r4,r3,10441e8 <__adddf3+0x378>
 104400c:	00800804 	movi	r2,32
 1044010:	10c5c83a 	sub	r2,r2,r3
 1044014:	8884d83a 	srl	r2,r17,r2
 1044018:	98d0983a 	sll	r8,r19,r3
 104401c:	88e2983a 	sll	r17,r17,r3
 1044020:	1204b03a 	or	r2,r2,r8
 1044024:	1c007416 	blt	r3,r16,10441f8 <__adddf3+0x388>
 1044028:	1c21c83a 	sub	r16,r3,r16
 104402c:	82000044 	addi	r8,r16,1
 1044030:	00c007c4 	movi	r3,31
 1044034:	1a009116 	blt	r3,r8,104427c <__adddf3+0x40c>
 1044038:	00c00804 	movi	r3,32
 104403c:	1a07c83a 	sub	r3,r3,r8
 1044040:	8a08d83a 	srl	r4,r17,r8
 1044044:	88e2983a 	sll	r17,r17,r3
 1044048:	10c6983a 	sll	r3,r2,r3
 104404c:	1210d83a 	srl	r8,r2,r8
 1044050:	8804c03a 	cmpne	r2,r17,zero
 1044054:	1906b03a 	or	r3,r3,r4
 1044058:	18a2b03a 	or	r17,r3,r2
 104405c:	0021883a 	mov	r16,zero
 1044060:	003fa206 	br	1043eec <__alt_data_end+0xfffc3eec>
 1044064:	1890b03a 	or	r8,r3,r2
 1044068:	40017d26 	beq	r8,zero,1044660 <__adddf3+0x7f0>
 104406c:	1011883a 	mov	r8,r2
 1044070:	1823883a 	mov	r17,r3
 1044074:	888001cc 	andi	r2,r17,7
 1044078:	103f9e1e 	bne	r2,zero,1043ef4 <__alt_data_end+0xfffc3ef4>
 104407c:	4004977a 	slli	r2,r8,29
 1044080:	8822d0fa 	srli	r17,r17,3
 1044084:	4010d0fa 	srli	r8,r8,3
 1044088:	9007883a 	mov	r3,r18
 104408c:	1444b03a 	or	r2,r2,r17
 1044090:	0101ffc4 	movi	r4,2047
 1044094:	81002426 	beq	r16,r4,1044128 <__adddf3+0x2b8>
 1044098:	8120703a 	and	r16,r16,r4
 104409c:	01000434 	movhi	r4,16
 10440a0:	213fffc4 	addi	r4,r4,-1
 10440a4:	4110703a 	and	r8,r8,r4
 10440a8:	003fa806 	br	1043f4c <__alt_data_end+0xfffc3f4c>
 10440ac:	8089c83a 	sub	r4,r16,r2
 10440b0:	01005e0e 	bge	zero,r4,104422c <__adddf3+0x3bc>
 10440b4:	10002b26 	beq	r2,zero,1044164 <__adddf3+0x2f4>
 10440b8:	0081ffc4 	movi	r2,2047
 10440bc:	80bf8b26 	beq	r16,r2,1043eec <__alt_data_end+0xfffc3eec>
 10440c0:	4a402034 	orhi	r9,r9,128
 10440c4:	00800e04 	movi	r2,56
 10440c8:	1100a40e 	bge	r2,r4,104435c <__adddf3+0x4ec>
 10440cc:	498cb03a 	or	r6,r9,r6
 10440d0:	300ac03a 	cmpne	r5,r6,zero
 10440d4:	0013883a 	mov	r9,zero
 10440d8:	2c4b883a 	add	r5,r5,r17
 10440dc:	2c63803a 	cmpltu	r17,r5,r17
 10440e0:	4a11883a 	add	r8,r9,r8
 10440e4:	8a11883a 	add	r8,r17,r8
 10440e8:	2823883a 	mov	r17,r5
 10440ec:	4080202c 	andhi	r2,r8,128
 10440f0:	103fe026 	beq	r2,zero,1044074 <__alt_data_end+0xfffc4074>
 10440f4:	84000044 	addi	r16,r16,1
 10440f8:	0081ffc4 	movi	r2,2047
 10440fc:	8080d226 	beq	r16,r2,1044448 <__adddf3+0x5d8>
 1044100:	00bfe034 	movhi	r2,65408
 1044104:	10bfffc4 	addi	r2,r2,-1
 1044108:	4090703a 	and	r8,r8,r2
 104410c:	880ad07a 	srli	r5,r17,1
 1044110:	400897fa 	slli	r4,r8,31
 1044114:	88c0004c 	andi	r3,r17,1
 1044118:	28e2b03a 	or	r17,r5,r3
 104411c:	4010d07a 	srli	r8,r8,1
 1044120:	2462b03a 	or	r17,r4,r17
 1044124:	003f7106 	br	1043eec <__alt_data_end+0xfffc3eec>
 1044128:	4088b03a 	or	r4,r8,r2
 104412c:	20014526 	beq	r4,zero,1044644 <__adddf3+0x7d4>
 1044130:	01000434 	movhi	r4,16
 1044134:	42000234 	orhi	r8,r8,8
 1044138:	213fffc4 	addi	r4,r4,-1
 104413c:	4110703a 	and	r8,r8,r4
 1044140:	003f8206 	br	1043f4c <__alt_data_end+0xfffc3f4c>
 1044144:	18ffffc4 	addi	r3,r3,-1
 1044148:	1800491e 	bne	r3,zero,1044270 <__adddf3+0x400>
 104414c:	898bc83a 	sub	r5,r17,r6
 1044150:	8963803a 	cmpltu	r17,r17,r5
 1044154:	4251c83a 	sub	r8,r8,r9
 1044158:	4451c83a 	sub	r8,r8,r17
 104415c:	2823883a 	mov	r17,r5
 1044160:	003f9f06 	br	1043fe0 <__alt_data_end+0xfffc3fe0>
 1044164:	4984b03a 	or	r2,r9,r6
 1044168:	103f6026 	beq	r2,zero,1043eec <__alt_data_end+0xfffc3eec>
 104416c:	213fffc4 	addi	r4,r4,-1
 1044170:	2000931e 	bne	r4,zero,10443c0 <__adddf3+0x550>
 1044174:	898d883a 	add	r6,r17,r6
 1044178:	3463803a 	cmpltu	r17,r6,r17
 104417c:	4251883a 	add	r8,r8,r9
 1044180:	8a11883a 	add	r8,r17,r8
 1044184:	3023883a 	mov	r17,r6
 1044188:	003fd806 	br	10440ec <__alt_data_end+0xfffc40ec>
 104418c:	1800541e 	bne	r3,zero,10442e0 <__adddf3+0x470>
 1044190:	80800044 	addi	r2,r16,1
 1044194:	1081ffcc 	andi	r2,r2,2047
 1044198:	00c00044 	movi	r3,1
 104419c:	1880a00e 	bge	r3,r2,1044420 <__adddf3+0x5b0>
 10441a0:	8989c83a 	sub	r4,r17,r6
 10441a4:	8905803a 	cmpltu	r2,r17,r4
 10441a8:	4267c83a 	sub	r19,r8,r9
 10441ac:	98a7c83a 	sub	r19,r19,r2
 10441b0:	9880202c 	andhi	r2,r19,128
 10441b4:	10006326 	beq	r2,zero,1044344 <__adddf3+0x4d4>
 10441b8:	3463c83a 	sub	r17,r6,r17
 10441bc:	4a07c83a 	sub	r3,r9,r8
 10441c0:	344d803a 	cmpltu	r6,r6,r17
 10441c4:	19a7c83a 	sub	r19,r3,r6
 10441c8:	3825883a 	mov	r18,r7
 10441cc:	983f8a1e 	bne	r19,zero,1043ff8 <__alt_data_end+0xfffc3ff8>
 10441d0:	8809883a 	mov	r4,r17
 10441d4:	10459f00 	call	10459f0 <__clzsi2>
 10441d8:	10800804 	addi	r2,r2,32
 10441dc:	10fffe04 	addi	r3,r2,-8
 10441e0:	010007c4 	movi	r4,31
 10441e4:	20ff890e 	bge	r4,r3,104400c <__alt_data_end+0xfffc400c>
 10441e8:	10bff604 	addi	r2,r2,-40
 10441ec:	8884983a 	sll	r2,r17,r2
 10441f0:	0023883a 	mov	r17,zero
 10441f4:	1c3f8c0e 	bge	r3,r16,1044028 <__alt_data_end+0xfffc4028>
 10441f8:	023fe034 	movhi	r8,65408
 10441fc:	423fffc4 	addi	r8,r8,-1
 1044200:	80e1c83a 	sub	r16,r16,r3
 1044204:	1210703a 	and	r8,r2,r8
 1044208:	003f3806 	br	1043eec <__alt_data_end+0xfffc3eec>
 104420c:	9007883a 	mov	r3,r18
 1044210:	0011883a 	mov	r8,zero
 1044214:	0005883a 	mov	r2,zero
 1044218:	003f4c06 	br	1043f4c <__alt_data_end+0xfffc3f4c>
 104421c:	498cb03a 	or	r6,r9,r6
 1044220:	300cc03a 	cmpne	r6,r6,zero
 1044224:	0007883a 	mov	r3,zero
 1044228:	003f6806 	br	1043fcc <__alt_data_end+0xfffc3fcc>
 104422c:	20009c1e 	bne	r4,zero,10444a0 <__adddf3+0x630>
 1044230:	80800044 	addi	r2,r16,1
 1044234:	1141ffcc 	andi	r5,r2,2047
 1044238:	01000044 	movi	r4,1
 104423c:	2140670e 	bge	r4,r5,10443dc <__adddf3+0x56c>
 1044240:	0101ffc4 	movi	r4,2047
 1044244:	11007f26 	beq	r2,r4,1044444 <__adddf3+0x5d4>
 1044248:	898d883a 	add	r6,r17,r6
 104424c:	4247883a 	add	r3,r8,r9
 1044250:	3451803a 	cmpltu	r8,r6,r17
 1044254:	40d1883a 	add	r8,r8,r3
 1044258:	402297fa 	slli	r17,r8,31
 104425c:	300cd07a 	srli	r6,r6,1
 1044260:	4010d07a 	srli	r8,r8,1
 1044264:	1021883a 	mov	r16,r2
 1044268:	89a2b03a 	or	r17,r17,r6
 104426c:	003f1f06 	br	1043eec <__alt_data_end+0xfffc3eec>
 1044270:	0081ffc4 	movi	r2,2047
 1044274:	80bf481e 	bne	r16,r2,1043f98 <__alt_data_end+0xfffc3f98>
 1044278:	003f1c06 	br	1043eec <__alt_data_end+0xfffc3eec>
 104427c:	843ff844 	addi	r16,r16,-31
 1044280:	01000804 	movi	r4,32
 1044284:	1406d83a 	srl	r3,r2,r16
 1044288:	41005026 	beq	r8,r4,10443cc <__adddf3+0x55c>
 104428c:	01001004 	movi	r4,64
 1044290:	2211c83a 	sub	r8,r4,r8
 1044294:	1204983a 	sll	r2,r2,r8
 1044298:	88a2b03a 	or	r17,r17,r2
 104429c:	8822c03a 	cmpne	r17,r17,zero
 10442a0:	1c62b03a 	or	r17,r3,r17
 10442a4:	0011883a 	mov	r8,zero
 10442a8:	0021883a 	mov	r16,zero
 10442ac:	003f7106 	br	1044074 <__alt_data_end+0xfffc4074>
 10442b0:	193ff804 	addi	r4,r3,-32
 10442b4:	00800804 	movi	r2,32
 10442b8:	4908d83a 	srl	r4,r9,r4
 10442bc:	18804526 	beq	r3,r2,10443d4 <__adddf3+0x564>
 10442c0:	00801004 	movi	r2,64
 10442c4:	10c5c83a 	sub	r2,r2,r3
 10442c8:	4886983a 	sll	r3,r9,r2
 10442cc:	198cb03a 	or	r6,r3,r6
 10442d0:	300cc03a 	cmpne	r6,r6,zero
 10442d4:	218cb03a 	or	r6,r4,r6
 10442d8:	0007883a 	mov	r3,zero
 10442dc:	003f3b06 	br	1043fcc <__alt_data_end+0xfffc3fcc>
 10442e0:	80002a26 	beq	r16,zero,104438c <__adddf3+0x51c>
 10442e4:	0101ffc4 	movi	r4,2047
 10442e8:	11006826 	beq	r2,r4,104448c <__adddf3+0x61c>
 10442ec:	00c7c83a 	sub	r3,zero,r3
 10442f0:	42002034 	orhi	r8,r8,128
 10442f4:	01000e04 	movi	r4,56
 10442f8:	20c07c16 	blt	r4,r3,10444ec <__adddf3+0x67c>
 10442fc:	010007c4 	movi	r4,31
 1044300:	20c0da16 	blt	r4,r3,104466c <__adddf3+0x7fc>
 1044304:	01000804 	movi	r4,32
 1044308:	20c9c83a 	sub	r4,r4,r3
 104430c:	4114983a 	sll	r10,r8,r4
 1044310:	88cad83a 	srl	r5,r17,r3
 1044314:	8908983a 	sll	r4,r17,r4
 1044318:	40c6d83a 	srl	r3,r8,r3
 104431c:	5162b03a 	or	r17,r10,r5
 1044320:	2008c03a 	cmpne	r4,r4,zero
 1044324:	8922b03a 	or	r17,r17,r4
 1044328:	3463c83a 	sub	r17,r6,r17
 104432c:	48c7c83a 	sub	r3,r9,r3
 1044330:	344d803a 	cmpltu	r6,r6,r17
 1044334:	1991c83a 	sub	r8,r3,r6
 1044338:	1021883a 	mov	r16,r2
 104433c:	3825883a 	mov	r18,r7
 1044340:	003f2706 	br	1043fe0 <__alt_data_end+0xfffc3fe0>
 1044344:	24d0b03a 	or	r8,r4,r19
 1044348:	40001b1e 	bne	r8,zero,10443b8 <__adddf3+0x548>
 104434c:	0005883a 	mov	r2,zero
 1044350:	0007883a 	mov	r3,zero
 1044354:	0021883a 	mov	r16,zero
 1044358:	003f4d06 	br	1044090 <__alt_data_end+0xfffc4090>
 104435c:	008007c4 	movi	r2,31
 1044360:	11003c16 	blt	r2,r4,1044454 <__adddf3+0x5e4>
 1044364:	00800804 	movi	r2,32
 1044368:	1105c83a 	sub	r2,r2,r4
 104436c:	488e983a 	sll	r7,r9,r2
 1044370:	310ad83a 	srl	r5,r6,r4
 1044374:	3084983a 	sll	r2,r6,r2
 1044378:	4912d83a 	srl	r9,r9,r4
 104437c:	394ab03a 	or	r5,r7,r5
 1044380:	1004c03a 	cmpne	r2,r2,zero
 1044384:	288ab03a 	or	r5,r5,r2
 1044388:	003f5306 	br	10440d8 <__alt_data_end+0xfffc40d8>
 104438c:	4448b03a 	or	r4,r8,r17
 1044390:	20003e26 	beq	r4,zero,104448c <__adddf3+0x61c>
 1044394:	00c6303a 	nor	r3,zero,r3
 1044398:	18003a1e 	bne	r3,zero,1044484 <__adddf3+0x614>
 104439c:	3463c83a 	sub	r17,r6,r17
 10443a0:	4a07c83a 	sub	r3,r9,r8
 10443a4:	344d803a 	cmpltu	r6,r6,r17
 10443a8:	1991c83a 	sub	r8,r3,r6
 10443ac:	1021883a 	mov	r16,r2
 10443b0:	3825883a 	mov	r18,r7
 10443b4:	003f0a06 	br	1043fe0 <__alt_data_end+0xfffc3fe0>
 10443b8:	2023883a 	mov	r17,r4
 10443bc:	003f0d06 	br	1043ff4 <__alt_data_end+0xfffc3ff4>
 10443c0:	0081ffc4 	movi	r2,2047
 10443c4:	80bf3f1e 	bne	r16,r2,10440c4 <__alt_data_end+0xfffc40c4>
 10443c8:	003ec806 	br	1043eec <__alt_data_end+0xfffc3eec>
 10443cc:	0005883a 	mov	r2,zero
 10443d0:	003fb106 	br	1044298 <__alt_data_end+0xfffc4298>
 10443d4:	0007883a 	mov	r3,zero
 10443d8:	003fbc06 	br	10442cc <__alt_data_end+0xfffc42cc>
 10443dc:	4444b03a 	or	r2,r8,r17
 10443e0:	8000871e 	bne	r16,zero,1044600 <__adddf3+0x790>
 10443e4:	1000ba26 	beq	r2,zero,10446d0 <__adddf3+0x860>
 10443e8:	4984b03a 	or	r2,r9,r6
 10443ec:	103ebf26 	beq	r2,zero,1043eec <__alt_data_end+0xfffc3eec>
 10443f0:	8985883a 	add	r2,r17,r6
 10443f4:	4247883a 	add	r3,r8,r9
 10443f8:	1451803a 	cmpltu	r8,r2,r17
 10443fc:	40d1883a 	add	r8,r8,r3
 1044400:	40c0202c 	andhi	r3,r8,128
 1044404:	1023883a 	mov	r17,r2
 1044408:	183f1a26 	beq	r3,zero,1044074 <__alt_data_end+0xfffc4074>
 104440c:	00bfe034 	movhi	r2,65408
 1044410:	10bfffc4 	addi	r2,r2,-1
 1044414:	2021883a 	mov	r16,r4
 1044418:	4090703a 	and	r8,r8,r2
 104441c:	003eb306 	br	1043eec <__alt_data_end+0xfffc3eec>
 1044420:	4444b03a 	or	r2,r8,r17
 1044424:	8000291e 	bne	r16,zero,10444cc <__adddf3+0x65c>
 1044428:	10004b1e 	bne	r2,zero,1044558 <__adddf3+0x6e8>
 104442c:	4990b03a 	or	r8,r9,r6
 1044430:	40008b26 	beq	r8,zero,1044660 <__adddf3+0x7f0>
 1044434:	4811883a 	mov	r8,r9
 1044438:	3023883a 	mov	r17,r6
 104443c:	3825883a 	mov	r18,r7
 1044440:	003eaa06 	br	1043eec <__alt_data_end+0xfffc3eec>
 1044444:	1021883a 	mov	r16,r2
 1044448:	0011883a 	mov	r8,zero
 104444c:	0005883a 	mov	r2,zero
 1044450:	003f0f06 	br	1044090 <__alt_data_end+0xfffc4090>
 1044454:	217ff804 	addi	r5,r4,-32
 1044458:	00800804 	movi	r2,32
 104445c:	494ad83a 	srl	r5,r9,r5
 1044460:	20807d26 	beq	r4,r2,1044658 <__adddf3+0x7e8>
 1044464:	00801004 	movi	r2,64
 1044468:	1109c83a 	sub	r4,r2,r4
 104446c:	4912983a 	sll	r9,r9,r4
 1044470:	498cb03a 	or	r6,r9,r6
 1044474:	300cc03a 	cmpne	r6,r6,zero
 1044478:	298ab03a 	or	r5,r5,r6
 104447c:	0013883a 	mov	r9,zero
 1044480:	003f1506 	br	10440d8 <__alt_data_end+0xfffc40d8>
 1044484:	0101ffc4 	movi	r4,2047
 1044488:	113f9a1e 	bne	r2,r4,10442f4 <__alt_data_end+0xfffc42f4>
 104448c:	4811883a 	mov	r8,r9
 1044490:	3023883a 	mov	r17,r6
 1044494:	1021883a 	mov	r16,r2
 1044498:	3825883a 	mov	r18,r7
 104449c:	003e9306 	br	1043eec <__alt_data_end+0xfffc3eec>
 10444a0:	8000161e 	bne	r16,zero,10444fc <__adddf3+0x68c>
 10444a4:	444ab03a 	or	r5,r8,r17
 10444a8:	28005126 	beq	r5,zero,10445f0 <__adddf3+0x780>
 10444ac:	0108303a 	nor	r4,zero,r4
 10444b0:	20004d1e 	bne	r4,zero,10445e8 <__adddf3+0x778>
 10444b4:	89a3883a 	add	r17,r17,r6
 10444b8:	4253883a 	add	r9,r8,r9
 10444bc:	898d803a 	cmpltu	r6,r17,r6
 10444c0:	3251883a 	add	r8,r6,r9
 10444c4:	1021883a 	mov	r16,r2
 10444c8:	003f0806 	br	10440ec <__alt_data_end+0xfffc40ec>
 10444cc:	1000301e 	bne	r2,zero,1044590 <__adddf3+0x720>
 10444d0:	4984b03a 	or	r2,r9,r6
 10444d4:	10007126 	beq	r2,zero,104469c <__adddf3+0x82c>
 10444d8:	4811883a 	mov	r8,r9
 10444dc:	3023883a 	mov	r17,r6
 10444e0:	3825883a 	mov	r18,r7
 10444e4:	0401ffc4 	movi	r16,2047
 10444e8:	003e8006 	br	1043eec <__alt_data_end+0xfffc3eec>
 10444ec:	4462b03a 	or	r17,r8,r17
 10444f0:	8822c03a 	cmpne	r17,r17,zero
 10444f4:	0007883a 	mov	r3,zero
 10444f8:	003f8b06 	br	1044328 <__alt_data_end+0xfffc4328>
 10444fc:	0141ffc4 	movi	r5,2047
 1044500:	11403b26 	beq	r2,r5,10445f0 <__adddf3+0x780>
 1044504:	0109c83a 	sub	r4,zero,r4
 1044508:	42002034 	orhi	r8,r8,128
 104450c:	01400e04 	movi	r5,56
 1044510:	29006716 	blt	r5,r4,10446b0 <__adddf3+0x840>
 1044514:	014007c4 	movi	r5,31
 1044518:	29007016 	blt	r5,r4,10446dc <__adddf3+0x86c>
 104451c:	01400804 	movi	r5,32
 1044520:	290bc83a 	sub	r5,r5,r4
 1044524:	4154983a 	sll	r10,r8,r5
 1044528:	890ed83a 	srl	r7,r17,r4
 104452c:	894a983a 	sll	r5,r17,r5
 1044530:	4108d83a 	srl	r4,r8,r4
 1044534:	51e2b03a 	or	r17,r10,r7
 1044538:	280ac03a 	cmpne	r5,r5,zero
 104453c:	8962b03a 	or	r17,r17,r5
 1044540:	89a3883a 	add	r17,r17,r6
 1044544:	2253883a 	add	r9,r4,r9
 1044548:	898d803a 	cmpltu	r6,r17,r6
 104454c:	3251883a 	add	r8,r6,r9
 1044550:	1021883a 	mov	r16,r2
 1044554:	003ee506 	br	10440ec <__alt_data_end+0xfffc40ec>
 1044558:	4984b03a 	or	r2,r9,r6
 104455c:	103e6326 	beq	r2,zero,1043eec <__alt_data_end+0xfffc3eec>
 1044560:	8987c83a 	sub	r3,r17,r6
 1044564:	88c9803a 	cmpltu	r4,r17,r3
 1044568:	4245c83a 	sub	r2,r8,r9
 104456c:	1105c83a 	sub	r2,r2,r4
 1044570:	1100202c 	andhi	r4,r2,128
 1044574:	203ebb26 	beq	r4,zero,1044064 <__alt_data_end+0xfffc4064>
 1044578:	3463c83a 	sub	r17,r6,r17
 104457c:	4a07c83a 	sub	r3,r9,r8
 1044580:	344d803a 	cmpltu	r6,r6,r17
 1044584:	1991c83a 	sub	r8,r3,r6
 1044588:	3825883a 	mov	r18,r7
 104458c:	003e5706 	br	1043eec <__alt_data_end+0xfffc3eec>
 1044590:	4984b03a 	or	r2,r9,r6
 1044594:	10002e26 	beq	r2,zero,1044650 <__adddf3+0x7e0>
 1044598:	4004d0fa 	srli	r2,r8,3
 104459c:	8822d0fa 	srli	r17,r17,3
 10445a0:	4010977a 	slli	r8,r8,29
 10445a4:	10c0022c 	andhi	r3,r2,8
 10445a8:	4462b03a 	or	r17,r8,r17
 10445ac:	18000826 	beq	r3,zero,10445d0 <__adddf3+0x760>
 10445b0:	4808d0fa 	srli	r4,r9,3
 10445b4:	20c0022c 	andhi	r3,r4,8
 10445b8:	1800051e 	bne	r3,zero,10445d0 <__adddf3+0x760>
 10445bc:	300cd0fa 	srli	r6,r6,3
 10445c0:	4806977a 	slli	r3,r9,29
 10445c4:	2005883a 	mov	r2,r4
 10445c8:	3825883a 	mov	r18,r7
 10445cc:	19a2b03a 	or	r17,r3,r6
 10445d0:	8810d77a 	srli	r8,r17,29
 10445d4:	100490fa 	slli	r2,r2,3
 10445d8:	882290fa 	slli	r17,r17,3
 10445dc:	0401ffc4 	movi	r16,2047
 10445e0:	4090b03a 	or	r8,r8,r2
 10445e4:	003e4106 	br	1043eec <__alt_data_end+0xfffc3eec>
 10445e8:	0141ffc4 	movi	r5,2047
 10445ec:	117fc71e 	bne	r2,r5,104450c <__alt_data_end+0xfffc450c>
 10445f0:	4811883a 	mov	r8,r9
 10445f4:	3023883a 	mov	r17,r6
 10445f8:	1021883a 	mov	r16,r2
 10445fc:	003e3b06 	br	1043eec <__alt_data_end+0xfffc3eec>
 1044600:	10002f26 	beq	r2,zero,10446c0 <__adddf3+0x850>
 1044604:	4984b03a 	or	r2,r9,r6
 1044608:	10001126 	beq	r2,zero,1044650 <__adddf3+0x7e0>
 104460c:	4004d0fa 	srli	r2,r8,3
 1044610:	8822d0fa 	srli	r17,r17,3
 1044614:	4010977a 	slli	r8,r8,29
 1044618:	10c0022c 	andhi	r3,r2,8
 104461c:	4462b03a 	or	r17,r8,r17
 1044620:	183feb26 	beq	r3,zero,10445d0 <__alt_data_end+0xfffc45d0>
 1044624:	4808d0fa 	srli	r4,r9,3
 1044628:	20c0022c 	andhi	r3,r4,8
 104462c:	183fe81e 	bne	r3,zero,10445d0 <__alt_data_end+0xfffc45d0>
 1044630:	300cd0fa 	srli	r6,r6,3
 1044634:	4806977a 	slli	r3,r9,29
 1044638:	2005883a 	mov	r2,r4
 104463c:	19a2b03a 	or	r17,r3,r6
 1044640:	003fe306 	br	10445d0 <__alt_data_end+0xfffc45d0>
 1044644:	0011883a 	mov	r8,zero
 1044648:	0005883a 	mov	r2,zero
 104464c:	003e3f06 	br	1043f4c <__alt_data_end+0xfffc3f4c>
 1044650:	0401ffc4 	movi	r16,2047
 1044654:	003e2506 	br	1043eec <__alt_data_end+0xfffc3eec>
 1044658:	0013883a 	mov	r9,zero
 104465c:	003f8406 	br	1044470 <__alt_data_end+0xfffc4470>
 1044660:	0005883a 	mov	r2,zero
 1044664:	0007883a 	mov	r3,zero
 1044668:	003e8906 	br	1044090 <__alt_data_end+0xfffc4090>
 104466c:	197ff804 	addi	r5,r3,-32
 1044670:	01000804 	movi	r4,32
 1044674:	414ad83a 	srl	r5,r8,r5
 1044678:	19002426 	beq	r3,r4,104470c <__adddf3+0x89c>
 104467c:	01001004 	movi	r4,64
 1044680:	20c7c83a 	sub	r3,r4,r3
 1044684:	40c6983a 	sll	r3,r8,r3
 1044688:	1c46b03a 	or	r3,r3,r17
 104468c:	1806c03a 	cmpne	r3,r3,zero
 1044690:	28e2b03a 	or	r17,r5,r3
 1044694:	0007883a 	mov	r3,zero
 1044698:	003f2306 	br	1044328 <__alt_data_end+0xfffc4328>
 104469c:	0007883a 	mov	r3,zero
 10446a0:	5811883a 	mov	r8,r11
 10446a4:	00bfffc4 	movi	r2,-1
 10446a8:	0401ffc4 	movi	r16,2047
 10446ac:	003e7806 	br	1044090 <__alt_data_end+0xfffc4090>
 10446b0:	4462b03a 	or	r17,r8,r17
 10446b4:	8822c03a 	cmpne	r17,r17,zero
 10446b8:	0009883a 	mov	r4,zero
 10446bc:	003fa006 	br	1044540 <__alt_data_end+0xfffc4540>
 10446c0:	4811883a 	mov	r8,r9
 10446c4:	3023883a 	mov	r17,r6
 10446c8:	0401ffc4 	movi	r16,2047
 10446cc:	003e0706 	br	1043eec <__alt_data_end+0xfffc3eec>
 10446d0:	4811883a 	mov	r8,r9
 10446d4:	3023883a 	mov	r17,r6
 10446d8:	003e0406 	br	1043eec <__alt_data_end+0xfffc3eec>
 10446dc:	21fff804 	addi	r7,r4,-32
 10446e0:	01400804 	movi	r5,32
 10446e4:	41ced83a 	srl	r7,r8,r7
 10446e8:	21400a26 	beq	r4,r5,1044714 <__adddf3+0x8a4>
 10446ec:	01401004 	movi	r5,64
 10446f0:	2909c83a 	sub	r4,r5,r4
 10446f4:	4108983a 	sll	r4,r8,r4
 10446f8:	2448b03a 	or	r4,r4,r17
 10446fc:	2008c03a 	cmpne	r4,r4,zero
 1044700:	3922b03a 	or	r17,r7,r4
 1044704:	0009883a 	mov	r4,zero
 1044708:	003f8d06 	br	1044540 <__alt_data_end+0xfffc4540>
 104470c:	0007883a 	mov	r3,zero
 1044710:	003fdd06 	br	1044688 <__alt_data_end+0xfffc4688>
 1044714:	0009883a 	mov	r4,zero
 1044718:	003ff706 	br	10446f8 <__alt_data_end+0xfffc46f8>

0104471c <__eqdf2>:
 104471c:	2804d53a 	srli	r2,r5,20
 1044720:	3806d53a 	srli	r3,r7,20
 1044724:	02000434 	movhi	r8,16
 1044728:	423fffc4 	addi	r8,r8,-1
 104472c:	1081ffcc 	andi	r2,r2,2047
 1044730:	0281ffc4 	movi	r10,2047
 1044734:	2a12703a 	and	r9,r5,r8
 1044738:	18c1ffcc 	andi	r3,r3,2047
 104473c:	3a10703a 	and	r8,r7,r8
 1044740:	280ad7fa 	srli	r5,r5,31
 1044744:	380ed7fa 	srli	r7,r7,31
 1044748:	12801026 	beq	r2,r10,104478c <__eqdf2+0x70>
 104474c:	0281ffc4 	movi	r10,2047
 1044750:	1a800a26 	beq	r3,r10,104477c <__eqdf2+0x60>
 1044754:	10c00226 	beq	r2,r3,1044760 <__eqdf2+0x44>
 1044758:	00800044 	movi	r2,1
 104475c:	f800283a 	ret
 1044760:	4a3ffd1e 	bne	r9,r8,1044758 <__alt_data_end+0xfffc4758>
 1044764:	21bffc1e 	bne	r4,r6,1044758 <__alt_data_end+0xfffc4758>
 1044768:	29c00c26 	beq	r5,r7,104479c <__eqdf2+0x80>
 104476c:	103ffa1e 	bne	r2,zero,1044758 <__alt_data_end+0xfffc4758>
 1044770:	2244b03a 	or	r2,r4,r9
 1044774:	1004c03a 	cmpne	r2,r2,zero
 1044778:	f800283a 	ret
 104477c:	3214b03a 	or	r10,r6,r8
 1044780:	503ff426 	beq	r10,zero,1044754 <__alt_data_end+0xfffc4754>
 1044784:	00800044 	movi	r2,1
 1044788:	f800283a 	ret
 104478c:	2254b03a 	or	r10,r4,r9
 1044790:	503fee26 	beq	r10,zero,104474c <__alt_data_end+0xfffc474c>
 1044794:	00800044 	movi	r2,1
 1044798:	f800283a 	ret
 104479c:	0005883a 	mov	r2,zero
 10447a0:	f800283a 	ret

010447a4 <__gedf2>:
 10447a4:	2804d53a 	srli	r2,r5,20
 10447a8:	3806d53a 	srli	r3,r7,20
 10447ac:	02000434 	movhi	r8,16
 10447b0:	423fffc4 	addi	r8,r8,-1
 10447b4:	1081ffcc 	andi	r2,r2,2047
 10447b8:	0241ffc4 	movi	r9,2047
 10447bc:	2a14703a 	and	r10,r5,r8
 10447c0:	18c1ffcc 	andi	r3,r3,2047
 10447c4:	3a10703a 	and	r8,r7,r8
 10447c8:	280ad7fa 	srli	r5,r5,31
 10447cc:	380ed7fa 	srli	r7,r7,31
 10447d0:	12401d26 	beq	r2,r9,1044848 <__gedf2+0xa4>
 10447d4:	0241ffc4 	movi	r9,2047
 10447d8:	1a401226 	beq	r3,r9,1044824 <__gedf2+0x80>
 10447dc:	1000081e 	bne	r2,zero,1044800 <__gedf2+0x5c>
 10447e0:	2296b03a 	or	r11,r4,r10
 10447e4:	5813003a 	cmpeq	r9,r11,zero
 10447e8:	1800091e 	bne	r3,zero,1044810 <__gedf2+0x6c>
 10447ec:	3218b03a 	or	r12,r6,r8
 10447f0:	6000071e 	bne	r12,zero,1044810 <__gedf2+0x6c>
 10447f4:	0005883a 	mov	r2,zero
 10447f8:	5800101e 	bne	r11,zero,104483c <__gedf2+0x98>
 10447fc:	f800283a 	ret
 1044800:	18000c1e 	bne	r3,zero,1044834 <__gedf2+0x90>
 1044804:	3212b03a 	or	r9,r6,r8
 1044808:	48000c26 	beq	r9,zero,104483c <__gedf2+0x98>
 104480c:	0013883a 	mov	r9,zero
 1044810:	39c03fcc 	andi	r7,r7,255
 1044814:	48000826 	beq	r9,zero,1044838 <__gedf2+0x94>
 1044818:	38000926 	beq	r7,zero,1044840 <__gedf2+0x9c>
 104481c:	00800044 	movi	r2,1
 1044820:	f800283a 	ret
 1044824:	3212b03a 	or	r9,r6,r8
 1044828:	483fec26 	beq	r9,zero,10447dc <__alt_data_end+0xfffc47dc>
 104482c:	00bfff84 	movi	r2,-2
 1044830:	f800283a 	ret
 1044834:	39c03fcc 	andi	r7,r7,255
 1044838:	29c00626 	beq	r5,r7,1044854 <__gedf2+0xb0>
 104483c:	283ff726 	beq	r5,zero,104481c <__alt_data_end+0xfffc481c>
 1044840:	00bfffc4 	movi	r2,-1
 1044844:	f800283a 	ret
 1044848:	2292b03a 	or	r9,r4,r10
 104484c:	483fe126 	beq	r9,zero,10447d4 <__alt_data_end+0xfffc47d4>
 1044850:	003ff606 	br	104482c <__alt_data_end+0xfffc482c>
 1044854:	18bff916 	blt	r3,r2,104483c <__alt_data_end+0xfffc483c>
 1044858:	10c00316 	blt	r2,r3,1044868 <__gedf2+0xc4>
 104485c:	42bff736 	bltu	r8,r10,104483c <__alt_data_end+0xfffc483c>
 1044860:	52000326 	beq	r10,r8,1044870 <__gedf2+0xcc>
 1044864:	5200042e 	bgeu	r10,r8,1044878 <__gedf2+0xd4>
 1044868:	283fec1e 	bne	r5,zero,104481c <__alt_data_end+0xfffc481c>
 104486c:	003ff406 	br	1044840 <__alt_data_end+0xfffc4840>
 1044870:	313ff236 	bltu	r6,r4,104483c <__alt_data_end+0xfffc483c>
 1044874:	21bffc36 	bltu	r4,r6,1044868 <__alt_data_end+0xfffc4868>
 1044878:	0005883a 	mov	r2,zero
 104487c:	f800283a 	ret

01044880 <__muldf3>:
 1044880:	defff304 	addi	sp,sp,-52
 1044884:	2804d53a 	srli	r2,r5,20
 1044888:	dd800915 	stw	r22,36(sp)
 104488c:	282cd7fa 	srli	r22,r5,31
 1044890:	dc000315 	stw	r16,12(sp)
 1044894:	04000434 	movhi	r16,16
 1044898:	dd400815 	stw	r21,32(sp)
 104489c:	dc800515 	stw	r18,20(sp)
 10448a0:	843fffc4 	addi	r16,r16,-1
 10448a4:	dfc00c15 	stw	ra,48(sp)
 10448a8:	df000b15 	stw	fp,44(sp)
 10448ac:	ddc00a15 	stw	r23,40(sp)
 10448b0:	dd000715 	stw	r20,28(sp)
 10448b4:	dcc00615 	stw	r19,24(sp)
 10448b8:	dc400415 	stw	r17,16(sp)
 10448bc:	1481ffcc 	andi	r18,r2,2047
 10448c0:	2c20703a 	and	r16,r5,r16
 10448c4:	b02b883a 	mov	r21,r22
 10448c8:	b2403fcc 	andi	r9,r22,255
 10448cc:	90006026 	beq	r18,zero,1044a50 <__muldf3+0x1d0>
 10448d0:	0081ffc4 	movi	r2,2047
 10448d4:	2029883a 	mov	r20,r4
 10448d8:	90803626 	beq	r18,r2,10449b4 <__muldf3+0x134>
 10448dc:	80800434 	orhi	r2,r16,16
 10448e0:	100490fa 	slli	r2,r2,3
 10448e4:	2020d77a 	srli	r16,r4,29
 10448e8:	202890fa 	slli	r20,r4,3
 10448ec:	94bf0044 	addi	r18,r18,-1023
 10448f0:	80a0b03a 	or	r16,r16,r2
 10448f4:	0027883a 	mov	r19,zero
 10448f8:	0039883a 	mov	fp,zero
 10448fc:	3804d53a 	srli	r2,r7,20
 1044900:	382ed7fa 	srli	r23,r7,31
 1044904:	04400434 	movhi	r17,16
 1044908:	8c7fffc4 	addi	r17,r17,-1
 104490c:	1081ffcc 	andi	r2,r2,2047
 1044910:	3011883a 	mov	r8,r6
 1044914:	3c62703a 	and	r17,r7,r17
 1044918:	ba803fcc 	andi	r10,r23,255
 104491c:	10006d26 	beq	r2,zero,1044ad4 <__muldf3+0x254>
 1044920:	00c1ffc4 	movi	r3,2047
 1044924:	10c06526 	beq	r2,r3,1044abc <__muldf3+0x23c>
 1044928:	88c00434 	orhi	r3,r17,16
 104492c:	180690fa 	slli	r3,r3,3
 1044930:	3022d77a 	srli	r17,r6,29
 1044934:	301090fa 	slli	r8,r6,3
 1044938:	10bf0044 	addi	r2,r2,-1023
 104493c:	88e2b03a 	or	r17,r17,r3
 1044940:	000b883a 	mov	r5,zero
 1044944:	9085883a 	add	r2,r18,r2
 1044948:	2cc8b03a 	or	r4,r5,r19
 104494c:	00c003c4 	movi	r3,15
 1044950:	bdacf03a 	xor	r22,r23,r22
 1044954:	12c00044 	addi	r11,r2,1
 1044958:	19009936 	bltu	r3,r4,1044bc0 <__muldf3+0x340>
 104495c:	200890ba 	slli	r4,r4,2
 1044960:	00c04134 	movhi	r3,260
 1044964:	18d25d04 	addi	r3,r3,18804
 1044968:	20c9883a 	add	r4,r4,r3
 104496c:	20c00017 	ldw	r3,0(r4)
 1044970:	1800683a 	jmp	r3
 1044974:	01044bc0 	call	1044bc <__alt_mem_onchip_memory2-0xf3bb44>
 1044978:	010449d4 	movui	r4,4391
 104497c:	010449d4 	movui	r4,4391
 1044980:	010449d0 	cmplti	r4,zero,4391
 1044984:	01044b9c 	xori	r4,zero,4398
 1044988:	01044b9c 	xori	r4,zero,4398
 104498c:	01044b84 	movi	r4,4398
 1044990:	010449d0 	cmplti	r4,zero,4391
 1044994:	01044b9c 	xori	r4,zero,4398
 1044998:	01044b84 	movi	r4,4398
 104499c:	01044b9c 	xori	r4,zero,4398
 10449a0:	010449d0 	cmplti	r4,zero,4391
 10449a4:	01044bac 	andhi	r4,zero,4398
 10449a8:	01044bac 	andhi	r4,zero,4398
 10449ac:	01044bac 	andhi	r4,zero,4398
 10449b0:	01044dc8 	cmpgei	r4,zero,4407
 10449b4:	2404b03a 	or	r2,r4,r16
 10449b8:	10006f1e 	bne	r2,zero,1044b78 <__muldf3+0x2f8>
 10449bc:	04c00204 	movi	r19,8
 10449c0:	0021883a 	mov	r16,zero
 10449c4:	0029883a 	mov	r20,zero
 10449c8:	07000084 	movi	fp,2
 10449cc:	003fcb06 	br	10448fc <__alt_data_end+0xfffc48fc>
 10449d0:	502d883a 	mov	r22,r10
 10449d4:	00800084 	movi	r2,2
 10449d8:	28805726 	beq	r5,r2,1044b38 <__muldf3+0x2b8>
 10449dc:	008000c4 	movi	r2,3
 10449e0:	28816626 	beq	r5,r2,1044f7c <__muldf3+0x6fc>
 10449e4:	00800044 	movi	r2,1
 10449e8:	2881411e 	bne	r5,r2,1044ef0 <__muldf3+0x670>
 10449ec:	b02b883a 	mov	r21,r22
 10449f0:	0005883a 	mov	r2,zero
 10449f4:	000b883a 	mov	r5,zero
 10449f8:	0029883a 	mov	r20,zero
 10449fc:	1004953a 	slli	r2,r2,20
 1044a00:	a8c03fcc 	andi	r3,r21,255
 1044a04:	04400434 	movhi	r17,16
 1044a08:	8c7fffc4 	addi	r17,r17,-1
 1044a0c:	180697fa 	slli	r3,r3,31
 1044a10:	2c4a703a 	and	r5,r5,r17
 1044a14:	288ab03a 	or	r5,r5,r2
 1044a18:	28c6b03a 	or	r3,r5,r3
 1044a1c:	a005883a 	mov	r2,r20
 1044a20:	dfc00c17 	ldw	ra,48(sp)
 1044a24:	df000b17 	ldw	fp,44(sp)
 1044a28:	ddc00a17 	ldw	r23,40(sp)
 1044a2c:	dd800917 	ldw	r22,36(sp)
 1044a30:	dd400817 	ldw	r21,32(sp)
 1044a34:	dd000717 	ldw	r20,28(sp)
 1044a38:	dcc00617 	ldw	r19,24(sp)
 1044a3c:	dc800517 	ldw	r18,20(sp)
 1044a40:	dc400417 	ldw	r17,16(sp)
 1044a44:	dc000317 	ldw	r16,12(sp)
 1044a48:	dec00d04 	addi	sp,sp,52
 1044a4c:	f800283a 	ret
 1044a50:	2404b03a 	or	r2,r4,r16
 1044a54:	2027883a 	mov	r19,r4
 1044a58:	10004226 	beq	r2,zero,1044b64 <__muldf3+0x2e4>
 1044a5c:	8000fc26 	beq	r16,zero,1044e50 <__muldf3+0x5d0>
 1044a60:	8009883a 	mov	r4,r16
 1044a64:	d9800215 	stw	r6,8(sp)
 1044a68:	d9c00015 	stw	r7,0(sp)
 1044a6c:	da400115 	stw	r9,4(sp)
 1044a70:	10459f00 	call	10459f0 <__clzsi2>
 1044a74:	d9800217 	ldw	r6,8(sp)
 1044a78:	d9c00017 	ldw	r7,0(sp)
 1044a7c:	da400117 	ldw	r9,4(sp)
 1044a80:	113ffd44 	addi	r4,r2,-11
 1044a84:	00c00704 	movi	r3,28
 1044a88:	1900ed16 	blt	r3,r4,1044e40 <__muldf3+0x5c0>
 1044a8c:	00c00744 	movi	r3,29
 1044a90:	147ffe04 	addi	r17,r2,-8
 1044a94:	1907c83a 	sub	r3,r3,r4
 1044a98:	8460983a 	sll	r16,r16,r17
 1044a9c:	98c6d83a 	srl	r3,r19,r3
 1044aa0:	9c68983a 	sll	r20,r19,r17
 1044aa4:	1c20b03a 	or	r16,r3,r16
 1044aa8:	1080fcc4 	addi	r2,r2,1011
 1044aac:	00a5c83a 	sub	r18,zero,r2
 1044ab0:	0027883a 	mov	r19,zero
 1044ab4:	0039883a 	mov	fp,zero
 1044ab8:	003f9006 	br	10448fc <__alt_data_end+0xfffc48fc>
 1044abc:	3446b03a 	or	r3,r6,r17
 1044ac0:	1800261e 	bne	r3,zero,1044b5c <__muldf3+0x2dc>
 1044ac4:	0023883a 	mov	r17,zero
 1044ac8:	0011883a 	mov	r8,zero
 1044acc:	01400084 	movi	r5,2
 1044ad0:	003f9c06 	br	1044944 <__alt_data_end+0xfffc4944>
 1044ad4:	3446b03a 	or	r3,r6,r17
 1044ad8:	18001c26 	beq	r3,zero,1044b4c <__muldf3+0x2cc>
 1044adc:	8800ce26 	beq	r17,zero,1044e18 <__muldf3+0x598>
 1044ae0:	8809883a 	mov	r4,r17
 1044ae4:	d9800215 	stw	r6,8(sp)
 1044ae8:	da400115 	stw	r9,4(sp)
 1044aec:	da800015 	stw	r10,0(sp)
 1044af0:	10459f00 	call	10459f0 <__clzsi2>
 1044af4:	d9800217 	ldw	r6,8(sp)
 1044af8:	da400117 	ldw	r9,4(sp)
 1044afc:	da800017 	ldw	r10,0(sp)
 1044b00:	113ffd44 	addi	r4,r2,-11
 1044b04:	00c00704 	movi	r3,28
 1044b08:	1900bf16 	blt	r3,r4,1044e08 <__muldf3+0x588>
 1044b0c:	00c00744 	movi	r3,29
 1044b10:	123ffe04 	addi	r8,r2,-8
 1044b14:	1907c83a 	sub	r3,r3,r4
 1044b18:	8a22983a 	sll	r17,r17,r8
 1044b1c:	30c6d83a 	srl	r3,r6,r3
 1044b20:	3210983a 	sll	r8,r6,r8
 1044b24:	1c62b03a 	or	r17,r3,r17
 1044b28:	1080fcc4 	addi	r2,r2,1011
 1044b2c:	0085c83a 	sub	r2,zero,r2
 1044b30:	000b883a 	mov	r5,zero
 1044b34:	003f8306 	br	1044944 <__alt_data_end+0xfffc4944>
 1044b38:	b02b883a 	mov	r21,r22
 1044b3c:	0081ffc4 	movi	r2,2047
 1044b40:	000b883a 	mov	r5,zero
 1044b44:	0029883a 	mov	r20,zero
 1044b48:	003fac06 	br	10449fc <__alt_data_end+0xfffc49fc>
 1044b4c:	0023883a 	mov	r17,zero
 1044b50:	0011883a 	mov	r8,zero
 1044b54:	01400044 	movi	r5,1
 1044b58:	003f7a06 	br	1044944 <__alt_data_end+0xfffc4944>
 1044b5c:	014000c4 	movi	r5,3
 1044b60:	003f7806 	br	1044944 <__alt_data_end+0xfffc4944>
 1044b64:	04c00104 	movi	r19,4
 1044b68:	0021883a 	mov	r16,zero
 1044b6c:	0029883a 	mov	r20,zero
 1044b70:	07000044 	movi	fp,1
 1044b74:	003f6106 	br	10448fc <__alt_data_end+0xfffc48fc>
 1044b78:	04c00304 	movi	r19,12
 1044b7c:	070000c4 	movi	fp,3
 1044b80:	003f5e06 	br	10448fc <__alt_data_end+0xfffc48fc>
 1044b84:	01400434 	movhi	r5,16
 1044b88:	002b883a 	mov	r21,zero
 1044b8c:	297fffc4 	addi	r5,r5,-1
 1044b90:	053fffc4 	movi	r20,-1
 1044b94:	0081ffc4 	movi	r2,2047
 1044b98:	003f9806 	br	10449fc <__alt_data_end+0xfffc49fc>
 1044b9c:	8023883a 	mov	r17,r16
 1044ba0:	a011883a 	mov	r8,r20
 1044ba4:	e00b883a 	mov	r5,fp
 1044ba8:	003f8a06 	br	10449d4 <__alt_data_end+0xfffc49d4>
 1044bac:	8023883a 	mov	r17,r16
 1044bb0:	a011883a 	mov	r8,r20
 1044bb4:	482d883a 	mov	r22,r9
 1044bb8:	e00b883a 	mov	r5,fp
 1044bbc:	003f8506 	br	10449d4 <__alt_data_end+0xfffc49d4>
 1044bc0:	a00ad43a 	srli	r5,r20,16
 1044bc4:	401ad43a 	srli	r13,r8,16
 1044bc8:	a53fffcc 	andi	r20,r20,65535
 1044bcc:	423fffcc 	andi	r8,r8,65535
 1044bd0:	4519383a 	mul	r12,r8,r20
 1044bd4:	4147383a 	mul	r3,r8,r5
 1044bd8:	6d09383a 	mul	r4,r13,r20
 1044bdc:	600cd43a 	srli	r6,r12,16
 1044be0:	2b5d383a 	mul	r14,r5,r13
 1044be4:	20c9883a 	add	r4,r4,r3
 1044be8:	310d883a 	add	r6,r6,r4
 1044bec:	30c0022e 	bgeu	r6,r3,1044bf8 <__muldf3+0x378>
 1044bf0:	00c00074 	movhi	r3,1
 1044bf4:	70dd883a 	add	r14,r14,r3
 1044bf8:	8826d43a 	srli	r19,r17,16
 1044bfc:	8bffffcc 	andi	r15,r17,65535
 1044c00:	7d23383a 	mul	r17,r15,r20
 1044c04:	7949383a 	mul	r4,r15,r5
 1044c08:	9d29383a 	mul	r20,r19,r20
 1044c0c:	8814d43a 	srli	r10,r17,16
 1044c10:	3012943a 	slli	r9,r6,16
 1044c14:	a129883a 	add	r20,r20,r4
 1044c18:	633fffcc 	andi	r12,r12,65535
 1044c1c:	5515883a 	add	r10,r10,r20
 1044c20:	3006d43a 	srli	r3,r6,16
 1044c24:	4b13883a 	add	r9,r9,r12
 1044c28:	2ccb383a 	mul	r5,r5,r19
 1044c2c:	5100022e 	bgeu	r10,r4,1044c38 <__muldf3+0x3b8>
 1044c30:	01000074 	movhi	r4,1
 1044c34:	290b883a 	add	r5,r5,r4
 1044c38:	802ad43a 	srli	r21,r16,16
 1044c3c:	843fffcc 	andi	r16,r16,65535
 1044c40:	440d383a 	mul	r6,r8,r16
 1044c44:	4565383a 	mul	r18,r8,r21
 1044c48:	8349383a 	mul	r4,r16,r13
 1044c4c:	500e943a 	slli	r7,r10,16
 1044c50:	3010d43a 	srli	r8,r6,16
 1044c54:	5028d43a 	srli	r20,r10,16
 1044c58:	2489883a 	add	r4,r4,r18
 1044c5c:	8abfffcc 	andi	r10,r17,65535
 1044c60:	3a95883a 	add	r10,r7,r10
 1044c64:	4119883a 	add	r12,r8,r4
 1044c68:	a169883a 	add	r20,r20,r5
 1044c6c:	1a87883a 	add	r3,r3,r10
 1044c70:	6d5b383a 	mul	r13,r13,r21
 1044c74:	6480022e 	bgeu	r12,r18,1044c80 <__muldf3+0x400>
 1044c78:	01000074 	movhi	r4,1
 1044c7c:	691b883a 	add	r13,r13,r4
 1044c80:	7c25383a 	mul	r18,r15,r16
 1044c84:	7d4b383a 	mul	r5,r15,r21
 1044c88:	84cf383a 	mul	r7,r16,r19
 1044c8c:	901ed43a 	srli	r15,r18,16
 1044c90:	6008d43a 	srli	r4,r12,16
 1044c94:	6010943a 	slli	r8,r12,16
 1044c98:	394f883a 	add	r7,r7,r5
 1044c9c:	333fffcc 	andi	r12,r6,65535
 1044ca0:	79df883a 	add	r15,r15,r7
 1044ca4:	235b883a 	add	r13,r4,r13
 1044ca8:	9d63383a 	mul	r17,r19,r21
 1044cac:	4309883a 	add	r4,r8,r12
 1044cb0:	7940022e 	bgeu	r15,r5,1044cbc <__muldf3+0x43c>
 1044cb4:	01400074 	movhi	r5,1
 1044cb8:	8963883a 	add	r17,r17,r5
 1044cbc:	780a943a 	slli	r5,r15,16
 1044cc0:	91bfffcc 	andi	r6,r18,65535
 1044cc4:	70c7883a 	add	r3,r14,r3
 1044cc8:	298d883a 	add	r6,r5,r6
 1044ccc:	1a8f803a 	cmpltu	r7,r3,r10
 1044cd0:	350b883a 	add	r5,r6,r20
 1044cd4:	20c7883a 	add	r3,r4,r3
 1044cd8:	3955883a 	add	r10,r7,r5
 1044cdc:	1909803a 	cmpltu	r4,r3,r4
 1044ce0:	6a91883a 	add	r8,r13,r10
 1044ce4:	780cd43a 	srli	r6,r15,16
 1044ce8:	2219883a 	add	r12,r4,r8
 1044cec:	2d0b803a 	cmpltu	r5,r5,r20
 1044cf0:	51cf803a 	cmpltu	r7,r10,r7
 1044cf4:	29ceb03a 	or	r7,r5,r7
 1044cf8:	4351803a 	cmpltu	r8,r8,r13
 1044cfc:	610b803a 	cmpltu	r5,r12,r4
 1044d00:	4148b03a 	or	r4,r8,r5
 1044d04:	398f883a 	add	r7,r7,r6
 1044d08:	3909883a 	add	r4,r7,r4
 1044d0c:	1810927a 	slli	r8,r3,9
 1044d10:	2449883a 	add	r4,r4,r17
 1044d14:	2008927a 	slli	r4,r4,9
 1044d18:	6022d5fa 	srli	r17,r12,23
 1044d1c:	1806d5fa 	srli	r3,r3,23
 1044d20:	4252b03a 	or	r9,r8,r9
 1044d24:	600a927a 	slli	r5,r12,9
 1044d28:	4810c03a 	cmpne	r8,r9,zero
 1044d2c:	2462b03a 	or	r17,r4,r17
 1044d30:	40c6b03a 	or	r3,r8,r3
 1044d34:	8900402c 	andhi	r4,r17,256
 1044d38:	1950b03a 	or	r8,r3,r5
 1044d3c:	20000726 	beq	r4,zero,1044d5c <__muldf3+0x4dc>
 1044d40:	4006d07a 	srli	r3,r8,1
 1044d44:	880497fa 	slli	r2,r17,31
 1044d48:	4200004c 	andi	r8,r8,1
 1044d4c:	8822d07a 	srli	r17,r17,1
 1044d50:	1a10b03a 	or	r8,r3,r8
 1044d54:	1210b03a 	or	r8,r2,r8
 1044d58:	5805883a 	mov	r2,r11
 1044d5c:	1140ffc4 	addi	r5,r2,1023
 1044d60:	0140440e 	bge	zero,r5,1044e74 <__muldf3+0x5f4>
 1044d64:	40c001cc 	andi	r3,r8,7
 1044d68:	18000726 	beq	r3,zero,1044d88 <__muldf3+0x508>
 1044d6c:	40c003cc 	andi	r3,r8,15
 1044d70:	01000104 	movi	r4,4
 1044d74:	19000426 	beq	r3,r4,1044d88 <__muldf3+0x508>
 1044d78:	4107883a 	add	r3,r8,r4
 1044d7c:	1a11803a 	cmpltu	r8,r3,r8
 1044d80:	8a23883a 	add	r17,r17,r8
 1044d84:	1811883a 	mov	r8,r3
 1044d88:	88c0402c 	andhi	r3,r17,256
 1044d8c:	18000426 	beq	r3,zero,1044da0 <__muldf3+0x520>
 1044d90:	11410004 	addi	r5,r2,1024
 1044d94:	00bfc034 	movhi	r2,65280
 1044d98:	10bfffc4 	addi	r2,r2,-1
 1044d9c:	88a2703a 	and	r17,r17,r2
 1044da0:	0081ff84 	movi	r2,2046
 1044da4:	117f6416 	blt	r2,r5,1044b38 <__alt_data_end+0xfffc4b38>
 1044da8:	8828977a 	slli	r20,r17,29
 1044dac:	4010d0fa 	srli	r8,r8,3
 1044db0:	8822927a 	slli	r17,r17,9
 1044db4:	2881ffcc 	andi	r2,r5,2047
 1044db8:	a228b03a 	or	r20,r20,r8
 1044dbc:	880ad33a 	srli	r5,r17,12
 1044dc0:	b02b883a 	mov	r21,r22
 1044dc4:	003f0d06 	br	10449fc <__alt_data_end+0xfffc49fc>
 1044dc8:	8080022c 	andhi	r2,r16,8
 1044dcc:	10000926 	beq	r2,zero,1044df4 <__muldf3+0x574>
 1044dd0:	8880022c 	andhi	r2,r17,8
 1044dd4:	1000071e 	bne	r2,zero,1044df4 <__muldf3+0x574>
 1044dd8:	00800434 	movhi	r2,16
 1044ddc:	89400234 	orhi	r5,r17,8
 1044de0:	10bfffc4 	addi	r2,r2,-1
 1044de4:	b82b883a 	mov	r21,r23
 1044de8:	288a703a 	and	r5,r5,r2
 1044dec:	4029883a 	mov	r20,r8
 1044df0:	003f6806 	br	1044b94 <__alt_data_end+0xfffc4b94>
 1044df4:	00800434 	movhi	r2,16
 1044df8:	81400234 	orhi	r5,r16,8
 1044dfc:	10bfffc4 	addi	r2,r2,-1
 1044e00:	288a703a 	and	r5,r5,r2
 1044e04:	003f6306 	br	1044b94 <__alt_data_end+0xfffc4b94>
 1044e08:	147ff604 	addi	r17,r2,-40
 1044e0c:	3462983a 	sll	r17,r6,r17
 1044e10:	0011883a 	mov	r8,zero
 1044e14:	003f4406 	br	1044b28 <__alt_data_end+0xfffc4b28>
 1044e18:	3009883a 	mov	r4,r6
 1044e1c:	d9800215 	stw	r6,8(sp)
 1044e20:	da400115 	stw	r9,4(sp)
 1044e24:	da800015 	stw	r10,0(sp)
 1044e28:	10459f00 	call	10459f0 <__clzsi2>
 1044e2c:	10800804 	addi	r2,r2,32
 1044e30:	da800017 	ldw	r10,0(sp)
 1044e34:	da400117 	ldw	r9,4(sp)
 1044e38:	d9800217 	ldw	r6,8(sp)
 1044e3c:	003f3006 	br	1044b00 <__alt_data_end+0xfffc4b00>
 1044e40:	143ff604 	addi	r16,r2,-40
 1044e44:	9c20983a 	sll	r16,r19,r16
 1044e48:	0029883a 	mov	r20,zero
 1044e4c:	003f1606 	br	1044aa8 <__alt_data_end+0xfffc4aa8>
 1044e50:	d9800215 	stw	r6,8(sp)
 1044e54:	d9c00015 	stw	r7,0(sp)
 1044e58:	da400115 	stw	r9,4(sp)
 1044e5c:	10459f00 	call	10459f0 <__clzsi2>
 1044e60:	10800804 	addi	r2,r2,32
 1044e64:	da400117 	ldw	r9,4(sp)
 1044e68:	d9c00017 	ldw	r7,0(sp)
 1044e6c:	d9800217 	ldw	r6,8(sp)
 1044e70:	003f0306 	br	1044a80 <__alt_data_end+0xfffc4a80>
 1044e74:	00c00044 	movi	r3,1
 1044e78:	1947c83a 	sub	r3,r3,r5
 1044e7c:	00800e04 	movi	r2,56
 1044e80:	10feda16 	blt	r2,r3,10449ec <__alt_data_end+0xfffc49ec>
 1044e84:	008007c4 	movi	r2,31
 1044e88:	10c01b16 	blt	r2,r3,1044ef8 <__muldf3+0x678>
 1044e8c:	00800804 	movi	r2,32
 1044e90:	10c5c83a 	sub	r2,r2,r3
 1044e94:	888a983a 	sll	r5,r17,r2
 1044e98:	40c8d83a 	srl	r4,r8,r3
 1044e9c:	4084983a 	sll	r2,r8,r2
 1044ea0:	88e2d83a 	srl	r17,r17,r3
 1044ea4:	2906b03a 	or	r3,r5,r4
 1044ea8:	1004c03a 	cmpne	r2,r2,zero
 1044eac:	1886b03a 	or	r3,r3,r2
 1044eb0:	188001cc 	andi	r2,r3,7
 1044eb4:	10000726 	beq	r2,zero,1044ed4 <__muldf3+0x654>
 1044eb8:	188003cc 	andi	r2,r3,15
 1044ebc:	01000104 	movi	r4,4
 1044ec0:	11000426 	beq	r2,r4,1044ed4 <__muldf3+0x654>
 1044ec4:	1805883a 	mov	r2,r3
 1044ec8:	10c00104 	addi	r3,r2,4
 1044ecc:	1885803a 	cmpltu	r2,r3,r2
 1044ed0:	88a3883a 	add	r17,r17,r2
 1044ed4:	8880202c 	andhi	r2,r17,128
 1044ed8:	10001c26 	beq	r2,zero,1044f4c <__muldf3+0x6cc>
 1044edc:	b02b883a 	mov	r21,r22
 1044ee0:	00800044 	movi	r2,1
 1044ee4:	000b883a 	mov	r5,zero
 1044ee8:	0029883a 	mov	r20,zero
 1044eec:	003ec306 	br	10449fc <__alt_data_end+0xfffc49fc>
 1044ef0:	5805883a 	mov	r2,r11
 1044ef4:	003f9906 	br	1044d5c <__alt_data_end+0xfffc4d5c>
 1044ef8:	00bff844 	movi	r2,-31
 1044efc:	1145c83a 	sub	r2,r2,r5
 1044f00:	8888d83a 	srl	r4,r17,r2
 1044f04:	00800804 	movi	r2,32
 1044f08:	18801a26 	beq	r3,r2,1044f74 <__muldf3+0x6f4>
 1044f0c:	00801004 	movi	r2,64
 1044f10:	10c5c83a 	sub	r2,r2,r3
 1044f14:	8884983a 	sll	r2,r17,r2
 1044f18:	1204b03a 	or	r2,r2,r8
 1044f1c:	1004c03a 	cmpne	r2,r2,zero
 1044f20:	2084b03a 	or	r2,r4,r2
 1044f24:	144001cc 	andi	r17,r2,7
 1044f28:	88000d1e 	bne	r17,zero,1044f60 <__muldf3+0x6e0>
 1044f2c:	000b883a 	mov	r5,zero
 1044f30:	1028d0fa 	srli	r20,r2,3
 1044f34:	b02b883a 	mov	r21,r22
 1044f38:	0005883a 	mov	r2,zero
 1044f3c:	a468b03a 	or	r20,r20,r17
 1044f40:	003eae06 	br	10449fc <__alt_data_end+0xfffc49fc>
 1044f44:	1007883a 	mov	r3,r2
 1044f48:	0023883a 	mov	r17,zero
 1044f4c:	880a927a 	slli	r5,r17,9
 1044f50:	1805883a 	mov	r2,r3
 1044f54:	8822977a 	slli	r17,r17,29
 1044f58:	280ad33a 	srli	r5,r5,12
 1044f5c:	003ff406 	br	1044f30 <__alt_data_end+0xfffc4f30>
 1044f60:	10c003cc 	andi	r3,r2,15
 1044f64:	01000104 	movi	r4,4
 1044f68:	193ff626 	beq	r3,r4,1044f44 <__alt_data_end+0xfffc4f44>
 1044f6c:	0023883a 	mov	r17,zero
 1044f70:	003fd506 	br	1044ec8 <__alt_data_end+0xfffc4ec8>
 1044f74:	0005883a 	mov	r2,zero
 1044f78:	003fe706 	br	1044f18 <__alt_data_end+0xfffc4f18>
 1044f7c:	00800434 	movhi	r2,16
 1044f80:	89400234 	orhi	r5,r17,8
 1044f84:	10bfffc4 	addi	r2,r2,-1
 1044f88:	b02b883a 	mov	r21,r22
 1044f8c:	288a703a 	and	r5,r5,r2
 1044f90:	4029883a 	mov	r20,r8
 1044f94:	003eff06 	br	1044b94 <__alt_data_end+0xfffc4b94>

01044f98 <__subdf3>:
 1044f98:	02000434 	movhi	r8,16
 1044f9c:	423fffc4 	addi	r8,r8,-1
 1044fa0:	defffb04 	addi	sp,sp,-20
 1044fa4:	2a14703a 	and	r10,r5,r8
 1044fa8:	3812d53a 	srli	r9,r7,20
 1044fac:	3a10703a 	and	r8,r7,r8
 1044fb0:	2006d77a 	srli	r3,r4,29
 1044fb4:	3004d77a 	srli	r2,r6,29
 1044fb8:	dc000015 	stw	r16,0(sp)
 1044fbc:	501490fa 	slli	r10,r10,3
 1044fc0:	2820d53a 	srli	r16,r5,20
 1044fc4:	401090fa 	slli	r8,r8,3
 1044fc8:	dc800215 	stw	r18,8(sp)
 1044fcc:	dc400115 	stw	r17,4(sp)
 1044fd0:	dfc00415 	stw	ra,16(sp)
 1044fd4:	202290fa 	slli	r17,r4,3
 1044fd8:	dcc00315 	stw	r19,12(sp)
 1044fdc:	4a41ffcc 	andi	r9,r9,2047
 1044fe0:	0101ffc4 	movi	r4,2047
 1044fe4:	2824d7fa 	srli	r18,r5,31
 1044fe8:	8401ffcc 	andi	r16,r16,2047
 1044fec:	50c6b03a 	or	r3,r10,r3
 1044ff0:	380ed7fa 	srli	r7,r7,31
 1044ff4:	408ab03a 	or	r5,r8,r2
 1044ff8:	300c90fa 	slli	r6,r6,3
 1044ffc:	49009626 	beq	r9,r4,1045258 <__subdf3+0x2c0>
 1045000:	39c0005c 	xori	r7,r7,1
 1045004:	8245c83a 	sub	r2,r16,r9
 1045008:	3c807426 	beq	r7,r18,10451dc <__subdf3+0x244>
 104500c:	0080af0e 	bge	zero,r2,10452cc <__subdf3+0x334>
 1045010:	48002a1e 	bne	r9,zero,10450bc <__subdf3+0x124>
 1045014:	2988b03a 	or	r4,r5,r6
 1045018:	20009a1e 	bne	r4,zero,1045284 <__subdf3+0x2ec>
 104501c:	888001cc 	andi	r2,r17,7
 1045020:	10000726 	beq	r2,zero,1045040 <__subdf3+0xa8>
 1045024:	888003cc 	andi	r2,r17,15
 1045028:	01000104 	movi	r4,4
 104502c:	11000426 	beq	r2,r4,1045040 <__subdf3+0xa8>
 1045030:	890b883a 	add	r5,r17,r4
 1045034:	2c63803a 	cmpltu	r17,r5,r17
 1045038:	1c47883a 	add	r3,r3,r17
 104503c:	2823883a 	mov	r17,r5
 1045040:	1880202c 	andhi	r2,r3,128
 1045044:	10005926 	beq	r2,zero,10451ac <__subdf3+0x214>
 1045048:	84000044 	addi	r16,r16,1
 104504c:	0081ffc4 	movi	r2,2047
 1045050:	8080be26 	beq	r16,r2,104534c <__subdf3+0x3b4>
 1045054:	017fe034 	movhi	r5,65408
 1045058:	297fffc4 	addi	r5,r5,-1
 104505c:	1946703a 	and	r3,r3,r5
 1045060:	1804977a 	slli	r2,r3,29
 1045064:	1806927a 	slli	r3,r3,9
 1045068:	8822d0fa 	srli	r17,r17,3
 104506c:	8401ffcc 	andi	r16,r16,2047
 1045070:	180ad33a 	srli	r5,r3,12
 1045074:	9100004c 	andi	r4,r18,1
 1045078:	1444b03a 	or	r2,r2,r17
 104507c:	80c1ffcc 	andi	r3,r16,2047
 1045080:	1820953a 	slli	r16,r3,20
 1045084:	20c03fcc 	andi	r3,r4,255
 1045088:	180897fa 	slli	r4,r3,31
 104508c:	00c00434 	movhi	r3,16
 1045090:	18ffffc4 	addi	r3,r3,-1
 1045094:	28c6703a 	and	r3,r5,r3
 1045098:	1c06b03a 	or	r3,r3,r16
 104509c:	1906b03a 	or	r3,r3,r4
 10450a0:	dfc00417 	ldw	ra,16(sp)
 10450a4:	dcc00317 	ldw	r19,12(sp)
 10450a8:	dc800217 	ldw	r18,8(sp)
 10450ac:	dc400117 	ldw	r17,4(sp)
 10450b0:	dc000017 	ldw	r16,0(sp)
 10450b4:	dec00504 	addi	sp,sp,20
 10450b8:	f800283a 	ret
 10450bc:	0101ffc4 	movi	r4,2047
 10450c0:	813fd626 	beq	r16,r4,104501c <__alt_data_end+0xfffc501c>
 10450c4:	29402034 	orhi	r5,r5,128
 10450c8:	01000e04 	movi	r4,56
 10450cc:	2080a316 	blt	r4,r2,104535c <__subdf3+0x3c4>
 10450d0:	010007c4 	movi	r4,31
 10450d4:	2080c616 	blt	r4,r2,10453f0 <__subdf3+0x458>
 10450d8:	01000804 	movi	r4,32
 10450dc:	2089c83a 	sub	r4,r4,r2
 10450e0:	2910983a 	sll	r8,r5,r4
 10450e4:	308ed83a 	srl	r7,r6,r2
 10450e8:	3108983a 	sll	r4,r6,r4
 10450ec:	2884d83a 	srl	r2,r5,r2
 10450f0:	41ccb03a 	or	r6,r8,r7
 10450f4:	2008c03a 	cmpne	r4,r4,zero
 10450f8:	310cb03a 	or	r6,r6,r4
 10450fc:	898dc83a 	sub	r6,r17,r6
 1045100:	89a3803a 	cmpltu	r17,r17,r6
 1045104:	1887c83a 	sub	r3,r3,r2
 1045108:	1c47c83a 	sub	r3,r3,r17
 104510c:	3023883a 	mov	r17,r6
 1045110:	1880202c 	andhi	r2,r3,128
 1045114:	10002326 	beq	r2,zero,10451a4 <__subdf3+0x20c>
 1045118:	04c02034 	movhi	r19,128
 104511c:	9cffffc4 	addi	r19,r19,-1
 1045120:	1ce6703a 	and	r19,r3,r19
 1045124:	98007a26 	beq	r19,zero,1045310 <__subdf3+0x378>
 1045128:	9809883a 	mov	r4,r19
 104512c:	10459f00 	call	10459f0 <__clzsi2>
 1045130:	113ffe04 	addi	r4,r2,-8
 1045134:	00c007c4 	movi	r3,31
 1045138:	19007b16 	blt	r3,r4,1045328 <__subdf3+0x390>
 104513c:	00800804 	movi	r2,32
 1045140:	1105c83a 	sub	r2,r2,r4
 1045144:	8884d83a 	srl	r2,r17,r2
 1045148:	9906983a 	sll	r3,r19,r4
 104514c:	8922983a 	sll	r17,r17,r4
 1045150:	10c4b03a 	or	r2,r2,r3
 1045154:	24007816 	blt	r4,r16,1045338 <__subdf3+0x3a0>
 1045158:	2421c83a 	sub	r16,r4,r16
 104515c:	80c00044 	addi	r3,r16,1
 1045160:	010007c4 	movi	r4,31
 1045164:	20c09516 	blt	r4,r3,10453bc <__subdf3+0x424>
 1045168:	01400804 	movi	r5,32
 104516c:	28cbc83a 	sub	r5,r5,r3
 1045170:	88c8d83a 	srl	r4,r17,r3
 1045174:	8962983a 	sll	r17,r17,r5
 1045178:	114a983a 	sll	r5,r2,r5
 104517c:	10c6d83a 	srl	r3,r2,r3
 1045180:	8804c03a 	cmpne	r2,r17,zero
 1045184:	290ab03a 	or	r5,r5,r4
 1045188:	28a2b03a 	or	r17,r5,r2
 104518c:	0021883a 	mov	r16,zero
 1045190:	003fa206 	br	104501c <__alt_data_end+0xfffc501c>
 1045194:	2090b03a 	or	r8,r4,r2
 1045198:	40018e26 	beq	r8,zero,10457d4 <__subdf3+0x83c>
 104519c:	1007883a 	mov	r3,r2
 10451a0:	2023883a 	mov	r17,r4
 10451a4:	888001cc 	andi	r2,r17,7
 10451a8:	103f9e1e 	bne	r2,zero,1045024 <__alt_data_end+0xfffc5024>
 10451ac:	1804977a 	slli	r2,r3,29
 10451b0:	8822d0fa 	srli	r17,r17,3
 10451b4:	1810d0fa 	srli	r8,r3,3
 10451b8:	9100004c 	andi	r4,r18,1
 10451bc:	1444b03a 	or	r2,r2,r17
 10451c0:	00c1ffc4 	movi	r3,2047
 10451c4:	80c02826 	beq	r16,r3,1045268 <__subdf3+0x2d0>
 10451c8:	01400434 	movhi	r5,16
 10451cc:	297fffc4 	addi	r5,r5,-1
 10451d0:	80e0703a 	and	r16,r16,r3
 10451d4:	414a703a 	and	r5,r8,r5
 10451d8:	003fa806 	br	104507c <__alt_data_end+0xfffc507c>
 10451dc:	0080630e 	bge	zero,r2,104536c <__subdf3+0x3d4>
 10451e0:	48003026 	beq	r9,zero,10452a4 <__subdf3+0x30c>
 10451e4:	0101ffc4 	movi	r4,2047
 10451e8:	813f8c26 	beq	r16,r4,104501c <__alt_data_end+0xfffc501c>
 10451ec:	29402034 	orhi	r5,r5,128
 10451f0:	01000e04 	movi	r4,56
 10451f4:	2080a90e 	bge	r4,r2,104549c <__subdf3+0x504>
 10451f8:	298cb03a 	or	r6,r5,r6
 10451fc:	3012c03a 	cmpne	r9,r6,zero
 1045200:	0005883a 	mov	r2,zero
 1045204:	4c53883a 	add	r9,r9,r17
 1045208:	4c63803a 	cmpltu	r17,r9,r17
 104520c:	10c7883a 	add	r3,r2,r3
 1045210:	88c7883a 	add	r3,r17,r3
 1045214:	4823883a 	mov	r17,r9
 1045218:	1880202c 	andhi	r2,r3,128
 104521c:	1000d026 	beq	r2,zero,1045560 <__subdf3+0x5c8>
 1045220:	84000044 	addi	r16,r16,1
 1045224:	0081ffc4 	movi	r2,2047
 1045228:	8080fe26 	beq	r16,r2,1045624 <__subdf3+0x68c>
 104522c:	00bfe034 	movhi	r2,65408
 1045230:	10bfffc4 	addi	r2,r2,-1
 1045234:	1886703a 	and	r3,r3,r2
 1045238:	880ad07a 	srli	r5,r17,1
 104523c:	180497fa 	slli	r2,r3,31
 1045240:	8900004c 	andi	r4,r17,1
 1045244:	2922b03a 	or	r17,r5,r4
 1045248:	1806d07a 	srli	r3,r3,1
 104524c:	1462b03a 	or	r17,r2,r17
 1045250:	3825883a 	mov	r18,r7
 1045254:	003f7106 	br	104501c <__alt_data_end+0xfffc501c>
 1045258:	2984b03a 	or	r2,r5,r6
 104525c:	103f6826 	beq	r2,zero,1045000 <__alt_data_end+0xfffc5000>
 1045260:	39c03fcc 	andi	r7,r7,255
 1045264:	003f6706 	br	1045004 <__alt_data_end+0xfffc5004>
 1045268:	4086b03a 	or	r3,r8,r2
 104526c:	18015226 	beq	r3,zero,10457b8 <__subdf3+0x820>
 1045270:	00c00434 	movhi	r3,16
 1045274:	41400234 	orhi	r5,r8,8
 1045278:	18ffffc4 	addi	r3,r3,-1
 104527c:	28ca703a 	and	r5,r5,r3
 1045280:	003f7e06 	br	104507c <__alt_data_end+0xfffc507c>
 1045284:	10bfffc4 	addi	r2,r2,-1
 1045288:	1000491e 	bne	r2,zero,10453b0 <__subdf3+0x418>
 104528c:	898fc83a 	sub	r7,r17,r6
 1045290:	89e3803a 	cmpltu	r17,r17,r7
 1045294:	1947c83a 	sub	r3,r3,r5
 1045298:	1c47c83a 	sub	r3,r3,r17
 104529c:	3823883a 	mov	r17,r7
 10452a0:	003f9b06 	br	1045110 <__alt_data_end+0xfffc5110>
 10452a4:	2988b03a 	or	r4,r5,r6
 10452a8:	203f5c26 	beq	r4,zero,104501c <__alt_data_end+0xfffc501c>
 10452ac:	10bfffc4 	addi	r2,r2,-1
 10452b0:	1000931e 	bne	r2,zero,1045500 <__subdf3+0x568>
 10452b4:	898d883a 	add	r6,r17,r6
 10452b8:	3463803a 	cmpltu	r17,r6,r17
 10452bc:	1947883a 	add	r3,r3,r5
 10452c0:	88c7883a 	add	r3,r17,r3
 10452c4:	3023883a 	mov	r17,r6
 10452c8:	003fd306 	br	1045218 <__alt_data_end+0xfffc5218>
 10452cc:	1000541e 	bne	r2,zero,1045420 <__subdf3+0x488>
 10452d0:	80800044 	addi	r2,r16,1
 10452d4:	1081ffcc 	andi	r2,r2,2047
 10452d8:	01000044 	movi	r4,1
 10452dc:	2080a20e 	bge	r4,r2,1045568 <__subdf3+0x5d0>
 10452e0:	8989c83a 	sub	r4,r17,r6
 10452e4:	8905803a 	cmpltu	r2,r17,r4
 10452e8:	1967c83a 	sub	r19,r3,r5
 10452ec:	98a7c83a 	sub	r19,r19,r2
 10452f0:	9880202c 	andhi	r2,r19,128
 10452f4:	10006326 	beq	r2,zero,1045484 <__subdf3+0x4ec>
 10452f8:	3463c83a 	sub	r17,r6,r17
 10452fc:	28c7c83a 	sub	r3,r5,r3
 1045300:	344d803a 	cmpltu	r6,r6,r17
 1045304:	19a7c83a 	sub	r19,r3,r6
 1045308:	3825883a 	mov	r18,r7
 104530c:	983f861e 	bne	r19,zero,1045128 <__alt_data_end+0xfffc5128>
 1045310:	8809883a 	mov	r4,r17
 1045314:	10459f00 	call	10459f0 <__clzsi2>
 1045318:	10800804 	addi	r2,r2,32
 104531c:	113ffe04 	addi	r4,r2,-8
 1045320:	00c007c4 	movi	r3,31
 1045324:	193f850e 	bge	r3,r4,104513c <__alt_data_end+0xfffc513c>
 1045328:	10bff604 	addi	r2,r2,-40
 104532c:	8884983a 	sll	r2,r17,r2
 1045330:	0023883a 	mov	r17,zero
 1045334:	243f880e 	bge	r4,r16,1045158 <__alt_data_end+0xfffc5158>
 1045338:	00ffe034 	movhi	r3,65408
 104533c:	18ffffc4 	addi	r3,r3,-1
 1045340:	8121c83a 	sub	r16,r16,r4
 1045344:	10c6703a 	and	r3,r2,r3
 1045348:	003f3406 	br	104501c <__alt_data_end+0xfffc501c>
 104534c:	9100004c 	andi	r4,r18,1
 1045350:	000b883a 	mov	r5,zero
 1045354:	0005883a 	mov	r2,zero
 1045358:	003f4806 	br	104507c <__alt_data_end+0xfffc507c>
 104535c:	298cb03a 	or	r6,r5,r6
 1045360:	300cc03a 	cmpne	r6,r6,zero
 1045364:	0005883a 	mov	r2,zero
 1045368:	003f6406 	br	10450fc <__alt_data_end+0xfffc50fc>
 104536c:	10009a1e 	bne	r2,zero,10455d8 <__subdf3+0x640>
 1045370:	82400044 	addi	r9,r16,1
 1045374:	4881ffcc 	andi	r2,r9,2047
 1045378:	02800044 	movi	r10,1
 104537c:	5080670e 	bge	r10,r2,104551c <__subdf3+0x584>
 1045380:	0081ffc4 	movi	r2,2047
 1045384:	4880af26 	beq	r9,r2,1045644 <__subdf3+0x6ac>
 1045388:	898d883a 	add	r6,r17,r6
 104538c:	1945883a 	add	r2,r3,r5
 1045390:	3447803a 	cmpltu	r3,r6,r17
 1045394:	1887883a 	add	r3,r3,r2
 1045398:	182297fa 	slli	r17,r3,31
 104539c:	300cd07a 	srli	r6,r6,1
 10453a0:	1806d07a 	srli	r3,r3,1
 10453a4:	4821883a 	mov	r16,r9
 10453a8:	89a2b03a 	or	r17,r17,r6
 10453ac:	003f1b06 	br	104501c <__alt_data_end+0xfffc501c>
 10453b0:	0101ffc4 	movi	r4,2047
 10453b4:	813f441e 	bne	r16,r4,10450c8 <__alt_data_end+0xfffc50c8>
 10453b8:	003f1806 	br	104501c <__alt_data_end+0xfffc501c>
 10453bc:	843ff844 	addi	r16,r16,-31
 10453c0:	01400804 	movi	r5,32
 10453c4:	1408d83a 	srl	r4,r2,r16
 10453c8:	19405026 	beq	r3,r5,104550c <__subdf3+0x574>
 10453cc:	01401004 	movi	r5,64
 10453d0:	28c7c83a 	sub	r3,r5,r3
 10453d4:	10c4983a 	sll	r2,r2,r3
 10453d8:	88a2b03a 	or	r17,r17,r2
 10453dc:	8822c03a 	cmpne	r17,r17,zero
 10453e0:	2462b03a 	or	r17,r4,r17
 10453e4:	0007883a 	mov	r3,zero
 10453e8:	0021883a 	mov	r16,zero
 10453ec:	003f6d06 	br	10451a4 <__alt_data_end+0xfffc51a4>
 10453f0:	11fff804 	addi	r7,r2,-32
 10453f4:	01000804 	movi	r4,32
 10453f8:	29ced83a 	srl	r7,r5,r7
 10453fc:	11004526 	beq	r2,r4,1045514 <__subdf3+0x57c>
 1045400:	01001004 	movi	r4,64
 1045404:	2089c83a 	sub	r4,r4,r2
 1045408:	2904983a 	sll	r2,r5,r4
 104540c:	118cb03a 	or	r6,r2,r6
 1045410:	300cc03a 	cmpne	r6,r6,zero
 1045414:	398cb03a 	or	r6,r7,r6
 1045418:	0005883a 	mov	r2,zero
 104541c:	003f3706 	br	10450fc <__alt_data_end+0xfffc50fc>
 1045420:	80002a26 	beq	r16,zero,10454cc <__subdf3+0x534>
 1045424:	0101ffc4 	movi	r4,2047
 1045428:	49006626 	beq	r9,r4,10455c4 <__subdf3+0x62c>
 104542c:	0085c83a 	sub	r2,zero,r2
 1045430:	18c02034 	orhi	r3,r3,128
 1045434:	01000e04 	movi	r4,56
 1045438:	20807e16 	blt	r4,r2,1045634 <__subdf3+0x69c>
 104543c:	010007c4 	movi	r4,31
 1045440:	2080e716 	blt	r4,r2,10457e0 <__subdf3+0x848>
 1045444:	01000804 	movi	r4,32
 1045448:	2089c83a 	sub	r4,r4,r2
 104544c:	1914983a 	sll	r10,r3,r4
 1045450:	8890d83a 	srl	r8,r17,r2
 1045454:	8908983a 	sll	r4,r17,r4
 1045458:	1884d83a 	srl	r2,r3,r2
 104545c:	5222b03a 	or	r17,r10,r8
 1045460:	2006c03a 	cmpne	r3,r4,zero
 1045464:	88e2b03a 	or	r17,r17,r3
 1045468:	3463c83a 	sub	r17,r6,r17
 104546c:	2885c83a 	sub	r2,r5,r2
 1045470:	344d803a 	cmpltu	r6,r6,r17
 1045474:	1187c83a 	sub	r3,r2,r6
 1045478:	4821883a 	mov	r16,r9
 104547c:	3825883a 	mov	r18,r7
 1045480:	003f2306 	br	1045110 <__alt_data_end+0xfffc5110>
 1045484:	24d0b03a 	or	r8,r4,r19
 1045488:	40001b1e 	bne	r8,zero,10454f8 <__subdf3+0x560>
 104548c:	0005883a 	mov	r2,zero
 1045490:	0009883a 	mov	r4,zero
 1045494:	0021883a 	mov	r16,zero
 1045498:	003f4906 	br	10451c0 <__alt_data_end+0xfffc51c0>
 104549c:	010007c4 	movi	r4,31
 10454a0:	20803a16 	blt	r4,r2,104558c <__subdf3+0x5f4>
 10454a4:	01000804 	movi	r4,32
 10454a8:	2089c83a 	sub	r4,r4,r2
 10454ac:	2912983a 	sll	r9,r5,r4
 10454b0:	3090d83a 	srl	r8,r6,r2
 10454b4:	3108983a 	sll	r4,r6,r4
 10454b8:	2884d83a 	srl	r2,r5,r2
 10454bc:	4a12b03a 	or	r9,r9,r8
 10454c0:	2008c03a 	cmpne	r4,r4,zero
 10454c4:	4912b03a 	or	r9,r9,r4
 10454c8:	003f4e06 	br	1045204 <__alt_data_end+0xfffc5204>
 10454cc:	1c48b03a 	or	r4,r3,r17
 10454d0:	20003c26 	beq	r4,zero,10455c4 <__subdf3+0x62c>
 10454d4:	0084303a 	nor	r2,zero,r2
 10454d8:	1000381e 	bne	r2,zero,10455bc <__subdf3+0x624>
 10454dc:	3463c83a 	sub	r17,r6,r17
 10454e0:	28c5c83a 	sub	r2,r5,r3
 10454e4:	344d803a 	cmpltu	r6,r6,r17
 10454e8:	1187c83a 	sub	r3,r2,r6
 10454ec:	4821883a 	mov	r16,r9
 10454f0:	3825883a 	mov	r18,r7
 10454f4:	003f0606 	br	1045110 <__alt_data_end+0xfffc5110>
 10454f8:	2023883a 	mov	r17,r4
 10454fc:	003f0906 	br	1045124 <__alt_data_end+0xfffc5124>
 1045500:	0101ffc4 	movi	r4,2047
 1045504:	813f3a1e 	bne	r16,r4,10451f0 <__alt_data_end+0xfffc51f0>
 1045508:	003ec406 	br	104501c <__alt_data_end+0xfffc501c>
 104550c:	0005883a 	mov	r2,zero
 1045510:	003fb106 	br	10453d8 <__alt_data_end+0xfffc53d8>
 1045514:	0005883a 	mov	r2,zero
 1045518:	003fbc06 	br	104540c <__alt_data_end+0xfffc540c>
 104551c:	1c44b03a 	or	r2,r3,r17
 1045520:	80008e1e 	bne	r16,zero,104575c <__subdf3+0x7c4>
 1045524:	1000c826 	beq	r2,zero,1045848 <__subdf3+0x8b0>
 1045528:	2984b03a 	or	r2,r5,r6
 104552c:	103ebb26 	beq	r2,zero,104501c <__alt_data_end+0xfffc501c>
 1045530:	8989883a 	add	r4,r17,r6
 1045534:	1945883a 	add	r2,r3,r5
 1045538:	2447803a 	cmpltu	r3,r4,r17
 104553c:	1887883a 	add	r3,r3,r2
 1045540:	1880202c 	andhi	r2,r3,128
 1045544:	2023883a 	mov	r17,r4
 1045548:	103f1626 	beq	r2,zero,10451a4 <__alt_data_end+0xfffc51a4>
 104554c:	00bfe034 	movhi	r2,65408
 1045550:	10bfffc4 	addi	r2,r2,-1
 1045554:	5021883a 	mov	r16,r10
 1045558:	1886703a 	and	r3,r3,r2
 104555c:	003eaf06 	br	104501c <__alt_data_end+0xfffc501c>
 1045560:	3825883a 	mov	r18,r7
 1045564:	003f0f06 	br	10451a4 <__alt_data_end+0xfffc51a4>
 1045568:	1c44b03a 	or	r2,r3,r17
 104556c:	8000251e 	bne	r16,zero,1045604 <__subdf3+0x66c>
 1045570:	1000661e 	bne	r2,zero,104570c <__subdf3+0x774>
 1045574:	2990b03a 	or	r8,r5,r6
 1045578:	40009626 	beq	r8,zero,10457d4 <__subdf3+0x83c>
 104557c:	2807883a 	mov	r3,r5
 1045580:	3023883a 	mov	r17,r6
 1045584:	3825883a 	mov	r18,r7
 1045588:	003ea406 	br	104501c <__alt_data_end+0xfffc501c>
 104558c:	127ff804 	addi	r9,r2,-32
 1045590:	01000804 	movi	r4,32
 1045594:	2a52d83a 	srl	r9,r5,r9
 1045598:	11008c26 	beq	r2,r4,10457cc <__subdf3+0x834>
 104559c:	01001004 	movi	r4,64
 10455a0:	2085c83a 	sub	r2,r4,r2
 10455a4:	2884983a 	sll	r2,r5,r2
 10455a8:	118cb03a 	or	r6,r2,r6
 10455ac:	300cc03a 	cmpne	r6,r6,zero
 10455b0:	4992b03a 	or	r9,r9,r6
 10455b4:	0005883a 	mov	r2,zero
 10455b8:	003f1206 	br	1045204 <__alt_data_end+0xfffc5204>
 10455bc:	0101ffc4 	movi	r4,2047
 10455c0:	493f9c1e 	bne	r9,r4,1045434 <__alt_data_end+0xfffc5434>
 10455c4:	2807883a 	mov	r3,r5
 10455c8:	3023883a 	mov	r17,r6
 10455cc:	4821883a 	mov	r16,r9
 10455d0:	3825883a 	mov	r18,r7
 10455d4:	003e9106 	br	104501c <__alt_data_end+0xfffc501c>
 10455d8:	80001f1e 	bne	r16,zero,1045658 <__subdf3+0x6c0>
 10455dc:	1c48b03a 	or	r4,r3,r17
 10455e0:	20005a26 	beq	r4,zero,104574c <__subdf3+0x7b4>
 10455e4:	0084303a 	nor	r2,zero,r2
 10455e8:	1000561e 	bne	r2,zero,1045744 <__subdf3+0x7ac>
 10455ec:	89a3883a 	add	r17,r17,r6
 10455f0:	1945883a 	add	r2,r3,r5
 10455f4:	898d803a 	cmpltu	r6,r17,r6
 10455f8:	3087883a 	add	r3,r6,r2
 10455fc:	4821883a 	mov	r16,r9
 1045600:	003f0506 	br	1045218 <__alt_data_end+0xfffc5218>
 1045604:	10002b1e 	bne	r2,zero,10456b4 <__subdf3+0x71c>
 1045608:	2984b03a 	or	r2,r5,r6
 104560c:	10008026 	beq	r2,zero,1045810 <__subdf3+0x878>
 1045610:	2807883a 	mov	r3,r5
 1045614:	3023883a 	mov	r17,r6
 1045618:	3825883a 	mov	r18,r7
 104561c:	0401ffc4 	movi	r16,2047
 1045620:	003e7e06 	br	104501c <__alt_data_end+0xfffc501c>
 1045624:	3809883a 	mov	r4,r7
 1045628:	0011883a 	mov	r8,zero
 104562c:	0005883a 	mov	r2,zero
 1045630:	003ee306 	br	10451c0 <__alt_data_end+0xfffc51c0>
 1045634:	1c62b03a 	or	r17,r3,r17
 1045638:	8822c03a 	cmpne	r17,r17,zero
 104563c:	0005883a 	mov	r2,zero
 1045640:	003f8906 	br	1045468 <__alt_data_end+0xfffc5468>
 1045644:	3809883a 	mov	r4,r7
 1045648:	4821883a 	mov	r16,r9
 104564c:	0011883a 	mov	r8,zero
 1045650:	0005883a 	mov	r2,zero
 1045654:	003eda06 	br	10451c0 <__alt_data_end+0xfffc51c0>
 1045658:	0101ffc4 	movi	r4,2047
 104565c:	49003b26 	beq	r9,r4,104574c <__subdf3+0x7b4>
 1045660:	0085c83a 	sub	r2,zero,r2
 1045664:	18c02034 	orhi	r3,r3,128
 1045668:	01000e04 	movi	r4,56
 104566c:	20806e16 	blt	r4,r2,1045828 <__subdf3+0x890>
 1045670:	010007c4 	movi	r4,31
 1045674:	20807716 	blt	r4,r2,1045854 <__subdf3+0x8bc>
 1045678:	01000804 	movi	r4,32
 104567c:	2089c83a 	sub	r4,r4,r2
 1045680:	1914983a 	sll	r10,r3,r4
 1045684:	8890d83a 	srl	r8,r17,r2
 1045688:	8908983a 	sll	r4,r17,r4
 104568c:	1884d83a 	srl	r2,r3,r2
 1045690:	5222b03a 	or	r17,r10,r8
 1045694:	2006c03a 	cmpne	r3,r4,zero
 1045698:	88e2b03a 	or	r17,r17,r3
 104569c:	89a3883a 	add	r17,r17,r6
 10456a0:	1145883a 	add	r2,r2,r5
 10456a4:	898d803a 	cmpltu	r6,r17,r6
 10456a8:	3087883a 	add	r3,r6,r2
 10456ac:	4821883a 	mov	r16,r9
 10456b0:	003ed906 	br	1045218 <__alt_data_end+0xfffc5218>
 10456b4:	2984b03a 	or	r2,r5,r6
 10456b8:	10004226 	beq	r2,zero,10457c4 <__subdf3+0x82c>
 10456bc:	1808d0fa 	srli	r4,r3,3
 10456c0:	8822d0fa 	srli	r17,r17,3
 10456c4:	1806977a 	slli	r3,r3,29
 10456c8:	2080022c 	andhi	r2,r4,8
 10456cc:	1c62b03a 	or	r17,r3,r17
 10456d0:	10000826 	beq	r2,zero,10456f4 <__subdf3+0x75c>
 10456d4:	2812d0fa 	srli	r9,r5,3
 10456d8:	4880022c 	andhi	r2,r9,8
 10456dc:	1000051e 	bne	r2,zero,10456f4 <__subdf3+0x75c>
 10456e0:	300cd0fa 	srli	r6,r6,3
 10456e4:	2804977a 	slli	r2,r5,29
 10456e8:	4809883a 	mov	r4,r9
 10456ec:	3825883a 	mov	r18,r7
 10456f0:	11a2b03a 	or	r17,r2,r6
 10456f4:	8806d77a 	srli	r3,r17,29
 10456f8:	200890fa 	slli	r4,r4,3
 10456fc:	882290fa 	slli	r17,r17,3
 1045700:	0401ffc4 	movi	r16,2047
 1045704:	1906b03a 	or	r3,r3,r4
 1045708:	003e4406 	br	104501c <__alt_data_end+0xfffc501c>
 104570c:	2984b03a 	or	r2,r5,r6
 1045710:	103e4226 	beq	r2,zero,104501c <__alt_data_end+0xfffc501c>
 1045714:	8989c83a 	sub	r4,r17,r6
 1045718:	8911803a 	cmpltu	r8,r17,r4
 104571c:	1945c83a 	sub	r2,r3,r5
 1045720:	1205c83a 	sub	r2,r2,r8
 1045724:	1200202c 	andhi	r8,r2,128
 1045728:	403e9a26 	beq	r8,zero,1045194 <__alt_data_end+0xfffc5194>
 104572c:	3463c83a 	sub	r17,r6,r17
 1045730:	28c5c83a 	sub	r2,r5,r3
 1045734:	344d803a 	cmpltu	r6,r6,r17
 1045738:	1187c83a 	sub	r3,r2,r6
 104573c:	3825883a 	mov	r18,r7
 1045740:	003e3606 	br	104501c <__alt_data_end+0xfffc501c>
 1045744:	0101ffc4 	movi	r4,2047
 1045748:	493fc71e 	bne	r9,r4,1045668 <__alt_data_end+0xfffc5668>
 104574c:	2807883a 	mov	r3,r5
 1045750:	3023883a 	mov	r17,r6
 1045754:	4821883a 	mov	r16,r9
 1045758:	003e3006 	br	104501c <__alt_data_end+0xfffc501c>
 104575c:	10003626 	beq	r2,zero,1045838 <__subdf3+0x8a0>
 1045760:	2984b03a 	or	r2,r5,r6
 1045764:	10001726 	beq	r2,zero,10457c4 <__subdf3+0x82c>
 1045768:	1808d0fa 	srli	r4,r3,3
 104576c:	8822d0fa 	srli	r17,r17,3
 1045770:	1806977a 	slli	r3,r3,29
 1045774:	2080022c 	andhi	r2,r4,8
 1045778:	1c62b03a 	or	r17,r3,r17
 104577c:	10000726 	beq	r2,zero,104579c <__subdf3+0x804>
 1045780:	2812d0fa 	srli	r9,r5,3
 1045784:	4880022c 	andhi	r2,r9,8
 1045788:	1000041e 	bne	r2,zero,104579c <__subdf3+0x804>
 104578c:	300cd0fa 	srli	r6,r6,3
 1045790:	2804977a 	slli	r2,r5,29
 1045794:	4809883a 	mov	r4,r9
 1045798:	11a2b03a 	or	r17,r2,r6
 104579c:	8806d77a 	srli	r3,r17,29
 10457a0:	200890fa 	slli	r4,r4,3
 10457a4:	882290fa 	slli	r17,r17,3
 10457a8:	3825883a 	mov	r18,r7
 10457ac:	1906b03a 	or	r3,r3,r4
 10457b0:	0401ffc4 	movi	r16,2047
 10457b4:	003e1906 	br	104501c <__alt_data_end+0xfffc501c>
 10457b8:	000b883a 	mov	r5,zero
 10457bc:	0005883a 	mov	r2,zero
 10457c0:	003e2e06 	br	104507c <__alt_data_end+0xfffc507c>
 10457c4:	0401ffc4 	movi	r16,2047
 10457c8:	003e1406 	br	104501c <__alt_data_end+0xfffc501c>
 10457cc:	0005883a 	mov	r2,zero
 10457d0:	003f7506 	br	10455a8 <__alt_data_end+0xfffc55a8>
 10457d4:	0005883a 	mov	r2,zero
 10457d8:	0009883a 	mov	r4,zero
 10457dc:	003e7806 	br	10451c0 <__alt_data_end+0xfffc51c0>
 10457e0:	123ff804 	addi	r8,r2,-32
 10457e4:	01000804 	movi	r4,32
 10457e8:	1a10d83a 	srl	r8,r3,r8
 10457ec:	11002526 	beq	r2,r4,1045884 <__subdf3+0x8ec>
 10457f0:	01001004 	movi	r4,64
 10457f4:	2085c83a 	sub	r2,r4,r2
 10457f8:	1884983a 	sll	r2,r3,r2
 10457fc:	1444b03a 	or	r2,r2,r17
 1045800:	1004c03a 	cmpne	r2,r2,zero
 1045804:	40a2b03a 	or	r17,r8,r2
 1045808:	0005883a 	mov	r2,zero
 104580c:	003f1606 	br	1045468 <__alt_data_end+0xfffc5468>
 1045810:	02000434 	movhi	r8,16
 1045814:	0009883a 	mov	r4,zero
 1045818:	423fffc4 	addi	r8,r8,-1
 104581c:	00bfffc4 	movi	r2,-1
 1045820:	0401ffc4 	movi	r16,2047
 1045824:	003e6606 	br	10451c0 <__alt_data_end+0xfffc51c0>
 1045828:	1c62b03a 	or	r17,r3,r17
 104582c:	8822c03a 	cmpne	r17,r17,zero
 1045830:	0005883a 	mov	r2,zero
 1045834:	003f9906 	br	104569c <__alt_data_end+0xfffc569c>
 1045838:	2807883a 	mov	r3,r5
 104583c:	3023883a 	mov	r17,r6
 1045840:	0401ffc4 	movi	r16,2047
 1045844:	003df506 	br	104501c <__alt_data_end+0xfffc501c>
 1045848:	2807883a 	mov	r3,r5
 104584c:	3023883a 	mov	r17,r6
 1045850:	003df206 	br	104501c <__alt_data_end+0xfffc501c>
 1045854:	123ff804 	addi	r8,r2,-32
 1045858:	01000804 	movi	r4,32
 104585c:	1a10d83a 	srl	r8,r3,r8
 1045860:	11000a26 	beq	r2,r4,104588c <__subdf3+0x8f4>
 1045864:	01001004 	movi	r4,64
 1045868:	2085c83a 	sub	r2,r4,r2
 104586c:	1884983a 	sll	r2,r3,r2
 1045870:	1444b03a 	or	r2,r2,r17
 1045874:	1004c03a 	cmpne	r2,r2,zero
 1045878:	40a2b03a 	or	r17,r8,r2
 104587c:	0005883a 	mov	r2,zero
 1045880:	003f8606 	br	104569c <__alt_data_end+0xfffc569c>
 1045884:	0005883a 	mov	r2,zero
 1045888:	003fdc06 	br	10457fc <__alt_data_end+0xfffc57fc>
 104588c:	0005883a 	mov	r2,zero
 1045890:	003ff706 	br	1045870 <__alt_data_end+0xfffc5870>

01045894 <__fixdfsi>:
 1045894:	280cd53a 	srli	r6,r5,20
 1045898:	00c00434 	movhi	r3,16
 104589c:	18ffffc4 	addi	r3,r3,-1
 10458a0:	3181ffcc 	andi	r6,r6,2047
 10458a4:	01c0ff84 	movi	r7,1022
 10458a8:	28c6703a 	and	r3,r5,r3
 10458ac:	280ad7fa 	srli	r5,r5,31
 10458b0:	3980120e 	bge	r7,r6,10458fc <__fixdfsi+0x68>
 10458b4:	00810744 	movi	r2,1053
 10458b8:	11800c16 	blt	r2,r6,10458ec <__fixdfsi+0x58>
 10458bc:	00810cc4 	movi	r2,1075
 10458c0:	1185c83a 	sub	r2,r2,r6
 10458c4:	01c007c4 	movi	r7,31
 10458c8:	18c00434 	orhi	r3,r3,16
 10458cc:	38800d16 	blt	r7,r2,1045904 <__fixdfsi+0x70>
 10458d0:	31befb44 	addi	r6,r6,-1043
 10458d4:	2084d83a 	srl	r2,r4,r2
 10458d8:	1986983a 	sll	r3,r3,r6
 10458dc:	1884b03a 	or	r2,r3,r2
 10458e0:	28000726 	beq	r5,zero,1045900 <__fixdfsi+0x6c>
 10458e4:	0085c83a 	sub	r2,zero,r2
 10458e8:	f800283a 	ret
 10458ec:	00a00034 	movhi	r2,32768
 10458f0:	10bfffc4 	addi	r2,r2,-1
 10458f4:	2885883a 	add	r2,r5,r2
 10458f8:	f800283a 	ret
 10458fc:	0005883a 	mov	r2,zero
 1045900:	f800283a 	ret
 1045904:	008104c4 	movi	r2,1043
 1045908:	1185c83a 	sub	r2,r2,r6
 104590c:	1884d83a 	srl	r2,r3,r2
 1045910:	003ff306 	br	10458e0 <__alt_data_end+0xfffc58e0>

01045914 <__floatsidf>:
 1045914:	defffd04 	addi	sp,sp,-12
 1045918:	dfc00215 	stw	ra,8(sp)
 104591c:	dc400115 	stw	r17,4(sp)
 1045920:	dc000015 	stw	r16,0(sp)
 1045924:	20002b26 	beq	r4,zero,10459d4 <__floatsidf+0xc0>
 1045928:	2023883a 	mov	r17,r4
 104592c:	2020d7fa 	srli	r16,r4,31
 1045930:	20002d16 	blt	r4,zero,10459e8 <__floatsidf+0xd4>
 1045934:	8809883a 	mov	r4,r17
 1045938:	10459f00 	call	10459f0 <__clzsi2>
 104593c:	01410784 	movi	r5,1054
 1045940:	288bc83a 	sub	r5,r5,r2
 1045944:	01010cc4 	movi	r4,1075
 1045948:	2149c83a 	sub	r4,r4,r5
 104594c:	00c007c4 	movi	r3,31
 1045950:	1900160e 	bge	r3,r4,10459ac <__floatsidf+0x98>
 1045954:	00c104c4 	movi	r3,1043
 1045958:	1947c83a 	sub	r3,r3,r5
 104595c:	88c6983a 	sll	r3,r17,r3
 1045960:	00800434 	movhi	r2,16
 1045964:	10bfffc4 	addi	r2,r2,-1
 1045968:	1886703a 	and	r3,r3,r2
 104596c:	2941ffcc 	andi	r5,r5,2047
 1045970:	800d883a 	mov	r6,r16
 1045974:	0005883a 	mov	r2,zero
 1045978:	280a953a 	slli	r5,r5,20
 104597c:	31803fcc 	andi	r6,r6,255
 1045980:	01000434 	movhi	r4,16
 1045984:	300c97fa 	slli	r6,r6,31
 1045988:	213fffc4 	addi	r4,r4,-1
 104598c:	1906703a 	and	r3,r3,r4
 1045990:	1946b03a 	or	r3,r3,r5
 1045994:	1986b03a 	or	r3,r3,r6
 1045998:	dfc00217 	ldw	ra,8(sp)
 104599c:	dc400117 	ldw	r17,4(sp)
 10459a0:	dc000017 	ldw	r16,0(sp)
 10459a4:	dec00304 	addi	sp,sp,12
 10459a8:	f800283a 	ret
 10459ac:	00c002c4 	movi	r3,11
 10459b0:	1887c83a 	sub	r3,r3,r2
 10459b4:	88c6d83a 	srl	r3,r17,r3
 10459b8:	8904983a 	sll	r2,r17,r4
 10459bc:	01000434 	movhi	r4,16
 10459c0:	213fffc4 	addi	r4,r4,-1
 10459c4:	2941ffcc 	andi	r5,r5,2047
 10459c8:	1906703a 	and	r3,r3,r4
 10459cc:	800d883a 	mov	r6,r16
 10459d0:	003fe906 	br	1045978 <__alt_data_end+0xfffc5978>
 10459d4:	000d883a 	mov	r6,zero
 10459d8:	000b883a 	mov	r5,zero
 10459dc:	0007883a 	mov	r3,zero
 10459e0:	0005883a 	mov	r2,zero
 10459e4:	003fe406 	br	1045978 <__alt_data_end+0xfffc5978>
 10459e8:	0123c83a 	sub	r17,zero,r4
 10459ec:	003fd106 	br	1045934 <__alt_data_end+0xfffc5934>

010459f0 <__clzsi2>:
 10459f0:	00bfffd4 	movui	r2,65535
 10459f4:	11000536 	bltu	r2,r4,1045a0c <__clzsi2+0x1c>
 10459f8:	00803fc4 	movi	r2,255
 10459fc:	11000f36 	bltu	r2,r4,1045a3c <__clzsi2+0x4c>
 1045a00:	00800804 	movi	r2,32
 1045a04:	0007883a 	mov	r3,zero
 1045a08:	00000506 	br	1045a20 <__clzsi2+0x30>
 1045a0c:	00804034 	movhi	r2,256
 1045a10:	10bfffc4 	addi	r2,r2,-1
 1045a14:	11000c2e 	bgeu	r2,r4,1045a48 <__clzsi2+0x58>
 1045a18:	00800204 	movi	r2,8
 1045a1c:	00c00604 	movi	r3,24
 1045a20:	20c8d83a 	srl	r4,r4,r3
 1045a24:	00c04174 	movhi	r3,261
 1045a28:	18da8004 	addi	r3,r3,27136
 1045a2c:	1909883a 	add	r4,r3,r4
 1045a30:	20c00003 	ldbu	r3,0(r4)
 1045a34:	10c5c83a 	sub	r2,r2,r3
 1045a38:	f800283a 	ret
 1045a3c:	00800604 	movi	r2,24
 1045a40:	00c00204 	movi	r3,8
 1045a44:	003ff606 	br	1045a20 <__alt_data_end+0xfffc5a20>
 1045a48:	00800404 	movi	r2,16
 1045a4c:	1007883a 	mov	r3,r2
 1045a50:	003ff306 	br	1045a20 <__alt_data_end+0xfffc5a20>

01045a54 <_printf_r>:
 1045a54:	defffd04 	addi	sp,sp,-12
 1045a58:	2805883a 	mov	r2,r5
 1045a5c:	dfc00015 	stw	ra,0(sp)
 1045a60:	d9800115 	stw	r6,4(sp)
 1045a64:	d9c00215 	stw	r7,8(sp)
 1045a68:	21400217 	ldw	r5,8(r4)
 1045a6c:	d9c00104 	addi	r7,sp,4
 1045a70:	100d883a 	mov	r6,r2
 1045a74:	1047ec80 	call	1047ec8 <___vfprintf_internal_r>
 1045a78:	dfc00017 	ldw	ra,0(sp)
 1045a7c:	dec00304 	addi	sp,sp,12
 1045a80:	f800283a 	ret

01045a84 <printf>:
 1045a84:	defffc04 	addi	sp,sp,-16
 1045a88:	dfc00015 	stw	ra,0(sp)
 1045a8c:	d9400115 	stw	r5,4(sp)
 1045a90:	d9800215 	stw	r6,8(sp)
 1045a94:	d9c00315 	stw	r7,12(sp)
 1045a98:	008041b4 	movhi	r2,262
 1045a9c:	10a1fa04 	addi	r2,r2,-30744
 1045aa0:	10800017 	ldw	r2,0(r2)
 1045aa4:	200b883a 	mov	r5,r4
 1045aa8:	d9800104 	addi	r6,sp,4
 1045aac:	11000217 	ldw	r4,8(r2)
 1045ab0:	104a0c00 	call	104a0c0 <__vfprintf_internal>
 1045ab4:	dfc00017 	ldw	ra,0(sp)
 1045ab8:	dec00404 	addi	sp,sp,16
 1045abc:	f800283a 	ret

01045ac0 <_puts_r>:
 1045ac0:	defff604 	addi	sp,sp,-40
 1045ac4:	dc000715 	stw	r16,28(sp)
 1045ac8:	2021883a 	mov	r16,r4
 1045acc:	2809883a 	mov	r4,r5
 1045ad0:	dc400815 	stw	r17,32(sp)
 1045ad4:	dfc00915 	stw	ra,36(sp)
 1045ad8:	2823883a 	mov	r17,r5
 1045adc:	1045c580 	call	1045c58 <strlen>
 1045ae0:	10c00044 	addi	r3,r2,1
 1045ae4:	d8800115 	stw	r2,4(sp)
 1045ae8:	00804174 	movhi	r2,261
 1045aec:	109ac004 	addi	r2,r2,27392
 1045af0:	d8800215 	stw	r2,8(sp)
 1045af4:	00800044 	movi	r2,1
 1045af8:	d8800315 	stw	r2,12(sp)
 1045afc:	00800084 	movi	r2,2
 1045b00:	dc400015 	stw	r17,0(sp)
 1045b04:	d8c00615 	stw	r3,24(sp)
 1045b08:	dec00415 	stw	sp,16(sp)
 1045b0c:	d8800515 	stw	r2,20(sp)
 1045b10:	80000226 	beq	r16,zero,1045b1c <_puts_r+0x5c>
 1045b14:	80800e17 	ldw	r2,56(r16)
 1045b18:	10001426 	beq	r2,zero,1045b6c <_puts_r+0xac>
 1045b1c:	81400217 	ldw	r5,8(r16)
 1045b20:	2880030b 	ldhu	r2,12(r5)
 1045b24:	10c8000c 	andi	r3,r2,8192
 1045b28:	1800061e 	bne	r3,zero,1045b44 <_puts_r+0x84>
 1045b2c:	29001917 	ldw	r4,100(r5)
 1045b30:	00f7ffc4 	movi	r3,-8193
 1045b34:	10880014 	ori	r2,r2,8192
 1045b38:	20c6703a 	and	r3,r4,r3
 1045b3c:	2880030d 	sth	r2,12(r5)
 1045b40:	28c01915 	stw	r3,100(r5)
 1045b44:	d9800404 	addi	r6,sp,16
 1045b48:	8009883a 	mov	r4,r16
 1045b4c:	104c7140 	call	104c714 <__sfvwrite_r>
 1045b50:	1000091e 	bne	r2,zero,1045b78 <_puts_r+0xb8>
 1045b54:	00800284 	movi	r2,10
 1045b58:	dfc00917 	ldw	ra,36(sp)
 1045b5c:	dc400817 	ldw	r17,32(sp)
 1045b60:	dc000717 	ldw	r16,28(sp)
 1045b64:	dec00a04 	addi	sp,sp,40
 1045b68:	f800283a 	ret
 1045b6c:	8009883a 	mov	r4,r16
 1045b70:	104c2900 	call	104c290 <__sinit>
 1045b74:	003fe906 	br	1045b1c <__alt_data_end+0xfffc5b1c>
 1045b78:	00bfffc4 	movi	r2,-1
 1045b7c:	003ff606 	br	1045b58 <__alt_data_end+0xfffc5b58>

01045b80 <puts>:
 1045b80:	008041b4 	movhi	r2,262
 1045b84:	10a1fa04 	addi	r2,r2,-30744
 1045b88:	200b883a 	mov	r5,r4
 1045b8c:	11000017 	ldw	r4,0(r2)
 1045b90:	1045ac01 	jmpi	1045ac0 <_puts_r>

01045b94 <_sprintf_r>:
 1045b94:	deffe404 	addi	sp,sp,-112
 1045b98:	2807883a 	mov	r3,r5
 1045b9c:	dfc01a15 	stw	ra,104(sp)
 1045ba0:	d9c01b15 	stw	r7,108(sp)
 1045ba4:	00a00034 	movhi	r2,32768
 1045ba8:	10bfffc4 	addi	r2,r2,-1
 1045bac:	02008204 	movi	r8,520
 1045bb0:	d8800215 	stw	r2,8(sp)
 1045bb4:	d8800515 	stw	r2,20(sp)
 1045bb8:	d9c01b04 	addi	r7,sp,108
 1045bbc:	d80b883a 	mov	r5,sp
 1045bc0:	00bfffc4 	movi	r2,-1
 1045bc4:	d8c00015 	stw	r3,0(sp)
 1045bc8:	d8c00415 	stw	r3,16(sp)
 1045bcc:	da00030d 	sth	r8,12(sp)
 1045bd0:	d880038d 	sth	r2,14(sp)
 1045bd4:	1045cf00 	call	1045cf0 <___svfprintf_internal_r>
 1045bd8:	d8c00017 	ldw	r3,0(sp)
 1045bdc:	18000005 	stb	zero,0(r3)
 1045be0:	dfc01a17 	ldw	ra,104(sp)
 1045be4:	dec01c04 	addi	sp,sp,112
 1045be8:	f800283a 	ret

01045bec <sprintf>:
 1045bec:	deffe304 	addi	sp,sp,-116
 1045bf0:	2007883a 	mov	r3,r4
 1045bf4:	dfc01a15 	stw	ra,104(sp)
 1045bf8:	d9801b15 	stw	r6,108(sp)
 1045bfc:	d9c01c15 	stw	r7,112(sp)
 1045c00:	010041b4 	movhi	r4,262
 1045c04:	2121fa04 	addi	r4,r4,-30744
 1045c08:	21000017 	ldw	r4,0(r4)
 1045c0c:	00a00034 	movhi	r2,32768
 1045c10:	10bfffc4 	addi	r2,r2,-1
 1045c14:	280d883a 	mov	r6,r5
 1045c18:	02008204 	movi	r8,520
 1045c1c:	d8800215 	stw	r2,8(sp)
 1045c20:	d8800515 	stw	r2,20(sp)
 1045c24:	d9c01b04 	addi	r7,sp,108
 1045c28:	d80b883a 	mov	r5,sp
 1045c2c:	00bfffc4 	movi	r2,-1
 1045c30:	d8c00015 	stw	r3,0(sp)
 1045c34:	d8c00415 	stw	r3,16(sp)
 1045c38:	da00030d 	sth	r8,12(sp)
 1045c3c:	d880038d 	sth	r2,14(sp)
 1045c40:	1045cf00 	call	1045cf0 <___svfprintf_internal_r>
 1045c44:	d8c00017 	ldw	r3,0(sp)
 1045c48:	18000005 	stb	zero,0(r3)
 1045c4c:	dfc01a17 	ldw	ra,104(sp)
 1045c50:	dec01d04 	addi	sp,sp,116
 1045c54:	f800283a 	ret

01045c58 <strlen>:
 1045c58:	208000cc 	andi	r2,r4,3
 1045c5c:	10002026 	beq	r2,zero,1045ce0 <strlen+0x88>
 1045c60:	20800007 	ldb	r2,0(r4)
 1045c64:	10002026 	beq	r2,zero,1045ce8 <strlen+0x90>
 1045c68:	2005883a 	mov	r2,r4
 1045c6c:	00000206 	br	1045c78 <strlen+0x20>
 1045c70:	10c00007 	ldb	r3,0(r2)
 1045c74:	18001826 	beq	r3,zero,1045cd8 <strlen+0x80>
 1045c78:	10800044 	addi	r2,r2,1
 1045c7c:	10c000cc 	andi	r3,r2,3
 1045c80:	183ffb1e 	bne	r3,zero,1045c70 <__alt_data_end+0xfffc5c70>
 1045c84:	10c00017 	ldw	r3,0(r2)
 1045c88:	01ffbff4 	movhi	r7,65279
 1045c8c:	39ffbfc4 	addi	r7,r7,-257
 1045c90:	00ca303a 	nor	r5,zero,r3
 1045c94:	01a02074 	movhi	r6,32897
 1045c98:	19c7883a 	add	r3,r3,r7
 1045c9c:	31a02004 	addi	r6,r6,-32640
 1045ca0:	1946703a 	and	r3,r3,r5
 1045ca4:	1986703a 	and	r3,r3,r6
 1045ca8:	1800091e 	bne	r3,zero,1045cd0 <strlen+0x78>
 1045cac:	10800104 	addi	r2,r2,4
 1045cb0:	10c00017 	ldw	r3,0(r2)
 1045cb4:	19cb883a 	add	r5,r3,r7
 1045cb8:	00c6303a 	nor	r3,zero,r3
 1045cbc:	28c6703a 	and	r3,r5,r3
 1045cc0:	1986703a 	and	r3,r3,r6
 1045cc4:	183ff926 	beq	r3,zero,1045cac <__alt_data_end+0xfffc5cac>
 1045cc8:	00000106 	br	1045cd0 <strlen+0x78>
 1045ccc:	10800044 	addi	r2,r2,1
 1045cd0:	10c00007 	ldb	r3,0(r2)
 1045cd4:	183ffd1e 	bne	r3,zero,1045ccc <__alt_data_end+0xfffc5ccc>
 1045cd8:	1105c83a 	sub	r2,r2,r4
 1045cdc:	f800283a 	ret
 1045ce0:	2005883a 	mov	r2,r4
 1045ce4:	003fe706 	br	1045c84 <__alt_data_end+0xfffc5c84>
 1045ce8:	0005883a 	mov	r2,zero
 1045cec:	f800283a 	ret

01045cf0 <___svfprintf_internal_r>:
 1045cf0:	deffb704 	addi	sp,sp,-292
 1045cf4:	dfc04815 	stw	ra,288(sp)
 1045cf8:	ddc04615 	stw	r23,280(sp)
 1045cfc:	d9402c15 	stw	r5,176(sp)
 1045d00:	d9003915 	stw	r4,228(sp)
 1045d04:	302f883a 	mov	r23,r6
 1045d08:	d9c02d15 	stw	r7,180(sp)
 1045d0c:	df004715 	stw	fp,284(sp)
 1045d10:	dd804515 	stw	r22,276(sp)
 1045d14:	dd404415 	stw	r21,272(sp)
 1045d18:	dd004315 	stw	r20,268(sp)
 1045d1c:	dcc04215 	stw	r19,264(sp)
 1045d20:	dc804115 	stw	r18,260(sp)
 1045d24:	dc404015 	stw	r17,256(sp)
 1045d28:	dc003f15 	stw	r16,252(sp)
 1045d2c:	104ce040 	call	104ce04 <_localeconv_r>
 1045d30:	10800017 	ldw	r2,0(r2)
 1045d34:	1009883a 	mov	r4,r2
 1045d38:	d8803415 	stw	r2,208(sp)
 1045d3c:	1045c580 	call	1045c58 <strlen>
 1045d40:	d8c02c17 	ldw	r3,176(sp)
 1045d44:	d8803815 	stw	r2,224(sp)
 1045d48:	1880030b 	ldhu	r2,12(r3)
 1045d4c:	1080200c 	andi	r2,r2,128
 1045d50:	10000226 	beq	r2,zero,1045d5c <___svfprintf_internal_r+0x6c>
 1045d54:	18800417 	ldw	r2,16(r3)
 1045d58:	10067f26 	beq	r2,zero,1047758 <___svfprintf_internal_r+0x1a68>
 1045d5c:	dcc03917 	ldw	r19,228(sp)
 1045d60:	d8c00404 	addi	r3,sp,16
 1045d64:	05404174 	movhi	r21,261
 1045d68:	d9001e04 	addi	r4,sp,120
 1045d6c:	ad5ad184 	addi	r21,r21,27462
 1045d70:	d8c01e15 	stw	r3,120(sp)
 1045d74:	d8002015 	stw	zero,128(sp)
 1045d78:	d8001f15 	stw	zero,124(sp)
 1045d7c:	d8003315 	stw	zero,204(sp)
 1045d80:	d8003615 	stw	zero,216(sp)
 1045d84:	d8003715 	stw	zero,220(sp)
 1045d88:	1811883a 	mov	r8,r3
 1045d8c:	d8003a15 	stw	zero,232(sp)
 1045d90:	d8003b15 	stw	zero,236(sp)
 1045d94:	d8002f15 	stw	zero,188(sp)
 1045d98:	d9002815 	stw	r4,160(sp)
 1045d9c:	b8800007 	ldb	r2,0(r23)
 1045da0:	10026726 	beq	r2,zero,1046740 <___svfprintf_internal_r+0xa50>
 1045da4:	00c00944 	movi	r3,37
 1045da8:	b821883a 	mov	r16,r23
 1045dac:	10c0021e 	bne	r2,r3,1045db8 <___svfprintf_internal_r+0xc8>
 1045db0:	00001406 	br	1045e04 <___svfprintf_internal_r+0x114>
 1045db4:	10c00326 	beq	r2,r3,1045dc4 <___svfprintf_internal_r+0xd4>
 1045db8:	84000044 	addi	r16,r16,1
 1045dbc:	80800007 	ldb	r2,0(r16)
 1045dc0:	103ffc1e 	bne	r2,zero,1045db4 <__alt_data_end+0xfffc5db4>
 1045dc4:	85e3c83a 	sub	r17,r16,r23
 1045dc8:	88000e26 	beq	r17,zero,1045e04 <___svfprintf_internal_r+0x114>
 1045dcc:	d8c02017 	ldw	r3,128(sp)
 1045dd0:	d8801f17 	ldw	r2,124(sp)
 1045dd4:	45c00015 	stw	r23,0(r8)
 1045dd8:	1c47883a 	add	r3,r3,r17
 1045ddc:	10800044 	addi	r2,r2,1
 1045de0:	d8c02015 	stw	r3,128(sp)
 1045de4:	44400115 	stw	r17,4(r8)
 1045de8:	d8801f15 	stw	r2,124(sp)
 1045dec:	00c001c4 	movi	r3,7
 1045df0:	18809716 	blt	r3,r2,1046050 <___svfprintf_internal_r+0x360>
 1045df4:	42000204 	addi	r8,r8,8
 1045df8:	d9402f17 	ldw	r5,188(sp)
 1045dfc:	2c4b883a 	add	r5,r5,r17
 1045e00:	d9402f15 	stw	r5,188(sp)
 1045e04:	80800007 	ldb	r2,0(r16)
 1045e08:	10009826 	beq	r2,zero,104606c <___svfprintf_internal_r+0x37c>
 1045e0c:	84400047 	ldb	r17,1(r16)
 1045e10:	00bfffc4 	movi	r2,-1
 1045e14:	85c00044 	addi	r23,r16,1
 1045e18:	d8002785 	stb	zero,158(sp)
 1045e1c:	0007883a 	mov	r3,zero
 1045e20:	000f883a 	mov	r7,zero
 1045e24:	d8802915 	stw	r2,164(sp)
 1045e28:	d8003115 	stw	zero,196(sp)
 1045e2c:	0025883a 	mov	r18,zero
 1045e30:	01401604 	movi	r5,88
 1045e34:	01800244 	movi	r6,9
 1045e38:	02800a84 	movi	r10,42
 1045e3c:	02401b04 	movi	r9,108
 1045e40:	bdc00044 	addi	r23,r23,1
 1045e44:	88bff804 	addi	r2,r17,-32
 1045e48:	2882f036 	bltu	r5,r2,1046a0c <___svfprintf_internal_r+0xd1c>
 1045e4c:	100490ba 	slli	r2,r2,2
 1045e50:	01004134 	movhi	r4,260
 1045e54:	21179904 	addi	r4,r4,24164
 1045e58:	1105883a 	add	r2,r2,r4
 1045e5c:	10800017 	ldw	r2,0(r2)
 1045e60:	1000683a 	jmp	r2
 1045e64:	01046974 	movhi	r4,4517
 1045e68:	01046a0c 	andi	r4,zero,4520
 1045e6c:	01046a0c 	andi	r4,zero,4520
 1045e70:	01046968 	cmpgeui	r4,zero,4517
 1045e74:	01046a0c 	andi	r4,zero,4520
 1045e78:	01046a0c 	andi	r4,zero,4520
 1045e7c:	01046a0c 	andi	r4,zero,4520
 1045e80:	01046a0c 	andi	r4,zero,4520
 1045e84:	01046a0c 	andi	r4,zero,4520
 1045e88:	01046a0c 	andi	r4,zero,4520
 1045e8c:	010460c8 	cmpgei	r4,zero,4483
 1045e90:	010468a4 	muli	r4,zero,4514
 1045e94:	01046a0c 	andi	r4,zero,4520
 1045e98:	01045fd8 	cmpnei	r4,zero,4479
 1045e9c:	010460f0 	cmpltui	r4,zero,4483
 1045ea0:	01046a0c 	andi	r4,zero,4520
 1045ea4:	01046164 	muli	r4,zero,4485
 1045ea8:	01046130 	cmpltui	r4,zero,4484
 1045eac:	01046130 	cmpltui	r4,zero,4484
 1045eb0:	01046130 	cmpltui	r4,zero,4484
 1045eb4:	01046130 	cmpltui	r4,zero,4484
 1045eb8:	01046130 	cmpltui	r4,zero,4484
 1045ebc:	01046130 	cmpltui	r4,zero,4484
 1045ec0:	01046130 	cmpltui	r4,zero,4484
 1045ec4:	01046130 	cmpltui	r4,zero,4484
 1045ec8:	01046130 	cmpltui	r4,zero,4484
 1045ecc:	01046a0c 	andi	r4,zero,4520
 1045ed0:	01046a0c 	andi	r4,zero,4520
 1045ed4:	01046a0c 	andi	r4,zero,4520
 1045ed8:	01046a0c 	andi	r4,zero,4520
 1045edc:	01046a0c 	andi	r4,zero,4520
 1045ee0:	01046a0c 	andi	r4,zero,4520
 1045ee4:	01046a0c 	andi	r4,zero,4520
 1045ee8:	01046a0c 	andi	r4,zero,4520
 1045eec:	01046a0c 	andi	r4,zero,4520
 1045ef0:	01046a0c 	andi	r4,zero,4520
 1045ef4:	0104621c 	xori	r4,zero,4488
 1045ef8:	01046170 	cmpltui	r4,zero,4485
 1045efc:	01046a0c 	andi	r4,zero,4520
 1045f00:	01046170 	cmpltui	r4,zero,4485
 1045f04:	01046a0c 	andi	r4,zero,4520
 1045f08:	01046a0c 	andi	r4,zero,4520
 1045f0c:	01046a0c 	andi	r4,zero,4520
 1045f10:	01046a0c 	andi	r4,zero,4520
 1045f14:	01046210 	cmplti	r4,zero,4488
 1045f18:	01046a0c 	andi	r4,zero,4520
 1045f1c:	01046a0c 	andi	r4,zero,4520
 1045f20:	010462d8 	cmpnei	r4,zero,4491
 1045f24:	01046a0c 	andi	r4,zero,4520
 1045f28:	01046a0c 	andi	r4,zero,4520
 1045f2c:	01046a0c 	andi	r4,zero,4520
 1045f30:	01046a0c 	andi	r4,zero,4520
 1045f34:	01046a0c 	andi	r4,zero,4520
 1045f38:	01046748 	cmpgei	r4,zero,4509
 1045f3c:	01046a0c 	andi	r4,zero,4520
 1045f40:	01046a0c 	andi	r4,zero,4520
 1045f44:	010467a8 	cmpgeui	r4,zero,4510
 1045f48:	01046a0c 	andi	r4,zero,4520
 1045f4c:	01046a0c 	andi	r4,zero,4520
 1045f50:	01046a0c 	andi	r4,zero,4520
 1045f54:	01046a0c 	andi	r4,zero,4520
 1045f58:	01046a0c 	andi	r4,zero,4520
 1045f5c:	01046a0c 	andi	r4,zero,4520
 1045f60:	01046a0c 	andi	r4,zero,4520
 1045f64:	01046a0c 	andi	r4,zero,4520
 1045f68:	01046a0c 	andi	r4,zero,4520
 1045f6c:	01046a0c 	andi	r4,zero,4520
 1045f70:	01046858 	cmpnei	r4,zero,4513
 1045f74:	01046994 	movui	r4,4518
 1045f78:	01046170 	cmpltui	r4,zero,4485
 1045f7c:	01046170 	cmpltui	r4,zero,4485
 1045f80:	01046170 	cmpltui	r4,zero,4485
 1045f84:	010469e8 	cmpgeui	r4,zero,4519
 1045f88:	01046994 	movui	r4,4518
 1045f8c:	01046a0c 	andi	r4,zero,4520
 1045f90:	01046a0c 	andi	r4,zero,4520
 1045f94:	010469a4 	muli	r4,zero,4518
 1045f98:	01046a0c 	andi	r4,zero,4520
 1045f9c:	010469b4 	movhi	r4,4518
 1045fa0:	01046894 	movui	r4,4514
 1045fa4:	01045fe4 	muli	r4,zero,4479
 1045fa8:	010468b4 	movhi	r4,4514
 1045fac:	01046a0c 	andi	r4,zero,4520
 1045fb0:	010468c0 	call	10468c <__alt_mem_onchip_memory2-0xf3b974>
 1045fb4:	01046a0c 	andi	r4,zero,4520
 1045fb8:	0104691c 	xori	r4,zero,4516
 1045fbc:	01046a0c 	andi	r4,zero,4520
 1045fc0:	01046a0c 	andi	r4,zero,4520
 1045fc4:	0104692c 	andhi	r4,zero,4516
 1045fc8:	d9003117 	ldw	r4,196(sp)
 1045fcc:	d8802d15 	stw	r2,180(sp)
 1045fd0:	0109c83a 	sub	r4,zero,r4
 1045fd4:	d9003115 	stw	r4,196(sp)
 1045fd8:	94800114 	ori	r18,r18,4
 1045fdc:	bc400007 	ldb	r17,0(r23)
 1045fe0:	003f9706 	br	1045e40 <__alt_data_end+0xfffc5e40>
 1045fe4:	00800c04 	movi	r2,48
 1045fe8:	d9002d17 	ldw	r4,180(sp)
 1045fec:	d9402917 	ldw	r5,164(sp)
 1045ff0:	d8802705 	stb	r2,156(sp)
 1045ff4:	00801e04 	movi	r2,120
 1045ff8:	d8802745 	stb	r2,157(sp)
 1045ffc:	d8002785 	stb	zero,158(sp)
 1046000:	20c00104 	addi	r3,r4,4
 1046004:	25000017 	ldw	r20,0(r4)
 1046008:	002d883a 	mov	r22,zero
 104600c:	90800094 	ori	r2,r18,2
 1046010:	28028616 	blt	r5,zero,1046a2c <___svfprintf_internal_r+0xd3c>
 1046014:	00bfdfc4 	movi	r2,-129
 1046018:	90a4703a 	and	r18,r18,r2
 104601c:	d8c02d15 	stw	r3,180(sp)
 1046020:	94800094 	ori	r18,r18,2
 1046024:	a002731e 	bne	r20,zero,10469f4 <___svfprintf_internal_r+0xd04>
 1046028:	00804174 	movhi	r2,261
 104602c:	109aca04 	addi	r2,r2,27432
 1046030:	d8803a15 	stw	r2,232(sp)
 1046034:	04401e04 	movi	r17,120
 1046038:	d8c02917 	ldw	r3,164(sp)
 104603c:	0039883a 	mov	fp,zero
 1046040:	1801d526 	beq	r3,zero,1046798 <___svfprintf_internal_r+0xaa8>
 1046044:	0029883a 	mov	r20,zero
 1046048:	002d883a 	mov	r22,zero
 104604c:	0001f106 	br	1046814 <___svfprintf_internal_r+0xb24>
 1046050:	d9402c17 	ldw	r5,176(sp)
 1046054:	d9801e04 	addi	r6,sp,120
 1046058:	9809883a 	mov	r4,r19
 104605c:	104f4ec0 	call	104f4ec <__ssprint_r>
 1046060:	1000081e 	bne	r2,zero,1046084 <___svfprintf_internal_r+0x394>
 1046064:	da000404 	addi	r8,sp,16
 1046068:	003f6306 	br	1045df8 <__alt_data_end+0xfffc5df8>
 104606c:	d8802017 	ldw	r2,128(sp)
 1046070:	10000426 	beq	r2,zero,1046084 <___svfprintf_internal_r+0x394>
 1046074:	d9402c17 	ldw	r5,176(sp)
 1046078:	d9003917 	ldw	r4,228(sp)
 104607c:	d9801e04 	addi	r6,sp,120
 1046080:	104f4ec0 	call	104f4ec <__ssprint_r>
 1046084:	d8802c17 	ldw	r2,176(sp)
 1046088:	10c0030b 	ldhu	r3,12(r2)
 104608c:	d8802f17 	ldw	r2,188(sp)
 1046090:	18c0100c 	andi	r3,r3,64
 1046094:	1805f51e 	bne	r3,zero,104786c <___svfprintf_internal_r+0x1b7c>
 1046098:	dfc04817 	ldw	ra,288(sp)
 104609c:	df004717 	ldw	fp,284(sp)
 10460a0:	ddc04617 	ldw	r23,280(sp)
 10460a4:	dd804517 	ldw	r22,276(sp)
 10460a8:	dd404417 	ldw	r21,272(sp)
 10460ac:	dd004317 	ldw	r20,268(sp)
 10460b0:	dcc04217 	ldw	r19,264(sp)
 10460b4:	dc804117 	ldw	r18,260(sp)
 10460b8:	dc404017 	ldw	r17,256(sp)
 10460bc:	dc003f17 	ldw	r16,252(sp)
 10460c0:	dec04904 	addi	sp,sp,292
 10460c4:	f800283a 	ret
 10460c8:	d8802d17 	ldw	r2,180(sp)
 10460cc:	d9002d17 	ldw	r4,180(sp)
 10460d0:	10800017 	ldw	r2,0(r2)
 10460d4:	d8803115 	stw	r2,196(sp)
 10460d8:	20800104 	addi	r2,r4,4
 10460dc:	d9003117 	ldw	r4,196(sp)
 10460e0:	203fb916 	blt	r4,zero,1045fc8 <__alt_data_end+0xfffc5fc8>
 10460e4:	d8802d15 	stw	r2,180(sp)
 10460e8:	bc400007 	ldb	r17,0(r23)
 10460ec:	003f5406 	br	1045e40 <__alt_data_end+0xfffc5e40>
 10460f0:	bc400007 	ldb	r17,0(r23)
 10460f4:	bac00044 	addi	r11,r23,1
 10460f8:	8a873926 	beq	r17,r10,1047de0 <___svfprintf_internal_r+0x20f0>
 10460fc:	88bff404 	addi	r2,r17,-48
 1046100:	0009883a 	mov	r4,zero
 1046104:	30868836 	bltu	r6,r2,1047b28 <___svfprintf_internal_r+0x1e38>
 1046108:	5c400007 	ldb	r17,0(r11)
 104610c:	210002a4 	muli	r4,r4,10
 1046110:	5dc00044 	addi	r23,r11,1
 1046114:	b817883a 	mov	r11,r23
 1046118:	2089883a 	add	r4,r4,r2
 104611c:	88bff404 	addi	r2,r17,-48
 1046120:	30bff92e 	bgeu	r6,r2,1046108 <__alt_data_end+0xfffc6108>
 1046124:	2005d716 	blt	r4,zero,1047884 <___svfprintf_internal_r+0x1b94>
 1046128:	d9002915 	stw	r4,164(sp)
 104612c:	003f4506 	br	1045e44 <__alt_data_end+0xfffc5e44>
 1046130:	b809883a 	mov	r4,r23
 1046134:	d8003115 	stw	zero,196(sp)
 1046138:	88bff404 	addi	r2,r17,-48
 104613c:	0017883a 	mov	r11,zero
 1046140:	24400007 	ldb	r17,0(r4)
 1046144:	5ac002a4 	muli	r11,r11,10
 1046148:	bdc00044 	addi	r23,r23,1
 104614c:	b809883a 	mov	r4,r23
 1046150:	12d7883a 	add	r11,r2,r11
 1046154:	88bff404 	addi	r2,r17,-48
 1046158:	30bff92e 	bgeu	r6,r2,1046140 <__alt_data_end+0xfffc6140>
 104615c:	dac03115 	stw	r11,196(sp)
 1046160:	003f3806 	br	1045e44 <__alt_data_end+0xfffc5e44>
 1046164:	94802014 	ori	r18,r18,128
 1046168:	bc400007 	ldb	r17,0(r23)
 104616c:	003f3406 	br	1045e40 <__alt_data_end+0xfffc5e40>
 1046170:	18c03fcc 	andi	r3,r3,255
 1046174:	1807471e 	bne	r3,zero,1047e94 <___svfprintf_internal_r+0x21a4>
 1046178:	9080020c 	andi	r2,r18,8
 104617c:	10047d26 	beq	r2,zero,1047374 <___svfprintf_internal_r+0x1684>
 1046180:	d8c02d17 	ldw	r3,180(sp)
 1046184:	d9002d17 	ldw	r4,180(sp)
 1046188:	d9402d17 	ldw	r5,180(sp)
 104618c:	18c00017 	ldw	r3,0(r3)
 1046190:	21000117 	ldw	r4,4(r4)
 1046194:	29400204 	addi	r5,r5,8
 1046198:	d8c03615 	stw	r3,216(sp)
 104619c:	d9003715 	stw	r4,220(sp)
 10461a0:	d9402d15 	stw	r5,180(sp)
 10461a4:	d9003617 	ldw	r4,216(sp)
 10461a8:	d9403717 	ldw	r5,220(sp)
 10461ac:	da003e15 	stw	r8,248(sp)
 10461b0:	04000044 	movi	r16,1
 10461b4:	104f20c0 	call	104f20c <__fpclassifyd>
 10461b8:	da003e17 	ldw	r8,248(sp)
 10461bc:	14044b1e 	bne	r2,r16,10472ec <___svfprintf_internal_r+0x15fc>
 10461c0:	d9003617 	ldw	r4,216(sp)
 10461c4:	d9403717 	ldw	r5,220(sp)
 10461c8:	000d883a 	mov	r6,zero
 10461cc:	000f883a 	mov	r7,zero
 10461d0:	1053c0c0 	call	1053c0c <__ledf2>
 10461d4:	da003e17 	ldw	r8,248(sp)
 10461d8:	1005f316 	blt	r2,zero,10479a8 <___svfprintf_internal_r+0x1cb8>
 10461dc:	df002783 	ldbu	fp,158(sp)
 10461e0:	008011c4 	movi	r2,71
 10461e4:	1445590e 	bge	r2,r17,104774c <___svfprintf_internal_r+0x1a5c>
 10461e8:	04004174 	movhi	r16,261
 10461ec:	841ac204 	addi	r16,r16,27400
 10461f0:	00c000c4 	movi	r3,3
 10461f4:	00bfdfc4 	movi	r2,-129
 10461f8:	d8c02a15 	stw	r3,168(sp)
 10461fc:	90a4703a 	and	r18,r18,r2
 1046200:	d8c02e15 	stw	r3,184(sp)
 1046204:	d8002915 	stw	zero,164(sp)
 1046208:	d8003215 	stw	zero,200(sp)
 104620c:	00006606 	br	10463a8 <___svfprintf_internal_r+0x6b8>
 1046210:	94800214 	ori	r18,r18,8
 1046214:	bc400007 	ldb	r17,0(r23)
 1046218:	003f0906 	br	1045e40 <__alt_data_end+0xfffc5e40>
 104621c:	18c03fcc 	andi	r3,r3,255
 1046220:	1807181e 	bne	r3,zero,1047e84 <___svfprintf_internal_r+0x2194>
 1046224:	94800414 	ori	r18,r18,16
 1046228:	9080080c 	andi	r2,r18,32
 104622c:	10039626 	beq	r2,zero,1047088 <___svfprintf_internal_r+0x1398>
 1046230:	d9402d17 	ldw	r5,180(sp)
 1046234:	28800117 	ldw	r2,4(r5)
 1046238:	2d000017 	ldw	r20,0(r5)
 104623c:	29400204 	addi	r5,r5,8
 1046240:	d9402d15 	stw	r5,180(sp)
 1046244:	102d883a 	mov	r22,r2
 1046248:	10039816 	blt	r2,zero,10470ac <___svfprintf_internal_r+0x13bc>
 104624c:	d9402917 	ldw	r5,164(sp)
 1046250:	df002783 	ldbu	fp,158(sp)
 1046254:	2803ab16 	blt	r5,zero,1047104 <___svfprintf_internal_r+0x1414>
 1046258:	00ffdfc4 	movi	r3,-129
 104625c:	a584b03a 	or	r2,r20,r22
 1046260:	90e4703a 	and	r18,r18,r3
 1046264:	10014a26 	beq	r2,zero,1046790 <___svfprintf_internal_r+0xaa0>
 1046268:	b0034b26 	beq	r22,zero,1046f98 <___svfprintf_internal_r+0x12a8>
 104626c:	dc402a15 	stw	r17,168(sp)
 1046270:	dc001e04 	addi	r16,sp,120
 1046274:	b023883a 	mov	r17,r22
 1046278:	402d883a 	mov	r22,r8
 104627c:	a009883a 	mov	r4,r20
 1046280:	880b883a 	mov	r5,r17
 1046284:	01800284 	movi	r6,10
 1046288:	000f883a 	mov	r7,zero
 104628c:	1052dec0 	call	1052dec <__umoddi3>
 1046290:	10800c04 	addi	r2,r2,48
 1046294:	843fffc4 	addi	r16,r16,-1
 1046298:	a009883a 	mov	r4,r20
 104629c:	880b883a 	mov	r5,r17
 10462a0:	80800005 	stb	r2,0(r16)
 10462a4:	01800284 	movi	r6,10
 10462a8:	000f883a 	mov	r7,zero
 10462ac:	10528740 	call	1052874 <__udivdi3>
 10462b0:	1029883a 	mov	r20,r2
 10462b4:	10c4b03a 	or	r2,r2,r3
 10462b8:	1823883a 	mov	r17,r3
 10462bc:	103fef1e 	bne	r2,zero,104627c <__alt_data_end+0xfffc627c>
 10462c0:	d8c02817 	ldw	r3,160(sp)
 10462c4:	dc402a17 	ldw	r17,168(sp)
 10462c8:	b011883a 	mov	r8,r22
 10462cc:	1c07c83a 	sub	r3,r3,r16
 10462d0:	d8c02e15 	stw	r3,184(sp)
 10462d4:	00002e06 	br	1046390 <___svfprintf_internal_r+0x6a0>
 10462d8:	18c03fcc 	andi	r3,r3,255
 10462dc:	1806e71e 	bne	r3,zero,1047e7c <___svfprintf_internal_r+0x218c>
 10462e0:	94800414 	ori	r18,r18,16
 10462e4:	9080080c 	andi	r2,r18,32
 10462e8:	1002d426 	beq	r2,zero,1046e3c <___svfprintf_internal_r+0x114c>
 10462ec:	d9402d17 	ldw	r5,180(sp)
 10462f0:	d8c02917 	ldw	r3,164(sp)
 10462f4:	d8002785 	stb	zero,158(sp)
 10462f8:	28800204 	addi	r2,r5,8
 10462fc:	2d000017 	ldw	r20,0(r5)
 1046300:	2d800117 	ldw	r22,4(r5)
 1046304:	18041516 	blt	r3,zero,104735c <___svfprintf_internal_r+0x166c>
 1046308:	013fdfc4 	movi	r4,-129
 104630c:	a586b03a 	or	r3,r20,r22
 1046310:	d8802d15 	stw	r2,180(sp)
 1046314:	9124703a 	and	r18,r18,r4
 1046318:	1802d51e 	bne	r3,zero,1046e70 <___svfprintf_internal_r+0x1180>
 104631c:	d9402917 	ldw	r5,164(sp)
 1046320:	0039883a 	mov	fp,zero
 1046324:	2806be26 	beq	r5,zero,1047e20 <___svfprintf_internal_r+0x2130>
 1046328:	0029883a 	mov	r20,zero
 104632c:	002d883a 	mov	r22,zero
 1046330:	dc001e04 	addi	r16,sp,120
 1046334:	a006d0fa 	srli	r3,r20,3
 1046338:	b008977a 	slli	r4,r22,29
 104633c:	b02cd0fa 	srli	r22,r22,3
 1046340:	a50001cc 	andi	r20,r20,7
 1046344:	a0800c04 	addi	r2,r20,48
 1046348:	843fffc4 	addi	r16,r16,-1
 104634c:	20e8b03a 	or	r20,r4,r3
 1046350:	80800005 	stb	r2,0(r16)
 1046354:	a586b03a 	or	r3,r20,r22
 1046358:	183ff61e 	bne	r3,zero,1046334 <__alt_data_end+0xfffc6334>
 104635c:	90c0004c 	andi	r3,r18,1
 1046360:	18013926 	beq	r3,zero,1046848 <___svfprintf_internal_r+0xb58>
 1046364:	10803fcc 	andi	r2,r2,255
 1046368:	1080201c 	xori	r2,r2,128
 104636c:	10bfe004 	addi	r2,r2,-128
 1046370:	00c00c04 	movi	r3,48
 1046374:	10c13426 	beq	r2,r3,1046848 <___svfprintf_internal_r+0xb58>
 1046378:	80ffffc5 	stb	r3,-1(r16)
 104637c:	d8c02817 	ldw	r3,160(sp)
 1046380:	80bfffc4 	addi	r2,r16,-1
 1046384:	1021883a 	mov	r16,r2
 1046388:	1887c83a 	sub	r3,r3,r2
 104638c:	d8c02e15 	stw	r3,184(sp)
 1046390:	d8802e17 	ldw	r2,184(sp)
 1046394:	d9002917 	ldw	r4,164(sp)
 1046398:	1100010e 	bge	r2,r4,10463a0 <___svfprintf_internal_r+0x6b0>
 104639c:	2005883a 	mov	r2,r4
 10463a0:	d8802a15 	stw	r2,168(sp)
 10463a4:	d8003215 	stw	zero,200(sp)
 10463a8:	e7003fcc 	andi	fp,fp,255
 10463ac:	e700201c 	xori	fp,fp,128
 10463b0:	e73fe004 	addi	fp,fp,-128
 10463b4:	e0000326 	beq	fp,zero,10463c4 <___svfprintf_internal_r+0x6d4>
 10463b8:	d8c02a17 	ldw	r3,168(sp)
 10463bc:	18c00044 	addi	r3,r3,1
 10463c0:	d8c02a15 	stw	r3,168(sp)
 10463c4:	90c0008c 	andi	r3,r18,2
 10463c8:	d8c02b15 	stw	r3,172(sp)
 10463cc:	18000326 	beq	r3,zero,10463dc <___svfprintf_internal_r+0x6ec>
 10463d0:	d8c02a17 	ldw	r3,168(sp)
 10463d4:	18c00084 	addi	r3,r3,2
 10463d8:	d8c02a15 	stw	r3,168(sp)
 10463dc:	90c0210c 	andi	r3,r18,132
 10463e0:	d8c03015 	stw	r3,192(sp)
 10463e4:	1801a11e 	bne	r3,zero,1046a6c <___svfprintf_internal_r+0xd7c>
 10463e8:	d9003117 	ldw	r4,196(sp)
 10463ec:	d8c02a17 	ldw	r3,168(sp)
 10463f0:	20e9c83a 	sub	r20,r4,r3
 10463f4:	05019d0e 	bge	zero,r20,1046a6c <___svfprintf_internal_r+0xd7c>
 10463f8:	02400404 	movi	r9,16
 10463fc:	d8c02017 	ldw	r3,128(sp)
 1046400:	d8801f17 	ldw	r2,124(sp)
 1046404:	4d051b0e 	bge	r9,r20,1047874 <___svfprintf_internal_r+0x1b84>
 1046408:	01404174 	movhi	r5,261
 104640c:	295ad584 	addi	r5,r5,27478
 1046410:	dc403c15 	stw	r17,240(sp)
 1046414:	d9403515 	stw	r5,212(sp)
 1046418:	a023883a 	mov	r17,r20
 104641c:	482d883a 	mov	r22,r9
 1046420:	9029883a 	mov	r20,r18
 1046424:	070001c4 	movi	fp,7
 1046428:	8025883a 	mov	r18,r16
 104642c:	dc002c17 	ldw	r16,176(sp)
 1046430:	00000306 	br	1046440 <___svfprintf_internal_r+0x750>
 1046434:	8c7ffc04 	addi	r17,r17,-16
 1046438:	42000204 	addi	r8,r8,8
 104643c:	b440130e 	bge	r22,r17,104648c <___svfprintf_internal_r+0x79c>
 1046440:	01004174 	movhi	r4,261
 1046444:	18c00404 	addi	r3,r3,16
 1046448:	10800044 	addi	r2,r2,1
 104644c:	211ad584 	addi	r4,r4,27478
 1046450:	41000015 	stw	r4,0(r8)
 1046454:	45800115 	stw	r22,4(r8)
 1046458:	d8c02015 	stw	r3,128(sp)
 104645c:	d8801f15 	stw	r2,124(sp)
 1046460:	e0bff40e 	bge	fp,r2,1046434 <__alt_data_end+0xfffc6434>
 1046464:	d9801e04 	addi	r6,sp,120
 1046468:	800b883a 	mov	r5,r16
 104646c:	9809883a 	mov	r4,r19
 1046470:	104f4ec0 	call	104f4ec <__ssprint_r>
 1046474:	103f031e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 1046478:	8c7ffc04 	addi	r17,r17,-16
 104647c:	d8c02017 	ldw	r3,128(sp)
 1046480:	d8801f17 	ldw	r2,124(sp)
 1046484:	da000404 	addi	r8,sp,16
 1046488:	b47fed16 	blt	r22,r17,1046440 <__alt_data_end+0xfffc6440>
 104648c:	9021883a 	mov	r16,r18
 1046490:	a025883a 	mov	r18,r20
 1046494:	8829883a 	mov	r20,r17
 1046498:	dc403c17 	ldw	r17,240(sp)
 104649c:	d9403517 	ldw	r5,212(sp)
 10464a0:	a0c7883a 	add	r3,r20,r3
 10464a4:	10800044 	addi	r2,r2,1
 10464a8:	41400015 	stw	r5,0(r8)
 10464ac:	45000115 	stw	r20,4(r8)
 10464b0:	d8c02015 	stw	r3,128(sp)
 10464b4:	d8801f15 	stw	r2,124(sp)
 10464b8:	010001c4 	movi	r4,7
 10464bc:	20829f16 	blt	r4,r2,1046f3c <___svfprintf_internal_r+0x124c>
 10464c0:	df002787 	ldb	fp,158(sp)
 10464c4:	42000204 	addi	r8,r8,8
 10464c8:	e0000c26 	beq	fp,zero,10464fc <___svfprintf_internal_r+0x80c>
 10464cc:	d8801f17 	ldw	r2,124(sp)
 10464d0:	d9002784 	addi	r4,sp,158
 10464d4:	18c00044 	addi	r3,r3,1
 10464d8:	10800044 	addi	r2,r2,1
 10464dc:	41000015 	stw	r4,0(r8)
 10464e0:	01000044 	movi	r4,1
 10464e4:	41000115 	stw	r4,4(r8)
 10464e8:	d8c02015 	stw	r3,128(sp)
 10464ec:	d8801f15 	stw	r2,124(sp)
 10464f0:	010001c4 	movi	r4,7
 10464f4:	20823816 	blt	r4,r2,1046dd8 <___svfprintf_internal_r+0x10e8>
 10464f8:	42000204 	addi	r8,r8,8
 10464fc:	d8802b17 	ldw	r2,172(sp)
 1046500:	10000c26 	beq	r2,zero,1046534 <___svfprintf_internal_r+0x844>
 1046504:	d8801f17 	ldw	r2,124(sp)
 1046508:	d9002704 	addi	r4,sp,156
 104650c:	18c00084 	addi	r3,r3,2
 1046510:	10800044 	addi	r2,r2,1
 1046514:	41000015 	stw	r4,0(r8)
 1046518:	01000084 	movi	r4,2
 104651c:	41000115 	stw	r4,4(r8)
 1046520:	d8c02015 	stw	r3,128(sp)
 1046524:	d8801f15 	stw	r2,124(sp)
 1046528:	010001c4 	movi	r4,7
 104652c:	20823216 	blt	r4,r2,1046df8 <___svfprintf_internal_r+0x1108>
 1046530:	42000204 	addi	r8,r8,8
 1046534:	d9003017 	ldw	r4,192(sp)
 1046538:	00802004 	movi	r2,128
 104653c:	20819726 	beq	r4,r2,1046b9c <___svfprintf_internal_r+0xeac>
 1046540:	d9402917 	ldw	r5,164(sp)
 1046544:	d8802e17 	ldw	r2,184(sp)
 1046548:	28adc83a 	sub	r22,r5,r2
 104654c:	05802f0e 	bge	zero,r22,104660c <___svfprintf_internal_r+0x91c>
 1046550:	07000404 	movi	fp,16
 1046554:	d8801f17 	ldw	r2,124(sp)
 1046558:	e583c00e 	bge	fp,r22,104745c <___svfprintf_internal_r+0x176c>
 104655c:	01404174 	movhi	r5,261
 1046560:	295ad184 	addi	r5,r5,27462
 1046564:	dc402915 	stw	r17,164(sp)
 1046568:	d9402b15 	stw	r5,172(sp)
 104656c:	b023883a 	mov	r17,r22
 1046570:	050001c4 	movi	r20,7
 1046574:	902d883a 	mov	r22,r18
 1046578:	8025883a 	mov	r18,r16
 104657c:	dc002c17 	ldw	r16,176(sp)
 1046580:	00000306 	br	1046590 <___svfprintf_internal_r+0x8a0>
 1046584:	8c7ffc04 	addi	r17,r17,-16
 1046588:	42000204 	addi	r8,r8,8
 104658c:	e440110e 	bge	fp,r17,10465d4 <___svfprintf_internal_r+0x8e4>
 1046590:	18c00404 	addi	r3,r3,16
 1046594:	10800044 	addi	r2,r2,1
 1046598:	45400015 	stw	r21,0(r8)
 104659c:	47000115 	stw	fp,4(r8)
 10465a0:	d8c02015 	stw	r3,128(sp)
 10465a4:	d8801f15 	stw	r2,124(sp)
 10465a8:	a0bff60e 	bge	r20,r2,1046584 <__alt_data_end+0xfffc6584>
 10465ac:	d9801e04 	addi	r6,sp,120
 10465b0:	800b883a 	mov	r5,r16
 10465b4:	9809883a 	mov	r4,r19
 10465b8:	104f4ec0 	call	104f4ec <__ssprint_r>
 10465bc:	103eb11e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 10465c0:	8c7ffc04 	addi	r17,r17,-16
 10465c4:	d8c02017 	ldw	r3,128(sp)
 10465c8:	d8801f17 	ldw	r2,124(sp)
 10465cc:	da000404 	addi	r8,sp,16
 10465d0:	e47fef16 	blt	fp,r17,1046590 <__alt_data_end+0xfffc6590>
 10465d4:	9021883a 	mov	r16,r18
 10465d8:	b025883a 	mov	r18,r22
 10465dc:	882d883a 	mov	r22,r17
 10465e0:	dc402917 	ldw	r17,164(sp)
 10465e4:	d9002b17 	ldw	r4,172(sp)
 10465e8:	1d87883a 	add	r3,r3,r22
 10465ec:	10800044 	addi	r2,r2,1
 10465f0:	41000015 	stw	r4,0(r8)
 10465f4:	45800115 	stw	r22,4(r8)
 10465f8:	d8c02015 	stw	r3,128(sp)
 10465fc:	d8801f15 	stw	r2,124(sp)
 1046600:	010001c4 	movi	r4,7
 1046604:	2081ec16 	blt	r4,r2,1046db8 <___svfprintf_internal_r+0x10c8>
 1046608:	42000204 	addi	r8,r8,8
 104660c:	9080400c 	andi	r2,r18,256
 1046610:	1001181e 	bne	r2,zero,1046a74 <___svfprintf_internal_r+0xd84>
 1046614:	d9402e17 	ldw	r5,184(sp)
 1046618:	d8801f17 	ldw	r2,124(sp)
 104661c:	44000015 	stw	r16,0(r8)
 1046620:	1947883a 	add	r3,r3,r5
 1046624:	10800044 	addi	r2,r2,1
 1046628:	41400115 	stw	r5,4(r8)
 104662c:	d8c02015 	stw	r3,128(sp)
 1046630:	d8801f15 	stw	r2,124(sp)
 1046634:	010001c4 	movi	r4,7
 1046638:	2081d116 	blt	r4,r2,1046d80 <___svfprintf_internal_r+0x1090>
 104663c:	42000204 	addi	r8,r8,8
 1046640:	9480010c 	andi	r18,r18,4
 1046644:	90003226 	beq	r18,zero,1046710 <___svfprintf_internal_r+0xa20>
 1046648:	d9403117 	ldw	r5,196(sp)
 104664c:	d8802a17 	ldw	r2,168(sp)
 1046650:	28a1c83a 	sub	r16,r5,r2
 1046654:	04002e0e 	bge	zero,r16,1046710 <___svfprintf_internal_r+0xa20>
 1046658:	04400404 	movi	r17,16
 104665c:	d8801f17 	ldw	r2,124(sp)
 1046660:	8c04b90e 	bge	r17,r16,1047948 <___svfprintf_internal_r+0x1c58>
 1046664:	01404174 	movhi	r5,261
 1046668:	295ad584 	addi	r5,r5,27478
 104666c:	d9403515 	stw	r5,212(sp)
 1046670:	048001c4 	movi	r18,7
 1046674:	dd002c17 	ldw	r20,176(sp)
 1046678:	00000306 	br	1046688 <___svfprintf_internal_r+0x998>
 104667c:	843ffc04 	addi	r16,r16,-16
 1046680:	42000204 	addi	r8,r8,8
 1046684:	8c00130e 	bge	r17,r16,10466d4 <___svfprintf_internal_r+0x9e4>
 1046688:	01004174 	movhi	r4,261
 104668c:	18c00404 	addi	r3,r3,16
 1046690:	10800044 	addi	r2,r2,1
 1046694:	211ad584 	addi	r4,r4,27478
 1046698:	41000015 	stw	r4,0(r8)
 104669c:	44400115 	stw	r17,4(r8)
 10466a0:	d8c02015 	stw	r3,128(sp)
 10466a4:	d8801f15 	stw	r2,124(sp)
 10466a8:	90bff40e 	bge	r18,r2,104667c <__alt_data_end+0xfffc667c>
 10466ac:	d9801e04 	addi	r6,sp,120
 10466b0:	a00b883a 	mov	r5,r20
 10466b4:	9809883a 	mov	r4,r19
 10466b8:	104f4ec0 	call	104f4ec <__ssprint_r>
 10466bc:	103e711e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 10466c0:	843ffc04 	addi	r16,r16,-16
 10466c4:	d8c02017 	ldw	r3,128(sp)
 10466c8:	d8801f17 	ldw	r2,124(sp)
 10466cc:	da000404 	addi	r8,sp,16
 10466d0:	8c3fed16 	blt	r17,r16,1046688 <__alt_data_end+0xfffc6688>
 10466d4:	d9403517 	ldw	r5,212(sp)
 10466d8:	1c07883a 	add	r3,r3,r16
 10466dc:	10800044 	addi	r2,r2,1
 10466e0:	41400015 	stw	r5,0(r8)
 10466e4:	44000115 	stw	r16,4(r8)
 10466e8:	d8c02015 	stw	r3,128(sp)
 10466ec:	d8801f15 	stw	r2,124(sp)
 10466f0:	010001c4 	movi	r4,7
 10466f4:	2080060e 	bge	r4,r2,1046710 <___svfprintf_internal_r+0xa20>
 10466f8:	d9402c17 	ldw	r5,176(sp)
 10466fc:	d9801e04 	addi	r6,sp,120
 1046700:	9809883a 	mov	r4,r19
 1046704:	104f4ec0 	call	104f4ec <__ssprint_r>
 1046708:	103e5e1e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 104670c:	d8c02017 	ldw	r3,128(sp)
 1046710:	d8803117 	ldw	r2,196(sp)
 1046714:	d9002a17 	ldw	r4,168(sp)
 1046718:	1100010e 	bge	r2,r4,1046720 <___svfprintf_internal_r+0xa30>
 104671c:	2005883a 	mov	r2,r4
 1046720:	d9402f17 	ldw	r5,188(sp)
 1046724:	288b883a 	add	r5,r5,r2
 1046728:	d9402f15 	stw	r5,188(sp)
 104672c:	18019c1e 	bne	r3,zero,1046da0 <___svfprintf_internal_r+0x10b0>
 1046730:	b8800007 	ldb	r2,0(r23)
 1046734:	d8001f15 	stw	zero,124(sp)
 1046738:	da000404 	addi	r8,sp,16
 104673c:	103d991e 	bne	r2,zero,1045da4 <__alt_data_end+0xfffc5da4>
 1046740:	b821883a 	mov	r16,r23
 1046744:	003daf06 	br	1045e04 <__alt_data_end+0xfffc5e04>
 1046748:	18c03fcc 	andi	r3,r3,255
 104674c:	1805c71e 	bne	r3,zero,1047e6c <___svfprintf_internal_r+0x217c>
 1046750:	94800414 	ori	r18,r18,16
 1046754:	9080080c 	andi	r2,r18,32
 1046758:	10020126 	beq	r2,zero,1046f60 <___svfprintf_internal_r+0x1270>
 104675c:	d8802d17 	ldw	r2,180(sp)
 1046760:	d9002917 	ldw	r4,164(sp)
 1046764:	d8002785 	stb	zero,158(sp)
 1046768:	10c00204 	addi	r3,r2,8
 104676c:	15000017 	ldw	r20,0(r2)
 1046770:	15800117 	ldw	r22,4(r2)
 1046774:	20038e16 	blt	r4,zero,10475b0 <___svfprintf_internal_r+0x18c0>
 1046778:	013fdfc4 	movi	r4,-129
 104677c:	a584b03a 	or	r2,r20,r22
 1046780:	d8c02d15 	stw	r3,180(sp)
 1046784:	9124703a 	and	r18,r18,r4
 1046788:	0039883a 	mov	fp,zero
 104678c:	103eb61e 	bne	r2,zero,1046268 <__alt_data_end+0xfffc6268>
 1046790:	d8802917 	ldw	r2,164(sp)
 1046794:	1002c81e 	bne	r2,zero,10472b8 <___svfprintf_internal_r+0x15c8>
 1046798:	d8002915 	stw	zero,164(sp)
 104679c:	d8002e15 	stw	zero,184(sp)
 10467a0:	dc001e04 	addi	r16,sp,120
 10467a4:	003efa06 	br	1046390 <__alt_data_end+0xfffc6390>
 10467a8:	18c03fcc 	andi	r3,r3,255
 10467ac:	1805ad1e 	bne	r3,zero,1047e64 <___svfprintf_internal_r+0x2174>
 10467b0:	01404174 	movhi	r5,261
 10467b4:	295ac504 	addi	r5,r5,27412
 10467b8:	d9403a15 	stw	r5,232(sp)
 10467bc:	9080080c 	andi	r2,r18,32
 10467c0:	10006126 	beq	r2,zero,1046948 <___svfprintf_internal_r+0xc58>
 10467c4:	d8802d17 	ldw	r2,180(sp)
 10467c8:	15000017 	ldw	r20,0(r2)
 10467cc:	15800117 	ldw	r22,4(r2)
 10467d0:	10800204 	addi	r2,r2,8
 10467d4:	d8802d15 	stw	r2,180(sp)
 10467d8:	9080004c 	andi	r2,r18,1
 10467dc:	10018e26 	beq	r2,zero,1046e18 <___svfprintf_internal_r+0x1128>
 10467e0:	a584b03a 	or	r2,r20,r22
 10467e4:	10030926 	beq	r2,zero,104740c <___svfprintf_internal_r+0x171c>
 10467e8:	d8c02917 	ldw	r3,164(sp)
 10467ec:	00800c04 	movi	r2,48
 10467f0:	d8802705 	stb	r2,156(sp)
 10467f4:	dc402745 	stb	r17,157(sp)
 10467f8:	d8002785 	stb	zero,158(sp)
 10467fc:	90800094 	ori	r2,r18,2
 1046800:	18048716 	blt	r3,zero,1047a20 <___svfprintf_internal_r+0x1d30>
 1046804:	00bfdfc4 	movi	r2,-129
 1046808:	90a4703a 	and	r18,r18,r2
 104680c:	94800094 	ori	r18,r18,2
 1046810:	0039883a 	mov	fp,zero
 1046814:	d9003a17 	ldw	r4,232(sp)
 1046818:	dc001e04 	addi	r16,sp,120
 104681c:	a08003cc 	andi	r2,r20,15
 1046820:	b006973a 	slli	r3,r22,28
 1046824:	2085883a 	add	r2,r4,r2
 1046828:	a028d13a 	srli	r20,r20,4
 104682c:	10800003 	ldbu	r2,0(r2)
 1046830:	b02cd13a 	srli	r22,r22,4
 1046834:	843fffc4 	addi	r16,r16,-1
 1046838:	1d28b03a 	or	r20,r3,r20
 104683c:	80800005 	stb	r2,0(r16)
 1046840:	a584b03a 	or	r2,r20,r22
 1046844:	103ff51e 	bne	r2,zero,104681c <__alt_data_end+0xfffc681c>
 1046848:	d8c02817 	ldw	r3,160(sp)
 104684c:	1c07c83a 	sub	r3,r3,r16
 1046850:	d8c02e15 	stw	r3,184(sp)
 1046854:	003ece06 	br	1046390 <__alt_data_end+0xfffc6390>
 1046858:	d8c02d17 	ldw	r3,180(sp)
 104685c:	d9002d17 	ldw	r4,180(sp)
 1046860:	d8002785 	stb	zero,158(sp)
 1046864:	18800017 	ldw	r2,0(r3)
 1046868:	21000104 	addi	r4,r4,4
 104686c:	00c00044 	movi	r3,1
 1046870:	d8c02a15 	stw	r3,168(sp)
 1046874:	d8801405 	stb	r2,80(sp)
 1046878:	d9002d15 	stw	r4,180(sp)
 104687c:	d8c02e15 	stw	r3,184(sp)
 1046880:	d8002915 	stw	zero,164(sp)
 1046884:	d8003215 	stw	zero,200(sp)
 1046888:	dc001404 	addi	r16,sp,80
 104688c:	0039883a 	mov	fp,zero
 1046890:	003ecc06 	br	10463c4 <__alt_data_end+0xfffc63c4>
 1046894:	18c03fcc 	andi	r3,r3,255
 1046898:	183e9226 	beq	r3,zero,10462e4 <__alt_data_end+0xfffc62e4>
 104689c:	d9c02785 	stb	r7,158(sp)
 10468a0:	003e9006 	br	10462e4 <__alt_data_end+0xfffc62e4>
 10468a4:	00c00044 	movi	r3,1
 10468a8:	01c00ac4 	movi	r7,43
 10468ac:	bc400007 	ldb	r17,0(r23)
 10468b0:	003d6306 	br	1045e40 <__alt_data_end+0xfffc5e40>
 10468b4:	94800814 	ori	r18,r18,32
 10468b8:	bc400007 	ldb	r17,0(r23)
 10468bc:	003d6006 	br	1045e40 <__alt_data_end+0xfffc5e40>
 10468c0:	d8c02d17 	ldw	r3,180(sp)
 10468c4:	d8002785 	stb	zero,158(sp)
 10468c8:	1c000017 	ldw	r16,0(r3)
 10468cc:	1d000104 	addi	r20,r3,4
 10468d0:	80040f26 	beq	r16,zero,1047910 <___svfprintf_internal_r+0x1c20>
 10468d4:	d9002917 	ldw	r4,164(sp)
 10468d8:	2003dc16 	blt	r4,zero,104784c <___svfprintf_internal_r+0x1b5c>
 10468dc:	200d883a 	mov	r6,r4
 10468e0:	000b883a 	mov	r5,zero
 10468e4:	8009883a 	mov	r4,r16
 10468e8:	da003e15 	stw	r8,248(sp)
 10468ec:	104d7fc0 	call	104d7fc <memchr>
 10468f0:	da003e17 	ldw	r8,248(sp)
 10468f4:	10045826 	beq	r2,zero,1047a58 <___svfprintf_internal_r+0x1d68>
 10468f8:	1405c83a 	sub	r2,r2,r16
 10468fc:	d8802e15 	stw	r2,184(sp)
 1046900:	1003d816 	blt	r2,zero,1047864 <___svfprintf_internal_r+0x1b74>
 1046904:	df002783 	ldbu	fp,158(sp)
 1046908:	d8802a15 	stw	r2,168(sp)
 104690c:	dd002d15 	stw	r20,180(sp)
 1046910:	d8002915 	stw	zero,164(sp)
 1046914:	d8003215 	stw	zero,200(sp)
 1046918:	003ea306 	br	10463a8 <__alt_data_end+0xfffc63a8>
 104691c:	18c03fcc 	andi	r3,r3,255
 1046920:	183f8c26 	beq	r3,zero,1046754 <__alt_data_end+0xfffc6754>
 1046924:	d9c02785 	stb	r7,158(sp)
 1046928:	003f8a06 	br	1046754 <__alt_data_end+0xfffc6754>
 104692c:	18c03fcc 	andi	r3,r3,255
 1046930:	1805631e 	bne	r3,zero,1047ec0 <___svfprintf_internal_r+0x21d0>
 1046934:	01404174 	movhi	r5,261
 1046938:	295aca04 	addi	r5,r5,27432
 104693c:	d9403a15 	stw	r5,232(sp)
 1046940:	9080080c 	andi	r2,r18,32
 1046944:	103f9f1e 	bne	r2,zero,10467c4 <__alt_data_end+0xfffc67c4>
 1046948:	9080040c 	andi	r2,r18,16
 104694c:	10029c26 	beq	r2,zero,10473c0 <___svfprintf_internal_r+0x16d0>
 1046950:	d8c02d17 	ldw	r3,180(sp)
 1046954:	002d883a 	mov	r22,zero
 1046958:	1d000017 	ldw	r20,0(r3)
 104695c:	18c00104 	addi	r3,r3,4
 1046960:	d8c02d15 	stw	r3,180(sp)
 1046964:	003f9c06 	br	10467d8 <__alt_data_end+0xfffc67d8>
 1046968:	94800054 	ori	r18,r18,1
 104696c:	bc400007 	ldb	r17,0(r23)
 1046970:	003d3306 	br	1045e40 <__alt_data_end+0xfffc5e40>
 1046974:	38803fcc 	andi	r2,r7,255
 1046978:	1080201c 	xori	r2,r2,128
 104697c:	10bfe004 	addi	r2,r2,-128
 1046980:	1002971e 	bne	r2,zero,10473e0 <___svfprintf_internal_r+0x16f0>
 1046984:	00c00044 	movi	r3,1
 1046988:	01c00804 	movi	r7,32
 104698c:	bc400007 	ldb	r17,0(r23)
 1046990:	003d2b06 	br	1045e40 <__alt_data_end+0xfffc5e40>
 1046994:	18c03fcc 	andi	r3,r3,255
 1046998:	183e2326 	beq	r3,zero,1046228 <__alt_data_end+0xfffc6228>
 104699c:	d9c02785 	stb	r7,158(sp)
 10469a0:	003e2106 	br	1046228 <__alt_data_end+0xfffc6228>
 10469a4:	bc400007 	ldb	r17,0(r23)
 10469a8:	8a430426 	beq	r17,r9,10475bc <___svfprintf_internal_r+0x18cc>
 10469ac:	94800414 	ori	r18,r18,16
 10469b0:	003d2306 	br	1045e40 <__alt_data_end+0xfffc5e40>
 10469b4:	18c03fcc 	andi	r3,r3,255
 10469b8:	18053f1e 	bne	r3,zero,1047eb8 <___svfprintf_internal_r+0x21c8>
 10469bc:	9080080c 	andi	r2,r18,32
 10469c0:	10028926 	beq	r2,zero,10473e8 <___svfprintf_internal_r+0x16f8>
 10469c4:	d9402d17 	ldw	r5,180(sp)
 10469c8:	d9002f17 	ldw	r4,188(sp)
 10469cc:	28800017 	ldw	r2,0(r5)
 10469d0:	2007d7fa 	srai	r3,r4,31
 10469d4:	29400104 	addi	r5,r5,4
 10469d8:	d9402d15 	stw	r5,180(sp)
 10469dc:	11000015 	stw	r4,0(r2)
 10469e0:	10c00115 	stw	r3,4(r2)
 10469e4:	003ced06 	br	1045d9c <__alt_data_end+0xfffc5d9c>
 10469e8:	94801014 	ori	r18,r18,64
 10469ec:	bc400007 	ldb	r17,0(r23)
 10469f0:	003d1306 	br	1045e40 <__alt_data_end+0xfffc5e40>
 10469f4:	01004174 	movhi	r4,261
 10469f8:	211aca04 	addi	r4,r4,27432
 10469fc:	0039883a 	mov	fp,zero
 1046a00:	d9003a15 	stw	r4,232(sp)
 1046a04:	04401e04 	movi	r17,120
 1046a08:	003f8206 	br	1046814 <__alt_data_end+0xfffc6814>
 1046a0c:	18c03fcc 	andi	r3,r3,255
 1046a10:	1805221e 	bne	r3,zero,1047e9c <___svfprintf_internal_r+0x21ac>
 1046a14:	883d9526 	beq	r17,zero,104606c <__alt_data_end+0xfffc606c>
 1046a18:	00c00044 	movi	r3,1
 1046a1c:	d8c02a15 	stw	r3,168(sp)
 1046a20:	dc401405 	stb	r17,80(sp)
 1046a24:	d8002785 	stb	zero,158(sp)
 1046a28:	003f9406 	br	104687c <__alt_data_end+0xfffc687c>
 1046a2c:	01004174 	movhi	r4,261
 1046a30:	211aca04 	addi	r4,r4,27432
 1046a34:	d9003a15 	stw	r4,232(sp)
 1046a38:	d8c02d15 	stw	r3,180(sp)
 1046a3c:	1025883a 	mov	r18,r2
 1046a40:	04401e04 	movi	r17,120
 1046a44:	a584b03a 	or	r2,r20,r22
 1046a48:	1000fa1e 	bne	r2,zero,1046e34 <___svfprintf_internal_r+0x1144>
 1046a4c:	0039883a 	mov	fp,zero
 1046a50:	00800084 	movi	r2,2
 1046a54:	10803fcc 	andi	r2,r2,255
 1046a58:	00c00044 	movi	r3,1
 1046a5c:	10c21626 	beq	r2,r3,10472b8 <___svfprintf_internal_r+0x15c8>
 1046a60:	00c00084 	movi	r3,2
 1046a64:	10fe301e 	bne	r2,r3,1046328 <__alt_data_end+0xfffc6328>
 1046a68:	003d7606 	br	1046044 <__alt_data_end+0xfffc6044>
 1046a6c:	d8c02017 	ldw	r3,128(sp)
 1046a70:	003e9506 	br	10464c8 <__alt_data_end+0xfffc64c8>
 1046a74:	00801944 	movi	r2,101
 1046a78:	14407c0e 	bge	r2,r17,1046c6c <___svfprintf_internal_r+0xf7c>
 1046a7c:	d9003617 	ldw	r4,216(sp)
 1046a80:	d9403717 	ldw	r5,220(sp)
 1046a84:	000d883a 	mov	r6,zero
 1046a88:	000f883a 	mov	r7,zero
 1046a8c:	d8c03d15 	stw	r3,244(sp)
 1046a90:	da003e15 	stw	r8,248(sp)
 1046a94:	104471c0 	call	104471c <__eqdf2>
 1046a98:	d8c03d17 	ldw	r3,244(sp)
 1046a9c:	da003e17 	ldw	r8,248(sp)
 1046aa0:	1000f51e 	bne	r2,zero,1046e78 <___svfprintf_internal_r+0x1188>
 1046aa4:	d8801f17 	ldw	r2,124(sp)
 1046aa8:	01004174 	movhi	r4,261
 1046aac:	211ad104 	addi	r4,r4,27460
 1046ab0:	18c00044 	addi	r3,r3,1
 1046ab4:	10800044 	addi	r2,r2,1
 1046ab8:	41000015 	stw	r4,0(r8)
 1046abc:	01000044 	movi	r4,1
 1046ac0:	41000115 	stw	r4,4(r8)
 1046ac4:	d8c02015 	stw	r3,128(sp)
 1046ac8:	d8801f15 	stw	r2,124(sp)
 1046acc:	010001c4 	movi	r4,7
 1046ad0:	20826616 	blt	r4,r2,104746c <___svfprintf_internal_r+0x177c>
 1046ad4:	42000204 	addi	r8,r8,8
 1046ad8:	d8802617 	ldw	r2,152(sp)
 1046adc:	d9403317 	ldw	r5,204(sp)
 1046ae0:	11400216 	blt	r2,r5,1046aec <___svfprintf_internal_r+0xdfc>
 1046ae4:	9080004c 	andi	r2,r18,1
 1046ae8:	103ed526 	beq	r2,zero,1046640 <__alt_data_end+0xfffc6640>
 1046aec:	d8803817 	ldw	r2,224(sp)
 1046af0:	d9003417 	ldw	r4,208(sp)
 1046af4:	d9403817 	ldw	r5,224(sp)
 1046af8:	1887883a 	add	r3,r3,r2
 1046afc:	d8801f17 	ldw	r2,124(sp)
 1046b00:	41000015 	stw	r4,0(r8)
 1046b04:	41400115 	stw	r5,4(r8)
 1046b08:	10800044 	addi	r2,r2,1
 1046b0c:	d8c02015 	stw	r3,128(sp)
 1046b10:	d8801f15 	stw	r2,124(sp)
 1046b14:	010001c4 	movi	r4,7
 1046b18:	2082af16 	blt	r4,r2,10475d8 <___svfprintf_internal_r+0x18e8>
 1046b1c:	42000204 	addi	r8,r8,8
 1046b20:	d8803317 	ldw	r2,204(sp)
 1046b24:	143fffc4 	addi	r16,r2,-1
 1046b28:	043ec50e 	bge	zero,r16,1046640 <__alt_data_end+0xfffc6640>
 1046b2c:	04400404 	movi	r17,16
 1046b30:	d8801f17 	ldw	r2,124(sp)
 1046b34:	8c00860e 	bge	r17,r16,1046d50 <___svfprintf_internal_r+0x1060>
 1046b38:	01404174 	movhi	r5,261
 1046b3c:	295ad184 	addi	r5,r5,27462
 1046b40:	d9402b15 	stw	r5,172(sp)
 1046b44:	058001c4 	movi	r22,7
 1046b48:	dd002c17 	ldw	r20,176(sp)
 1046b4c:	00000306 	br	1046b5c <___svfprintf_internal_r+0xe6c>
 1046b50:	42000204 	addi	r8,r8,8
 1046b54:	843ffc04 	addi	r16,r16,-16
 1046b58:	8c00800e 	bge	r17,r16,1046d5c <___svfprintf_internal_r+0x106c>
 1046b5c:	18c00404 	addi	r3,r3,16
 1046b60:	10800044 	addi	r2,r2,1
 1046b64:	45400015 	stw	r21,0(r8)
 1046b68:	44400115 	stw	r17,4(r8)
 1046b6c:	d8c02015 	stw	r3,128(sp)
 1046b70:	d8801f15 	stw	r2,124(sp)
 1046b74:	b0bff60e 	bge	r22,r2,1046b50 <__alt_data_end+0xfffc6b50>
 1046b78:	d9801e04 	addi	r6,sp,120
 1046b7c:	a00b883a 	mov	r5,r20
 1046b80:	9809883a 	mov	r4,r19
 1046b84:	104f4ec0 	call	104f4ec <__ssprint_r>
 1046b88:	103d3e1e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 1046b8c:	d8c02017 	ldw	r3,128(sp)
 1046b90:	d8801f17 	ldw	r2,124(sp)
 1046b94:	da000404 	addi	r8,sp,16
 1046b98:	003fee06 	br	1046b54 <__alt_data_end+0xfffc6b54>
 1046b9c:	d9403117 	ldw	r5,196(sp)
 1046ba0:	d8802a17 	ldw	r2,168(sp)
 1046ba4:	28adc83a 	sub	r22,r5,r2
 1046ba8:	05be650e 	bge	zero,r22,1046540 <__alt_data_end+0xfffc6540>
 1046bac:	07000404 	movi	fp,16
 1046bb0:	d8801f17 	ldw	r2,124(sp)
 1046bb4:	e583a20e 	bge	fp,r22,1047a40 <___svfprintf_internal_r+0x1d50>
 1046bb8:	01404174 	movhi	r5,261
 1046bbc:	295ad184 	addi	r5,r5,27462
 1046bc0:	dc403015 	stw	r17,192(sp)
 1046bc4:	d9402b15 	stw	r5,172(sp)
 1046bc8:	b023883a 	mov	r17,r22
 1046bcc:	050001c4 	movi	r20,7
 1046bd0:	902d883a 	mov	r22,r18
 1046bd4:	8025883a 	mov	r18,r16
 1046bd8:	dc002c17 	ldw	r16,176(sp)
 1046bdc:	00000306 	br	1046bec <___svfprintf_internal_r+0xefc>
 1046be0:	8c7ffc04 	addi	r17,r17,-16
 1046be4:	42000204 	addi	r8,r8,8
 1046be8:	e440110e 	bge	fp,r17,1046c30 <___svfprintf_internal_r+0xf40>
 1046bec:	18c00404 	addi	r3,r3,16
 1046bf0:	10800044 	addi	r2,r2,1
 1046bf4:	45400015 	stw	r21,0(r8)
 1046bf8:	47000115 	stw	fp,4(r8)
 1046bfc:	d8c02015 	stw	r3,128(sp)
 1046c00:	d8801f15 	stw	r2,124(sp)
 1046c04:	a0bff60e 	bge	r20,r2,1046be0 <__alt_data_end+0xfffc6be0>
 1046c08:	d9801e04 	addi	r6,sp,120
 1046c0c:	800b883a 	mov	r5,r16
 1046c10:	9809883a 	mov	r4,r19
 1046c14:	104f4ec0 	call	104f4ec <__ssprint_r>
 1046c18:	103d1a1e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 1046c1c:	8c7ffc04 	addi	r17,r17,-16
 1046c20:	d8c02017 	ldw	r3,128(sp)
 1046c24:	d8801f17 	ldw	r2,124(sp)
 1046c28:	da000404 	addi	r8,sp,16
 1046c2c:	e47fef16 	blt	fp,r17,1046bec <__alt_data_end+0xfffc6bec>
 1046c30:	9021883a 	mov	r16,r18
 1046c34:	b025883a 	mov	r18,r22
 1046c38:	882d883a 	mov	r22,r17
 1046c3c:	dc403017 	ldw	r17,192(sp)
 1046c40:	d9002b17 	ldw	r4,172(sp)
 1046c44:	1d87883a 	add	r3,r3,r22
 1046c48:	10800044 	addi	r2,r2,1
 1046c4c:	41000015 	stw	r4,0(r8)
 1046c50:	45800115 	stw	r22,4(r8)
 1046c54:	d8c02015 	stw	r3,128(sp)
 1046c58:	d8801f15 	stw	r2,124(sp)
 1046c5c:	010001c4 	movi	r4,7
 1046c60:	20819a16 	blt	r4,r2,10472cc <___svfprintf_internal_r+0x15dc>
 1046c64:	42000204 	addi	r8,r8,8
 1046c68:	003e3506 	br	1046540 <__alt_data_end+0xfffc6540>
 1046c6c:	d9403317 	ldw	r5,204(sp)
 1046c70:	00800044 	movi	r2,1
 1046c74:	18c00044 	addi	r3,r3,1
 1046c78:	1141710e 	bge	r2,r5,1047240 <___svfprintf_internal_r+0x1550>
 1046c7c:	dc401f17 	ldw	r17,124(sp)
 1046c80:	00800044 	movi	r2,1
 1046c84:	40800115 	stw	r2,4(r8)
 1046c88:	8c400044 	addi	r17,r17,1
 1046c8c:	44000015 	stw	r16,0(r8)
 1046c90:	d8c02015 	stw	r3,128(sp)
 1046c94:	dc401f15 	stw	r17,124(sp)
 1046c98:	008001c4 	movi	r2,7
 1046c9c:	14417416 	blt	r2,r17,1047270 <___svfprintf_internal_r+0x1580>
 1046ca0:	42000204 	addi	r8,r8,8
 1046ca4:	d8803817 	ldw	r2,224(sp)
 1046ca8:	d9003417 	ldw	r4,208(sp)
 1046cac:	8c400044 	addi	r17,r17,1
 1046cb0:	10c7883a 	add	r3,r2,r3
 1046cb4:	40800115 	stw	r2,4(r8)
 1046cb8:	41000015 	stw	r4,0(r8)
 1046cbc:	d8c02015 	stw	r3,128(sp)
 1046cc0:	dc401f15 	stw	r17,124(sp)
 1046cc4:	008001c4 	movi	r2,7
 1046cc8:	14417216 	blt	r2,r17,1047294 <___svfprintf_internal_r+0x15a4>
 1046ccc:	45800204 	addi	r22,r8,8
 1046cd0:	d9003617 	ldw	r4,216(sp)
 1046cd4:	d9403717 	ldw	r5,220(sp)
 1046cd8:	000d883a 	mov	r6,zero
 1046cdc:	000f883a 	mov	r7,zero
 1046ce0:	d8c03d15 	stw	r3,244(sp)
 1046ce4:	104471c0 	call	104471c <__eqdf2>
 1046ce8:	d8c03d17 	ldw	r3,244(sp)
 1046cec:	1000b326 	beq	r2,zero,1046fbc <___svfprintf_internal_r+0x12cc>
 1046cf0:	d9403317 	ldw	r5,204(sp)
 1046cf4:	84000044 	addi	r16,r16,1
 1046cf8:	8c400044 	addi	r17,r17,1
 1046cfc:	28bfffc4 	addi	r2,r5,-1
 1046d00:	1887883a 	add	r3,r3,r2
 1046d04:	b0800115 	stw	r2,4(r22)
 1046d08:	b4000015 	stw	r16,0(r22)
 1046d0c:	d8c02015 	stw	r3,128(sp)
 1046d10:	dc401f15 	stw	r17,124(sp)
 1046d14:	008001c4 	movi	r2,7
 1046d18:	1440d216 	blt	r2,r17,1047064 <___svfprintf_internal_r+0x1374>
 1046d1c:	b5800204 	addi	r22,r22,8
 1046d20:	d9003b17 	ldw	r4,236(sp)
 1046d24:	df0022c4 	addi	fp,sp,139
 1046d28:	8c400044 	addi	r17,r17,1
 1046d2c:	20c7883a 	add	r3,r4,r3
 1046d30:	b7000015 	stw	fp,0(r22)
 1046d34:	b1000115 	stw	r4,4(r22)
 1046d38:	d8c02015 	stw	r3,128(sp)
 1046d3c:	dc401f15 	stw	r17,124(sp)
 1046d40:	008001c4 	movi	r2,7
 1046d44:	14400e16 	blt	r2,r17,1046d80 <___svfprintf_internal_r+0x1090>
 1046d48:	b2000204 	addi	r8,r22,8
 1046d4c:	003e3c06 	br	1046640 <__alt_data_end+0xfffc6640>
 1046d50:	01004174 	movhi	r4,261
 1046d54:	211ad184 	addi	r4,r4,27462
 1046d58:	d9002b15 	stw	r4,172(sp)
 1046d5c:	d9002b17 	ldw	r4,172(sp)
 1046d60:	1c07883a 	add	r3,r3,r16
 1046d64:	44000115 	stw	r16,4(r8)
 1046d68:	41000015 	stw	r4,0(r8)
 1046d6c:	10800044 	addi	r2,r2,1
 1046d70:	d8c02015 	stw	r3,128(sp)
 1046d74:	d8801f15 	stw	r2,124(sp)
 1046d78:	010001c4 	movi	r4,7
 1046d7c:	20be2f0e 	bge	r4,r2,104663c <__alt_data_end+0xfffc663c>
 1046d80:	d9402c17 	ldw	r5,176(sp)
 1046d84:	d9801e04 	addi	r6,sp,120
 1046d88:	9809883a 	mov	r4,r19
 1046d8c:	104f4ec0 	call	104f4ec <__ssprint_r>
 1046d90:	103cbc1e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 1046d94:	d8c02017 	ldw	r3,128(sp)
 1046d98:	da000404 	addi	r8,sp,16
 1046d9c:	003e2806 	br	1046640 <__alt_data_end+0xfffc6640>
 1046da0:	d9402c17 	ldw	r5,176(sp)
 1046da4:	d9801e04 	addi	r6,sp,120
 1046da8:	9809883a 	mov	r4,r19
 1046dac:	104f4ec0 	call	104f4ec <__ssprint_r>
 1046db0:	103e5f26 	beq	r2,zero,1046730 <__alt_data_end+0xfffc6730>
 1046db4:	003cb306 	br	1046084 <__alt_data_end+0xfffc6084>
 1046db8:	d9402c17 	ldw	r5,176(sp)
 1046dbc:	d9801e04 	addi	r6,sp,120
 1046dc0:	9809883a 	mov	r4,r19
 1046dc4:	104f4ec0 	call	104f4ec <__ssprint_r>
 1046dc8:	103cae1e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 1046dcc:	d8c02017 	ldw	r3,128(sp)
 1046dd0:	da000404 	addi	r8,sp,16
 1046dd4:	003e0d06 	br	104660c <__alt_data_end+0xfffc660c>
 1046dd8:	d9402c17 	ldw	r5,176(sp)
 1046ddc:	d9801e04 	addi	r6,sp,120
 1046de0:	9809883a 	mov	r4,r19
 1046de4:	104f4ec0 	call	104f4ec <__ssprint_r>
 1046de8:	103ca61e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 1046dec:	d8c02017 	ldw	r3,128(sp)
 1046df0:	da000404 	addi	r8,sp,16
 1046df4:	003dc106 	br	10464fc <__alt_data_end+0xfffc64fc>
 1046df8:	d9402c17 	ldw	r5,176(sp)
 1046dfc:	d9801e04 	addi	r6,sp,120
 1046e00:	9809883a 	mov	r4,r19
 1046e04:	104f4ec0 	call	104f4ec <__ssprint_r>
 1046e08:	103c9e1e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 1046e0c:	d8c02017 	ldw	r3,128(sp)
 1046e10:	da000404 	addi	r8,sp,16
 1046e14:	003dc706 	br	1046534 <__alt_data_end+0xfffc6534>
 1046e18:	d8802917 	ldw	r2,164(sp)
 1046e1c:	d8002785 	stb	zero,158(sp)
 1046e20:	103f0816 	blt	r2,zero,1046a44 <__alt_data_end+0xfffc6a44>
 1046e24:	00ffdfc4 	movi	r3,-129
 1046e28:	a584b03a 	or	r2,r20,r22
 1046e2c:	90e4703a 	and	r18,r18,r3
 1046e30:	103c8126 	beq	r2,zero,1046038 <__alt_data_end+0xfffc6038>
 1046e34:	0039883a 	mov	fp,zero
 1046e38:	003e7606 	br	1046814 <__alt_data_end+0xfffc6814>
 1046e3c:	9080040c 	andi	r2,r18,16
 1046e40:	10013d26 	beq	r2,zero,1047338 <___svfprintf_internal_r+0x1648>
 1046e44:	d9002d17 	ldw	r4,180(sp)
 1046e48:	d9402917 	ldw	r5,164(sp)
 1046e4c:	d8002785 	stb	zero,158(sp)
 1046e50:	20800104 	addi	r2,r4,4
 1046e54:	25000017 	ldw	r20,0(r4)
 1046e58:	002d883a 	mov	r22,zero
 1046e5c:	28013f16 	blt	r5,zero,104735c <___svfprintf_internal_r+0x166c>
 1046e60:	00ffdfc4 	movi	r3,-129
 1046e64:	d8802d15 	stw	r2,180(sp)
 1046e68:	90e4703a 	and	r18,r18,r3
 1046e6c:	a03d2b26 	beq	r20,zero,104631c <__alt_data_end+0xfffc631c>
 1046e70:	0039883a 	mov	fp,zero
 1046e74:	003d2e06 	br	1046330 <__alt_data_end+0xfffc6330>
 1046e78:	dc402617 	ldw	r17,152(sp)
 1046e7c:	0441830e 	bge	zero,r17,104748c <___svfprintf_internal_r+0x179c>
 1046e80:	dc403217 	ldw	r17,200(sp)
 1046e84:	d8803317 	ldw	r2,204(sp)
 1046e88:	1440010e 	bge	r2,r17,1046e90 <___svfprintf_internal_r+0x11a0>
 1046e8c:	1023883a 	mov	r17,r2
 1046e90:	04400a0e 	bge	zero,r17,1046ebc <___svfprintf_internal_r+0x11cc>
 1046e94:	d8801f17 	ldw	r2,124(sp)
 1046e98:	1c47883a 	add	r3,r3,r17
 1046e9c:	44000015 	stw	r16,0(r8)
 1046ea0:	10800044 	addi	r2,r2,1
 1046ea4:	44400115 	stw	r17,4(r8)
 1046ea8:	d8c02015 	stw	r3,128(sp)
 1046eac:	d8801f15 	stw	r2,124(sp)
 1046eb0:	010001c4 	movi	r4,7
 1046eb4:	20827516 	blt	r4,r2,104788c <___svfprintf_internal_r+0x1b9c>
 1046eb8:	42000204 	addi	r8,r8,8
 1046ebc:	88027b16 	blt	r17,zero,10478ac <___svfprintf_internal_r+0x1bbc>
 1046ec0:	d9003217 	ldw	r4,200(sp)
 1046ec4:	2463c83a 	sub	r17,r4,r17
 1046ec8:	0440990e 	bge	zero,r17,1047130 <___svfprintf_internal_r+0x1440>
 1046ecc:	05800404 	movi	r22,16
 1046ed0:	d8801f17 	ldw	r2,124(sp)
 1046ed4:	b441530e 	bge	r22,r17,1047424 <___svfprintf_internal_r+0x1734>
 1046ed8:	01004174 	movhi	r4,261
 1046edc:	211ad184 	addi	r4,r4,27462
 1046ee0:	d9002b15 	stw	r4,172(sp)
 1046ee4:	070001c4 	movi	fp,7
 1046ee8:	dd002c17 	ldw	r20,176(sp)
 1046eec:	00000306 	br	1046efc <___svfprintf_internal_r+0x120c>
 1046ef0:	42000204 	addi	r8,r8,8
 1046ef4:	8c7ffc04 	addi	r17,r17,-16
 1046ef8:	b4414d0e 	bge	r22,r17,1047430 <___svfprintf_internal_r+0x1740>
 1046efc:	18c00404 	addi	r3,r3,16
 1046f00:	10800044 	addi	r2,r2,1
 1046f04:	45400015 	stw	r21,0(r8)
 1046f08:	45800115 	stw	r22,4(r8)
 1046f0c:	d8c02015 	stw	r3,128(sp)
 1046f10:	d8801f15 	stw	r2,124(sp)
 1046f14:	e0bff60e 	bge	fp,r2,1046ef0 <__alt_data_end+0xfffc6ef0>
 1046f18:	d9801e04 	addi	r6,sp,120
 1046f1c:	a00b883a 	mov	r5,r20
 1046f20:	9809883a 	mov	r4,r19
 1046f24:	104f4ec0 	call	104f4ec <__ssprint_r>
 1046f28:	103c561e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 1046f2c:	d8c02017 	ldw	r3,128(sp)
 1046f30:	d8801f17 	ldw	r2,124(sp)
 1046f34:	da000404 	addi	r8,sp,16
 1046f38:	003fee06 	br	1046ef4 <__alt_data_end+0xfffc6ef4>
 1046f3c:	d9402c17 	ldw	r5,176(sp)
 1046f40:	d9801e04 	addi	r6,sp,120
 1046f44:	9809883a 	mov	r4,r19
 1046f48:	104f4ec0 	call	104f4ec <__ssprint_r>
 1046f4c:	103c4d1e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 1046f50:	d8c02017 	ldw	r3,128(sp)
 1046f54:	df002787 	ldb	fp,158(sp)
 1046f58:	da000404 	addi	r8,sp,16
 1046f5c:	003d5a06 	br	10464c8 <__alt_data_end+0xfffc64c8>
 1046f60:	9080040c 	andi	r2,r18,16
 1046f64:	10005c26 	beq	r2,zero,10470d8 <___svfprintf_internal_r+0x13e8>
 1046f68:	d9402d17 	ldw	r5,180(sp)
 1046f6c:	d8c02917 	ldw	r3,164(sp)
 1046f70:	d8002785 	stb	zero,158(sp)
 1046f74:	28800104 	addi	r2,r5,4
 1046f78:	2d000017 	ldw	r20,0(r5)
 1046f7c:	002d883a 	mov	r22,zero
 1046f80:	18005e16 	blt	r3,zero,10470fc <___svfprintf_internal_r+0x140c>
 1046f84:	00ffdfc4 	movi	r3,-129
 1046f88:	d8802d15 	stw	r2,180(sp)
 1046f8c:	90e4703a 	and	r18,r18,r3
 1046f90:	0039883a 	mov	fp,zero
 1046f94:	a03dfe26 	beq	r20,zero,1046790 <__alt_data_end+0xfffc6790>
 1046f98:	00800244 	movi	r2,9
 1046f9c:	153cb336 	bltu	r2,r20,104626c <__alt_data_end+0xfffc626c>
 1046fa0:	a5000c04 	addi	r20,r20,48
 1046fa4:	dc001dc4 	addi	r16,sp,119
 1046fa8:	dd001dc5 	stb	r20,119(sp)
 1046fac:	d8c02817 	ldw	r3,160(sp)
 1046fb0:	1c07c83a 	sub	r3,r3,r16
 1046fb4:	d8c02e15 	stw	r3,184(sp)
 1046fb8:	003cf506 	br	1046390 <__alt_data_end+0xfffc6390>
 1046fbc:	d8803317 	ldw	r2,204(sp)
 1046fc0:	143fffc4 	addi	r16,r2,-1
 1046fc4:	043f560e 	bge	zero,r16,1046d20 <__alt_data_end+0xfffc6d20>
 1046fc8:	07000404 	movi	fp,16
 1046fcc:	e403530e 	bge	fp,r16,1047d1c <___svfprintf_internal_r+0x202c>
 1046fd0:	01404174 	movhi	r5,261
 1046fd4:	295ad184 	addi	r5,r5,27462
 1046fd8:	d9402b15 	stw	r5,172(sp)
 1046fdc:	01c001c4 	movi	r7,7
 1046fe0:	dd002c17 	ldw	r20,176(sp)
 1046fe4:	00000306 	br	1046ff4 <___svfprintf_internal_r+0x1304>
 1046fe8:	843ffc04 	addi	r16,r16,-16
 1046fec:	b5800204 	addi	r22,r22,8
 1046ff0:	e400130e 	bge	fp,r16,1047040 <___svfprintf_internal_r+0x1350>
 1046ff4:	18c00404 	addi	r3,r3,16
 1046ff8:	8c400044 	addi	r17,r17,1
 1046ffc:	b5400015 	stw	r21,0(r22)
 1047000:	b7000115 	stw	fp,4(r22)
 1047004:	d8c02015 	stw	r3,128(sp)
 1047008:	dc401f15 	stw	r17,124(sp)
 104700c:	3c7ff60e 	bge	r7,r17,1046fe8 <__alt_data_end+0xfffc6fe8>
 1047010:	d9801e04 	addi	r6,sp,120
 1047014:	a00b883a 	mov	r5,r20
 1047018:	9809883a 	mov	r4,r19
 104701c:	d9c03d15 	stw	r7,244(sp)
 1047020:	104f4ec0 	call	104f4ec <__ssprint_r>
 1047024:	d9c03d17 	ldw	r7,244(sp)
 1047028:	103c161e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 104702c:	843ffc04 	addi	r16,r16,-16
 1047030:	d8c02017 	ldw	r3,128(sp)
 1047034:	dc401f17 	ldw	r17,124(sp)
 1047038:	dd800404 	addi	r22,sp,16
 104703c:	e43fed16 	blt	fp,r16,1046ff4 <__alt_data_end+0xfffc6ff4>
 1047040:	d8802b17 	ldw	r2,172(sp)
 1047044:	1c07883a 	add	r3,r3,r16
 1047048:	8c400044 	addi	r17,r17,1
 104704c:	b0800015 	stw	r2,0(r22)
 1047050:	b4000115 	stw	r16,4(r22)
 1047054:	d8c02015 	stw	r3,128(sp)
 1047058:	dc401f15 	stw	r17,124(sp)
 104705c:	008001c4 	movi	r2,7
 1047060:	147f2e0e 	bge	r2,r17,1046d1c <__alt_data_end+0xfffc6d1c>
 1047064:	d9402c17 	ldw	r5,176(sp)
 1047068:	d9801e04 	addi	r6,sp,120
 104706c:	9809883a 	mov	r4,r19
 1047070:	104f4ec0 	call	104f4ec <__ssprint_r>
 1047074:	103c031e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 1047078:	d8c02017 	ldw	r3,128(sp)
 104707c:	dc401f17 	ldw	r17,124(sp)
 1047080:	dd800404 	addi	r22,sp,16
 1047084:	003f2606 	br	1046d20 <__alt_data_end+0xfffc6d20>
 1047088:	9080040c 	andi	r2,r18,16
 104708c:	1000c326 	beq	r2,zero,104739c <___svfprintf_internal_r+0x16ac>
 1047090:	d8802d17 	ldw	r2,180(sp)
 1047094:	15000017 	ldw	r20,0(r2)
 1047098:	10800104 	addi	r2,r2,4
 104709c:	d8802d15 	stw	r2,180(sp)
 10470a0:	a02dd7fa 	srai	r22,r20,31
 10470a4:	b005883a 	mov	r2,r22
 10470a8:	103c680e 	bge	r2,zero,104624c <__alt_data_end+0xfffc624c>
 10470ac:	0529c83a 	sub	r20,zero,r20
 10470b0:	a004c03a 	cmpne	r2,r20,zero
 10470b4:	05adc83a 	sub	r22,zero,r22
 10470b8:	b0adc83a 	sub	r22,r22,r2
 10470bc:	d8802917 	ldw	r2,164(sp)
 10470c0:	07000b44 	movi	fp,45
 10470c4:	df002785 	stb	fp,158(sp)
 10470c8:	10022e16 	blt	r2,zero,1047984 <___svfprintf_internal_r+0x1c94>
 10470cc:	00bfdfc4 	movi	r2,-129
 10470d0:	90a4703a 	and	r18,r18,r2
 10470d4:	003c6406 	br	1046268 <__alt_data_end+0xfffc6268>
 10470d8:	9080100c 	andi	r2,r18,64
 10470dc:	d8002785 	stb	zero,158(sp)
 10470e0:	10012526 	beq	r2,zero,1047578 <___svfprintf_internal_r+0x1888>
 10470e4:	d9002d17 	ldw	r4,180(sp)
 10470e8:	d9402917 	ldw	r5,164(sp)
 10470ec:	002d883a 	mov	r22,zero
 10470f0:	20800104 	addi	r2,r4,4
 10470f4:	2500000b 	ldhu	r20,0(r4)
 10470f8:	283fa20e 	bge	r5,zero,1046f84 <__alt_data_end+0xfffc6f84>
 10470fc:	d8802d15 	stw	r2,180(sp)
 1047100:	0039883a 	mov	fp,zero
 1047104:	a584b03a 	or	r2,r20,r22
 1047108:	103c571e 	bne	r2,zero,1046268 <__alt_data_end+0xfffc6268>
 104710c:	00800044 	movi	r2,1
 1047110:	003e5006 	br	1046a54 <__alt_data_end+0xfffc6a54>
 1047114:	d9402c17 	ldw	r5,176(sp)
 1047118:	d9801e04 	addi	r6,sp,120
 104711c:	9809883a 	mov	r4,r19
 1047120:	104f4ec0 	call	104f4ec <__ssprint_r>
 1047124:	103bd71e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 1047128:	d8c02017 	ldw	r3,128(sp)
 104712c:	da000404 	addi	r8,sp,16
 1047130:	d9003217 	ldw	r4,200(sp)
 1047134:	d8802617 	ldw	r2,152(sp)
 1047138:	d9403317 	ldw	r5,204(sp)
 104713c:	8123883a 	add	r17,r16,r4
 1047140:	11400216 	blt	r2,r5,104714c <___svfprintf_internal_r+0x145c>
 1047144:	9100004c 	andi	r4,r18,1
 1047148:	20000d26 	beq	r4,zero,1047180 <___svfprintf_internal_r+0x1490>
 104714c:	d9003817 	ldw	r4,224(sp)
 1047150:	d9403417 	ldw	r5,208(sp)
 1047154:	1907883a 	add	r3,r3,r4
 1047158:	d9001f17 	ldw	r4,124(sp)
 104715c:	41400015 	stw	r5,0(r8)
 1047160:	d9403817 	ldw	r5,224(sp)
 1047164:	21000044 	addi	r4,r4,1
 1047168:	d8c02015 	stw	r3,128(sp)
 104716c:	41400115 	stw	r5,4(r8)
 1047170:	d9001f15 	stw	r4,124(sp)
 1047174:	014001c4 	movi	r5,7
 1047178:	2901dc16 	blt	r5,r4,10478ec <___svfprintf_internal_r+0x1bfc>
 104717c:	42000204 	addi	r8,r8,8
 1047180:	d9003317 	ldw	r4,204(sp)
 1047184:	8121883a 	add	r16,r16,r4
 1047188:	2085c83a 	sub	r2,r4,r2
 104718c:	8461c83a 	sub	r16,r16,r17
 1047190:	1400010e 	bge	r2,r16,1047198 <___svfprintf_internal_r+0x14a8>
 1047194:	1021883a 	mov	r16,r2
 1047198:	04000a0e 	bge	zero,r16,10471c4 <___svfprintf_internal_r+0x14d4>
 104719c:	d9001f17 	ldw	r4,124(sp)
 10471a0:	1c07883a 	add	r3,r3,r16
 10471a4:	44400015 	stw	r17,0(r8)
 10471a8:	21000044 	addi	r4,r4,1
 10471ac:	44000115 	stw	r16,4(r8)
 10471b0:	d8c02015 	stw	r3,128(sp)
 10471b4:	d9001f15 	stw	r4,124(sp)
 10471b8:	014001c4 	movi	r5,7
 10471bc:	2901e616 	blt	r5,r4,1047958 <___svfprintf_internal_r+0x1c68>
 10471c0:	42000204 	addi	r8,r8,8
 10471c4:	8001f616 	blt	r16,zero,10479a0 <___svfprintf_internal_r+0x1cb0>
 10471c8:	1421c83a 	sub	r16,r2,r16
 10471cc:	043d1c0e 	bge	zero,r16,1046640 <__alt_data_end+0xfffc6640>
 10471d0:	04400404 	movi	r17,16
 10471d4:	d8801f17 	ldw	r2,124(sp)
 10471d8:	8c3edd0e 	bge	r17,r16,1046d50 <__alt_data_end+0xfffc6d50>
 10471dc:	01404174 	movhi	r5,261
 10471e0:	295ad184 	addi	r5,r5,27462
 10471e4:	d9402b15 	stw	r5,172(sp)
 10471e8:	058001c4 	movi	r22,7
 10471ec:	dd002c17 	ldw	r20,176(sp)
 10471f0:	00000306 	br	1047200 <___svfprintf_internal_r+0x1510>
 10471f4:	42000204 	addi	r8,r8,8
 10471f8:	843ffc04 	addi	r16,r16,-16
 10471fc:	8c3ed70e 	bge	r17,r16,1046d5c <__alt_data_end+0xfffc6d5c>
 1047200:	18c00404 	addi	r3,r3,16
 1047204:	10800044 	addi	r2,r2,1
 1047208:	45400015 	stw	r21,0(r8)
 104720c:	44400115 	stw	r17,4(r8)
 1047210:	d8c02015 	stw	r3,128(sp)
 1047214:	d8801f15 	stw	r2,124(sp)
 1047218:	b0bff60e 	bge	r22,r2,10471f4 <__alt_data_end+0xfffc71f4>
 104721c:	d9801e04 	addi	r6,sp,120
 1047220:	a00b883a 	mov	r5,r20
 1047224:	9809883a 	mov	r4,r19
 1047228:	104f4ec0 	call	104f4ec <__ssprint_r>
 104722c:	103b951e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 1047230:	d8c02017 	ldw	r3,128(sp)
 1047234:	d8801f17 	ldw	r2,124(sp)
 1047238:	da000404 	addi	r8,sp,16
 104723c:	003fee06 	br	10471f8 <__alt_data_end+0xfffc71f8>
 1047240:	9088703a 	and	r4,r18,r2
 1047244:	203e8d1e 	bne	r4,zero,1046c7c <__alt_data_end+0xfffc6c7c>
 1047248:	dc401f17 	ldw	r17,124(sp)
 104724c:	40800115 	stw	r2,4(r8)
 1047250:	44000015 	stw	r16,0(r8)
 1047254:	8c400044 	addi	r17,r17,1
 1047258:	d8c02015 	stw	r3,128(sp)
 104725c:	dc401f15 	stw	r17,124(sp)
 1047260:	008001c4 	movi	r2,7
 1047264:	147f7f16 	blt	r2,r17,1047064 <__alt_data_end+0xfffc7064>
 1047268:	45800204 	addi	r22,r8,8
 104726c:	003eac06 	br	1046d20 <__alt_data_end+0xfffc6d20>
 1047270:	d9402c17 	ldw	r5,176(sp)
 1047274:	d9801e04 	addi	r6,sp,120
 1047278:	9809883a 	mov	r4,r19
 104727c:	104f4ec0 	call	104f4ec <__ssprint_r>
 1047280:	103b801e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 1047284:	d8c02017 	ldw	r3,128(sp)
 1047288:	dc401f17 	ldw	r17,124(sp)
 104728c:	da000404 	addi	r8,sp,16
 1047290:	003e8406 	br	1046ca4 <__alt_data_end+0xfffc6ca4>
 1047294:	d9402c17 	ldw	r5,176(sp)
 1047298:	d9801e04 	addi	r6,sp,120
 104729c:	9809883a 	mov	r4,r19
 10472a0:	104f4ec0 	call	104f4ec <__ssprint_r>
 10472a4:	103b771e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 10472a8:	d8c02017 	ldw	r3,128(sp)
 10472ac:	dc401f17 	ldw	r17,124(sp)
 10472b0:	dd800404 	addi	r22,sp,16
 10472b4:	003e8606 	br	1046cd0 <__alt_data_end+0xfffc6cd0>
 10472b8:	0029883a 	mov	r20,zero
 10472bc:	a5000c04 	addi	r20,r20,48
 10472c0:	dc001dc4 	addi	r16,sp,119
 10472c4:	dd001dc5 	stb	r20,119(sp)
 10472c8:	003f3806 	br	1046fac <__alt_data_end+0xfffc6fac>
 10472cc:	d9402c17 	ldw	r5,176(sp)
 10472d0:	d9801e04 	addi	r6,sp,120
 10472d4:	9809883a 	mov	r4,r19
 10472d8:	104f4ec0 	call	104f4ec <__ssprint_r>
 10472dc:	103b691e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 10472e0:	d8c02017 	ldw	r3,128(sp)
 10472e4:	da000404 	addi	r8,sp,16
 10472e8:	003c9506 	br	1046540 <__alt_data_end+0xfffc6540>
 10472ec:	d9003617 	ldw	r4,216(sp)
 10472f0:	d9403717 	ldw	r5,220(sp)
 10472f4:	da003e15 	stw	r8,248(sp)
 10472f8:	104f20c0 	call	104f20c <__fpclassifyd>
 10472fc:	da003e17 	ldw	r8,248(sp)
 1047300:	1000bd1e 	bne	r2,zero,10475f8 <___svfprintf_internal_r+0x1908>
 1047304:	008011c4 	movi	r2,71
 1047308:	14411e0e 	bge	r2,r17,1047784 <___svfprintf_internal_r+0x1a94>
 104730c:	04004174 	movhi	r16,261
 1047310:	841ac404 	addi	r16,r16,27408
 1047314:	00c000c4 	movi	r3,3
 1047318:	00bfdfc4 	movi	r2,-129
 104731c:	d8c02a15 	stw	r3,168(sp)
 1047320:	90a4703a 	and	r18,r18,r2
 1047324:	df002783 	ldbu	fp,158(sp)
 1047328:	d8c02e15 	stw	r3,184(sp)
 104732c:	d8002915 	stw	zero,164(sp)
 1047330:	d8003215 	stw	zero,200(sp)
 1047334:	003c1c06 	br	10463a8 <__alt_data_end+0xfffc63a8>
 1047338:	9080100c 	andi	r2,r18,64
 104733c:	d8002785 	stb	zero,158(sp)
 1047340:	10009426 	beq	r2,zero,1047594 <___svfprintf_internal_r+0x18a4>
 1047344:	d8c02d17 	ldw	r3,180(sp)
 1047348:	d9002917 	ldw	r4,164(sp)
 104734c:	002d883a 	mov	r22,zero
 1047350:	18800104 	addi	r2,r3,4
 1047354:	1d00000b 	ldhu	r20,0(r3)
 1047358:	203ec10e 	bge	r4,zero,1046e60 <__alt_data_end+0xfffc6e60>
 104735c:	a586b03a 	or	r3,r20,r22
 1047360:	d8802d15 	stw	r2,180(sp)
 1047364:	183ec21e 	bne	r3,zero,1046e70 <__alt_data_end+0xfffc6e70>
 1047368:	0039883a 	mov	fp,zero
 104736c:	0005883a 	mov	r2,zero
 1047370:	003db806 	br	1046a54 <__alt_data_end+0xfffc6a54>
 1047374:	d8802d17 	ldw	r2,180(sp)
 1047378:	d8c02d17 	ldw	r3,180(sp)
 104737c:	d9002d17 	ldw	r4,180(sp)
 1047380:	10800017 	ldw	r2,0(r2)
 1047384:	18c00117 	ldw	r3,4(r3)
 1047388:	21000204 	addi	r4,r4,8
 104738c:	d8803615 	stw	r2,216(sp)
 1047390:	d8c03715 	stw	r3,220(sp)
 1047394:	d9002d15 	stw	r4,180(sp)
 1047398:	003b8206 	br	10461a4 <__alt_data_end+0xfffc61a4>
 104739c:	9080100c 	andi	r2,r18,64
 10473a0:	10010726 	beq	r2,zero,10477c0 <___svfprintf_internal_r+0x1ad0>
 10473a4:	d8c02d17 	ldw	r3,180(sp)
 10473a8:	1d00000f 	ldh	r20,0(r3)
 10473ac:	18c00104 	addi	r3,r3,4
 10473b0:	d8c02d15 	stw	r3,180(sp)
 10473b4:	a02dd7fa 	srai	r22,r20,31
 10473b8:	b005883a 	mov	r2,r22
 10473bc:	003ba206 	br	1046248 <__alt_data_end+0xfffc6248>
 10473c0:	9080100c 	andi	r2,r18,64
 10473c4:	10010526 	beq	r2,zero,10477dc <___svfprintf_internal_r+0x1aec>
 10473c8:	d9002d17 	ldw	r4,180(sp)
 10473cc:	002d883a 	mov	r22,zero
 10473d0:	2500000b 	ldhu	r20,0(r4)
 10473d4:	21000104 	addi	r4,r4,4
 10473d8:	d9002d15 	stw	r4,180(sp)
 10473dc:	003cfe06 	br	10467d8 <__alt_data_end+0xfffc67d8>
 10473e0:	bc400007 	ldb	r17,0(r23)
 10473e4:	003a9606 	br	1045e40 <__alt_data_end+0xfffc5e40>
 10473e8:	9080040c 	andi	r2,r18,16
 10473ec:	10010126 	beq	r2,zero,10477f4 <___svfprintf_internal_r+0x1b04>
 10473f0:	d9402d17 	ldw	r5,180(sp)
 10473f4:	d8c02f17 	ldw	r3,188(sp)
 10473f8:	28800017 	ldw	r2,0(r5)
 10473fc:	29400104 	addi	r5,r5,4
 1047400:	d9402d15 	stw	r5,180(sp)
 1047404:	10c00015 	stw	r3,0(r2)
 1047408:	003a6406 	br	1045d9c <__alt_data_end+0xfffc5d9c>
 104740c:	d9002917 	ldw	r4,164(sp)
 1047410:	d8002785 	stb	zero,158(sp)
 1047414:	203d8d16 	blt	r4,zero,1046a4c <__alt_data_end+0xfffc6a4c>
 1047418:	00bfdfc4 	movi	r2,-129
 104741c:	90a4703a 	and	r18,r18,r2
 1047420:	003b0506 	br	1046038 <__alt_data_end+0xfffc6038>
 1047424:	01404174 	movhi	r5,261
 1047428:	295ad184 	addi	r5,r5,27462
 104742c:	d9402b15 	stw	r5,172(sp)
 1047430:	d9402b17 	ldw	r5,172(sp)
 1047434:	1c47883a 	add	r3,r3,r17
 1047438:	10800044 	addi	r2,r2,1
 104743c:	41400015 	stw	r5,0(r8)
 1047440:	44400115 	stw	r17,4(r8)
 1047444:	d8c02015 	stw	r3,128(sp)
 1047448:	d8801f15 	stw	r2,124(sp)
 104744c:	010001c4 	movi	r4,7
 1047450:	20bf3016 	blt	r4,r2,1047114 <__alt_data_end+0xfffc7114>
 1047454:	42000204 	addi	r8,r8,8
 1047458:	003f3506 	br	1047130 <__alt_data_end+0xfffc7130>
 104745c:	01004174 	movhi	r4,261
 1047460:	211ad184 	addi	r4,r4,27462
 1047464:	d9002b15 	stw	r4,172(sp)
 1047468:	003c5e06 	br	10465e4 <__alt_data_end+0xfffc65e4>
 104746c:	d9402c17 	ldw	r5,176(sp)
 1047470:	d9801e04 	addi	r6,sp,120
 1047474:	9809883a 	mov	r4,r19
 1047478:	104f4ec0 	call	104f4ec <__ssprint_r>
 104747c:	103b011e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 1047480:	d8c02017 	ldw	r3,128(sp)
 1047484:	da000404 	addi	r8,sp,16
 1047488:	003d9306 	br	1046ad8 <__alt_data_end+0xfffc6ad8>
 104748c:	d8801f17 	ldw	r2,124(sp)
 1047490:	01404174 	movhi	r5,261
 1047494:	01000044 	movi	r4,1
 1047498:	18c00044 	addi	r3,r3,1
 104749c:	10800044 	addi	r2,r2,1
 10474a0:	295ad104 	addi	r5,r5,27460
 10474a4:	41000115 	stw	r4,4(r8)
 10474a8:	41400015 	stw	r5,0(r8)
 10474ac:	d8c02015 	stw	r3,128(sp)
 10474b0:	d8801f15 	stw	r2,124(sp)
 10474b4:	010001c4 	movi	r4,7
 10474b8:	2080b516 	blt	r4,r2,1047790 <___svfprintf_internal_r+0x1aa0>
 10474bc:	42000204 	addi	r8,r8,8
 10474c0:	8800041e 	bne	r17,zero,10474d4 <___svfprintf_internal_r+0x17e4>
 10474c4:	d8803317 	ldw	r2,204(sp)
 10474c8:	1000021e 	bne	r2,zero,10474d4 <___svfprintf_internal_r+0x17e4>
 10474cc:	9080004c 	andi	r2,r18,1
 10474d0:	103c5b26 	beq	r2,zero,1046640 <__alt_data_end+0xfffc6640>
 10474d4:	d9003817 	ldw	r4,224(sp)
 10474d8:	d8801f17 	ldw	r2,124(sp)
 10474dc:	d9403417 	ldw	r5,208(sp)
 10474e0:	20c7883a 	add	r3,r4,r3
 10474e4:	10800044 	addi	r2,r2,1
 10474e8:	41000115 	stw	r4,4(r8)
 10474ec:	41400015 	stw	r5,0(r8)
 10474f0:	d8c02015 	stw	r3,128(sp)
 10474f4:	d8801f15 	stw	r2,124(sp)
 10474f8:	010001c4 	movi	r4,7
 10474fc:	20818016 	blt	r4,r2,1047b00 <___svfprintf_internal_r+0x1e10>
 1047500:	42000204 	addi	r8,r8,8
 1047504:	0463c83a 	sub	r17,zero,r17
 1047508:	0440cb0e 	bge	zero,r17,1047838 <___svfprintf_internal_r+0x1b48>
 104750c:	05800404 	movi	r22,16
 1047510:	b440e80e 	bge	r22,r17,10478b4 <___svfprintf_internal_r+0x1bc4>
 1047514:	01404174 	movhi	r5,261
 1047518:	295ad184 	addi	r5,r5,27462
 104751c:	d9402b15 	stw	r5,172(sp)
 1047520:	070001c4 	movi	fp,7
 1047524:	dd002c17 	ldw	r20,176(sp)
 1047528:	00000306 	br	1047538 <___svfprintf_internal_r+0x1848>
 104752c:	42000204 	addi	r8,r8,8
 1047530:	8c7ffc04 	addi	r17,r17,-16
 1047534:	b440e20e 	bge	r22,r17,10478c0 <___svfprintf_internal_r+0x1bd0>
 1047538:	18c00404 	addi	r3,r3,16
 104753c:	10800044 	addi	r2,r2,1
 1047540:	45400015 	stw	r21,0(r8)
 1047544:	45800115 	stw	r22,4(r8)
 1047548:	d8c02015 	stw	r3,128(sp)
 104754c:	d8801f15 	stw	r2,124(sp)
 1047550:	e0bff60e 	bge	fp,r2,104752c <__alt_data_end+0xfffc752c>
 1047554:	d9801e04 	addi	r6,sp,120
 1047558:	a00b883a 	mov	r5,r20
 104755c:	9809883a 	mov	r4,r19
 1047560:	104f4ec0 	call	104f4ec <__ssprint_r>
 1047564:	103ac71e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 1047568:	d8c02017 	ldw	r3,128(sp)
 104756c:	d8801f17 	ldw	r2,124(sp)
 1047570:	da000404 	addi	r8,sp,16
 1047574:	003fee06 	br	1047530 <__alt_data_end+0xfffc7530>
 1047578:	d8c02d17 	ldw	r3,180(sp)
 104757c:	d9002917 	ldw	r4,164(sp)
 1047580:	002d883a 	mov	r22,zero
 1047584:	18800104 	addi	r2,r3,4
 1047588:	1d000017 	ldw	r20,0(r3)
 104758c:	203e7d0e 	bge	r4,zero,1046f84 <__alt_data_end+0xfffc6f84>
 1047590:	003eda06 	br	10470fc <__alt_data_end+0xfffc70fc>
 1047594:	d9402d17 	ldw	r5,180(sp)
 1047598:	d8c02917 	ldw	r3,164(sp)
 104759c:	002d883a 	mov	r22,zero
 10475a0:	28800104 	addi	r2,r5,4
 10475a4:	2d000017 	ldw	r20,0(r5)
 10475a8:	183e2d0e 	bge	r3,zero,1046e60 <__alt_data_end+0xfffc6e60>
 10475ac:	003f6b06 	br	104735c <__alt_data_end+0xfffc735c>
 10475b0:	d8c02d15 	stw	r3,180(sp)
 10475b4:	0039883a 	mov	fp,zero
 10475b8:	003ed206 	br	1047104 <__alt_data_end+0xfffc7104>
 10475bc:	bc400043 	ldbu	r17,1(r23)
 10475c0:	94800814 	ori	r18,r18,32
 10475c4:	bdc00044 	addi	r23,r23,1
 10475c8:	8c403fcc 	andi	r17,r17,255
 10475cc:	8c40201c 	xori	r17,r17,128
 10475d0:	8c7fe004 	addi	r17,r17,-128
 10475d4:	003a1a06 	br	1045e40 <__alt_data_end+0xfffc5e40>
 10475d8:	d9402c17 	ldw	r5,176(sp)
 10475dc:	d9801e04 	addi	r6,sp,120
 10475e0:	9809883a 	mov	r4,r19
 10475e4:	104f4ec0 	call	104f4ec <__ssprint_r>
 10475e8:	103aa61e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 10475ec:	d8c02017 	ldw	r3,128(sp)
 10475f0:	da000404 	addi	r8,sp,16
 10475f4:	003d4a06 	br	1046b20 <__alt_data_end+0xfffc6b20>
 10475f8:	d9002917 	ldw	r4,164(sp)
 10475fc:	05bff7c4 	movi	r22,-33
 1047600:	00bfffc4 	movi	r2,-1
 1047604:	8dac703a 	and	r22,r17,r22
 1047608:	20806a26 	beq	r4,r2,10477b4 <___svfprintf_internal_r+0x1ac4>
 104760c:	008011c4 	movi	r2,71
 1047610:	b0813726 	beq	r22,r2,1047af0 <___svfprintf_internal_r+0x1e00>
 1047614:	d9003717 	ldw	r4,220(sp)
 1047618:	90c04014 	ori	r3,r18,256
 104761c:	d8c02b15 	stw	r3,172(sp)
 1047620:	20015d16 	blt	r4,zero,1047b98 <___svfprintf_internal_r+0x1ea8>
 1047624:	dd003717 	ldw	r20,220(sp)
 1047628:	d8002a05 	stb	zero,168(sp)
 104762c:	00801984 	movi	r2,102
 1047630:	88814026 	beq	r17,r2,1047b34 <___svfprintf_internal_r+0x1e44>
 1047634:	00801184 	movi	r2,70
 1047638:	88817126 	beq	r17,r2,1047c00 <___svfprintf_internal_r+0x1f10>
 104763c:	00801144 	movi	r2,69
 1047640:	b0816226 	beq	r22,r2,1047bcc <___svfprintf_internal_r+0x1edc>
 1047644:	d8c02917 	ldw	r3,164(sp)
 1047648:	d8802104 	addi	r2,sp,132
 104764c:	d8800315 	stw	r2,12(sp)
 1047650:	d9403617 	ldw	r5,216(sp)
 1047654:	d8802504 	addi	r2,sp,148
 1047658:	d8800215 	stw	r2,8(sp)
 104765c:	d8802604 	addi	r2,sp,152
 1047660:	d8c00015 	stw	r3,0(sp)
 1047664:	d8800115 	stw	r2,4(sp)
 1047668:	01c00084 	movi	r7,2
 104766c:	a00d883a 	mov	r6,r20
 1047670:	9809883a 	mov	r4,r19
 1047674:	d8c03d15 	stw	r3,244(sp)
 1047678:	da003e15 	stw	r8,248(sp)
 104767c:	104a6100 	call	104a610 <_dtoa_r>
 1047680:	1021883a 	mov	r16,r2
 1047684:	008019c4 	movi	r2,103
 1047688:	d8c03d17 	ldw	r3,244(sp)
 104768c:	da003e17 	ldw	r8,248(sp)
 1047690:	8880e726 	beq	r17,r2,1047a30 <___svfprintf_internal_r+0x1d40>
 1047694:	008011c4 	movi	r2,71
 1047698:	8880d426 	beq	r17,r2,10479ec <___svfprintf_internal_r+0x1cfc>
 104769c:	80f9883a 	add	fp,r16,r3
 10476a0:	d9003617 	ldw	r4,216(sp)
 10476a4:	000d883a 	mov	r6,zero
 10476a8:	000f883a 	mov	r7,zero
 10476ac:	a00b883a 	mov	r5,r20
 10476b0:	da003e15 	stw	r8,248(sp)
 10476b4:	104471c0 	call	104471c <__eqdf2>
 10476b8:	da003e17 	ldw	r8,248(sp)
 10476bc:	1000e426 	beq	r2,zero,1047a50 <___svfprintf_internal_r+0x1d60>
 10476c0:	d8802117 	ldw	r2,132(sp)
 10476c4:	1700062e 	bgeu	r2,fp,10476e0 <___svfprintf_internal_r+0x19f0>
 10476c8:	01000c04 	movi	r4,48
 10476cc:	10c00044 	addi	r3,r2,1
 10476d0:	d8c02115 	stw	r3,132(sp)
 10476d4:	11000005 	stb	r4,0(r2)
 10476d8:	d8802117 	ldw	r2,132(sp)
 10476dc:	173ffb36 	bltu	r2,fp,10476cc <__alt_data_end+0xfffc76cc>
 10476e0:	1405c83a 	sub	r2,r2,r16
 10476e4:	d8803315 	stw	r2,204(sp)
 10476e8:	008011c4 	movi	r2,71
 10476ec:	b080c526 	beq	r22,r2,1047a04 <___svfprintf_internal_r+0x1d14>
 10476f0:	00801944 	movi	r2,101
 10476f4:	1441d90e 	bge	r2,r17,1047e5c <___svfprintf_internal_r+0x216c>
 10476f8:	d8c02617 	ldw	r3,152(sp)
 10476fc:	00801984 	movi	r2,102
 1047700:	d8c03215 	stw	r3,200(sp)
 1047704:	88813426 	beq	r17,r2,1047bd8 <___svfprintf_internal_r+0x1ee8>
 1047708:	d8c03217 	ldw	r3,200(sp)
 104770c:	d9003317 	ldw	r4,204(sp)
 1047710:	19012516 	blt	r3,r4,1047ba8 <___svfprintf_internal_r+0x1eb8>
 1047714:	9480004c 	andi	r18,r18,1
 1047718:	9001841e 	bne	r18,zero,1047d2c <___svfprintf_internal_r+0x203c>
 104771c:	1805883a 	mov	r2,r3
 1047720:	1801cc16 	blt	r3,zero,1047e54 <___svfprintf_internal_r+0x2164>
 1047724:	d8c03217 	ldw	r3,200(sp)
 1047728:	044019c4 	movi	r17,103
 104772c:	d8c02e15 	stw	r3,184(sp)
 1047730:	df002a07 	ldb	fp,168(sp)
 1047734:	e000a61e 	bne	fp,zero,10479d0 <___svfprintf_internal_r+0x1ce0>
 1047738:	df002783 	ldbu	fp,158(sp)
 104773c:	d8802a15 	stw	r2,168(sp)
 1047740:	dc802b17 	ldw	r18,172(sp)
 1047744:	d8002915 	stw	zero,164(sp)
 1047748:	003b1706 	br	10463a8 <__alt_data_end+0xfffc63a8>
 104774c:	04004174 	movhi	r16,261
 1047750:	841ac104 	addi	r16,r16,27396
 1047754:	003aa606 	br	10461f0 <__alt_data_end+0xfffc61f0>
 1047758:	d9003917 	ldw	r4,228(sp)
 104775c:	04001004 	movi	r16,64
 1047760:	800b883a 	mov	r5,r16
 1047764:	104cff00 	call	104cff0 <_malloc_r>
 1047768:	d9002c17 	ldw	r4,176(sp)
 104776c:	20800015 	stw	r2,0(r4)
 1047770:	20800415 	stw	r2,16(r4)
 1047774:	1001cb26 	beq	r2,zero,1047ea4 <___svfprintf_internal_r+0x21b4>
 1047778:	d8802c17 	ldw	r2,176(sp)
 104777c:	14000515 	stw	r16,20(r2)
 1047780:	00397606 	br	1045d5c <__alt_data_end+0xfffc5d5c>
 1047784:	04004174 	movhi	r16,261
 1047788:	841ac304 	addi	r16,r16,27404
 104778c:	003ee106 	br	1047314 <__alt_data_end+0xfffc7314>
 1047790:	d9402c17 	ldw	r5,176(sp)
 1047794:	d9801e04 	addi	r6,sp,120
 1047798:	9809883a 	mov	r4,r19
 104779c:	104f4ec0 	call	104f4ec <__ssprint_r>
 10477a0:	103a381e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 10477a4:	dc402617 	ldw	r17,152(sp)
 10477a8:	d8c02017 	ldw	r3,128(sp)
 10477ac:	da000404 	addi	r8,sp,16
 10477b0:	003f4306 	br	10474c0 <__alt_data_end+0xfffc74c0>
 10477b4:	01400184 	movi	r5,6
 10477b8:	d9402915 	stw	r5,164(sp)
 10477bc:	003f9506 	br	1047614 <__alt_data_end+0xfffc7614>
 10477c0:	d9002d17 	ldw	r4,180(sp)
 10477c4:	25000017 	ldw	r20,0(r4)
 10477c8:	21000104 	addi	r4,r4,4
 10477cc:	d9002d15 	stw	r4,180(sp)
 10477d0:	a02dd7fa 	srai	r22,r20,31
 10477d4:	b005883a 	mov	r2,r22
 10477d8:	003a9b06 	br	1046248 <__alt_data_end+0xfffc6248>
 10477dc:	d9402d17 	ldw	r5,180(sp)
 10477e0:	002d883a 	mov	r22,zero
 10477e4:	2d000017 	ldw	r20,0(r5)
 10477e8:	29400104 	addi	r5,r5,4
 10477ec:	d9402d15 	stw	r5,180(sp)
 10477f0:	003bf906 	br	10467d8 <__alt_data_end+0xfffc67d8>
 10477f4:	9480100c 	andi	r18,r18,64
 10477f8:	90006e26 	beq	r18,zero,10479b4 <___svfprintf_internal_r+0x1cc4>
 10477fc:	d9002d17 	ldw	r4,180(sp)
 1047800:	d9402f17 	ldw	r5,188(sp)
 1047804:	20800017 	ldw	r2,0(r4)
 1047808:	21000104 	addi	r4,r4,4
 104780c:	d9002d15 	stw	r4,180(sp)
 1047810:	1140000d 	sth	r5,0(r2)
 1047814:	00396106 	br	1045d9c <__alt_data_end+0xfffc5d9c>
 1047818:	d9402c17 	ldw	r5,176(sp)
 104781c:	d9801e04 	addi	r6,sp,120
 1047820:	9809883a 	mov	r4,r19
 1047824:	104f4ec0 	call	104f4ec <__ssprint_r>
 1047828:	103a161e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 104782c:	d8c02017 	ldw	r3,128(sp)
 1047830:	d8801f17 	ldw	r2,124(sp)
 1047834:	da000404 	addi	r8,sp,16
 1047838:	d9403317 	ldw	r5,204(sp)
 104783c:	10800044 	addi	r2,r2,1
 1047840:	44000015 	stw	r16,0(r8)
 1047844:	28c7883a 	add	r3,r5,r3
 1047848:	003b7706 	br	1046628 <__alt_data_end+0xfffc6628>
 104784c:	8009883a 	mov	r4,r16
 1047850:	da003e15 	stw	r8,248(sp)
 1047854:	1045c580 	call	1045c58 <strlen>
 1047858:	d8802e15 	stw	r2,184(sp)
 104785c:	da003e17 	ldw	r8,248(sp)
 1047860:	103c280e 	bge	r2,zero,1046904 <__alt_data_end+0xfffc6904>
 1047864:	0005883a 	mov	r2,zero
 1047868:	003c2606 	br	1046904 <__alt_data_end+0xfffc6904>
 104786c:	00bfffc4 	movi	r2,-1
 1047870:	003a0906 	br	1046098 <__alt_data_end+0xfffc6098>
 1047874:	01004174 	movhi	r4,261
 1047878:	211ad584 	addi	r4,r4,27478
 104787c:	d9003515 	stw	r4,212(sp)
 1047880:	003b0606 	br	104649c <__alt_data_end+0xfffc649c>
 1047884:	013fffc4 	movi	r4,-1
 1047888:	003a2706 	br	1046128 <__alt_data_end+0xfffc6128>
 104788c:	d9402c17 	ldw	r5,176(sp)
 1047890:	d9801e04 	addi	r6,sp,120
 1047894:	9809883a 	mov	r4,r19
 1047898:	104f4ec0 	call	104f4ec <__ssprint_r>
 104789c:	1039f91e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 10478a0:	d8c02017 	ldw	r3,128(sp)
 10478a4:	da000404 	addi	r8,sp,16
 10478a8:	003d8406 	br	1046ebc <__alt_data_end+0xfffc6ebc>
 10478ac:	0023883a 	mov	r17,zero
 10478b0:	003d8306 	br	1046ec0 <__alt_data_end+0xfffc6ec0>
 10478b4:	01004174 	movhi	r4,261
 10478b8:	211ad184 	addi	r4,r4,27462
 10478bc:	d9002b15 	stw	r4,172(sp)
 10478c0:	d9002b17 	ldw	r4,172(sp)
 10478c4:	1c47883a 	add	r3,r3,r17
 10478c8:	10800044 	addi	r2,r2,1
 10478cc:	41000015 	stw	r4,0(r8)
 10478d0:	44400115 	stw	r17,4(r8)
 10478d4:	d8c02015 	stw	r3,128(sp)
 10478d8:	d8801f15 	stw	r2,124(sp)
 10478dc:	010001c4 	movi	r4,7
 10478e0:	20bfcd16 	blt	r4,r2,1047818 <__alt_data_end+0xfffc7818>
 10478e4:	42000204 	addi	r8,r8,8
 10478e8:	003fd306 	br	1047838 <__alt_data_end+0xfffc7838>
 10478ec:	d9402c17 	ldw	r5,176(sp)
 10478f0:	d9801e04 	addi	r6,sp,120
 10478f4:	9809883a 	mov	r4,r19
 10478f8:	104f4ec0 	call	104f4ec <__ssprint_r>
 10478fc:	1039e11e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 1047900:	d8802617 	ldw	r2,152(sp)
 1047904:	d8c02017 	ldw	r3,128(sp)
 1047908:	da000404 	addi	r8,sp,16
 104790c:	003e1c06 	br	1047180 <__alt_data_end+0xfffc7180>
 1047910:	d8802917 	ldw	r2,164(sp)
 1047914:	00c00184 	movi	r3,6
 1047918:	1880012e 	bgeu	r3,r2,1047920 <___svfprintf_internal_r+0x1c30>
 104791c:	1805883a 	mov	r2,r3
 1047920:	d8802e15 	stw	r2,184(sp)
 1047924:	1000f316 	blt	r2,zero,1047cf4 <___svfprintf_internal_r+0x2004>
 1047928:	04004174 	movhi	r16,261
 104792c:	d8802a15 	stw	r2,168(sp)
 1047930:	dd002d15 	stw	r20,180(sp)
 1047934:	d8002915 	stw	zero,164(sp)
 1047938:	d8003215 	stw	zero,200(sp)
 104793c:	841acf04 	addi	r16,r16,27452
 1047940:	0039883a 	mov	fp,zero
 1047944:	003a9f06 	br	10463c4 <__alt_data_end+0xfffc63c4>
 1047948:	01004174 	movhi	r4,261
 104794c:	211ad584 	addi	r4,r4,27478
 1047950:	d9003515 	stw	r4,212(sp)
 1047954:	003b5f06 	br	10466d4 <__alt_data_end+0xfffc66d4>
 1047958:	d9402c17 	ldw	r5,176(sp)
 104795c:	d9801e04 	addi	r6,sp,120
 1047960:	9809883a 	mov	r4,r19
 1047964:	104f4ec0 	call	104f4ec <__ssprint_r>
 1047968:	1039c61e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 104796c:	d8802617 	ldw	r2,152(sp)
 1047970:	d9403317 	ldw	r5,204(sp)
 1047974:	d8c02017 	ldw	r3,128(sp)
 1047978:	da000404 	addi	r8,sp,16
 104797c:	2885c83a 	sub	r2,r5,r2
 1047980:	003e1006 	br	10471c4 <__alt_data_end+0xfffc71c4>
 1047984:	00800044 	movi	r2,1
 1047988:	10803fcc 	andi	r2,r2,255
 104798c:	00c00044 	movi	r3,1
 1047990:	10fa3526 	beq	r2,r3,1046268 <__alt_data_end+0xfffc6268>
 1047994:	00c00084 	movi	r3,2
 1047998:	10fb9e26 	beq	r2,r3,1046814 <__alt_data_end+0xfffc6814>
 104799c:	003a6406 	br	1046330 <__alt_data_end+0xfffc6330>
 10479a0:	0021883a 	mov	r16,zero
 10479a4:	003e0806 	br	10471c8 <__alt_data_end+0xfffc71c8>
 10479a8:	07000b44 	movi	fp,45
 10479ac:	df002785 	stb	fp,158(sp)
 10479b0:	003a0b06 	br	10461e0 <__alt_data_end+0xfffc61e0>
 10479b4:	d8c02d17 	ldw	r3,180(sp)
 10479b8:	d9002f17 	ldw	r4,188(sp)
 10479bc:	18800017 	ldw	r2,0(r3)
 10479c0:	18c00104 	addi	r3,r3,4
 10479c4:	d8c02d15 	stw	r3,180(sp)
 10479c8:	11000015 	stw	r4,0(r2)
 10479cc:	0038f306 	br	1045d9c <__alt_data_end+0xfffc5d9c>
 10479d0:	00c00b44 	movi	r3,45
 10479d4:	d8c02785 	stb	r3,158(sp)
 10479d8:	d8802a15 	stw	r2,168(sp)
 10479dc:	dc802b17 	ldw	r18,172(sp)
 10479e0:	d8002915 	stw	zero,164(sp)
 10479e4:	07000b44 	movi	fp,45
 10479e8:	003a7306 	br	10463b8 <__alt_data_end+0xfffc63b8>
 10479ec:	9080004c 	andi	r2,r18,1
 10479f0:	1000941e 	bne	r2,zero,1047c44 <___svfprintf_internal_r+0x1f54>
 10479f4:	d8802117 	ldw	r2,132(sp)
 10479f8:	1405c83a 	sub	r2,r2,r16
 10479fc:	d8803315 	stw	r2,204(sp)
 1047a00:	b441161e 	bne	r22,r17,1047e5c <___svfprintf_internal_r+0x216c>
 1047a04:	dd802617 	ldw	r22,152(sp)
 1047a08:	00bfff44 	movi	r2,-3
 1047a0c:	b0801a16 	blt	r22,r2,1047a78 <___svfprintf_internal_r+0x1d88>
 1047a10:	d9402917 	ldw	r5,164(sp)
 1047a14:	2d801816 	blt	r5,r22,1047a78 <___svfprintf_internal_r+0x1d88>
 1047a18:	dd803215 	stw	r22,200(sp)
 1047a1c:	003f3a06 	br	1047708 <__alt_data_end+0xfffc7708>
 1047a20:	1025883a 	mov	r18,r2
 1047a24:	0039883a 	mov	fp,zero
 1047a28:	00800084 	movi	r2,2
 1047a2c:	003fd606 	br	1047988 <__alt_data_end+0xfffc7988>
 1047a30:	9080004c 	andi	r2,r18,1
 1047a34:	103f191e 	bne	r2,zero,104769c <__alt_data_end+0xfffc769c>
 1047a38:	d8802117 	ldw	r2,132(sp)
 1047a3c:	003f2806 	br	10476e0 <__alt_data_end+0xfffc76e0>
 1047a40:	01004174 	movhi	r4,261
 1047a44:	211ad184 	addi	r4,r4,27462
 1047a48:	d9002b15 	stw	r4,172(sp)
 1047a4c:	003c7c06 	br	1046c40 <__alt_data_end+0xfffc6c40>
 1047a50:	e005883a 	mov	r2,fp
 1047a54:	003f2206 	br	10476e0 <__alt_data_end+0xfffc76e0>
 1047a58:	d9402917 	ldw	r5,164(sp)
 1047a5c:	df002783 	ldbu	fp,158(sp)
 1047a60:	dd002d15 	stw	r20,180(sp)
 1047a64:	d9402a15 	stw	r5,168(sp)
 1047a68:	d9402e15 	stw	r5,184(sp)
 1047a6c:	d8002915 	stw	zero,164(sp)
 1047a70:	d8003215 	stw	zero,200(sp)
 1047a74:	003a4c06 	br	10463a8 <__alt_data_end+0xfffc63a8>
 1047a78:	8c7fff84 	addi	r17,r17,-2
 1047a7c:	b5bfffc4 	addi	r22,r22,-1
 1047a80:	dd802615 	stw	r22,152(sp)
 1047a84:	dc4022c5 	stb	r17,139(sp)
 1047a88:	b000c316 	blt	r22,zero,1047d98 <___svfprintf_internal_r+0x20a8>
 1047a8c:	00800ac4 	movi	r2,43
 1047a90:	d8802305 	stb	r2,140(sp)
 1047a94:	00800244 	movi	r2,9
 1047a98:	15806e16 	blt	r2,r22,1047c54 <___svfprintf_internal_r+0x1f64>
 1047a9c:	00800c04 	movi	r2,48
 1047aa0:	b5800c04 	addi	r22,r22,48
 1047aa4:	d8802345 	stb	r2,141(sp)
 1047aa8:	dd802385 	stb	r22,142(sp)
 1047aac:	d88023c4 	addi	r2,sp,143
 1047ab0:	df0022c4 	addi	fp,sp,139
 1047ab4:	d8c03317 	ldw	r3,204(sp)
 1047ab8:	1739c83a 	sub	fp,r2,fp
 1047abc:	d9003317 	ldw	r4,204(sp)
 1047ac0:	e0c7883a 	add	r3,fp,r3
 1047ac4:	df003b15 	stw	fp,236(sp)
 1047ac8:	d8c02e15 	stw	r3,184(sp)
 1047acc:	00800044 	movi	r2,1
 1047ad0:	1100b70e 	bge	r2,r4,1047db0 <___svfprintf_internal_r+0x20c0>
 1047ad4:	d8c02e17 	ldw	r3,184(sp)
 1047ad8:	18c00044 	addi	r3,r3,1
 1047adc:	d8c02e15 	stw	r3,184(sp)
 1047ae0:	1805883a 	mov	r2,r3
 1047ae4:	1800b016 	blt	r3,zero,1047da8 <___svfprintf_internal_r+0x20b8>
 1047ae8:	d8003215 	stw	zero,200(sp)
 1047aec:	003f1006 	br	1047730 <__alt_data_end+0xfffc7730>
 1047af0:	d8802917 	ldw	r2,164(sp)
 1047af4:	103ec71e 	bne	r2,zero,1047614 <__alt_data_end+0xfffc7614>
 1047af8:	dc002915 	stw	r16,164(sp)
 1047afc:	003ec506 	br	1047614 <__alt_data_end+0xfffc7614>
 1047b00:	d9402c17 	ldw	r5,176(sp)
 1047b04:	d9801e04 	addi	r6,sp,120
 1047b08:	9809883a 	mov	r4,r19
 1047b0c:	104f4ec0 	call	104f4ec <__ssprint_r>
 1047b10:	10395c1e 	bne	r2,zero,1046084 <__alt_data_end+0xfffc6084>
 1047b14:	dc402617 	ldw	r17,152(sp)
 1047b18:	d8c02017 	ldw	r3,128(sp)
 1047b1c:	d8801f17 	ldw	r2,124(sp)
 1047b20:	da000404 	addi	r8,sp,16
 1047b24:	003e7706 	br	1047504 <__alt_data_end+0xfffc7504>
 1047b28:	582f883a 	mov	r23,r11
 1047b2c:	d8002915 	stw	zero,164(sp)
 1047b30:	0038c406 	br	1045e44 <__alt_data_end+0xfffc5e44>
 1047b34:	d8c02917 	ldw	r3,164(sp)
 1047b38:	d8802104 	addi	r2,sp,132
 1047b3c:	d8800315 	stw	r2,12(sp)
 1047b40:	d9403617 	ldw	r5,216(sp)
 1047b44:	d8802504 	addi	r2,sp,148
 1047b48:	d8800215 	stw	r2,8(sp)
 1047b4c:	d8802604 	addi	r2,sp,152
 1047b50:	d8c00015 	stw	r3,0(sp)
 1047b54:	9809883a 	mov	r4,r19
 1047b58:	d8800115 	stw	r2,4(sp)
 1047b5c:	01c000c4 	movi	r7,3
 1047b60:	a00d883a 	mov	r6,r20
 1047b64:	da003e15 	stw	r8,248(sp)
 1047b68:	104a6100 	call	104a610 <_dtoa_r>
 1047b6c:	d9002917 	ldw	r4,164(sp)
 1047b70:	da003e17 	ldw	r8,248(sp)
 1047b74:	1021883a 	mov	r16,r2
 1047b78:	1139883a 	add	fp,r2,r4
 1047b7c:	2007883a 	mov	r3,r4
 1047b80:	81000007 	ldb	r4,0(r16)
 1047b84:	00800c04 	movi	r2,48
 1047b88:	20806f26 	beq	r4,r2,1047d48 <___svfprintf_internal_r+0x2058>
 1047b8c:	d8c02617 	ldw	r3,152(sp)
 1047b90:	e0f9883a 	add	fp,fp,r3
 1047b94:	003ec206 	br	10476a0 <__alt_data_end+0xfffc76a0>
 1047b98:	00c00b44 	movi	r3,45
 1047b9c:	2520003c 	xorhi	r20,r4,32768
 1047ba0:	d8c02a05 	stb	r3,168(sp)
 1047ba4:	003ea106 	br	104762c <__alt_data_end+0xfffc762c>
 1047ba8:	d8c03217 	ldw	r3,200(sp)
 1047bac:	00c0890e 	bge	zero,r3,1047dd4 <___svfprintf_internal_r+0x20e4>
 1047bb0:	00800044 	movi	r2,1
 1047bb4:	d9003317 	ldw	r4,204(sp)
 1047bb8:	1105883a 	add	r2,r2,r4
 1047bbc:	d8802e15 	stw	r2,184(sp)
 1047bc0:	10005f16 	blt	r2,zero,1047d40 <___svfprintf_internal_r+0x2050>
 1047bc4:	044019c4 	movi	r17,103
 1047bc8:	003ed906 	br	1047730 <__alt_data_end+0xfffc7730>
 1047bcc:	d9002917 	ldw	r4,164(sp)
 1047bd0:	20c00044 	addi	r3,r4,1
 1047bd4:	003e9c06 	br	1047648 <__alt_data_end+0xfffc7648>
 1047bd8:	d9002917 	ldw	r4,164(sp)
 1047bdc:	00c0680e 	bge	zero,r3,1047d80 <___svfprintf_internal_r+0x2090>
 1047be0:	2000461e 	bne	r4,zero,1047cfc <___svfprintf_internal_r+0x200c>
 1047be4:	9480004c 	andi	r18,r18,1
 1047be8:	9000441e 	bne	r18,zero,1047cfc <___svfprintf_internal_r+0x200c>
 1047bec:	1805883a 	mov	r2,r3
 1047bf0:	1800a016 	blt	r3,zero,1047e74 <___svfprintf_internal_r+0x2184>
 1047bf4:	d8c03217 	ldw	r3,200(sp)
 1047bf8:	d8c02e15 	stw	r3,184(sp)
 1047bfc:	003ecc06 	br	1047730 <__alt_data_end+0xfffc7730>
 1047c00:	d9402917 	ldw	r5,164(sp)
 1047c04:	d8802104 	addi	r2,sp,132
 1047c08:	d8800315 	stw	r2,12(sp)
 1047c0c:	d9400015 	stw	r5,0(sp)
 1047c10:	d8802504 	addi	r2,sp,148
 1047c14:	d9403617 	ldw	r5,216(sp)
 1047c18:	d8800215 	stw	r2,8(sp)
 1047c1c:	d8802604 	addi	r2,sp,152
 1047c20:	d8800115 	stw	r2,4(sp)
 1047c24:	01c000c4 	movi	r7,3
 1047c28:	a00d883a 	mov	r6,r20
 1047c2c:	9809883a 	mov	r4,r19
 1047c30:	da003e15 	stw	r8,248(sp)
 1047c34:	104a6100 	call	104a610 <_dtoa_r>
 1047c38:	d8c02917 	ldw	r3,164(sp)
 1047c3c:	da003e17 	ldw	r8,248(sp)
 1047c40:	1021883a 	mov	r16,r2
 1047c44:	00801184 	movi	r2,70
 1047c48:	80f9883a 	add	fp,r16,r3
 1047c4c:	88bfcc26 	beq	r17,r2,1047b80 <__alt_data_end+0xfffc7b80>
 1047c50:	003e9306 	br	10476a0 <__alt_data_end+0xfffc76a0>
 1047c54:	df0022c4 	addi	fp,sp,139
 1047c58:	dc002915 	stw	r16,164(sp)
 1047c5c:	9829883a 	mov	r20,r19
 1047c60:	e021883a 	mov	r16,fp
 1047c64:	4027883a 	mov	r19,r8
 1047c68:	b009883a 	mov	r4,r22
 1047c6c:	01400284 	movi	r5,10
 1047c70:	1043d400 	call	1043d40 <__modsi3>
 1047c74:	10800c04 	addi	r2,r2,48
 1047c78:	843fffc4 	addi	r16,r16,-1
 1047c7c:	b009883a 	mov	r4,r22
 1047c80:	01400284 	movi	r5,10
 1047c84:	80800005 	stb	r2,0(r16)
 1047c88:	1043cbc0 	call	1043cbc <__divsi3>
 1047c8c:	102d883a 	mov	r22,r2
 1047c90:	00800244 	movi	r2,9
 1047c94:	15bff416 	blt	r2,r22,1047c68 <__alt_data_end+0xfffc7c68>
 1047c98:	9811883a 	mov	r8,r19
 1047c9c:	b0800c04 	addi	r2,r22,48
 1047ca0:	a027883a 	mov	r19,r20
 1047ca4:	8029883a 	mov	r20,r16
 1047ca8:	a17fffc4 	addi	r5,r20,-1
 1047cac:	a0bfffc5 	stb	r2,-1(r20)
 1047cb0:	dc002917 	ldw	r16,164(sp)
 1047cb4:	2f00752e 	bgeu	r5,fp,1047e8c <___svfprintf_internal_r+0x219c>
 1047cb8:	d9c02384 	addi	r7,sp,142
 1047cbc:	3d0fc83a 	sub	r7,r7,r20
 1047cc0:	d9002344 	addi	r4,sp,141
 1047cc4:	e1cf883a 	add	r7,fp,r7
 1047cc8:	00000106 	br	1047cd0 <___svfprintf_internal_r+0x1fe0>
 1047ccc:	28800003 	ldbu	r2,0(r5)
 1047cd0:	20800005 	stb	r2,0(r4)
 1047cd4:	21000044 	addi	r4,r4,1
 1047cd8:	29400044 	addi	r5,r5,1
 1047cdc:	21fffb1e 	bne	r4,r7,1047ccc <__alt_data_end+0xfffc7ccc>
 1047ce0:	d8802304 	addi	r2,sp,140
 1047ce4:	1505c83a 	sub	r2,r2,r20
 1047ce8:	d8c02344 	addi	r3,sp,141
 1047cec:	1885883a 	add	r2,r3,r2
 1047cf0:	003f7006 	br	1047ab4 <__alt_data_end+0xfffc7ab4>
 1047cf4:	0005883a 	mov	r2,zero
 1047cf8:	003f0b06 	br	1047928 <__alt_data_end+0xfffc7928>
 1047cfc:	d9002917 	ldw	r4,164(sp)
 1047d00:	d8c03217 	ldw	r3,200(sp)
 1047d04:	20800044 	addi	r2,r4,1
 1047d08:	1885883a 	add	r2,r3,r2
 1047d0c:	d8802e15 	stw	r2,184(sp)
 1047d10:	103e870e 	bge	r2,zero,1047730 <__alt_data_end+0xfffc7730>
 1047d14:	0005883a 	mov	r2,zero
 1047d18:	003e8506 	br	1047730 <__alt_data_end+0xfffc7730>
 1047d1c:	01004174 	movhi	r4,261
 1047d20:	211ad184 	addi	r4,r4,27462
 1047d24:	d9002b15 	stw	r4,172(sp)
 1047d28:	003cc506 	br	1047040 <__alt_data_end+0xfffc7040>
 1047d2c:	d8c03217 	ldw	r3,200(sp)
 1047d30:	18c00044 	addi	r3,r3,1
 1047d34:	d8c02e15 	stw	r3,184(sp)
 1047d38:	1805883a 	mov	r2,r3
 1047d3c:	183fa10e 	bge	r3,zero,1047bc4 <__alt_data_end+0xfffc7bc4>
 1047d40:	0005883a 	mov	r2,zero
 1047d44:	003f9f06 	br	1047bc4 <__alt_data_end+0xfffc7bc4>
 1047d48:	d9003617 	ldw	r4,216(sp)
 1047d4c:	000d883a 	mov	r6,zero
 1047d50:	000f883a 	mov	r7,zero
 1047d54:	a00b883a 	mov	r5,r20
 1047d58:	d8c03d15 	stw	r3,244(sp)
 1047d5c:	da003e15 	stw	r8,248(sp)
 1047d60:	104471c0 	call	104471c <__eqdf2>
 1047d64:	d8c03d17 	ldw	r3,244(sp)
 1047d68:	da003e17 	ldw	r8,248(sp)
 1047d6c:	103f8726 	beq	r2,zero,1047b8c <__alt_data_end+0xfffc7b8c>
 1047d70:	00800044 	movi	r2,1
 1047d74:	10c7c83a 	sub	r3,r2,r3
 1047d78:	d8c02615 	stw	r3,152(sp)
 1047d7c:	003f8406 	br	1047b90 <__alt_data_end+0xfffc7b90>
 1047d80:	20000e1e 	bne	r4,zero,1047dbc <___svfprintf_internal_r+0x20cc>
 1047d84:	9480004c 	andi	r18,r18,1
 1047d88:	90000c1e 	bne	r18,zero,1047dbc <___svfprintf_internal_r+0x20cc>
 1047d8c:	00800044 	movi	r2,1
 1047d90:	d8802e15 	stw	r2,184(sp)
 1047d94:	003e6606 	br	1047730 <__alt_data_end+0xfffc7730>
 1047d98:	00800b44 	movi	r2,45
 1047d9c:	05adc83a 	sub	r22,zero,r22
 1047da0:	d8802305 	stb	r2,140(sp)
 1047da4:	003f3b06 	br	1047a94 <__alt_data_end+0xfffc7a94>
 1047da8:	0005883a 	mov	r2,zero
 1047dac:	003f4e06 	br	1047ae8 <__alt_data_end+0xfffc7ae8>
 1047db0:	90a4703a 	and	r18,r18,r2
 1047db4:	903f4a26 	beq	r18,zero,1047ae0 <__alt_data_end+0xfffc7ae0>
 1047db8:	003f4606 	br	1047ad4 <__alt_data_end+0xfffc7ad4>
 1047dbc:	d8c02917 	ldw	r3,164(sp)
 1047dc0:	18c00084 	addi	r3,r3,2
 1047dc4:	d8c02e15 	stw	r3,184(sp)
 1047dc8:	1805883a 	mov	r2,r3
 1047dcc:	183e580e 	bge	r3,zero,1047730 <__alt_data_end+0xfffc7730>
 1047dd0:	003fd006 	br	1047d14 <__alt_data_end+0xfffc7d14>
 1047dd4:	00800084 	movi	r2,2
 1047dd8:	10c5c83a 	sub	r2,r2,r3
 1047ddc:	003f7506 	br	1047bb4 <__alt_data_end+0xfffc7bb4>
 1047de0:	d8802d17 	ldw	r2,180(sp)
 1047de4:	d9002d17 	ldw	r4,180(sp)
 1047de8:	bc400043 	ldbu	r17,1(r23)
 1047dec:	10800017 	ldw	r2,0(r2)
 1047df0:	582f883a 	mov	r23,r11
 1047df4:	d8802915 	stw	r2,164(sp)
 1047df8:	20800104 	addi	r2,r4,4
 1047dfc:	d9002917 	ldw	r4,164(sp)
 1047e00:	d8802d15 	stw	r2,180(sp)
 1047e04:	203df00e 	bge	r4,zero,10475c8 <__alt_data_end+0xfffc75c8>
 1047e08:	8c403fcc 	andi	r17,r17,255
 1047e0c:	00bfffc4 	movi	r2,-1
 1047e10:	8c40201c 	xori	r17,r17,128
 1047e14:	d8802915 	stw	r2,164(sp)
 1047e18:	8c7fe004 	addi	r17,r17,-128
 1047e1c:	00380806 	br	1045e40 <__alt_data_end+0xfffc5e40>
 1047e20:	9080004c 	andi	r2,r18,1
 1047e24:	0039883a 	mov	fp,zero
 1047e28:	10000726 	beq	r2,zero,1047e48 <___svfprintf_internal_r+0x2158>
 1047e2c:	d8c02817 	ldw	r3,160(sp)
 1047e30:	dc001dc4 	addi	r16,sp,119
 1047e34:	00800c04 	movi	r2,48
 1047e38:	1c07c83a 	sub	r3,r3,r16
 1047e3c:	d8801dc5 	stb	r2,119(sp)
 1047e40:	d8c02e15 	stw	r3,184(sp)
 1047e44:	00395206 	br	1046390 <__alt_data_end+0xfffc6390>
 1047e48:	d8002e15 	stw	zero,184(sp)
 1047e4c:	dc001e04 	addi	r16,sp,120
 1047e50:	00394f06 	br	1046390 <__alt_data_end+0xfffc6390>
 1047e54:	0005883a 	mov	r2,zero
 1047e58:	003e3206 	br	1047724 <__alt_data_end+0xfffc7724>
 1047e5c:	dd802617 	ldw	r22,152(sp)
 1047e60:	003f0606 	br	1047a7c <__alt_data_end+0xfffc7a7c>
 1047e64:	d9c02785 	stb	r7,158(sp)
 1047e68:	003a5106 	br	10467b0 <__alt_data_end+0xfffc67b0>
 1047e6c:	d9c02785 	stb	r7,158(sp)
 1047e70:	003a3706 	br	1046750 <__alt_data_end+0xfffc6750>
 1047e74:	0005883a 	mov	r2,zero
 1047e78:	003f5e06 	br	1047bf4 <__alt_data_end+0xfffc7bf4>
 1047e7c:	d9c02785 	stb	r7,158(sp)
 1047e80:	00391706 	br	10462e0 <__alt_data_end+0xfffc62e0>
 1047e84:	d9c02785 	stb	r7,158(sp)
 1047e88:	0038e606 	br	1046224 <__alt_data_end+0xfffc6224>
 1047e8c:	d8802344 	addi	r2,sp,141
 1047e90:	003f0806 	br	1047ab4 <__alt_data_end+0xfffc7ab4>
 1047e94:	d9c02785 	stb	r7,158(sp)
 1047e98:	0038b706 	br	1046178 <__alt_data_end+0xfffc6178>
 1047e9c:	d9c02785 	stb	r7,158(sp)
 1047ea0:	003adc06 	br	1046a14 <__alt_data_end+0xfffc6a14>
 1047ea4:	d9403917 	ldw	r5,228(sp)
 1047ea8:	00800304 	movi	r2,12
 1047eac:	28800015 	stw	r2,0(r5)
 1047eb0:	00bfffc4 	movi	r2,-1
 1047eb4:	00387806 	br	1046098 <__alt_data_end+0xfffc6098>
 1047eb8:	d9c02785 	stb	r7,158(sp)
 1047ebc:	003abf06 	br	10469bc <__alt_data_end+0xfffc69bc>
 1047ec0:	d9c02785 	stb	r7,158(sp)
 1047ec4:	003a9b06 	br	1046934 <__alt_data_end+0xfffc6934>

01047ec8 <___vfprintf_internal_r>:
 1047ec8:	deffb804 	addi	sp,sp,-288
 1047ecc:	dfc04715 	stw	ra,284(sp)
 1047ed0:	ddc04515 	stw	r23,276(sp)
 1047ed4:	dd404315 	stw	r21,268(sp)
 1047ed8:	d9002c15 	stw	r4,176(sp)
 1047edc:	282f883a 	mov	r23,r5
 1047ee0:	302b883a 	mov	r21,r6
 1047ee4:	d9c02d15 	stw	r7,180(sp)
 1047ee8:	df004615 	stw	fp,280(sp)
 1047eec:	dd804415 	stw	r22,272(sp)
 1047ef0:	dd004215 	stw	r20,264(sp)
 1047ef4:	dcc04115 	stw	r19,260(sp)
 1047ef8:	dc804015 	stw	r18,256(sp)
 1047efc:	dc403f15 	stw	r17,252(sp)
 1047f00:	dc003e15 	stw	r16,248(sp)
 1047f04:	104ce040 	call	104ce04 <_localeconv_r>
 1047f08:	10800017 	ldw	r2,0(r2)
 1047f0c:	1009883a 	mov	r4,r2
 1047f10:	d8803415 	stw	r2,208(sp)
 1047f14:	1045c580 	call	1045c58 <strlen>
 1047f18:	d8803715 	stw	r2,220(sp)
 1047f1c:	d8802c17 	ldw	r2,176(sp)
 1047f20:	10000226 	beq	r2,zero,1047f2c <___vfprintf_internal_r+0x64>
 1047f24:	10800e17 	ldw	r2,56(r2)
 1047f28:	1000f926 	beq	r2,zero,1048310 <___vfprintf_internal_r+0x448>
 1047f2c:	b880030b 	ldhu	r2,12(r23)
 1047f30:	10c8000c 	andi	r3,r2,8192
 1047f34:	1800061e 	bne	r3,zero,1047f50 <___vfprintf_internal_r+0x88>
 1047f38:	b9001917 	ldw	r4,100(r23)
 1047f3c:	00f7ffc4 	movi	r3,-8193
 1047f40:	10880014 	ori	r2,r2,8192
 1047f44:	20c6703a 	and	r3,r4,r3
 1047f48:	b880030d 	sth	r2,12(r23)
 1047f4c:	b8c01915 	stw	r3,100(r23)
 1047f50:	10c0020c 	andi	r3,r2,8
 1047f54:	1800c126 	beq	r3,zero,104825c <___vfprintf_internal_r+0x394>
 1047f58:	b8c00417 	ldw	r3,16(r23)
 1047f5c:	1800bf26 	beq	r3,zero,104825c <___vfprintf_internal_r+0x394>
 1047f60:	1080068c 	andi	r2,r2,26
 1047f64:	00c00284 	movi	r3,10
 1047f68:	10c0c426 	beq	r2,r3,104827c <___vfprintf_internal_r+0x3b4>
 1047f6c:	d8c00404 	addi	r3,sp,16
 1047f70:	05004174 	movhi	r20,261
 1047f74:	d9001e04 	addi	r4,sp,120
 1047f78:	a51ad984 	addi	r20,r20,27494
 1047f7c:	d8c01e15 	stw	r3,120(sp)
 1047f80:	d8002015 	stw	zero,128(sp)
 1047f84:	d8001f15 	stw	zero,124(sp)
 1047f88:	d8003315 	stw	zero,204(sp)
 1047f8c:	d8003615 	stw	zero,216(sp)
 1047f90:	d8003815 	stw	zero,224(sp)
 1047f94:	1811883a 	mov	r8,r3
 1047f98:	d8003915 	stw	zero,228(sp)
 1047f9c:	d8003a15 	stw	zero,232(sp)
 1047fa0:	d8002f15 	stw	zero,188(sp)
 1047fa4:	d9002815 	stw	r4,160(sp)
 1047fa8:	a8800007 	ldb	r2,0(r21)
 1047fac:	10027b26 	beq	r2,zero,104899c <___vfprintf_internal_r+0xad4>
 1047fb0:	00c00944 	movi	r3,37
 1047fb4:	a821883a 	mov	r16,r21
 1047fb8:	10c0021e 	bne	r2,r3,1047fc4 <___vfprintf_internal_r+0xfc>
 1047fbc:	00001406 	br	1048010 <___vfprintf_internal_r+0x148>
 1047fc0:	10c00326 	beq	r2,r3,1047fd0 <___vfprintf_internal_r+0x108>
 1047fc4:	84000044 	addi	r16,r16,1
 1047fc8:	80800007 	ldb	r2,0(r16)
 1047fcc:	103ffc1e 	bne	r2,zero,1047fc0 <__alt_data_end+0xfffc7fc0>
 1047fd0:	8563c83a 	sub	r17,r16,r21
 1047fd4:	88000e26 	beq	r17,zero,1048010 <___vfprintf_internal_r+0x148>
 1047fd8:	d8c02017 	ldw	r3,128(sp)
 1047fdc:	d8801f17 	ldw	r2,124(sp)
 1047fe0:	45400015 	stw	r21,0(r8)
 1047fe4:	1c47883a 	add	r3,r3,r17
 1047fe8:	10800044 	addi	r2,r2,1
 1047fec:	d8c02015 	stw	r3,128(sp)
 1047ff0:	44400115 	stw	r17,4(r8)
 1047ff4:	d8801f15 	stw	r2,124(sp)
 1047ff8:	00c001c4 	movi	r3,7
 1047ffc:	1880a716 	blt	r3,r2,104829c <___vfprintf_internal_r+0x3d4>
 1048000:	42000204 	addi	r8,r8,8
 1048004:	d9402f17 	ldw	r5,188(sp)
 1048008:	2c4b883a 	add	r5,r5,r17
 104800c:	d9402f15 	stw	r5,188(sp)
 1048010:	80800007 	ldb	r2,0(r16)
 1048014:	1000a826 	beq	r2,zero,10482b8 <___vfprintf_internal_r+0x3f0>
 1048018:	84400047 	ldb	r17,1(r16)
 104801c:	00bfffc4 	movi	r2,-1
 1048020:	85400044 	addi	r21,r16,1
 1048024:	d8002785 	stb	zero,158(sp)
 1048028:	0007883a 	mov	r3,zero
 104802c:	000f883a 	mov	r7,zero
 1048030:	d8802915 	stw	r2,164(sp)
 1048034:	d8003115 	stw	zero,196(sp)
 1048038:	0025883a 	mov	r18,zero
 104803c:	01401604 	movi	r5,88
 1048040:	01800244 	movi	r6,9
 1048044:	02800a84 	movi	r10,42
 1048048:	02401b04 	movi	r9,108
 104804c:	ad400044 	addi	r21,r21,1
 1048050:	88bff804 	addi	r2,r17,-32
 1048054:	28830436 	bltu	r5,r2,1048c68 <___vfprintf_internal_r+0xda0>
 1048058:	100490ba 	slli	r2,r2,2
 104805c:	01004174 	movhi	r4,261
 1048060:	21201c04 	addi	r4,r4,-32656
 1048064:	1105883a 	add	r2,r2,r4
 1048068:	10800017 	ldw	r2,0(r2)
 104806c:	1000683a 	jmp	r2
 1048070:	01048b88 	cmpgei	r4,zero,4654
 1048074:	01048c68 	cmpgeui	r4,zero,4657
 1048078:	01048c68 	cmpgeui	r4,zero,4657
 104807c:	01048ba8 	cmpgeui	r4,zero,4654
 1048080:	01048c68 	cmpgeui	r4,zero,4657
 1048084:	01048c68 	cmpgeui	r4,zero,4657
 1048088:	01048c68 	cmpgeui	r4,zero,4657
 104808c:	01048c68 	cmpgeui	r4,zero,4657
 1048090:	01048c68 	cmpgeui	r4,zero,4657
 1048094:	01048c68 	cmpgeui	r4,zero,4657
 1048098:	0104831c 	xori	r4,zero,4620
 104809c:	01048ac4 	movi	r4,4651
 10480a0:	01048c68 	cmpgeui	r4,zero,4657
 10480a4:	010481e4 	muli	r4,zero,4615
 10480a8:	01048344 	movi	r4,4621
 10480ac:	01048c68 	cmpgeui	r4,zero,4657
 10480b0:	01048384 	movi	r4,4622
 10480b4:	01048390 	cmplti	r4,zero,4622
 10480b8:	01048390 	cmplti	r4,zero,4622
 10480bc:	01048390 	cmplti	r4,zero,4622
 10480c0:	01048390 	cmplti	r4,zero,4622
 10480c4:	01048390 	cmplti	r4,zero,4622
 10480c8:	01048390 	cmplti	r4,zero,4622
 10480cc:	01048390 	cmplti	r4,zero,4622
 10480d0:	01048390 	cmplti	r4,zero,4622
 10480d4:	01048390 	cmplti	r4,zero,4622
 10480d8:	01048c68 	cmpgeui	r4,zero,4657
 10480dc:	01048c68 	cmpgeui	r4,zero,4657
 10480e0:	01048c68 	cmpgeui	r4,zero,4657
 10480e4:	01048c68 	cmpgeui	r4,zero,4657
 10480e8:	01048c68 	cmpgeui	r4,zero,4657
 10480ec:	01048c68 	cmpgeui	r4,zero,4657
 10480f0:	01048c68 	cmpgeui	r4,zero,4657
 10480f4:	01048c68 	cmpgeui	r4,zero,4657
 10480f8:	01048c68 	cmpgeui	r4,zero,4657
 10480fc:	01048c68 	cmpgeui	r4,zero,4657
 1048100:	010483c4 	movi	r4,4623
 1048104:	01048480 	call	104848 <__alt_mem_onchip_memory2-0xf3b7b8>
 1048108:	01048c68 	cmpgeui	r4,zero,4657
 104810c:	01048480 	call	104848 <__alt_mem_onchip_memory2-0xf3b7b8>
 1048110:	01048c68 	cmpgeui	r4,zero,4657
 1048114:	01048c68 	cmpgeui	r4,zero,4657
 1048118:	01048c68 	cmpgeui	r4,zero,4657
 104811c:	01048c68 	cmpgeui	r4,zero,4657
 1048120:	01048520 	cmpeqi	r4,zero,4628
 1048124:	01048c68 	cmpgeui	r4,zero,4657
 1048128:	01048c68 	cmpgeui	r4,zero,4657
 104812c:	0104852c 	andhi	r4,zero,4628
 1048130:	01048c68 	cmpgeui	r4,zero,4657
 1048134:	01048c68 	cmpgeui	r4,zero,4657
 1048138:	01048c68 	cmpgeui	r4,zero,4657
 104813c:	01048c68 	cmpgeui	r4,zero,4657
 1048140:	01048c68 	cmpgeui	r4,zero,4657
 1048144:	010489a4 	muli	r4,zero,4646
 1048148:	01048c68 	cmpgeui	r4,zero,4657
 104814c:	01048c68 	cmpgeui	r4,zero,4657
 1048150:	01048a04 	movi	r4,4648
 1048154:	01048c68 	cmpgeui	r4,zero,4657
 1048158:	01048c68 	cmpgeui	r4,zero,4657
 104815c:	01048c68 	cmpgeui	r4,zero,4657
 1048160:	01048c68 	cmpgeui	r4,zero,4657
 1048164:	01048c68 	cmpgeui	r4,zero,4657
 1048168:	01048c68 	cmpgeui	r4,zero,4657
 104816c:	01048c68 	cmpgeui	r4,zero,4657
 1048170:	01048c68 	cmpgeui	r4,zero,4657
 1048174:	01048c68 	cmpgeui	r4,zero,4657
 1048178:	01048c68 	cmpgeui	r4,zero,4657
 104817c:	01048c14 	movui	r4,4656
 1048180:	01048bb4 	movhi	r4,4654
 1048184:	01048480 	call	104848 <__alt_mem_onchip_memory2-0xf3b7b8>
 1048188:	01048480 	call	104848 <__alt_mem_onchip_memory2-0xf3b7b8>
 104818c:	01048480 	call	104848 <__alt_mem_onchip_memory2-0xf3b7b8>
 1048190:	01048bc4 	movi	r4,4655
 1048194:	01048bb4 	movhi	r4,4654
 1048198:	01048c68 	cmpgeui	r4,zero,4657
 104819c:	01048c68 	cmpgeui	r4,zero,4657
 10481a0:	01048bd0 	cmplti	r4,zero,4655
 10481a4:	01048c68 	cmpgeui	r4,zero,4657
 10481a8:	01048be0 	cmpeqi	r4,zero,4655
 10481ac:	01048ab4 	movhi	r4,4650
 10481b0:	010481f0 	cmpltui	r4,zero,4615
 10481b4:	01048ad4 	movui	r4,4651
 10481b8:	01048c68 	cmpgeui	r4,zero,4657
 10481bc:	01048ae0 	cmpeqi	r4,zero,4651
 10481c0:	01048c68 	cmpgeui	r4,zero,4657
 10481c4:	01048b3c 	xorhi	r4,zero,4652
 10481c8:	01048c68 	cmpgeui	r4,zero,4657
 10481cc:	01048c68 	cmpgeui	r4,zero,4657
 10481d0:	01048b4c 	andi	r4,zero,4653
 10481d4:	d9003117 	ldw	r4,196(sp)
 10481d8:	d8802d15 	stw	r2,180(sp)
 10481dc:	0109c83a 	sub	r4,zero,r4
 10481e0:	d9003115 	stw	r4,196(sp)
 10481e4:	94800114 	ori	r18,r18,4
 10481e8:	ac400007 	ldb	r17,0(r21)
 10481ec:	003f9706 	br	104804c <__alt_data_end+0xfffc804c>
 10481f0:	00800c04 	movi	r2,48
 10481f4:	d9002d17 	ldw	r4,180(sp)
 10481f8:	d9402917 	ldw	r5,164(sp)
 10481fc:	d8802705 	stb	r2,156(sp)
 1048200:	00801e04 	movi	r2,120
 1048204:	d8802745 	stb	r2,157(sp)
 1048208:	d8002785 	stb	zero,158(sp)
 104820c:	20c00104 	addi	r3,r4,4
 1048210:	24c00017 	ldw	r19,0(r4)
 1048214:	002d883a 	mov	r22,zero
 1048218:	90800094 	ori	r2,r18,2
 104821c:	28029a16 	blt	r5,zero,1048c88 <___vfprintf_internal_r+0xdc0>
 1048220:	00bfdfc4 	movi	r2,-129
 1048224:	90a4703a 	and	r18,r18,r2
 1048228:	d8c02d15 	stw	r3,180(sp)
 104822c:	94800094 	ori	r18,r18,2
 1048230:	9802871e 	bne	r19,zero,1048c50 <___vfprintf_internal_r+0xd88>
 1048234:	00804174 	movhi	r2,261
 1048238:	109aca04 	addi	r2,r2,27432
 104823c:	d8803915 	stw	r2,228(sp)
 1048240:	04401e04 	movi	r17,120
 1048244:	d8802917 	ldw	r2,164(sp)
 1048248:	0039883a 	mov	fp,zero
 104824c:	1001e926 	beq	r2,zero,10489f4 <___vfprintf_internal_r+0xb2c>
 1048250:	0027883a 	mov	r19,zero
 1048254:	002d883a 	mov	r22,zero
 1048258:	00020506 	br	1048a70 <___vfprintf_internal_r+0xba8>
 104825c:	d9002c17 	ldw	r4,176(sp)
 1048260:	b80b883a 	mov	r5,r23
 1048264:	104a2bc0 	call	104a2bc <__swsetup_r>
 1048268:	1005ac1e 	bne	r2,zero,104991c <___vfprintf_internal_r+0x1a54>
 104826c:	b880030b 	ldhu	r2,12(r23)
 1048270:	00c00284 	movi	r3,10
 1048274:	1080068c 	andi	r2,r2,26
 1048278:	10ff3c1e 	bne	r2,r3,1047f6c <__alt_data_end+0xfffc7f6c>
 104827c:	b880038f 	ldh	r2,14(r23)
 1048280:	103f3a16 	blt	r2,zero,1047f6c <__alt_data_end+0xfffc7f6c>
 1048284:	d9c02d17 	ldw	r7,180(sp)
 1048288:	d9002c17 	ldw	r4,176(sp)
 104828c:	a80d883a 	mov	r6,r21
 1048290:	b80b883a 	mov	r5,r23
 1048294:	104a0dc0 	call	104a0dc <__sbprintf>
 1048298:	00001106 	br	10482e0 <___vfprintf_internal_r+0x418>
 104829c:	d9002c17 	ldw	r4,176(sp)
 10482a0:	d9801e04 	addi	r6,sp,120
 10482a4:	b80b883a 	mov	r5,r23
 10482a8:	10509f40 	call	10509f4 <__sprint_r>
 10482ac:	1000081e 	bne	r2,zero,10482d0 <___vfprintf_internal_r+0x408>
 10482b0:	da000404 	addi	r8,sp,16
 10482b4:	003f5306 	br	1048004 <__alt_data_end+0xfffc8004>
 10482b8:	d8802017 	ldw	r2,128(sp)
 10482bc:	10000426 	beq	r2,zero,10482d0 <___vfprintf_internal_r+0x408>
 10482c0:	d9002c17 	ldw	r4,176(sp)
 10482c4:	d9801e04 	addi	r6,sp,120
 10482c8:	b80b883a 	mov	r5,r23
 10482cc:	10509f40 	call	10509f4 <__sprint_r>
 10482d0:	b880030b 	ldhu	r2,12(r23)
 10482d4:	1080100c 	andi	r2,r2,64
 10482d8:	1005901e 	bne	r2,zero,104991c <___vfprintf_internal_r+0x1a54>
 10482dc:	d8802f17 	ldw	r2,188(sp)
 10482e0:	dfc04717 	ldw	ra,284(sp)
 10482e4:	df004617 	ldw	fp,280(sp)
 10482e8:	ddc04517 	ldw	r23,276(sp)
 10482ec:	dd804417 	ldw	r22,272(sp)
 10482f0:	dd404317 	ldw	r21,268(sp)
 10482f4:	dd004217 	ldw	r20,264(sp)
 10482f8:	dcc04117 	ldw	r19,260(sp)
 10482fc:	dc804017 	ldw	r18,256(sp)
 1048300:	dc403f17 	ldw	r17,252(sp)
 1048304:	dc003e17 	ldw	r16,248(sp)
 1048308:	dec04804 	addi	sp,sp,288
 104830c:	f800283a 	ret
 1048310:	d9002c17 	ldw	r4,176(sp)
 1048314:	104c2900 	call	104c290 <__sinit>
 1048318:	003f0406 	br	1047f2c <__alt_data_end+0xfffc7f2c>
 104831c:	d8802d17 	ldw	r2,180(sp)
 1048320:	d9002d17 	ldw	r4,180(sp)
 1048324:	10800017 	ldw	r2,0(r2)
 1048328:	d8803115 	stw	r2,196(sp)
 104832c:	20800104 	addi	r2,r4,4
 1048330:	d9003117 	ldw	r4,196(sp)
 1048334:	203fa716 	blt	r4,zero,10481d4 <__alt_data_end+0xfffc81d4>
 1048338:	d8802d15 	stw	r2,180(sp)
 104833c:	ac400007 	ldb	r17,0(r21)
 1048340:	003f4206 	br	104804c <__alt_data_end+0xfffc804c>
 1048344:	ac400007 	ldb	r17,0(r21)
 1048348:	aac00044 	addi	r11,r21,1
 104834c:	8a872826 	beq	r17,r10,1049ff0 <___vfprintf_internal_r+0x2128>
 1048350:	88bff404 	addi	r2,r17,-48
 1048354:	0009883a 	mov	r4,zero
 1048358:	30867d36 	bltu	r6,r2,1049d50 <___vfprintf_internal_r+0x1e88>
 104835c:	5c400007 	ldb	r17,0(r11)
 1048360:	210002a4 	muli	r4,r4,10
 1048364:	5d400044 	addi	r21,r11,1
 1048368:	a817883a 	mov	r11,r21
 104836c:	2089883a 	add	r4,r4,r2
 1048370:	88bff404 	addi	r2,r17,-48
 1048374:	30bff92e 	bgeu	r6,r2,104835c <__alt_data_end+0xfffc835c>
 1048378:	2005c916 	blt	r4,zero,1049aa0 <___vfprintf_internal_r+0x1bd8>
 104837c:	d9002915 	stw	r4,164(sp)
 1048380:	003f3306 	br	1048050 <__alt_data_end+0xfffc8050>
 1048384:	94802014 	ori	r18,r18,128
 1048388:	ac400007 	ldb	r17,0(r21)
 104838c:	003f2f06 	br	104804c <__alt_data_end+0xfffc804c>
 1048390:	a809883a 	mov	r4,r21
 1048394:	d8003115 	stw	zero,196(sp)
 1048398:	88bff404 	addi	r2,r17,-48
 104839c:	0017883a 	mov	r11,zero
 10483a0:	24400007 	ldb	r17,0(r4)
 10483a4:	5ac002a4 	muli	r11,r11,10
 10483a8:	ad400044 	addi	r21,r21,1
 10483ac:	a809883a 	mov	r4,r21
 10483b0:	12d7883a 	add	r11,r2,r11
 10483b4:	88bff404 	addi	r2,r17,-48
 10483b8:	30bff92e 	bgeu	r6,r2,10483a0 <__alt_data_end+0xfffc83a0>
 10483bc:	dac03115 	stw	r11,196(sp)
 10483c0:	003f2306 	br	1048050 <__alt_data_end+0xfffc8050>
 10483c4:	18c03fcc 	andi	r3,r3,255
 10483c8:	18072b1e 	bne	r3,zero,104a078 <___vfprintf_internal_r+0x21b0>
 10483cc:	94800414 	ori	r18,r18,16
 10483d0:	9080080c 	andi	r2,r18,32
 10483d4:	10037b26 	beq	r2,zero,10491c4 <___vfprintf_internal_r+0x12fc>
 10483d8:	d9402d17 	ldw	r5,180(sp)
 10483dc:	28800117 	ldw	r2,4(r5)
 10483e0:	2cc00017 	ldw	r19,0(r5)
 10483e4:	29400204 	addi	r5,r5,8
 10483e8:	d9402d15 	stw	r5,180(sp)
 10483ec:	102d883a 	mov	r22,r2
 10483f0:	10044b16 	blt	r2,zero,1049520 <___vfprintf_internal_r+0x1658>
 10483f4:	d9402917 	ldw	r5,164(sp)
 10483f8:	df002783 	ldbu	fp,158(sp)
 10483fc:	2803bc16 	blt	r5,zero,10492f0 <___vfprintf_internal_r+0x1428>
 1048400:	00ffdfc4 	movi	r3,-129
 1048404:	9d84b03a 	or	r2,r19,r22
 1048408:	90e4703a 	and	r18,r18,r3
 104840c:	10017726 	beq	r2,zero,10489ec <___vfprintf_internal_r+0xb24>
 1048410:	b0038326 	beq	r22,zero,1049220 <___vfprintf_internal_r+0x1358>
 1048414:	dc402a15 	stw	r17,168(sp)
 1048418:	dc001e04 	addi	r16,sp,120
 104841c:	b023883a 	mov	r17,r22
 1048420:	402d883a 	mov	r22,r8
 1048424:	9809883a 	mov	r4,r19
 1048428:	880b883a 	mov	r5,r17
 104842c:	01800284 	movi	r6,10
 1048430:	000f883a 	mov	r7,zero
 1048434:	1052dec0 	call	1052dec <__umoddi3>
 1048438:	10800c04 	addi	r2,r2,48
 104843c:	843fffc4 	addi	r16,r16,-1
 1048440:	9809883a 	mov	r4,r19
 1048444:	880b883a 	mov	r5,r17
 1048448:	80800005 	stb	r2,0(r16)
 104844c:	01800284 	movi	r6,10
 1048450:	000f883a 	mov	r7,zero
 1048454:	10528740 	call	1052874 <__udivdi3>
 1048458:	1027883a 	mov	r19,r2
 104845c:	10c4b03a 	or	r2,r2,r3
 1048460:	1823883a 	mov	r17,r3
 1048464:	103fef1e 	bne	r2,zero,1048424 <__alt_data_end+0xfffc8424>
 1048468:	d8c02817 	ldw	r3,160(sp)
 104846c:	dc402a17 	ldw	r17,168(sp)
 1048470:	b011883a 	mov	r8,r22
 1048474:	1c07c83a 	sub	r3,r3,r16
 1048478:	d8c02e15 	stw	r3,184(sp)
 104847c:	00005906 	br	10485e4 <___vfprintf_internal_r+0x71c>
 1048480:	18c03fcc 	andi	r3,r3,255
 1048484:	1806fa1e 	bne	r3,zero,104a070 <___vfprintf_internal_r+0x21a8>
 1048488:	9080020c 	andi	r2,r18,8
 104848c:	10048a26 	beq	r2,zero,10496b8 <___vfprintf_internal_r+0x17f0>
 1048490:	d8c02d17 	ldw	r3,180(sp)
 1048494:	d9002d17 	ldw	r4,180(sp)
 1048498:	d9402d17 	ldw	r5,180(sp)
 104849c:	18c00017 	ldw	r3,0(r3)
 10484a0:	21000117 	ldw	r4,4(r4)
 10484a4:	29400204 	addi	r5,r5,8
 10484a8:	d8c03615 	stw	r3,216(sp)
 10484ac:	d9003815 	stw	r4,224(sp)
 10484b0:	d9402d15 	stw	r5,180(sp)
 10484b4:	d9003617 	ldw	r4,216(sp)
 10484b8:	d9403817 	ldw	r5,224(sp)
 10484bc:	da003d15 	stw	r8,244(sp)
 10484c0:	04000044 	movi	r16,1
 10484c4:	104f20c0 	call	104f20c <__fpclassifyd>
 10484c8:	da003d17 	ldw	r8,244(sp)
 10484cc:	14041f1e 	bne	r2,r16,104954c <___vfprintf_internal_r+0x1684>
 10484d0:	d9003617 	ldw	r4,216(sp)
 10484d4:	d9403817 	ldw	r5,224(sp)
 10484d8:	000d883a 	mov	r6,zero
 10484dc:	000f883a 	mov	r7,zero
 10484e0:	1053c0c0 	call	1053c0c <__ledf2>
 10484e4:	da003d17 	ldw	r8,244(sp)
 10484e8:	1005be16 	blt	r2,zero,1049be4 <___vfprintf_internal_r+0x1d1c>
 10484ec:	df002783 	ldbu	fp,158(sp)
 10484f0:	008011c4 	movi	r2,71
 10484f4:	1445330e 	bge	r2,r17,10499c4 <___vfprintf_internal_r+0x1afc>
 10484f8:	04004174 	movhi	r16,261
 10484fc:	841ac204 	addi	r16,r16,27400
 1048500:	00c000c4 	movi	r3,3
 1048504:	00bfdfc4 	movi	r2,-129
 1048508:	d8c02a15 	stw	r3,168(sp)
 104850c:	90a4703a 	and	r18,r18,r2
 1048510:	d8c02e15 	stw	r3,184(sp)
 1048514:	d8002915 	stw	zero,164(sp)
 1048518:	d8003215 	stw	zero,200(sp)
 104851c:	00003706 	br	10485fc <___vfprintf_internal_r+0x734>
 1048520:	94800214 	ori	r18,r18,8
 1048524:	ac400007 	ldb	r17,0(r21)
 1048528:	003ec806 	br	104804c <__alt_data_end+0xfffc804c>
 104852c:	18c03fcc 	andi	r3,r3,255
 1048530:	1806db1e 	bne	r3,zero,104a0a0 <___vfprintf_internal_r+0x21d8>
 1048534:	94800414 	ori	r18,r18,16
 1048538:	9080080c 	andi	r2,r18,32
 104853c:	1002d826 	beq	r2,zero,10490a0 <___vfprintf_internal_r+0x11d8>
 1048540:	d9402d17 	ldw	r5,180(sp)
 1048544:	d8c02917 	ldw	r3,164(sp)
 1048548:	d8002785 	stb	zero,158(sp)
 104854c:	28800204 	addi	r2,r5,8
 1048550:	2cc00017 	ldw	r19,0(r5)
 1048554:	2d800117 	ldw	r22,4(r5)
 1048558:	18048f16 	blt	r3,zero,1049798 <___vfprintf_internal_r+0x18d0>
 104855c:	013fdfc4 	movi	r4,-129
 1048560:	9d86b03a 	or	r3,r19,r22
 1048564:	d8802d15 	stw	r2,180(sp)
 1048568:	9124703a 	and	r18,r18,r4
 104856c:	1802d91e 	bne	r3,zero,10490d4 <___vfprintf_internal_r+0x120c>
 1048570:	d8c02917 	ldw	r3,164(sp)
 1048574:	0039883a 	mov	fp,zero
 1048578:	1805c326 	beq	r3,zero,1049c88 <___vfprintf_internal_r+0x1dc0>
 104857c:	0027883a 	mov	r19,zero
 1048580:	002d883a 	mov	r22,zero
 1048584:	dc001e04 	addi	r16,sp,120
 1048588:	9806d0fa 	srli	r3,r19,3
 104858c:	b008977a 	slli	r4,r22,29
 1048590:	b02cd0fa 	srli	r22,r22,3
 1048594:	9cc001cc 	andi	r19,r19,7
 1048598:	98800c04 	addi	r2,r19,48
 104859c:	843fffc4 	addi	r16,r16,-1
 10485a0:	20e6b03a 	or	r19,r4,r3
 10485a4:	80800005 	stb	r2,0(r16)
 10485a8:	9d86b03a 	or	r3,r19,r22
 10485ac:	183ff61e 	bne	r3,zero,1048588 <__alt_data_end+0xfffc8588>
 10485b0:	90c0004c 	andi	r3,r18,1
 10485b4:	18013b26 	beq	r3,zero,1048aa4 <___vfprintf_internal_r+0xbdc>
 10485b8:	10803fcc 	andi	r2,r2,255
 10485bc:	1080201c 	xori	r2,r2,128
 10485c0:	10bfe004 	addi	r2,r2,-128
 10485c4:	00c00c04 	movi	r3,48
 10485c8:	10c13626 	beq	r2,r3,1048aa4 <___vfprintf_internal_r+0xbdc>
 10485cc:	80ffffc5 	stb	r3,-1(r16)
 10485d0:	d8c02817 	ldw	r3,160(sp)
 10485d4:	80bfffc4 	addi	r2,r16,-1
 10485d8:	1021883a 	mov	r16,r2
 10485dc:	1887c83a 	sub	r3,r3,r2
 10485e0:	d8c02e15 	stw	r3,184(sp)
 10485e4:	d8802e17 	ldw	r2,184(sp)
 10485e8:	d9002917 	ldw	r4,164(sp)
 10485ec:	1100010e 	bge	r2,r4,10485f4 <___vfprintf_internal_r+0x72c>
 10485f0:	2005883a 	mov	r2,r4
 10485f4:	d8802a15 	stw	r2,168(sp)
 10485f8:	d8003215 	stw	zero,200(sp)
 10485fc:	e7003fcc 	andi	fp,fp,255
 1048600:	e700201c 	xori	fp,fp,128
 1048604:	e73fe004 	addi	fp,fp,-128
 1048608:	e0000326 	beq	fp,zero,1048618 <___vfprintf_internal_r+0x750>
 104860c:	d8c02a17 	ldw	r3,168(sp)
 1048610:	18c00044 	addi	r3,r3,1
 1048614:	d8c02a15 	stw	r3,168(sp)
 1048618:	90c0008c 	andi	r3,r18,2
 104861c:	d8c02b15 	stw	r3,172(sp)
 1048620:	18000326 	beq	r3,zero,1048630 <___vfprintf_internal_r+0x768>
 1048624:	d8c02a17 	ldw	r3,168(sp)
 1048628:	18c00084 	addi	r3,r3,2
 104862c:	d8c02a15 	stw	r3,168(sp)
 1048630:	90c0210c 	andi	r3,r18,132
 1048634:	d8c03015 	stw	r3,192(sp)
 1048638:	1801a31e 	bne	r3,zero,1048cc8 <___vfprintf_internal_r+0xe00>
 104863c:	d9003117 	ldw	r4,196(sp)
 1048640:	d8c02a17 	ldw	r3,168(sp)
 1048644:	20e7c83a 	sub	r19,r4,r3
 1048648:	04c19f0e 	bge	zero,r19,1048cc8 <___vfprintf_internal_r+0xe00>
 104864c:	02400404 	movi	r9,16
 1048650:	d8c02017 	ldw	r3,128(sp)
 1048654:	d8801f17 	ldw	r2,124(sp)
 1048658:	4cc50d0e 	bge	r9,r19,1049a90 <___vfprintf_internal_r+0x1bc8>
 104865c:	01404174 	movhi	r5,261
 1048660:	295add84 	addi	r5,r5,27510
 1048664:	dc403b15 	stw	r17,236(sp)
 1048668:	d9403515 	stw	r5,212(sp)
 104866c:	9823883a 	mov	r17,r19
 1048670:	482d883a 	mov	r22,r9
 1048674:	9027883a 	mov	r19,r18
 1048678:	070001c4 	movi	fp,7
 104867c:	8025883a 	mov	r18,r16
 1048680:	dc002c17 	ldw	r16,176(sp)
 1048684:	00000306 	br	1048694 <___vfprintf_internal_r+0x7cc>
 1048688:	8c7ffc04 	addi	r17,r17,-16
 104868c:	42000204 	addi	r8,r8,8
 1048690:	b440130e 	bge	r22,r17,10486e0 <___vfprintf_internal_r+0x818>
 1048694:	01004174 	movhi	r4,261
 1048698:	18c00404 	addi	r3,r3,16
 104869c:	10800044 	addi	r2,r2,1
 10486a0:	211add84 	addi	r4,r4,27510
 10486a4:	41000015 	stw	r4,0(r8)
 10486a8:	45800115 	stw	r22,4(r8)
 10486ac:	d8c02015 	stw	r3,128(sp)
 10486b0:	d8801f15 	stw	r2,124(sp)
 10486b4:	e0bff40e 	bge	fp,r2,1048688 <__alt_data_end+0xfffc8688>
 10486b8:	d9801e04 	addi	r6,sp,120
 10486bc:	b80b883a 	mov	r5,r23
 10486c0:	8009883a 	mov	r4,r16
 10486c4:	10509f40 	call	10509f4 <__sprint_r>
 10486c8:	103f011e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 10486cc:	8c7ffc04 	addi	r17,r17,-16
 10486d0:	d8c02017 	ldw	r3,128(sp)
 10486d4:	d8801f17 	ldw	r2,124(sp)
 10486d8:	da000404 	addi	r8,sp,16
 10486dc:	b47fed16 	blt	r22,r17,1048694 <__alt_data_end+0xfffc8694>
 10486e0:	9021883a 	mov	r16,r18
 10486e4:	9825883a 	mov	r18,r19
 10486e8:	8827883a 	mov	r19,r17
 10486ec:	dc403b17 	ldw	r17,236(sp)
 10486f0:	d9403517 	ldw	r5,212(sp)
 10486f4:	98c7883a 	add	r3,r19,r3
 10486f8:	10800044 	addi	r2,r2,1
 10486fc:	41400015 	stw	r5,0(r8)
 1048700:	44c00115 	stw	r19,4(r8)
 1048704:	d8c02015 	stw	r3,128(sp)
 1048708:	d8801f15 	stw	r2,124(sp)
 104870c:	010001c4 	movi	r4,7
 1048710:	2082a316 	blt	r4,r2,10491a0 <___vfprintf_internal_r+0x12d8>
 1048714:	df002787 	ldb	fp,158(sp)
 1048718:	42000204 	addi	r8,r8,8
 104871c:	e0000c26 	beq	fp,zero,1048750 <___vfprintf_internal_r+0x888>
 1048720:	d8801f17 	ldw	r2,124(sp)
 1048724:	d9002784 	addi	r4,sp,158
 1048728:	18c00044 	addi	r3,r3,1
 104872c:	10800044 	addi	r2,r2,1
 1048730:	41000015 	stw	r4,0(r8)
 1048734:	01000044 	movi	r4,1
 1048738:	41000115 	stw	r4,4(r8)
 104873c:	d8c02015 	stw	r3,128(sp)
 1048740:	d8801f15 	stw	r2,124(sp)
 1048744:	010001c4 	movi	r4,7
 1048748:	20823c16 	blt	r4,r2,104903c <___vfprintf_internal_r+0x1174>
 104874c:	42000204 	addi	r8,r8,8
 1048750:	d8802b17 	ldw	r2,172(sp)
 1048754:	10000c26 	beq	r2,zero,1048788 <___vfprintf_internal_r+0x8c0>
 1048758:	d8801f17 	ldw	r2,124(sp)
 104875c:	d9002704 	addi	r4,sp,156
 1048760:	18c00084 	addi	r3,r3,2
 1048764:	10800044 	addi	r2,r2,1
 1048768:	41000015 	stw	r4,0(r8)
 104876c:	01000084 	movi	r4,2
 1048770:	41000115 	stw	r4,4(r8)
 1048774:	d8c02015 	stw	r3,128(sp)
 1048778:	d8801f15 	stw	r2,124(sp)
 104877c:	010001c4 	movi	r4,7
 1048780:	20823616 	blt	r4,r2,104905c <___vfprintf_internal_r+0x1194>
 1048784:	42000204 	addi	r8,r8,8
 1048788:	d9003017 	ldw	r4,192(sp)
 104878c:	00802004 	movi	r2,128
 1048790:	20819926 	beq	r4,r2,1048df8 <___vfprintf_internal_r+0xf30>
 1048794:	d9402917 	ldw	r5,164(sp)
 1048798:	d8802e17 	ldw	r2,184(sp)
 104879c:	28adc83a 	sub	r22,r5,r2
 10487a0:	0580310e 	bge	zero,r22,1048868 <___vfprintf_internal_r+0x9a0>
 10487a4:	07000404 	movi	fp,16
 10487a8:	d8801f17 	ldw	r2,124(sp)
 10487ac:	e584140e 	bge	fp,r22,1049800 <___vfprintf_internal_r+0x1938>
 10487b0:	01404174 	movhi	r5,261
 10487b4:	295ad984 	addi	r5,r5,27494
 10487b8:	dc402915 	stw	r17,164(sp)
 10487bc:	d9402b15 	stw	r5,172(sp)
 10487c0:	b023883a 	mov	r17,r22
 10487c4:	04c001c4 	movi	r19,7
 10487c8:	a82d883a 	mov	r22,r21
 10487cc:	902b883a 	mov	r21,r18
 10487d0:	8025883a 	mov	r18,r16
 10487d4:	dc002c17 	ldw	r16,176(sp)
 10487d8:	00000306 	br	10487e8 <___vfprintf_internal_r+0x920>
 10487dc:	8c7ffc04 	addi	r17,r17,-16
 10487e0:	42000204 	addi	r8,r8,8
 10487e4:	e440110e 	bge	fp,r17,104882c <___vfprintf_internal_r+0x964>
 10487e8:	18c00404 	addi	r3,r3,16
 10487ec:	10800044 	addi	r2,r2,1
 10487f0:	45000015 	stw	r20,0(r8)
 10487f4:	47000115 	stw	fp,4(r8)
 10487f8:	d8c02015 	stw	r3,128(sp)
 10487fc:	d8801f15 	stw	r2,124(sp)
 1048800:	98bff60e 	bge	r19,r2,10487dc <__alt_data_end+0xfffc87dc>
 1048804:	d9801e04 	addi	r6,sp,120
 1048808:	b80b883a 	mov	r5,r23
 104880c:	8009883a 	mov	r4,r16
 1048810:	10509f40 	call	10509f4 <__sprint_r>
 1048814:	103eae1e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 1048818:	8c7ffc04 	addi	r17,r17,-16
 104881c:	d8c02017 	ldw	r3,128(sp)
 1048820:	d8801f17 	ldw	r2,124(sp)
 1048824:	da000404 	addi	r8,sp,16
 1048828:	e47fef16 	blt	fp,r17,10487e8 <__alt_data_end+0xfffc87e8>
 104882c:	9021883a 	mov	r16,r18
 1048830:	a825883a 	mov	r18,r21
 1048834:	b02b883a 	mov	r21,r22
 1048838:	882d883a 	mov	r22,r17
 104883c:	dc402917 	ldw	r17,164(sp)
 1048840:	d9002b17 	ldw	r4,172(sp)
 1048844:	1d87883a 	add	r3,r3,r22
 1048848:	10800044 	addi	r2,r2,1
 104884c:	41000015 	stw	r4,0(r8)
 1048850:	45800115 	stw	r22,4(r8)
 1048854:	d8c02015 	stw	r3,128(sp)
 1048858:	d8801f15 	stw	r2,124(sp)
 104885c:	010001c4 	movi	r4,7
 1048860:	2081ee16 	blt	r4,r2,104901c <___vfprintf_internal_r+0x1154>
 1048864:	42000204 	addi	r8,r8,8
 1048868:	9080400c 	andi	r2,r18,256
 104886c:	1001181e 	bne	r2,zero,1048cd0 <___vfprintf_internal_r+0xe08>
 1048870:	d9402e17 	ldw	r5,184(sp)
 1048874:	d8801f17 	ldw	r2,124(sp)
 1048878:	44000015 	stw	r16,0(r8)
 104887c:	1947883a 	add	r3,r3,r5
 1048880:	10800044 	addi	r2,r2,1
 1048884:	41400115 	stw	r5,4(r8)
 1048888:	d8c02015 	stw	r3,128(sp)
 104888c:	d8801f15 	stw	r2,124(sp)
 1048890:	010001c4 	movi	r4,7
 1048894:	2081d316 	blt	r4,r2,1048fe4 <___vfprintf_internal_r+0x111c>
 1048898:	42000204 	addi	r8,r8,8
 104889c:	9480010c 	andi	r18,r18,4
 10488a0:	90003226 	beq	r18,zero,104896c <___vfprintf_internal_r+0xaa4>
 10488a4:	d9403117 	ldw	r5,196(sp)
 10488a8:	d8802a17 	ldw	r2,168(sp)
 10488ac:	28a1c83a 	sub	r16,r5,r2
 10488b0:	04002e0e 	bge	zero,r16,104896c <___vfprintf_internal_r+0xaa4>
 10488b4:	04400404 	movi	r17,16
 10488b8:	d8801f17 	ldw	r2,124(sp)
 10488bc:	8c04a20e 	bge	r17,r16,1049b48 <___vfprintf_internal_r+0x1c80>
 10488c0:	01404174 	movhi	r5,261
 10488c4:	295add84 	addi	r5,r5,27510
 10488c8:	d9403515 	stw	r5,212(sp)
 10488cc:	048001c4 	movi	r18,7
 10488d0:	dcc02c17 	ldw	r19,176(sp)
 10488d4:	00000306 	br	10488e4 <___vfprintf_internal_r+0xa1c>
 10488d8:	843ffc04 	addi	r16,r16,-16
 10488dc:	42000204 	addi	r8,r8,8
 10488e0:	8c00130e 	bge	r17,r16,1048930 <___vfprintf_internal_r+0xa68>
 10488e4:	01004174 	movhi	r4,261
 10488e8:	18c00404 	addi	r3,r3,16
 10488ec:	10800044 	addi	r2,r2,1
 10488f0:	211add84 	addi	r4,r4,27510
 10488f4:	41000015 	stw	r4,0(r8)
 10488f8:	44400115 	stw	r17,4(r8)
 10488fc:	d8c02015 	stw	r3,128(sp)
 1048900:	d8801f15 	stw	r2,124(sp)
 1048904:	90bff40e 	bge	r18,r2,10488d8 <__alt_data_end+0xfffc88d8>
 1048908:	d9801e04 	addi	r6,sp,120
 104890c:	b80b883a 	mov	r5,r23
 1048910:	9809883a 	mov	r4,r19
 1048914:	10509f40 	call	10509f4 <__sprint_r>
 1048918:	103e6d1e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 104891c:	843ffc04 	addi	r16,r16,-16
 1048920:	d8c02017 	ldw	r3,128(sp)
 1048924:	d8801f17 	ldw	r2,124(sp)
 1048928:	da000404 	addi	r8,sp,16
 104892c:	8c3fed16 	blt	r17,r16,10488e4 <__alt_data_end+0xfffc88e4>
 1048930:	d9403517 	ldw	r5,212(sp)
 1048934:	1c07883a 	add	r3,r3,r16
 1048938:	10800044 	addi	r2,r2,1
 104893c:	41400015 	stw	r5,0(r8)
 1048940:	44000115 	stw	r16,4(r8)
 1048944:	d8c02015 	stw	r3,128(sp)
 1048948:	d8801f15 	stw	r2,124(sp)
 104894c:	010001c4 	movi	r4,7
 1048950:	2080060e 	bge	r4,r2,104896c <___vfprintf_internal_r+0xaa4>
 1048954:	d9002c17 	ldw	r4,176(sp)
 1048958:	d9801e04 	addi	r6,sp,120
 104895c:	b80b883a 	mov	r5,r23
 1048960:	10509f40 	call	10509f4 <__sprint_r>
 1048964:	103e5a1e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 1048968:	d8c02017 	ldw	r3,128(sp)
 104896c:	d8803117 	ldw	r2,196(sp)
 1048970:	d9002a17 	ldw	r4,168(sp)
 1048974:	1100010e 	bge	r2,r4,104897c <___vfprintf_internal_r+0xab4>
 1048978:	2005883a 	mov	r2,r4
 104897c:	d9402f17 	ldw	r5,188(sp)
 1048980:	288b883a 	add	r5,r5,r2
 1048984:	d9402f15 	stw	r5,188(sp)
 1048988:	18019e1e 	bne	r3,zero,1049004 <___vfprintf_internal_r+0x113c>
 104898c:	a8800007 	ldb	r2,0(r21)
 1048990:	d8001f15 	stw	zero,124(sp)
 1048994:	da000404 	addi	r8,sp,16
 1048998:	103d851e 	bne	r2,zero,1047fb0 <__alt_data_end+0xfffc7fb0>
 104899c:	a821883a 	mov	r16,r21
 10489a0:	003d9b06 	br	1048010 <__alt_data_end+0xfffc8010>
 10489a4:	18c03fcc 	andi	r3,r3,255
 10489a8:	1805c11e 	bne	r3,zero,104a0b0 <___vfprintf_internal_r+0x21e8>
 10489ac:	94800414 	ori	r18,r18,16
 10489b0:	9080080c 	andi	r2,r18,32
 10489b4:	10020c26 	beq	r2,zero,10491e8 <___vfprintf_internal_r+0x1320>
 10489b8:	d8802d17 	ldw	r2,180(sp)
 10489bc:	d9002917 	ldw	r4,164(sp)
 10489c0:	d8002785 	stb	zero,158(sp)
 10489c4:	10c00204 	addi	r3,r2,8
 10489c8:	14c00017 	ldw	r19,0(r2)
 10489cc:	15800117 	ldw	r22,4(r2)
 10489d0:	20040f16 	blt	r4,zero,1049a10 <___vfprintf_internal_r+0x1b48>
 10489d4:	013fdfc4 	movi	r4,-129
 10489d8:	9d84b03a 	or	r2,r19,r22
 10489dc:	d8c02d15 	stw	r3,180(sp)
 10489e0:	9124703a 	and	r18,r18,r4
 10489e4:	0039883a 	mov	fp,zero
 10489e8:	103e891e 	bne	r2,zero,1048410 <__alt_data_end+0xfffc8410>
 10489ec:	d9002917 	ldw	r4,164(sp)
 10489f0:	2002c11e 	bne	r4,zero,10494f8 <___vfprintf_internal_r+0x1630>
 10489f4:	d8002915 	stw	zero,164(sp)
 10489f8:	d8002e15 	stw	zero,184(sp)
 10489fc:	dc001e04 	addi	r16,sp,120
 1048a00:	003ef806 	br	10485e4 <__alt_data_end+0xfffc85e4>
 1048a04:	18c03fcc 	andi	r3,r3,255
 1048a08:	18059d1e 	bne	r3,zero,104a080 <___vfprintf_internal_r+0x21b8>
 1048a0c:	01404174 	movhi	r5,261
 1048a10:	295ac504 	addi	r5,r5,27412
 1048a14:	d9403915 	stw	r5,228(sp)
 1048a18:	9080080c 	andi	r2,r18,32
 1048a1c:	10005226 	beq	r2,zero,1048b68 <___vfprintf_internal_r+0xca0>
 1048a20:	d8802d17 	ldw	r2,180(sp)
 1048a24:	14c00017 	ldw	r19,0(r2)
 1048a28:	15800117 	ldw	r22,4(r2)
 1048a2c:	10800204 	addi	r2,r2,8
 1048a30:	d8802d15 	stw	r2,180(sp)
 1048a34:	9080004c 	andi	r2,r18,1
 1048a38:	10019026 	beq	r2,zero,104907c <___vfprintf_internal_r+0x11b4>
 1048a3c:	9d84b03a 	or	r2,r19,r22
 1048a40:	10036926 	beq	r2,zero,10497e8 <___vfprintf_internal_r+0x1920>
 1048a44:	d8c02917 	ldw	r3,164(sp)
 1048a48:	00800c04 	movi	r2,48
 1048a4c:	d8802705 	stb	r2,156(sp)
 1048a50:	dc402745 	stb	r17,157(sp)
 1048a54:	d8002785 	stb	zero,158(sp)
 1048a58:	90800094 	ori	r2,r18,2
 1048a5c:	18045d16 	blt	r3,zero,1049bd4 <___vfprintf_internal_r+0x1d0c>
 1048a60:	00bfdfc4 	movi	r2,-129
 1048a64:	90a4703a 	and	r18,r18,r2
 1048a68:	94800094 	ori	r18,r18,2
 1048a6c:	0039883a 	mov	fp,zero
 1048a70:	d9003917 	ldw	r4,228(sp)
 1048a74:	dc001e04 	addi	r16,sp,120
 1048a78:	988003cc 	andi	r2,r19,15
 1048a7c:	b006973a 	slli	r3,r22,28
 1048a80:	2085883a 	add	r2,r4,r2
 1048a84:	9826d13a 	srli	r19,r19,4
 1048a88:	10800003 	ldbu	r2,0(r2)
 1048a8c:	b02cd13a 	srli	r22,r22,4
 1048a90:	843fffc4 	addi	r16,r16,-1
 1048a94:	1ce6b03a 	or	r19,r3,r19
 1048a98:	80800005 	stb	r2,0(r16)
 1048a9c:	9d84b03a 	or	r2,r19,r22
 1048aa0:	103ff51e 	bne	r2,zero,1048a78 <__alt_data_end+0xfffc8a78>
 1048aa4:	d8c02817 	ldw	r3,160(sp)
 1048aa8:	1c07c83a 	sub	r3,r3,r16
 1048aac:	d8c02e15 	stw	r3,184(sp)
 1048ab0:	003ecc06 	br	10485e4 <__alt_data_end+0xfffc85e4>
 1048ab4:	18c03fcc 	andi	r3,r3,255
 1048ab8:	183e9f26 	beq	r3,zero,1048538 <__alt_data_end+0xfffc8538>
 1048abc:	d9c02785 	stb	r7,158(sp)
 1048ac0:	003e9d06 	br	1048538 <__alt_data_end+0xfffc8538>
 1048ac4:	00c00044 	movi	r3,1
 1048ac8:	01c00ac4 	movi	r7,43
 1048acc:	ac400007 	ldb	r17,0(r21)
 1048ad0:	003d5e06 	br	104804c <__alt_data_end+0xfffc804c>
 1048ad4:	94800814 	ori	r18,r18,32
 1048ad8:	ac400007 	ldb	r17,0(r21)
 1048adc:	003d5b06 	br	104804c <__alt_data_end+0xfffc804c>
 1048ae0:	d8c02d17 	ldw	r3,180(sp)
 1048ae4:	d8002785 	stb	zero,158(sp)
 1048ae8:	1c000017 	ldw	r16,0(r3)
 1048aec:	1cc00104 	addi	r19,r3,4
 1048af0:	80041926 	beq	r16,zero,1049b58 <___vfprintf_internal_r+0x1c90>
 1048af4:	d9002917 	ldw	r4,164(sp)
 1048af8:	2003d016 	blt	r4,zero,1049a3c <___vfprintf_internal_r+0x1b74>
 1048afc:	200d883a 	mov	r6,r4
 1048b00:	000b883a 	mov	r5,zero
 1048b04:	8009883a 	mov	r4,r16
 1048b08:	da003d15 	stw	r8,244(sp)
 1048b0c:	104d7fc0 	call	104d7fc <memchr>
 1048b10:	da003d17 	ldw	r8,244(sp)
 1048b14:	10045426 	beq	r2,zero,1049c68 <___vfprintf_internal_r+0x1da0>
 1048b18:	1405c83a 	sub	r2,r2,r16
 1048b1c:	d8802e15 	stw	r2,184(sp)
 1048b20:	1003cc16 	blt	r2,zero,1049a54 <___vfprintf_internal_r+0x1b8c>
 1048b24:	df002783 	ldbu	fp,158(sp)
 1048b28:	d8802a15 	stw	r2,168(sp)
 1048b2c:	dcc02d15 	stw	r19,180(sp)
 1048b30:	d8002915 	stw	zero,164(sp)
 1048b34:	d8003215 	stw	zero,200(sp)
 1048b38:	003eb006 	br	10485fc <__alt_data_end+0xfffc85fc>
 1048b3c:	18c03fcc 	andi	r3,r3,255
 1048b40:	183f9b26 	beq	r3,zero,10489b0 <__alt_data_end+0xfffc89b0>
 1048b44:	d9c02785 	stb	r7,158(sp)
 1048b48:	003f9906 	br	10489b0 <__alt_data_end+0xfffc89b0>
 1048b4c:	18c03fcc 	andi	r3,r3,255
 1048b50:	1805551e 	bne	r3,zero,104a0a8 <___vfprintf_internal_r+0x21e0>
 1048b54:	01404174 	movhi	r5,261
 1048b58:	295aca04 	addi	r5,r5,27432
 1048b5c:	d9403915 	stw	r5,228(sp)
 1048b60:	9080080c 	andi	r2,r18,32
 1048b64:	103fae1e 	bne	r2,zero,1048a20 <__alt_data_end+0xfffc8a20>
 1048b68:	9080040c 	andi	r2,r18,16
 1048b6c:	1002de26 	beq	r2,zero,10496e8 <___vfprintf_internal_r+0x1820>
 1048b70:	d8c02d17 	ldw	r3,180(sp)
 1048b74:	002d883a 	mov	r22,zero
 1048b78:	1cc00017 	ldw	r19,0(r3)
 1048b7c:	18c00104 	addi	r3,r3,4
 1048b80:	d8c02d15 	stw	r3,180(sp)
 1048b84:	003fab06 	br	1048a34 <__alt_data_end+0xfffc8a34>
 1048b88:	38803fcc 	andi	r2,r7,255
 1048b8c:	1080201c 	xori	r2,r2,128
 1048b90:	10bfe004 	addi	r2,r2,-128
 1048b94:	1002d21e 	bne	r2,zero,10496e0 <___vfprintf_internal_r+0x1818>
 1048b98:	00c00044 	movi	r3,1
 1048b9c:	01c00804 	movi	r7,32
 1048ba0:	ac400007 	ldb	r17,0(r21)
 1048ba4:	003d2906 	br	104804c <__alt_data_end+0xfffc804c>
 1048ba8:	94800054 	ori	r18,r18,1
 1048bac:	ac400007 	ldb	r17,0(r21)
 1048bb0:	003d2606 	br	104804c <__alt_data_end+0xfffc804c>
 1048bb4:	18c03fcc 	andi	r3,r3,255
 1048bb8:	183e0526 	beq	r3,zero,10483d0 <__alt_data_end+0xfffc83d0>
 1048bbc:	d9c02785 	stb	r7,158(sp)
 1048bc0:	003e0306 	br	10483d0 <__alt_data_end+0xfffc83d0>
 1048bc4:	94801014 	ori	r18,r18,64
 1048bc8:	ac400007 	ldb	r17,0(r21)
 1048bcc:	003d1f06 	br	104804c <__alt_data_end+0xfffc804c>
 1048bd0:	ac400007 	ldb	r17,0(r21)
 1048bd4:	8a438726 	beq	r17,r9,10499f4 <___vfprintf_internal_r+0x1b2c>
 1048bd8:	94800414 	ori	r18,r18,16
 1048bdc:	003d1b06 	br	104804c <__alt_data_end+0xfffc804c>
 1048be0:	18c03fcc 	andi	r3,r3,255
 1048be4:	1805341e 	bne	r3,zero,104a0b8 <___vfprintf_internal_r+0x21f0>
 1048be8:	9080080c 	andi	r2,r18,32
 1048bec:	1002cd26 	beq	r2,zero,1049724 <___vfprintf_internal_r+0x185c>
 1048bf0:	d9402d17 	ldw	r5,180(sp)
 1048bf4:	d9002f17 	ldw	r4,188(sp)
 1048bf8:	28800017 	ldw	r2,0(r5)
 1048bfc:	2007d7fa 	srai	r3,r4,31
 1048c00:	29400104 	addi	r5,r5,4
 1048c04:	d9402d15 	stw	r5,180(sp)
 1048c08:	11000015 	stw	r4,0(r2)
 1048c0c:	10c00115 	stw	r3,4(r2)
 1048c10:	003ce506 	br	1047fa8 <__alt_data_end+0xfffc7fa8>
 1048c14:	d8c02d17 	ldw	r3,180(sp)
 1048c18:	d9002d17 	ldw	r4,180(sp)
 1048c1c:	d8002785 	stb	zero,158(sp)
 1048c20:	18800017 	ldw	r2,0(r3)
 1048c24:	21000104 	addi	r4,r4,4
 1048c28:	00c00044 	movi	r3,1
 1048c2c:	d8c02a15 	stw	r3,168(sp)
 1048c30:	d8801405 	stb	r2,80(sp)
 1048c34:	d9002d15 	stw	r4,180(sp)
 1048c38:	d8c02e15 	stw	r3,184(sp)
 1048c3c:	d8002915 	stw	zero,164(sp)
 1048c40:	d8003215 	stw	zero,200(sp)
 1048c44:	dc001404 	addi	r16,sp,80
 1048c48:	0039883a 	mov	fp,zero
 1048c4c:	003e7206 	br	1048618 <__alt_data_end+0xfffc8618>
 1048c50:	01004174 	movhi	r4,261
 1048c54:	211aca04 	addi	r4,r4,27432
 1048c58:	0039883a 	mov	fp,zero
 1048c5c:	d9003915 	stw	r4,228(sp)
 1048c60:	04401e04 	movi	r17,120
 1048c64:	003f8206 	br	1048a70 <__alt_data_end+0xfffc8a70>
 1048c68:	18c03fcc 	andi	r3,r3,255
 1048c6c:	1805061e 	bne	r3,zero,104a088 <___vfprintf_internal_r+0x21c0>
 1048c70:	883d9126 	beq	r17,zero,10482b8 <__alt_data_end+0xfffc82b8>
 1048c74:	00c00044 	movi	r3,1
 1048c78:	d8c02a15 	stw	r3,168(sp)
 1048c7c:	dc401405 	stb	r17,80(sp)
 1048c80:	d8002785 	stb	zero,158(sp)
 1048c84:	003fec06 	br	1048c38 <__alt_data_end+0xfffc8c38>
 1048c88:	01404174 	movhi	r5,261
 1048c8c:	295aca04 	addi	r5,r5,27432
 1048c90:	d9403915 	stw	r5,228(sp)
 1048c94:	d8c02d15 	stw	r3,180(sp)
 1048c98:	1025883a 	mov	r18,r2
 1048c9c:	04401e04 	movi	r17,120
 1048ca0:	9d84b03a 	or	r2,r19,r22
 1048ca4:	1000fc1e 	bne	r2,zero,1049098 <___vfprintf_internal_r+0x11d0>
 1048ca8:	0039883a 	mov	fp,zero
 1048cac:	00800084 	movi	r2,2
 1048cb0:	10803fcc 	andi	r2,r2,255
 1048cb4:	00c00044 	movi	r3,1
 1048cb8:	10c20f26 	beq	r2,r3,10494f8 <___vfprintf_internal_r+0x1630>
 1048cbc:	00c00084 	movi	r3,2
 1048cc0:	10fd6326 	beq	r2,r3,1048250 <__alt_data_end+0xfffc8250>
 1048cc4:	003e2d06 	br	104857c <__alt_data_end+0xfffc857c>
 1048cc8:	d8c02017 	ldw	r3,128(sp)
 1048ccc:	003e9306 	br	104871c <__alt_data_end+0xfffc871c>
 1048cd0:	00801944 	movi	r2,101
 1048cd4:	14407e0e 	bge	r2,r17,1048ed0 <___vfprintf_internal_r+0x1008>
 1048cd8:	d9003617 	ldw	r4,216(sp)
 1048cdc:	d9403817 	ldw	r5,224(sp)
 1048ce0:	000d883a 	mov	r6,zero
 1048ce4:	000f883a 	mov	r7,zero
 1048ce8:	d8c03c15 	stw	r3,240(sp)
 1048cec:	da003d15 	stw	r8,244(sp)
 1048cf0:	104471c0 	call	104471c <__eqdf2>
 1048cf4:	d8c03c17 	ldw	r3,240(sp)
 1048cf8:	da003d17 	ldw	r8,244(sp)
 1048cfc:	1000f71e 	bne	r2,zero,10490dc <___vfprintf_internal_r+0x1214>
 1048d00:	d8801f17 	ldw	r2,124(sp)
 1048d04:	01004174 	movhi	r4,261
 1048d08:	211ad104 	addi	r4,r4,27460
 1048d0c:	18c00044 	addi	r3,r3,1
 1048d10:	10800044 	addi	r2,r2,1
 1048d14:	41000015 	stw	r4,0(r8)
 1048d18:	01000044 	movi	r4,1
 1048d1c:	41000115 	stw	r4,4(r8)
 1048d20:	d8c02015 	stw	r3,128(sp)
 1048d24:	d8801f15 	stw	r2,124(sp)
 1048d28:	010001c4 	movi	r4,7
 1048d2c:	2082b816 	blt	r4,r2,1049810 <___vfprintf_internal_r+0x1948>
 1048d30:	42000204 	addi	r8,r8,8
 1048d34:	d8802617 	ldw	r2,152(sp)
 1048d38:	d9403317 	ldw	r5,204(sp)
 1048d3c:	11400216 	blt	r2,r5,1048d48 <___vfprintf_internal_r+0xe80>
 1048d40:	9080004c 	andi	r2,r18,1
 1048d44:	103ed526 	beq	r2,zero,104889c <__alt_data_end+0xfffc889c>
 1048d48:	d8803717 	ldw	r2,220(sp)
 1048d4c:	d9003417 	ldw	r4,208(sp)
 1048d50:	d9403717 	ldw	r5,220(sp)
 1048d54:	1887883a 	add	r3,r3,r2
 1048d58:	d8801f17 	ldw	r2,124(sp)
 1048d5c:	41000015 	stw	r4,0(r8)
 1048d60:	41400115 	stw	r5,4(r8)
 1048d64:	10800044 	addi	r2,r2,1
 1048d68:	d8c02015 	stw	r3,128(sp)
 1048d6c:	d8801f15 	stw	r2,124(sp)
 1048d70:	010001c4 	movi	r4,7
 1048d74:	20832916 	blt	r4,r2,1049a1c <___vfprintf_internal_r+0x1b54>
 1048d78:	42000204 	addi	r8,r8,8
 1048d7c:	d8803317 	ldw	r2,204(sp)
 1048d80:	143fffc4 	addi	r16,r2,-1
 1048d84:	043ec50e 	bge	zero,r16,104889c <__alt_data_end+0xfffc889c>
 1048d88:	04400404 	movi	r17,16
 1048d8c:	d8801f17 	ldw	r2,124(sp)
 1048d90:	8c00880e 	bge	r17,r16,1048fb4 <___vfprintf_internal_r+0x10ec>
 1048d94:	01404174 	movhi	r5,261
 1048d98:	295ad984 	addi	r5,r5,27494
 1048d9c:	d9402b15 	stw	r5,172(sp)
 1048da0:	058001c4 	movi	r22,7
 1048da4:	dcc02c17 	ldw	r19,176(sp)
 1048da8:	00000306 	br	1048db8 <___vfprintf_internal_r+0xef0>
 1048dac:	42000204 	addi	r8,r8,8
 1048db0:	843ffc04 	addi	r16,r16,-16
 1048db4:	8c00820e 	bge	r17,r16,1048fc0 <___vfprintf_internal_r+0x10f8>
 1048db8:	18c00404 	addi	r3,r3,16
 1048dbc:	10800044 	addi	r2,r2,1
 1048dc0:	45000015 	stw	r20,0(r8)
 1048dc4:	44400115 	stw	r17,4(r8)
 1048dc8:	d8c02015 	stw	r3,128(sp)
 1048dcc:	d8801f15 	stw	r2,124(sp)
 1048dd0:	b0bff60e 	bge	r22,r2,1048dac <__alt_data_end+0xfffc8dac>
 1048dd4:	d9801e04 	addi	r6,sp,120
 1048dd8:	b80b883a 	mov	r5,r23
 1048ddc:	9809883a 	mov	r4,r19
 1048de0:	10509f40 	call	10509f4 <__sprint_r>
 1048de4:	103d3a1e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 1048de8:	d8c02017 	ldw	r3,128(sp)
 1048dec:	d8801f17 	ldw	r2,124(sp)
 1048df0:	da000404 	addi	r8,sp,16
 1048df4:	003fee06 	br	1048db0 <__alt_data_end+0xfffc8db0>
 1048df8:	d9403117 	ldw	r5,196(sp)
 1048dfc:	d8802a17 	ldw	r2,168(sp)
 1048e00:	28adc83a 	sub	r22,r5,r2
 1048e04:	05be630e 	bge	zero,r22,1048794 <__alt_data_end+0xfffc8794>
 1048e08:	07000404 	movi	fp,16
 1048e0c:	d8801f17 	ldw	r2,124(sp)
 1048e10:	e5838f0e 	bge	fp,r22,1049c50 <___vfprintf_internal_r+0x1d88>
 1048e14:	01404174 	movhi	r5,261
 1048e18:	295ad984 	addi	r5,r5,27494
 1048e1c:	dc403015 	stw	r17,192(sp)
 1048e20:	d9402b15 	stw	r5,172(sp)
 1048e24:	b023883a 	mov	r17,r22
 1048e28:	04c001c4 	movi	r19,7
 1048e2c:	a82d883a 	mov	r22,r21
 1048e30:	902b883a 	mov	r21,r18
 1048e34:	8025883a 	mov	r18,r16
 1048e38:	dc002c17 	ldw	r16,176(sp)
 1048e3c:	00000306 	br	1048e4c <___vfprintf_internal_r+0xf84>
 1048e40:	8c7ffc04 	addi	r17,r17,-16
 1048e44:	42000204 	addi	r8,r8,8
 1048e48:	e440110e 	bge	fp,r17,1048e90 <___vfprintf_internal_r+0xfc8>
 1048e4c:	18c00404 	addi	r3,r3,16
 1048e50:	10800044 	addi	r2,r2,1
 1048e54:	45000015 	stw	r20,0(r8)
 1048e58:	47000115 	stw	fp,4(r8)
 1048e5c:	d8c02015 	stw	r3,128(sp)
 1048e60:	d8801f15 	stw	r2,124(sp)
 1048e64:	98bff60e 	bge	r19,r2,1048e40 <__alt_data_end+0xfffc8e40>
 1048e68:	d9801e04 	addi	r6,sp,120
 1048e6c:	b80b883a 	mov	r5,r23
 1048e70:	8009883a 	mov	r4,r16
 1048e74:	10509f40 	call	10509f4 <__sprint_r>
 1048e78:	103d151e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 1048e7c:	8c7ffc04 	addi	r17,r17,-16
 1048e80:	d8c02017 	ldw	r3,128(sp)
 1048e84:	d8801f17 	ldw	r2,124(sp)
 1048e88:	da000404 	addi	r8,sp,16
 1048e8c:	e47fef16 	blt	fp,r17,1048e4c <__alt_data_end+0xfffc8e4c>
 1048e90:	9021883a 	mov	r16,r18
 1048e94:	a825883a 	mov	r18,r21
 1048e98:	b02b883a 	mov	r21,r22
 1048e9c:	882d883a 	mov	r22,r17
 1048ea0:	dc403017 	ldw	r17,192(sp)
 1048ea4:	d9002b17 	ldw	r4,172(sp)
 1048ea8:	1d87883a 	add	r3,r3,r22
 1048eac:	10800044 	addi	r2,r2,1
 1048eb0:	41000015 	stw	r4,0(r8)
 1048eb4:	45800115 	stw	r22,4(r8)
 1048eb8:	d8c02015 	stw	r3,128(sp)
 1048ebc:	d8801f15 	stw	r2,124(sp)
 1048ec0:	010001c4 	movi	r4,7
 1048ec4:	20818e16 	blt	r4,r2,1049500 <___vfprintf_internal_r+0x1638>
 1048ec8:	42000204 	addi	r8,r8,8
 1048ecc:	003e3106 	br	1048794 <__alt_data_end+0xfffc8794>
 1048ed0:	d9403317 	ldw	r5,204(sp)
 1048ed4:	00800044 	movi	r2,1
 1048ed8:	18c00044 	addi	r3,r3,1
 1048edc:	1141530e 	bge	r2,r5,104942c <___vfprintf_internal_r+0x1564>
 1048ee0:	dc401f17 	ldw	r17,124(sp)
 1048ee4:	00800044 	movi	r2,1
 1048ee8:	40800115 	stw	r2,4(r8)
 1048eec:	8c400044 	addi	r17,r17,1
 1048ef0:	44000015 	stw	r16,0(r8)
 1048ef4:	d8c02015 	stw	r3,128(sp)
 1048ef8:	dc401f15 	stw	r17,124(sp)
 1048efc:	008001c4 	movi	r2,7
 1048f00:	14416b16 	blt	r2,r17,10494b0 <___vfprintf_internal_r+0x15e8>
 1048f04:	42000204 	addi	r8,r8,8
 1048f08:	d8803717 	ldw	r2,220(sp)
 1048f0c:	d9003417 	ldw	r4,208(sp)
 1048f10:	8c400044 	addi	r17,r17,1
 1048f14:	10c7883a 	add	r3,r2,r3
 1048f18:	40800115 	stw	r2,4(r8)
 1048f1c:	41000015 	stw	r4,0(r8)
 1048f20:	d8c02015 	stw	r3,128(sp)
 1048f24:	dc401f15 	stw	r17,124(sp)
 1048f28:	008001c4 	movi	r2,7
 1048f2c:	14416916 	blt	r2,r17,10494d4 <___vfprintf_internal_r+0x160c>
 1048f30:	45800204 	addi	r22,r8,8
 1048f34:	d9003617 	ldw	r4,216(sp)
 1048f38:	d9403817 	ldw	r5,224(sp)
 1048f3c:	000d883a 	mov	r6,zero
 1048f40:	000f883a 	mov	r7,zero
 1048f44:	d8c03c15 	stw	r3,240(sp)
 1048f48:	104471c0 	call	104471c <__eqdf2>
 1048f4c:	d8c03c17 	ldw	r3,240(sp)
 1048f50:	1000bc26 	beq	r2,zero,1049244 <___vfprintf_internal_r+0x137c>
 1048f54:	d9403317 	ldw	r5,204(sp)
 1048f58:	84000044 	addi	r16,r16,1
 1048f5c:	8c400044 	addi	r17,r17,1
 1048f60:	28bfffc4 	addi	r2,r5,-1
 1048f64:	1887883a 	add	r3,r3,r2
 1048f68:	b0800115 	stw	r2,4(r22)
 1048f6c:	b4000015 	stw	r16,0(r22)
 1048f70:	d8c02015 	stw	r3,128(sp)
 1048f74:	dc401f15 	stw	r17,124(sp)
 1048f78:	008001c4 	movi	r2,7
 1048f7c:	14414316 	blt	r2,r17,104948c <___vfprintf_internal_r+0x15c4>
 1048f80:	b5800204 	addi	r22,r22,8
 1048f84:	d9003a17 	ldw	r4,232(sp)
 1048f88:	df0022c4 	addi	fp,sp,139
 1048f8c:	8c400044 	addi	r17,r17,1
 1048f90:	20c7883a 	add	r3,r4,r3
 1048f94:	b7000015 	stw	fp,0(r22)
 1048f98:	b1000115 	stw	r4,4(r22)
 1048f9c:	d8c02015 	stw	r3,128(sp)
 1048fa0:	dc401f15 	stw	r17,124(sp)
 1048fa4:	008001c4 	movi	r2,7
 1048fa8:	14400e16 	blt	r2,r17,1048fe4 <___vfprintf_internal_r+0x111c>
 1048fac:	b2000204 	addi	r8,r22,8
 1048fb0:	003e3a06 	br	104889c <__alt_data_end+0xfffc889c>
 1048fb4:	01004174 	movhi	r4,261
 1048fb8:	211ad984 	addi	r4,r4,27494
 1048fbc:	d9002b15 	stw	r4,172(sp)
 1048fc0:	d9002b17 	ldw	r4,172(sp)
 1048fc4:	1c07883a 	add	r3,r3,r16
 1048fc8:	44000115 	stw	r16,4(r8)
 1048fcc:	41000015 	stw	r4,0(r8)
 1048fd0:	10800044 	addi	r2,r2,1
 1048fd4:	d8c02015 	stw	r3,128(sp)
 1048fd8:	d8801f15 	stw	r2,124(sp)
 1048fdc:	010001c4 	movi	r4,7
 1048fe0:	20be2d0e 	bge	r4,r2,1048898 <__alt_data_end+0xfffc8898>
 1048fe4:	d9002c17 	ldw	r4,176(sp)
 1048fe8:	d9801e04 	addi	r6,sp,120
 1048fec:	b80b883a 	mov	r5,r23
 1048ff0:	10509f40 	call	10509f4 <__sprint_r>
 1048ff4:	103cb61e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 1048ff8:	d8c02017 	ldw	r3,128(sp)
 1048ffc:	da000404 	addi	r8,sp,16
 1049000:	003e2606 	br	104889c <__alt_data_end+0xfffc889c>
 1049004:	d9002c17 	ldw	r4,176(sp)
 1049008:	d9801e04 	addi	r6,sp,120
 104900c:	b80b883a 	mov	r5,r23
 1049010:	10509f40 	call	10509f4 <__sprint_r>
 1049014:	103e5d26 	beq	r2,zero,104898c <__alt_data_end+0xfffc898c>
 1049018:	003cad06 	br	10482d0 <__alt_data_end+0xfffc82d0>
 104901c:	d9002c17 	ldw	r4,176(sp)
 1049020:	d9801e04 	addi	r6,sp,120
 1049024:	b80b883a 	mov	r5,r23
 1049028:	10509f40 	call	10509f4 <__sprint_r>
 104902c:	103ca81e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 1049030:	d8c02017 	ldw	r3,128(sp)
 1049034:	da000404 	addi	r8,sp,16
 1049038:	003e0b06 	br	1048868 <__alt_data_end+0xfffc8868>
 104903c:	d9002c17 	ldw	r4,176(sp)
 1049040:	d9801e04 	addi	r6,sp,120
 1049044:	b80b883a 	mov	r5,r23
 1049048:	10509f40 	call	10509f4 <__sprint_r>
 104904c:	103ca01e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 1049050:	d8c02017 	ldw	r3,128(sp)
 1049054:	da000404 	addi	r8,sp,16
 1049058:	003dbd06 	br	1048750 <__alt_data_end+0xfffc8750>
 104905c:	d9002c17 	ldw	r4,176(sp)
 1049060:	d9801e04 	addi	r6,sp,120
 1049064:	b80b883a 	mov	r5,r23
 1049068:	10509f40 	call	10509f4 <__sprint_r>
 104906c:	103c981e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 1049070:	d8c02017 	ldw	r3,128(sp)
 1049074:	da000404 	addi	r8,sp,16
 1049078:	003dc306 	br	1048788 <__alt_data_end+0xfffc8788>
 104907c:	d8802917 	ldw	r2,164(sp)
 1049080:	d8002785 	stb	zero,158(sp)
 1049084:	103f0616 	blt	r2,zero,1048ca0 <__alt_data_end+0xfffc8ca0>
 1049088:	00ffdfc4 	movi	r3,-129
 104908c:	9d84b03a 	or	r2,r19,r22
 1049090:	90e4703a 	and	r18,r18,r3
 1049094:	103c6b26 	beq	r2,zero,1048244 <__alt_data_end+0xfffc8244>
 1049098:	0039883a 	mov	fp,zero
 104909c:	003e7406 	br	1048a70 <__alt_data_end+0xfffc8a70>
 10490a0:	9080040c 	andi	r2,r18,16
 10490a4:	1001b326 	beq	r2,zero,1049774 <___vfprintf_internal_r+0x18ac>
 10490a8:	d9002d17 	ldw	r4,180(sp)
 10490ac:	d9402917 	ldw	r5,164(sp)
 10490b0:	d8002785 	stb	zero,158(sp)
 10490b4:	20800104 	addi	r2,r4,4
 10490b8:	24c00017 	ldw	r19,0(r4)
 10490bc:	002d883a 	mov	r22,zero
 10490c0:	2801b516 	blt	r5,zero,1049798 <___vfprintf_internal_r+0x18d0>
 10490c4:	00ffdfc4 	movi	r3,-129
 10490c8:	d8802d15 	stw	r2,180(sp)
 10490cc:	90e4703a 	and	r18,r18,r3
 10490d0:	983d2726 	beq	r19,zero,1048570 <__alt_data_end+0xfffc8570>
 10490d4:	0039883a 	mov	fp,zero
 10490d8:	003d2a06 	br	1048584 <__alt_data_end+0xfffc8584>
 10490dc:	dc402617 	ldw	r17,152(sp)
 10490e0:	0441d30e 	bge	zero,r17,1049830 <___vfprintf_internal_r+0x1968>
 10490e4:	dc403217 	ldw	r17,200(sp)
 10490e8:	d8803317 	ldw	r2,204(sp)
 10490ec:	1440010e 	bge	r2,r17,10490f4 <___vfprintf_internal_r+0x122c>
 10490f0:	1023883a 	mov	r17,r2
 10490f4:	04400a0e 	bge	zero,r17,1049120 <___vfprintf_internal_r+0x1258>
 10490f8:	d8801f17 	ldw	r2,124(sp)
 10490fc:	1c47883a 	add	r3,r3,r17
 1049100:	44000015 	stw	r16,0(r8)
 1049104:	10800044 	addi	r2,r2,1
 1049108:	44400115 	stw	r17,4(r8)
 104910c:	d8c02015 	stw	r3,128(sp)
 1049110:	d8801f15 	stw	r2,124(sp)
 1049114:	010001c4 	movi	r4,7
 1049118:	20826516 	blt	r4,r2,1049ab0 <___vfprintf_internal_r+0x1be8>
 104911c:	42000204 	addi	r8,r8,8
 1049120:	88026116 	blt	r17,zero,1049aa8 <___vfprintf_internal_r+0x1be0>
 1049124:	d9003217 	ldw	r4,200(sp)
 1049128:	2463c83a 	sub	r17,r4,r17
 104912c:	04407b0e 	bge	zero,r17,104931c <___vfprintf_internal_r+0x1454>
 1049130:	05800404 	movi	r22,16
 1049134:	d8801f17 	ldw	r2,124(sp)
 1049138:	b4419d0e 	bge	r22,r17,10497b0 <___vfprintf_internal_r+0x18e8>
 104913c:	01004174 	movhi	r4,261
 1049140:	211ad984 	addi	r4,r4,27494
 1049144:	d9002b15 	stw	r4,172(sp)
 1049148:	070001c4 	movi	fp,7
 104914c:	dcc02c17 	ldw	r19,176(sp)
 1049150:	00000306 	br	1049160 <___vfprintf_internal_r+0x1298>
 1049154:	42000204 	addi	r8,r8,8
 1049158:	8c7ffc04 	addi	r17,r17,-16
 104915c:	b441970e 	bge	r22,r17,10497bc <___vfprintf_internal_r+0x18f4>
 1049160:	18c00404 	addi	r3,r3,16
 1049164:	10800044 	addi	r2,r2,1
 1049168:	45000015 	stw	r20,0(r8)
 104916c:	45800115 	stw	r22,4(r8)
 1049170:	d8c02015 	stw	r3,128(sp)
 1049174:	d8801f15 	stw	r2,124(sp)
 1049178:	e0bff60e 	bge	fp,r2,1049154 <__alt_data_end+0xfffc9154>
 104917c:	d9801e04 	addi	r6,sp,120
 1049180:	b80b883a 	mov	r5,r23
 1049184:	9809883a 	mov	r4,r19
 1049188:	10509f40 	call	10509f4 <__sprint_r>
 104918c:	103c501e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 1049190:	d8c02017 	ldw	r3,128(sp)
 1049194:	d8801f17 	ldw	r2,124(sp)
 1049198:	da000404 	addi	r8,sp,16
 104919c:	003fee06 	br	1049158 <__alt_data_end+0xfffc9158>
 10491a0:	d9002c17 	ldw	r4,176(sp)
 10491a4:	d9801e04 	addi	r6,sp,120
 10491a8:	b80b883a 	mov	r5,r23
 10491ac:	10509f40 	call	10509f4 <__sprint_r>
 10491b0:	103c471e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 10491b4:	d8c02017 	ldw	r3,128(sp)
 10491b8:	df002787 	ldb	fp,158(sp)
 10491bc:	da000404 	addi	r8,sp,16
 10491c0:	003d5606 	br	104871c <__alt_data_end+0xfffc871c>
 10491c4:	9080040c 	andi	r2,r18,16
 10491c8:	10016126 	beq	r2,zero,1049750 <___vfprintf_internal_r+0x1888>
 10491cc:	d8802d17 	ldw	r2,180(sp)
 10491d0:	14c00017 	ldw	r19,0(r2)
 10491d4:	10800104 	addi	r2,r2,4
 10491d8:	d8802d15 	stw	r2,180(sp)
 10491dc:	982dd7fa 	srai	r22,r19,31
 10491e0:	b005883a 	mov	r2,r22
 10491e4:	003c8206 	br	10483f0 <__alt_data_end+0xfffc83f0>
 10491e8:	9080040c 	andi	r2,r18,16
 10491ec:	10003526 	beq	r2,zero,10492c4 <___vfprintf_internal_r+0x13fc>
 10491f0:	d9402d17 	ldw	r5,180(sp)
 10491f4:	d8c02917 	ldw	r3,164(sp)
 10491f8:	d8002785 	stb	zero,158(sp)
 10491fc:	28800104 	addi	r2,r5,4
 1049200:	2cc00017 	ldw	r19,0(r5)
 1049204:	002d883a 	mov	r22,zero
 1049208:	18003716 	blt	r3,zero,10492e8 <___vfprintf_internal_r+0x1420>
 104920c:	00ffdfc4 	movi	r3,-129
 1049210:	d8802d15 	stw	r2,180(sp)
 1049214:	90e4703a 	and	r18,r18,r3
 1049218:	0039883a 	mov	fp,zero
 104921c:	983df326 	beq	r19,zero,10489ec <__alt_data_end+0xfffc89ec>
 1049220:	00800244 	movi	r2,9
 1049224:	14fc7b36 	bltu	r2,r19,1048414 <__alt_data_end+0xfffc8414>
 1049228:	d8c02817 	ldw	r3,160(sp)
 104922c:	dc001dc4 	addi	r16,sp,119
 1049230:	9cc00c04 	addi	r19,r19,48
 1049234:	1c07c83a 	sub	r3,r3,r16
 1049238:	dcc01dc5 	stb	r19,119(sp)
 104923c:	d8c02e15 	stw	r3,184(sp)
 1049240:	003ce806 	br	10485e4 <__alt_data_end+0xfffc85e4>
 1049244:	d8803317 	ldw	r2,204(sp)
 1049248:	143fffc4 	addi	r16,r2,-1
 104924c:	043f4d0e 	bge	zero,r16,1048f84 <__alt_data_end+0xfffc8f84>
 1049250:	07000404 	movi	fp,16
 1049254:	e400810e 	bge	fp,r16,104945c <___vfprintf_internal_r+0x1594>
 1049258:	01404174 	movhi	r5,261
 104925c:	295ad984 	addi	r5,r5,27494
 1049260:	d9402b15 	stw	r5,172(sp)
 1049264:	01c001c4 	movi	r7,7
 1049268:	dcc02c17 	ldw	r19,176(sp)
 104926c:	00000306 	br	104927c <___vfprintf_internal_r+0x13b4>
 1049270:	b5800204 	addi	r22,r22,8
 1049274:	843ffc04 	addi	r16,r16,-16
 1049278:	e4007b0e 	bge	fp,r16,1049468 <___vfprintf_internal_r+0x15a0>
 104927c:	18c00404 	addi	r3,r3,16
 1049280:	8c400044 	addi	r17,r17,1
 1049284:	b5000015 	stw	r20,0(r22)
 1049288:	b7000115 	stw	fp,4(r22)
 104928c:	d8c02015 	stw	r3,128(sp)
 1049290:	dc401f15 	stw	r17,124(sp)
 1049294:	3c7ff60e 	bge	r7,r17,1049270 <__alt_data_end+0xfffc9270>
 1049298:	d9801e04 	addi	r6,sp,120
 104929c:	b80b883a 	mov	r5,r23
 10492a0:	9809883a 	mov	r4,r19
 10492a4:	d9c03c15 	stw	r7,240(sp)
 10492a8:	10509f40 	call	10509f4 <__sprint_r>
 10492ac:	d9c03c17 	ldw	r7,240(sp)
 10492b0:	103c071e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 10492b4:	d8c02017 	ldw	r3,128(sp)
 10492b8:	dc401f17 	ldw	r17,124(sp)
 10492bc:	dd800404 	addi	r22,sp,16
 10492c0:	003fec06 	br	1049274 <__alt_data_end+0xfffc9274>
 10492c4:	9080100c 	andi	r2,r18,64
 10492c8:	d8002785 	stb	zero,158(sp)
 10492cc:	10010e26 	beq	r2,zero,1049708 <___vfprintf_internal_r+0x1840>
 10492d0:	d9002d17 	ldw	r4,180(sp)
 10492d4:	d9402917 	ldw	r5,164(sp)
 10492d8:	002d883a 	mov	r22,zero
 10492dc:	20800104 	addi	r2,r4,4
 10492e0:	24c0000b 	ldhu	r19,0(r4)
 10492e4:	283fc90e 	bge	r5,zero,104920c <__alt_data_end+0xfffc920c>
 10492e8:	d8802d15 	stw	r2,180(sp)
 10492ec:	0039883a 	mov	fp,zero
 10492f0:	9d84b03a 	or	r2,r19,r22
 10492f4:	103c461e 	bne	r2,zero,1048410 <__alt_data_end+0xfffc8410>
 10492f8:	00800044 	movi	r2,1
 10492fc:	003e6c06 	br	1048cb0 <__alt_data_end+0xfffc8cb0>
 1049300:	d9002c17 	ldw	r4,176(sp)
 1049304:	d9801e04 	addi	r6,sp,120
 1049308:	b80b883a 	mov	r5,r23
 104930c:	10509f40 	call	10509f4 <__sprint_r>
 1049310:	103bef1e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 1049314:	d8c02017 	ldw	r3,128(sp)
 1049318:	da000404 	addi	r8,sp,16
 104931c:	d9003217 	ldw	r4,200(sp)
 1049320:	d8802617 	ldw	r2,152(sp)
 1049324:	d9403317 	ldw	r5,204(sp)
 1049328:	8123883a 	add	r17,r16,r4
 104932c:	11400216 	blt	r2,r5,1049338 <___vfprintf_internal_r+0x1470>
 1049330:	9100004c 	andi	r4,r18,1
 1049334:	20000d26 	beq	r4,zero,104936c <___vfprintf_internal_r+0x14a4>
 1049338:	d9003717 	ldw	r4,220(sp)
 104933c:	d9403417 	ldw	r5,208(sp)
 1049340:	1907883a 	add	r3,r3,r4
 1049344:	d9001f17 	ldw	r4,124(sp)
 1049348:	41400015 	stw	r5,0(r8)
 104934c:	d9403717 	ldw	r5,220(sp)
 1049350:	21000044 	addi	r4,r4,1
 1049354:	d8c02015 	stw	r3,128(sp)
 1049358:	41400115 	stw	r5,4(r8)
 104935c:	d9001f15 	stw	r4,124(sp)
 1049360:	014001c4 	movi	r5,7
 1049364:	2901e816 	blt	r5,r4,1049b08 <___vfprintf_internal_r+0x1c40>
 1049368:	42000204 	addi	r8,r8,8
 104936c:	d9003317 	ldw	r4,204(sp)
 1049370:	8121883a 	add	r16,r16,r4
 1049374:	2085c83a 	sub	r2,r4,r2
 1049378:	8461c83a 	sub	r16,r16,r17
 104937c:	1400010e 	bge	r2,r16,1049384 <___vfprintf_internal_r+0x14bc>
 1049380:	1021883a 	mov	r16,r2
 1049384:	04000a0e 	bge	zero,r16,10493b0 <___vfprintf_internal_r+0x14e8>
 1049388:	d9001f17 	ldw	r4,124(sp)
 104938c:	1c07883a 	add	r3,r3,r16
 1049390:	44400015 	stw	r17,0(r8)
 1049394:	21000044 	addi	r4,r4,1
 1049398:	44000115 	stw	r16,4(r8)
 104939c:	d8c02015 	stw	r3,128(sp)
 10493a0:	d9001f15 	stw	r4,124(sp)
 10493a4:	014001c4 	movi	r5,7
 10493a8:	2901fb16 	blt	r5,r4,1049b98 <___vfprintf_internal_r+0x1cd0>
 10493ac:	42000204 	addi	r8,r8,8
 10493b0:	8001f716 	blt	r16,zero,1049b90 <___vfprintf_internal_r+0x1cc8>
 10493b4:	1421c83a 	sub	r16,r2,r16
 10493b8:	043d380e 	bge	zero,r16,104889c <__alt_data_end+0xfffc889c>
 10493bc:	04400404 	movi	r17,16
 10493c0:	d8801f17 	ldw	r2,124(sp)
 10493c4:	8c3efb0e 	bge	r17,r16,1048fb4 <__alt_data_end+0xfffc8fb4>
 10493c8:	01404174 	movhi	r5,261
 10493cc:	295ad984 	addi	r5,r5,27494
 10493d0:	d9402b15 	stw	r5,172(sp)
 10493d4:	058001c4 	movi	r22,7
 10493d8:	dcc02c17 	ldw	r19,176(sp)
 10493dc:	00000306 	br	10493ec <___vfprintf_internal_r+0x1524>
 10493e0:	42000204 	addi	r8,r8,8
 10493e4:	843ffc04 	addi	r16,r16,-16
 10493e8:	8c3ef50e 	bge	r17,r16,1048fc0 <__alt_data_end+0xfffc8fc0>
 10493ec:	18c00404 	addi	r3,r3,16
 10493f0:	10800044 	addi	r2,r2,1
 10493f4:	45000015 	stw	r20,0(r8)
 10493f8:	44400115 	stw	r17,4(r8)
 10493fc:	d8c02015 	stw	r3,128(sp)
 1049400:	d8801f15 	stw	r2,124(sp)
 1049404:	b0bff60e 	bge	r22,r2,10493e0 <__alt_data_end+0xfffc93e0>
 1049408:	d9801e04 	addi	r6,sp,120
 104940c:	b80b883a 	mov	r5,r23
 1049410:	9809883a 	mov	r4,r19
 1049414:	10509f40 	call	10509f4 <__sprint_r>
 1049418:	103bad1e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 104941c:	d8c02017 	ldw	r3,128(sp)
 1049420:	d8801f17 	ldw	r2,124(sp)
 1049424:	da000404 	addi	r8,sp,16
 1049428:	003fee06 	br	10493e4 <__alt_data_end+0xfffc93e4>
 104942c:	9088703a 	and	r4,r18,r2
 1049430:	203eab1e 	bne	r4,zero,1048ee0 <__alt_data_end+0xfffc8ee0>
 1049434:	dc401f17 	ldw	r17,124(sp)
 1049438:	40800115 	stw	r2,4(r8)
 104943c:	44000015 	stw	r16,0(r8)
 1049440:	8c400044 	addi	r17,r17,1
 1049444:	d8c02015 	stw	r3,128(sp)
 1049448:	dc401f15 	stw	r17,124(sp)
 104944c:	008001c4 	movi	r2,7
 1049450:	14400e16 	blt	r2,r17,104948c <___vfprintf_internal_r+0x15c4>
 1049454:	45800204 	addi	r22,r8,8
 1049458:	003eca06 	br	1048f84 <__alt_data_end+0xfffc8f84>
 104945c:	01004174 	movhi	r4,261
 1049460:	211ad984 	addi	r4,r4,27494
 1049464:	d9002b15 	stw	r4,172(sp)
 1049468:	d8802b17 	ldw	r2,172(sp)
 104946c:	1c07883a 	add	r3,r3,r16
 1049470:	8c400044 	addi	r17,r17,1
 1049474:	b0800015 	stw	r2,0(r22)
 1049478:	b4000115 	stw	r16,4(r22)
 104947c:	d8c02015 	stw	r3,128(sp)
 1049480:	dc401f15 	stw	r17,124(sp)
 1049484:	008001c4 	movi	r2,7
 1049488:	147ebd0e 	bge	r2,r17,1048f80 <__alt_data_end+0xfffc8f80>
 104948c:	d9002c17 	ldw	r4,176(sp)
 1049490:	d9801e04 	addi	r6,sp,120
 1049494:	b80b883a 	mov	r5,r23
 1049498:	10509f40 	call	10509f4 <__sprint_r>
 104949c:	103b8c1e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 10494a0:	d8c02017 	ldw	r3,128(sp)
 10494a4:	dc401f17 	ldw	r17,124(sp)
 10494a8:	dd800404 	addi	r22,sp,16
 10494ac:	003eb506 	br	1048f84 <__alt_data_end+0xfffc8f84>
 10494b0:	d9002c17 	ldw	r4,176(sp)
 10494b4:	d9801e04 	addi	r6,sp,120
 10494b8:	b80b883a 	mov	r5,r23
 10494bc:	10509f40 	call	10509f4 <__sprint_r>
 10494c0:	103b831e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 10494c4:	d8c02017 	ldw	r3,128(sp)
 10494c8:	dc401f17 	ldw	r17,124(sp)
 10494cc:	da000404 	addi	r8,sp,16
 10494d0:	003e8d06 	br	1048f08 <__alt_data_end+0xfffc8f08>
 10494d4:	d9002c17 	ldw	r4,176(sp)
 10494d8:	d9801e04 	addi	r6,sp,120
 10494dc:	b80b883a 	mov	r5,r23
 10494e0:	10509f40 	call	10509f4 <__sprint_r>
 10494e4:	103b7a1e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 10494e8:	d8c02017 	ldw	r3,128(sp)
 10494ec:	dc401f17 	ldw	r17,124(sp)
 10494f0:	dd800404 	addi	r22,sp,16
 10494f4:	003e8f06 	br	1048f34 <__alt_data_end+0xfffc8f34>
 10494f8:	0027883a 	mov	r19,zero
 10494fc:	003f4a06 	br	1049228 <__alt_data_end+0xfffc9228>
 1049500:	d9002c17 	ldw	r4,176(sp)
 1049504:	d9801e04 	addi	r6,sp,120
 1049508:	b80b883a 	mov	r5,r23
 104950c:	10509f40 	call	10509f4 <__sprint_r>
 1049510:	103b6f1e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 1049514:	d8c02017 	ldw	r3,128(sp)
 1049518:	da000404 	addi	r8,sp,16
 104951c:	003c9d06 	br	1048794 <__alt_data_end+0xfffc8794>
 1049520:	04e7c83a 	sub	r19,zero,r19
 1049524:	9804c03a 	cmpne	r2,r19,zero
 1049528:	05adc83a 	sub	r22,zero,r22
 104952c:	b0adc83a 	sub	r22,r22,r2
 1049530:	d8802917 	ldw	r2,164(sp)
 1049534:	07000b44 	movi	fp,45
 1049538:	df002785 	stb	fp,158(sp)
 104953c:	10017b16 	blt	r2,zero,1049b2c <___vfprintf_internal_r+0x1c64>
 1049540:	00bfdfc4 	movi	r2,-129
 1049544:	90a4703a 	and	r18,r18,r2
 1049548:	003bb106 	br	1048410 <__alt_data_end+0xfffc8410>
 104954c:	d9003617 	ldw	r4,216(sp)
 1049550:	d9403817 	ldw	r5,224(sp)
 1049554:	da003d15 	stw	r8,244(sp)
 1049558:	104f20c0 	call	104f20c <__fpclassifyd>
 104955c:	da003d17 	ldw	r8,244(sp)
 1049560:	1000f026 	beq	r2,zero,1049924 <___vfprintf_internal_r+0x1a5c>
 1049564:	d9002917 	ldw	r4,164(sp)
 1049568:	05bff7c4 	movi	r22,-33
 104956c:	00bfffc4 	movi	r2,-1
 1049570:	8dac703a 	and	r22,r17,r22
 1049574:	20820026 	beq	r4,r2,1049d78 <___vfprintf_internal_r+0x1eb0>
 1049578:	008011c4 	movi	r2,71
 104957c:	b081f726 	beq	r22,r2,1049d5c <___vfprintf_internal_r+0x1e94>
 1049580:	d9003817 	ldw	r4,224(sp)
 1049584:	90c04014 	ori	r3,r18,256
 1049588:	d8c02b15 	stw	r3,172(sp)
 104958c:	20021516 	blt	r4,zero,1049de4 <___vfprintf_internal_r+0x1f1c>
 1049590:	dcc03817 	ldw	r19,224(sp)
 1049594:	d8002a05 	stb	zero,168(sp)
 1049598:	00801984 	movi	r2,102
 104959c:	8881f926 	beq	r17,r2,1049d84 <___vfprintf_internal_r+0x1ebc>
 10495a0:	00801184 	movi	r2,70
 10495a4:	88821c26 	beq	r17,r2,1049e18 <___vfprintf_internal_r+0x1f50>
 10495a8:	00801144 	movi	r2,69
 10495ac:	b081ef26 	beq	r22,r2,1049d6c <___vfprintf_internal_r+0x1ea4>
 10495b0:	d8c02917 	ldw	r3,164(sp)
 10495b4:	d8802104 	addi	r2,sp,132
 10495b8:	d8800315 	stw	r2,12(sp)
 10495bc:	d9403617 	ldw	r5,216(sp)
 10495c0:	d8802504 	addi	r2,sp,148
 10495c4:	d9002c17 	ldw	r4,176(sp)
 10495c8:	d8800215 	stw	r2,8(sp)
 10495cc:	d8802604 	addi	r2,sp,152
 10495d0:	d8c00015 	stw	r3,0(sp)
 10495d4:	d8800115 	stw	r2,4(sp)
 10495d8:	01c00084 	movi	r7,2
 10495dc:	980d883a 	mov	r6,r19
 10495e0:	d8c03c15 	stw	r3,240(sp)
 10495e4:	da003d15 	stw	r8,244(sp)
 10495e8:	104a6100 	call	104a610 <_dtoa_r>
 10495ec:	1021883a 	mov	r16,r2
 10495f0:	008019c4 	movi	r2,103
 10495f4:	d8c03c17 	ldw	r3,240(sp)
 10495f8:	da003d17 	ldw	r8,244(sp)
 10495fc:	88817126 	beq	r17,r2,1049bc4 <___vfprintf_internal_r+0x1cfc>
 1049600:	008011c4 	movi	r2,71
 1049604:	88829226 	beq	r17,r2,104a050 <___vfprintf_internal_r+0x2188>
 1049608:	80f9883a 	add	fp,r16,r3
 104960c:	d9003617 	ldw	r4,216(sp)
 1049610:	000d883a 	mov	r6,zero
 1049614:	000f883a 	mov	r7,zero
 1049618:	980b883a 	mov	r5,r19
 104961c:	da003d15 	stw	r8,244(sp)
 1049620:	104471c0 	call	104471c <__eqdf2>
 1049624:	da003d17 	ldw	r8,244(sp)
 1049628:	10018d26 	beq	r2,zero,1049c60 <___vfprintf_internal_r+0x1d98>
 104962c:	d8802117 	ldw	r2,132(sp)
 1049630:	1700062e 	bgeu	r2,fp,104964c <___vfprintf_internal_r+0x1784>
 1049634:	01000c04 	movi	r4,48
 1049638:	10c00044 	addi	r3,r2,1
 104963c:	d8c02115 	stw	r3,132(sp)
 1049640:	11000005 	stb	r4,0(r2)
 1049644:	d8802117 	ldw	r2,132(sp)
 1049648:	173ffb36 	bltu	r2,fp,1049638 <__alt_data_end+0xfffc9638>
 104964c:	1405c83a 	sub	r2,r2,r16
 1049650:	d8803315 	stw	r2,204(sp)
 1049654:	008011c4 	movi	r2,71
 1049658:	b0817626 	beq	r22,r2,1049c34 <___vfprintf_internal_r+0x1d6c>
 104965c:	00801944 	movi	r2,101
 1049660:	1442810e 	bge	r2,r17,104a068 <___vfprintf_internal_r+0x21a0>
 1049664:	d8c02617 	ldw	r3,152(sp)
 1049668:	00801984 	movi	r2,102
 104966c:	d8c03215 	stw	r3,200(sp)
 1049670:	8881fe26 	beq	r17,r2,1049e6c <___vfprintf_internal_r+0x1fa4>
 1049674:	d8c03217 	ldw	r3,200(sp)
 1049678:	d9003317 	ldw	r4,204(sp)
 104967c:	1901dd16 	blt	r3,r4,1049df4 <___vfprintf_internal_r+0x1f2c>
 1049680:	9480004c 	andi	r18,r18,1
 1049684:	90022b1e 	bne	r18,zero,1049f34 <___vfprintf_internal_r+0x206c>
 1049688:	1805883a 	mov	r2,r3
 104968c:	18028016 	blt	r3,zero,104a090 <___vfprintf_internal_r+0x21c8>
 1049690:	d8c03217 	ldw	r3,200(sp)
 1049694:	044019c4 	movi	r17,103
 1049698:	d8c02e15 	stw	r3,184(sp)
 104969c:	df002a07 	ldb	fp,168(sp)
 10496a0:	e001531e 	bne	fp,zero,1049bf0 <___vfprintf_internal_r+0x1d28>
 10496a4:	df002783 	ldbu	fp,158(sp)
 10496a8:	d8802a15 	stw	r2,168(sp)
 10496ac:	dc802b17 	ldw	r18,172(sp)
 10496b0:	d8002915 	stw	zero,164(sp)
 10496b4:	003bd106 	br	10485fc <__alt_data_end+0xfffc85fc>
 10496b8:	d8802d17 	ldw	r2,180(sp)
 10496bc:	d8c02d17 	ldw	r3,180(sp)
 10496c0:	d9002d17 	ldw	r4,180(sp)
 10496c4:	10800017 	ldw	r2,0(r2)
 10496c8:	18c00117 	ldw	r3,4(r3)
 10496cc:	21000204 	addi	r4,r4,8
 10496d0:	d8803615 	stw	r2,216(sp)
 10496d4:	d8c03815 	stw	r3,224(sp)
 10496d8:	d9002d15 	stw	r4,180(sp)
 10496dc:	003b7506 	br	10484b4 <__alt_data_end+0xfffc84b4>
 10496e0:	ac400007 	ldb	r17,0(r21)
 10496e4:	003a5906 	br	104804c <__alt_data_end+0xfffc804c>
 10496e8:	9080100c 	andi	r2,r18,64
 10496ec:	1000a826 	beq	r2,zero,1049990 <___vfprintf_internal_r+0x1ac8>
 10496f0:	d9002d17 	ldw	r4,180(sp)
 10496f4:	002d883a 	mov	r22,zero
 10496f8:	24c0000b 	ldhu	r19,0(r4)
 10496fc:	21000104 	addi	r4,r4,4
 1049700:	d9002d15 	stw	r4,180(sp)
 1049704:	003ccb06 	br	1048a34 <__alt_data_end+0xfffc8a34>
 1049708:	d8c02d17 	ldw	r3,180(sp)
 104970c:	d9002917 	ldw	r4,164(sp)
 1049710:	002d883a 	mov	r22,zero
 1049714:	18800104 	addi	r2,r3,4
 1049718:	1cc00017 	ldw	r19,0(r3)
 104971c:	203ebb0e 	bge	r4,zero,104920c <__alt_data_end+0xfffc920c>
 1049720:	003ef106 	br	10492e8 <__alt_data_end+0xfffc92e8>
 1049724:	9080040c 	andi	r2,r18,16
 1049728:	1000921e 	bne	r2,zero,1049974 <___vfprintf_internal_r+0x1aac>
 104972c:	9480100c 	andi	r18,r18,64
 1049730:	90013926 	beq	r18,zero,1049c18 <___vfprintf_internal_r+0x1d50>
 1049734:	d9002d17 	ldw	r4,180(sp)
 1049738:	d9402f17 	ldw	r5,188(sp)
 104973c:	20800017 	ldw	r2,0(r4)
 1049740:	21000104 	addi	r4,r4,4
 1049744:	d9002d15 	stw	r4,180(sp)
 1049748:	1140000d 	sth	r5,0(r2)
 104974c:	003a1606 	br	1047fa8 <__alt_data_end+0xfffc7fa8>
 1049750:	9080100c 	andi	r2,r18,64
 1049754:	10008026 	beq	r2,zero,1049958 <___vfprintf_internal_r+0x1a90>
 1049758:	d8c02d17 	ldw	r3,180(sp)
 104975c:	1cc0000f 	ldh	r19,0(r3)
 1049760:	18c00104 	addi	r3,r3,4
 1049764:	d8c02d15 	stw	r3,180(sp)
 1049768:	982dd7fa 	srai	r22,r19,31
 104976c:	b005883a 	mov	r2,r22
 1049770:	003b1f06 	br	10483f0 <__alt_data_end+0xfffc83f0>
 1049774:	9080100c 	andi	r2,r18,64
 1049778:	d8002785 	stb	zero,158(sp)
 104977c:	10008a1e 	bne	r2,zero,10499a8 <___vfprintf_internal_r+0x1ae0>
 1049780:	d9402d17 	ldw	r5,180(sp)
 1049784:	d8c02917 	ldw	r3,164(sp)
 1049788:	002d883a 	mov	r22,zero
 104978c:	28800104 	addi	r2,r5,4
 1049790:	2cc00017 	ldw	r19,0(r5)
 1049794:	183e4b0e 	bge	r3,zero,10490c4 <__alt_data_end+0xfffc90c4>
 1049798:	9d86b03a 	or	r3,r19,r22
 104979c:	d8802d15 	stw	r2,180(sp)
 10497a0:	183e4c1e 	bne	r3,zero,10490d4 <__alt_data_end+0xfffc90d4>
 10497a4:	0039883a 	mov	fp,zero
 10497a8:	0005883a 	mov	r2,zero
 10497ac:	003d4006 	br	1048cb0 <__alt_data_end+0xfffc8cb0>
 10497b0:	01404174 	movhi	r5,261
 10497b4:	295ad984 	addi	r5,r5,27494
 10497b8:	d9402b15 	stw	r5,172(sp)
 10497bc:	d9402b17 	ldw	r5,172(sp)
 10497c0:	1c47883a 	add	r3,r3,r17
 10497c4:	10800044 	addi	r2,r2,1
 10497c8:	41400015 	stw	r5,0(r8)
 10497cc:	44400115 	stw	r17,4(r8)
 10497d0:	d8c02015 	stw	r3,128(sp)
 10497d4:	d8801f15 	stw	r2,124(sp)
 10497d8:	010001c4 	movi	r4,7
 10497dc:	20bec816 	blt	r4,r2,1049300 <__alt_data_end+0xfffc9300>
 10497e0:	42000204 	addi	r8,r8,8
 10497e4:	003ecd06 	br	104931c <__alt_data_end+0xfffc931c>
 10497e8:	d9002917 	ldw	r4,164(sp)
 10497ec:	d8002785 	stb	zero,158(sp)
 10497f0:	203d2d16 	blt	r4,zero,1048ca8 <__alt_data_end+0xfffc8ca8>
 10497f4:	00bfdfc4 	movi	r2,-129
 10497f8:	90a4703a 	and	r18,r18,r2
 10497fc:	003a9106 	br	1048244 <__alt_data_end+0xfffc8244>
 1049800:	01004174 	movhi	r4,261
 1049804:	211ad984 	addi	r4,r4,27494
 1049808:	d9002b15 	stw	r4,172(sp)
 104980c:	003c0c06 	br	1048840 <__alt_data_end+0xfffc8840>
 1049810:	d9002c17 	ldw	r4,176(sp)
 1049814:	d9801e04 	addi	r6,sp,120
 1049818:	b80b883a 	mov	r5,r23
 104981c:	10509f40 	call	10509f4 <__sprint_r>
 1049820:	103aab1e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 1049824:	d8c02017 	ldw	r3,128(sp)
 1049828:	da000404 	addi	r8,sp,16
 104982c:	003d4106 	br	1048d34 <__alt_data_end+0xfffc8d34>
 1049830:	d8801f17 	ldw	r2,124(sp)
 1049834:	01404174 	movhi	r5,261
 1049838:	01000044 	movi	r4,1
 104983c:	18c00044 	addi	r3,r3,1
 1049840:	10800044 	addi	r2,r2,1
 1049844:	295ad104 	addi	r5,r5,27460
 1049848:	41000115 	stw	r4,4(r8)
 104984c:	41400015 	stw	r5,0(r8)
 1049850:	d8c02015 	stw	r3,128(sp)
 1049854:	d8801f15 	stw	r2,124(sp)
 1049858:	010001c4 	movi	r4,7
 104985c:	20805c16 	blt	r4,r2,10499d0 <___vfprintf_internal_r+0x1b08>
 1049860:	42000204 	addi	r8,r8,8
 1049864:	8800041e 	bne	r17,zero,1049878 <___vfprintf_internal_r+0x19b0>
 1049868:	d8803317 	ldw	r2,204(sp)
 104986c:	1000021e 	bne	r2,zero,1049878 <___vfprintf_internal_r+0x19b0>
 1049870:	9080004c 	andi	r2,r18,1
 1049874:	103c0926 	beq	r2,zero,104889c <__alt_data_end+0xfffc889c>
 1049878:	d9003717 	ldw	r4,220(sp)
 104987c:	d8801f17 	ldw	r2,124(sp)
 1049880:	d9403417 	ldw	r5,208(sp)
 1049884:	20c7883a 	add	r3,r4,r3
 1049888:	10800044 	addi	r2,r2,1
 104988c:	41000115 	stw	r4,4(r8)
 1049890:	41400015 	stw	r5,0(r8)
 1049894:	d8c02015 	stw	r3,128(sp)
 1049898:	d8801f15 	stw	r2,124(sp)
 104989c:	010001c4 	movi	r4,7
 10498a0:	20812116 	blt	r4,r2,1049d28 <___vfprintf_internal_r+0x1e60>
 10498a4:	42000204 	addi	r8,r8,8
 10498a8:	0463c83a 	sub	r17,zero,r17
 10498ac:	0440730e 	bge	zero,r17,1049a7c <___vfprintf_internal_r+0x1bb4>
 10498b0:	05800404 	movi	r22,16
 10498b4:	b440860e 	bge	r22,r17,1049ad0 <___vfprintf_internal_r+0x1c08>
 10498b8:	01404174 	movhi	r5,261
 10498bc:	295ad984 	addi	r5,r5,27494
 10498c0:	d9402b15 	stw	r5,172(sp)
 10498c4:	070001c4 	movi	fp,7
 10498c8:	dcc02c17 	ldw	r19,176(sp)
 10498cc:	00000306 	br	10498dc <___vfprintf_internal_r+0x1a14>
 10498d0:	42000204 	addi	r8,r8,8
 10498d4:	8c7ffc04 	addi	r17,r17,-16
 10498d8:	b440800e 	bge	r22,r17,1049adc <___vfprintf_internal_r+0x1c14>
 10498dc:	18c00404 	addi	r3,r3,16
 10498e0:	10800044 	addi	r2,r2,1
 10498e4:	45000015 	stw	r20,0(r8)
 10498e8:	45800115 	stw	r22,4(r8)
 10498ec:	d8c02015 	stw	r3,128(sp)
 10498f0:	d8801f15 	stw	r2,124(sp)
 10498f4:	e0bff60e 	bge	fp,r2,10498d0 <__alt_data_end+0xfffc98d0>
 10498f8:	d9801e04 	addi	r6,sp,120
 10498fc:	b80b883a 	mov	r5,r23
 1049900:	9809883a 	mov	r4,r19
 1049904:	10509f40 	call	10509f4 <__sprint_r>
 1049908:	103a711e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 104990c:	d8c02017 	ldw	r3,128(sp)
 1049910:	d8801f17 	ldw	r2,124(sp)
 1049914:	da000404 	addi	r8,sp,16
 1049918:	003fee06 	br	10498d4 <__alt_data_end+0xfffc98d4>
 104991c:	00bfffc4 	movi	r2,-1
 1049920:	003a6f06 	br	10482e0 <__alt_data_end+0xfffc82e0>
 1049924:	008011c4 	movi	r2,71
 1049928:	1440b816 	blt	r2,r17,1049c0c <___vfprintf_internal_r+0x1d44>
 104992c:	04004174 	movhi	r16,261
 1049930:	841ac304 	addi	r16,r16,27404
 1049934:	00c000c4 	movi	r3,3
 1049938:	00bfdfc4 	movi	r2,-129
 104993c:	d8c02a15 	stw	r3,168(sp)
 1049940:	90a4703a 	and	r18,r18,r2
 1049944:	df002783 	ldbu	fp,158(sp)
 1049948:	d8c02e15 	stw	r3,184(sp)
 104994c:	d8002915 	stw	zero,164(sp)
 1049950:	d8003215 	stw	zero,200(sp)
 1049954:	003b2906 	br	10485fc <__alt_data_end+0xfffc85fc>
 1049958:	d9002d17 	ldw	r4,180(sp)
 104995c:	24c00017 	ldw	r19,0(r4)
 1049960:	21000104 	addi	r4,r4,4
 1049964:	d9002d15 	stw	r4,180(sp)
 1049968:	982dd7fa 	srai	r22,r19,31
 104996c:	b005883a 	mov	r2,r22
 1049970:	003a9f06 	br	10483f0 <__alt_data_end+0xfffc83f0>
 1049974:	d9402d17 	ldw	r5,180(sp)
 1049978:	d8c02f17 	ldw	r3,188(sp)
 104997c:	28800017 	ldw	r2,0(r5)
 1049980:	29400104 	addi	r5,r5,4
 1049984:	d9402d15 	stw	r5,180(sp)
 1049988:	10c00015 	stw	r3,0(r2)
 104998c:	00398606 	br	1047fa8 <__alt_data_end+0xfffc7fa8>
 1049990:	d9402d17 	ldw	r5,180(sp)
 1049994:	002d883a 	mov	r22,zero
 1049998:	2cc00017 	ldw	r19,0(r5)
 104999c:	29400104 	addi	r5,r5,4
 10499a0:	d9402d15 	stw	r5,180(sp)
 10499a4:	003c2306 	br	1048a34 <__alt_data_end+0xfffc8a34>
 10499a8:	d8c02d17 	ldw	r3,180(sp)
 10499ac:	d9002917 	ldw	r4,164(sp)
 10499b0:	002d883a 	mov	r22,zero
 10499b4:	18800104 	addi	r2,r3,4
 10499b8:	1cc0000b 	ldhu	r19,0(r3)
 10499bc:	203dc10e 	bge	r4,zero,10490c4 <__alt_data_end+0xfffc90c4>
 10499c0:	003f7506 	br	1049798 <__alt_data_end+0xfffc9798>
 10499c4:	04004174 	movhi	r16,261
 10499c8:	841ac104 	addi	r16,r16,27396
 10499cc:	003acc06 	br	1048500 <__alt_data_end+0xfffc8500>
 10499d0:	d9002c17 	ldw	r4,176(sp)
 10499d4:	d9801e04 	addi	r6,sp,120
 10499d8:	b80b883a 	mov	r5,r23
 10499dc:	10509f40 	call	10509f4 <__sprint_r>
 10499e0:	103a3b1e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 10499e4:	dc402617 	ldw	r17,152(sp)
 10499e8:	d8c02017 	ldw	r3,128(sp)
 10499ec:	da000404 	addi	r8,sp,16
 10499f0:	003f9c06 	br	1049864 <__alt_data_end+0xfffc9864>
 10499f4:	ac400043 	ldbu	r17,1(r21)
 10499f8:	94800814 	ori	r18,r18,32
 10499fc:	ad400044 	addi	r21,r21,1
 1049a00:	8c403fcc 	andi	r17,r17,255
 1049a04:	8c40201c 	xori	r17,r17,128
 1049a08:	8c7fe004 	addi	r17,r17,-128
 1049a0c:	00398f06 	br	104804c <__alt_data_end+0xfffc804c>
 1049a10:	d8c02d15 	stw	r3,180(sp)
 1049a14:	0039883a 	mov	fp,zero
 1049a18:	003e3506 	br	10492f0 <__alt_data_end+0xfffc92f0>
 1049a1c:	d9002c17 	ldw	r4,176(sp)
 1049a20:	d9801e04 	addi	r6,sp,120
 1049a24:	b80b883a 	mov	r5,r23
 1049a28:	10509f40 	call	10509f4 <__sprint_r>
 1049a2c:	103a281e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 1049a30:	d8c02017 	ldw	r3,128(sp)
 1049a34:	da000404 	addi	r8,sp,16
 1049a38:	003cd006 	br	1048d7c <__alt_data_end+0xfffc8d7c>
 1049a3c:	8009883a 	mov	r4,r16
 1049a40:	da003d15 	stw	r8,244(sp)
 1049a44:	1045c580 	call	1045c58 <strlen>
 1049a48:	d8802e15 	stw	r2,184(sp)
 1049a4c:	da003d17 	ldw	r8,244(sp)
 1049a50:	103c340e 	bge	r2,zero,1048b24 <__alt_data_end+0xfffc8b24>
 1049a54:	0005883a 	mov	r2,zero
 1049a58:	003c3206 	br	1048b24 <__alt_data_end+0xfffc8b24>
 1049a5c:	d9002c17 	ldw	r4,176(sp)
 1049a60:	d9801e04 	addi	r6,sp,120
 1049a64:	b80b883a 	mov	r5,r23
 1049a68:	10509f40 	call	10509f4 <__sprint_r>
 1049a6c:	103a181e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 1049a70:	d8c02017 	ldw	r3,128(sp)
 1049a74:	d8801f17 	ldw	r2,124(sp)
 1049a78:	da000404 	addi	r8,sp,16
 1049a7c:	d9403317 	ldw	r5,204(sp)
 1049a80:	10800044 	addi	r2,r2,1
 1049a84:	44000015 	stw	r16,0(r8)
 1049a88:	28c7883a 	add	r3,r5,r3
 1049a8c:	003b7d06 	br	1048884 <__alt_data_end+0xfffc8884>
 1049a90:	01004174 	movhi	r4,261
 1049a94:	211add84 	addi	r4,r4,27510
 1049a98:	d9003515 	stw	r4,212(sp)
 1049a9c:	003b1406 	br	10486f0 <__alt_data_end+0xfffc86f0>
 1049aa0:	013fffc4 	movi	r4,-1
 1049aa4:	003a3506 	br	104837c <__alt_data_end+0xfffc837c>
 1049aa8:	0023883a 	mov	r17,zero
 1049aac:	003d9d06 	br	1049124 <__alt_data_end+0xfffc9124>
 1049ab0:	d9002c17 	ldw	r4,176(sp)
 1049ab4:	d9801e04 	addi	r6,sp,120
 1049ab8:	b80b883a 	mov	r5,r23
 1049abc:	10509f40 	call	10509f4 <__sprint_r>
 1049ac0:	103a031e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 1049ac4:	d8c02017 	ldw	r3,128(sp)
 1049ac8:	da000404 	addi	r8,sp,16
 1049acc:	003d9406 	br	1049120 <__alt_data_end+0xfffc9120>
 1049ad0:	01004174 	movhi	r4,261
 1049ad4:	211ad984 	addi	r4,r4,27494
 1049ad8:	d9002b15 	stw	r4,172(sp)
 1049adc:	d9002b17 	ldw	r4,172(sp)
 1049ae0:	1c47883a 	add	r3,r3,r17
 1049ae4:	10800044 	addi	r2,r2,1
 1049ae8:	41000015 	stw	r4,0(r8)
 1049aec:	44400115 	stw	r17,4(r8)
 1049af0:	d8c02015 	stw	r3,128(sp)
 1049af4:	d8801f15 	stw	r2,124(sp)
 1049af8:	010001c4 	movi	r4,7
 1049afc:	20bfd716 	blt	r4,r2,1049a5c <__alt_data_end+0xfffc9a5c>
 1049b00:	42000204 	addi	r8,r8,8
 1049b04:	003fdd06 	br	1049a7c <__alt_data_end+0xfffc9a7c>
 1049b08:	d9002c17 	ldw	r4,176(sp)
 1049b0c:	d9801e04 	addi	r6,sp,120
 1049b10:	b80b883a 	mov	r5,r23
 1049b14:	10509f40 	call	10509f4 <__sprint_r>
 1049b18:	1039ed1e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 1049b1c:	d8802617 	ldw	r2,152(sp)
 1049b20:	d8c02017 	ldw	r3,128(sp)
 1049b24:	da000404 	addi	r8,sp,16
 1049b28:	003e1006 	br	104936c <__alt_data_end+0xfffc936c>
 1049b2c:	00800044 	movi	r2,1
 1049b30:	10803fcc 	andi	r2,r2,255
 1049b34:	00c00044 	movi	r3,1
 1049b38:	10fa3526 	beq	r2,r3,1048410 <__alt_data_end+0xfffc8410>
 1049b3c:	00c00084 	movi	r3,2
 1049b40:	10fbcb26 	beq	r2,r3,1048a70 <__alt_data_end+0xfffc8a70>
 1049b44:	003a8f06 	br	1048584 <__alt_data_end+0xfffc8584>
 1049b48:	01004174 	movhi	r4,261
 1049b4c:	211add84 	addi	r4,r4,27510
 1049b50:	d9003515 	stw	r4,212(sp)
 1049b54:	003b7606 	br	1048930 <__alt_data_end+0xfffc8930>
 1049b58:	d8802917 	ldw	r2,164(sp)
 1049b5c:	00c00184 	movi	r3,6
 1049b60:	1880012e 	bgeu	r3,r2,1049b68 <___vfprintf_internal_r+0x1ca0>
 1049b64:	1805883a 	mov	r2,r3
 1049b68:	d8802e15 	stw	r2,184(sp)
 1049b6c:	1000ef16 	blt	r2,zero,1049f2c <___vfprintf_internal_r+0x2064>
 1049b70:	04004174 	movhi	r16,261
 1049b74:	d8802a15 	stw	r2,168(sp)
 1049b78:	dcc02d15 	stw	r19,180(sp)
 1049b7c:	d8002915 	stw	zero,164(sp)
 1049b80:	d8003215 	stw	zero,200(sp)
 1049b84:	841acf04 	addi	r16,r16,27452
 1049b88:	0039883a 	mov	fp,zero
 1049b8c:	003aa206 	br	1048618 <__alt_data_end+0xfffc8618>
 1049b90:	0021883a 	mov	r16,zero
 1049b94:	003e0706 	br	10493b4 <__alt_data_end+0xfffc93b4>
 1049b98:	d9002c17 	ldw	r4,176(sp)
 1049b9c:	d9801e04 	addi	r6,sp,120
 1049ba0:	b80b883a 	mov	r5,r23
 1049ba4:	10509f40 	call	10509f4 <__sprint_r>
 1049ba8:	1039c91e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 1049bac:	d8802617 	ldw	r2,152(sp)
 1049bb0:	d9403317 	ldw	r5,204(sp)
 1049bb4:	d8c02017 	ldw	r3,128(sp)
 1049bb8:	da000404 	addi	r8,sp,16
 1049bbc:	2885c83a 	sub	r2,r5,r2
 1049bc0:	003dfb06 	br	10493b0 <__alt_data_end+0xfffc93b0>
 1049bc4:	9080004c 	andi	r2,r18,1
 1049bc8:	103e8f1e 	bne	r2,zero,1049608 <__alt_data_end+0xfffc9608>
 1049bcc:	d8802117 	ldw	r2,132(sp)
 1049bd0:	003e9e06 	br	104964c <__alt_data_end+0xfffc964c>
 1049bd4:	1025883a 	mov	r18,r2
 1049bd8:	0039883a 	mov	fp,zero
 1049bdc:	00800084 	movi	r2,2
 1049be0:	003fd306 	br	1049b30 <__alt_data_end+0xfffc9b30>
 1049be4:	07000b44 	movi	fp,45
 1049be8:	df002785 	stb	fp,158(sp)
 1049bec:	003a4006 	br	10484f0 <__alt_data_end+0xfffc84f0>
 1049bf0:	00c00b44 	movi	r3,45
 1049bf4:	d8c02785 	stb	r3,158(sp)
 1049bf8:	d8802a15 	stw	r2,168(sp)
 1049bfc:	dc802b17 	ldw	r18,172(sp)
 1049c00:	d8002915 	stw	zero,164(sp)
 1049c04:	07000b44 	movi	fp,45
 1049c08:	003a8006 	br	104860c <__alt_data_end+0xfffc860c>
 1049c0c:	04004174 	movhi	r16,261
 1049c10:	841ac404 	addi	r16,r16,27408
 1049c14:	003f4706 	br	1049934 <__alt_data_end+0xfffc9934>
 1049c18:	d8c02d17 	ldw	r3,180(sp)
 1049c1c:	d9002f17 	ldw	r4,188(sp)
 1049c20:	18800017 	ldw	r2,0(r3)
 1049c24:	18c00104 	addi	r3,r3,4
 1049c28:	d8c02d15 	stw	r3,180(sp)
 1049c2c:	11000015 	stw	r4,0(r2)
 1049c30:	0038dd06 	br	1047fa8 <__alt_data_end+0xfffc7fa8>
 1049c34:	dd802617 	ldw	r22,152(sp)
 1049c38:	00bfff44 	movi	r2,-3
 1049c3c:	b0801c16 	blt	r22,r2,1049cb0 <___vfprintf_internal_r+0x1de8>
 1049c40:	d9402917 	ldw	r5,164(sp)
 1049c44:	2d801a16 	blt	r5,r22,1049cb0 <___vfprintf_internal_r+0x1de8>
 1049c48:	dd803215 	stw	r22,200(sp)
 1049c4c:	003e8906 	br	1049674 <__alt_data_end+0xfffc9674>
 1049c50:	01004174 	movhi	r4,261
 1049c54:	211ad984 	addi	r4,r4,27494
 1049c58:	d9002b15 	stw	r4,172(sp)
 1049c5c:	003c9106 	br	1048ea4 <__alt_data_end+0xfffc8ea4>
 1049c60:	e005883a 	mov	r2,fp
 1049c64:	003e7906 	br	104964c <__alt_data_end+0xfffc964c>
 1049c68:	d9402917 	ldw	r5,164(sp)
 1049c6c:	df002783 	ldbu	fp,158(sp)
 1049c70:	dcc02d15 	stw	r19,180(sp)
 1049c74:	d9402a15 	stw	r5,168(sp)
 1049c78:	d9402e15 	stw	r5,184(sp)
 1049c7c:	d8002915 	stw	zero,164(sp)
 1049c80:	d8003215 	stw	zero,200(sp)
 1049c84:	003a5d06 	br	10485fc <__alt_data_end+0xfffc85fc>
 1049c88:	9080004c 	andi	r2,r18,1
 1049c8c:	0039883a 	mov	fp,zero
 1049c90:	10000426 	beq	r2,zero,1049ca4 <___vfprintf_internal_r+0x1ddc>
 1049c94:	00800c04 	movi	r2,48
 1049c98:	dc001dc4 	addi	r16,sp,119
 1049c9c:	d8801dc5 	stb	r2,119(sp)
 1049ca0:	003b8006 	br	1048aa4 <__alt_data_end+0xfffc8aa4>
 1049ca4:	d8002e15 	stw	zero,184(sp)
 1049ca8:	dc001e04 	addi	r16,sp,120
 1049cac:	003a4d06 	br	10485e4 <__alt_data_end+0xfffc85e4>
 1049cb0:	8c7fff84 	addi	r17,r17,-2
 1049cb4:	b5bfffc4 	addi	r22,r22,-1
 1049cb8:	dd802615 	stw	r22,152(sp)
 1049cbc:	dc4022c5 	stb	r17,139(sp)
 1049cc0:	b000bf16 	blt	r22,zero,1049fc0 <___vfprintf_internal_r+0x20f8>
 1049cc4:	00800ac4 	movi	r2,43
 1049cc8:	d8802305 	stb	r2,140(sp)
 1049ccc:	00800244 	movi	r2,9
 1049cd0:	15807016 	blt	r2,r22,1049e94 <___vfprintf_internal_r+0x1fcc>
 1049cd4:	00800c04 	movi	r2,48
 1049cd8:	b5800c04 	addi	r22,r22,48
 1049cdc:	d8802345 	stb	r2,141(sp)
 1049ce0:	dd802385 	stb	r22,142(sp)
 1049ce4:	d88023c4 	addi	r2,sp,143
 1049ce8:	df0022c4 	addi	fp,sp,139
 1049cec:	d8c03317 	ldw	r3,204(sp)
 1049cf0:	1739c83a 	sub	fp,r2,fp
 1049cf4:	d9003317 	ldw	r4,204(sp)
 1049cf8:	e0c7883a 	add	r3,fp,r3
 1049cfc:	df003a15 	stw	fp,232(sp)
 1049d00:	d8c02e15 	stw	r3,184(sp)
 1049d04:	00800044 	movi	r2,1
 1049d08:	1100b30e 	bge	r2,r4,1049fd8 <___vfprintf_internal_r+0x2110>
 1049d0c:	d8c02e17 	ldw	r3,184(sp)
 1049d10:	18c00044 	addi	r3,r3,1
 1049d14:	d8c02e15 	stw	r3,184(sp)
 1049d18:	1805883a 	mov	r2,r3
 1049d1c:	1800ac16 	blt	r3,zero,1049fd0 <___vfprintf_internal_r+0x2108>
 1049d20:	d8003215 	stw	zero,200(sp)
 1049d24:	003e5d06 	br	104969c <__alt_data_end+0xfffc969c>
 1049d28:	d9002c17 	ldw	r4,176(sp)
 1049d2c:	d9801e04 	addi	r6,sp,120
 1049d30:	b80b883a 	mov	r5,r23
 1049d34:	10509f40 	call	10509f4 <__sprint_r>
 1049d38:	1039651e 	bne	r2,zero,10482d0 <__alt_data_end+0xfffc82d0>
 1049d3c:	dc402617 	ldw	r17,152(sp)
 1049d40:	d8c02017 	ldw	r3,128(sp)
 1049d44:	d8801f17 	ldw	r2,124(sp)
 1049d48:	da000404 	addi	r8,sp,16
 1049d4c:	003ed606 	br	10498a8 <__alt_data_end+0xfffc98a8>
 1049d50:	582b883a 	mov	r21,r11
 1049d54:	d8002915 	stw	zero,164(sp)
 1049d58:	0038bd06 	br	1048050 <__alt_data_end+0xfffc8050>
 1049d5c:	d8802917 	ldw	r2,164(sp)
 1049d60:	103e071e 	bne	r2,zero,1049580 <__alt_data_end+0xfffc9580>
 1049d64:	dc002915 	stw	r16,164(sp)
 1049d68:	003e0506 	br	1049580 <__alt_data_end+0xfffc9580>
 1049d6c:	d9002917 	ldw	r4,164(sp)
 1049d70:	20c00044 	addi	r3,r4,1
 1049d74:	003e0f06 	br	10495b4 <__alt_data_end+0xfffc95b4>
 1049d78:	01400184 	movi	r5,6
 1049d7c:	d9402915 	stw	r5,164(sp)
 1049d80:	003dff06 	br	1049580 <__alt_data_end+0xfffc9580>
 1049d84:	d8802104 	addi	r2,sp,132
 1049d88:	d8800315 	stw	r2,12(sp)
 1049d8c:	d8802504 	addi	r2,sp,148
 1049d90:	d8800215 	stw	r2,8(sp)
 1049d94:	d8802604 	addi	r2,sp,152
 1049d98:	d8800115 	stw	r2,4(sp)
 1049d9c:	d8802917 	ldw	r2,164(sp)
 1049da0:	d9403617 	ldw	r5,216(sp)
 1049da4:	d9002c17 	ldw	r4,176(sp)
 1049da8:	d8800015 	stw	r2,0(sp)
 1049dac:	01c000c4 	movi	r7,3
 1049db0:	980d883a 	mov	r6,r19
 1049db4:	da003d15 	stw	r8,244(sp)
 1049db8:	104a6100 	call	104a610 <_dtoa_r>
 1049dbc:	d8c02917 	ldw	r3,164(sp)
 1049dc0:	da003d17 	ldw	r8,244(sp)
 1049dc4:	1021883a 	mov	r16,r2
 1049dc8:	10f9883a 	add	fp,r2,r3
 1049dcc:	81000007 	ldb	r4,0(r16)
 1049dd0:	00800c04 	movi	r2,48
 1049dd4:	20805e26 	beq	r4,r2,1049f50 <___vfprintf_internal_r+0x2088>
 1049dd8:	d8c02617 	ldw	r3,152(sp)
 1049ddc:	e0f9883a 	add	fp,fp,r3
 1049de0:	003e0a06 	br	104960c <__alt_data_end+0xfffc960c>
 1049de4:	00c00b44 	movi	r3,45
 1049de8:	24e0003c 	xorhi	r19,r4,32768
 1049dec:	d8c02a05 	stb	r3,168(sp)
 1049df0:	003de906 	br	1049598 <__alt_data_end+0xfffc9598>
 1049df4:	d8c03217 	ldw	r3,200(sp)
 1049df8:	00c07a0e 	bge	zero,r3,1049fe4 <___vfprintf_internal_r+0x211c>
 1049dfc:	00800044 	movi	r2,1
 1049e00:	d9003317 	ldw	r4,204(sp)
 1049e04:	1105883a 	add	r2,r2,r4
 1049e08:	d8802e15 	stw	r2,184(sp)
 1049e0c:	10004e16 	blt	r2,zero,1049f48 <___vfprintf_internal_r+0x2080>
 1049e10:	044019c4 	movi	r17,103
 1049e14:	003e2106 	br	104969c <__alt_data_end+0xfffc969c>
 1049e18:	d9002917 	ldw	r4,164(sp)
 1049e1c:	d8802104 	addi	r2,sp,132
 1049e20:	d8800315 	stw	r2,12(sp)
 1049e24:	d9000015 	stw	r4,0(sp)
 1049e28:	d8802504 	addi	r2,sp,148
 1049e2c:	d9403617 	ldw	r5,216(sp)
 1049e30:	d9002c17 	ldw	r4,176(sp)
 1049e34:	d8800215 	stw	r2,8(sp)
 1049e38:	d8802604 	addi	r2,sp,152
 1049e3c:	d8800115 	stw	r2,4(sp)
 1049e40:	01c000c4 	movi	r7,3
 1049e44:	980d883a 	mov	r6,r19
 1049e48:	da003d15 	stw	r8,244(sp)
 1049e4c:	104a6100 	call	104a610 <_dtoa_r>
 1049e50:	d8c02917 	ldw	r3,164(sp)
 1049e54:	da003d17 	ldw	r8,244(sp)
 1049e58:	1021883a 	mov	r16,r2
 1049e5c:	00801184 	movi	r2,70
 1049e60:	80f9883a 	add	fp,r16,r3
 1049e64:	88bfd926 	beq	r17,r2,1049dcc <__alt_data_end+0xfffc9dcc>
 1049e68:	003de806 	br	104960c <__alt_data_end+0xfffc960c>
 1049e6c:	d9002917 	ldw	r4,164(sp)
 1049e70:	00c04d0e 	bge	zero,r3,1049fa8 <___vfprintf_internal_r+0x20e0>
 1049e74:	2000441e 	bne	r4,zero,1049f88 <___vfprintf_internal_r+0x20c0>
 1049e78:	9480004c 	andi	r18,r18,1
 1049e7c:	9000421e 	bne	r18,zero,1049f88 <___vfprintf_internal_r+0x20c0>
 1049e80:	1805883a 	mov	r2,r3
 1049e84:	18007016 	blt	r3,zero,104a048 <___vfprintf_internal_r+0x2180>
 1049e88:	d8c03217 	ldw	r3,200(sp)
 1049e8c:	d8c02e15 	stw	r3,184(sp)
 1049e90:	003e0206 	br	104969c <__alt_data_end+0xfffc969c>
 1049e94:	df0022c4 	addi	fp,sp,139
 1049e98:	dc002915 	stw	r16,164(sp)
 1049e9c:	4027883a 	mov	r19,r8
 1049ea0:	e021883a 	mov	r16,fp
 1049ea4:	b009883a 	mov	r4,r22
 1049ea8:	01400284 	movi	r5,10
 1049eac:	1043d400 	call	1043d40 <__modsi3>
 1049eb0:	10800c04 	addi	r2,r2,48
 1049eb4:	843fffc4 	addi	r16,r16,-1
 1049eb8:	b009883a 	mov	r4,r22
 1049ebc:	01400284 	movi	r5,10
 1049ec0:	80800005 	stb	r2,0(r16)
 1049ec4:	1043cbc0 	call	1043cbc <__divsi3>
 1049ec8:	102d883a 	mov	r22,r2
 1049ecc:	00800244 	movi	r2,9
 1049ed0:	15bff416 	blt	r2,r22,1049ea4 <__alt_data_end+0xfffc9ea4>
 1049ed4:	9811883a 	mov	r8,r19
 1049ed8:	b0800c04 	addi	r2,r22,48
 1049edc:	8027883a 	mov	r19,r16
 1049ee0:	997fffc4 	addi	r5,r19,-1
 1049ee4:	98bfffc5 	stb	r2,-1(r19)
 1049ee8:	dc002917 	ldw	r16,164(sp)
 1049eec:	2f006a2e 	bgeu	r5,fp,104a098 <___vfprintf_internal_r+0x21d0>
 1049ef0:	d9c02384 	addi	r7,sp,142
 1049ef4:	3ccfc83a 	sub	r7,r7,r19
 1049ef8:	d9002344 	addi	r4,sp,141
 1049efc:	e1cf883a 	add	r7,fp,r7
 1049f00:	00000106 	br	1049f08 <___vfprintf_internal_r+0x2040>
 1049f04:	28800003 	ldbu	r2,0(r5)
 1049f08:	20800005 	stb	r2,0(r4)
 1049f0c:	21000044 	addi	r4,r4,1
 1049f10:	29400044 	addi	r5,r5,1
 1049f14:	393ffb1e 	bne	r7,r4,1049f04 <__alt_data_end+0xfffc9f04>
 1049f18:	d8802304 	addi	r2,sp,140
 1049f1c:	14c5c83a 	sub	r2,r2,r19
 1049f20:	d8c02344 	addi	r3,sp,141
 1049f24:	1885883a 	add	r2,r3,r2
 1049f28:	003f7006 	br	1049cec <__alt_data_end+0xfffc9cec>
 1049f2c:	0005883a 	mov	r2,zero
 1049f30:	003f0f06 	br	1049b70 <__alt_data_end+0xfffc9b70>
 1049f34:	d8c03217 	ldw	r3,200(sp)
 1049f38:	18c00044 	addi	r3,r3,1
 1049f3c:	d8c02e15 	stw	r3,184(sp)
 1049f40:	1805883a 	mov	r2,r3
 1049f44:	183fb20e 	bge	r3,zero,1049e10 <__alt_data_end+0xfffc9e10>
 1049f48:	0005883a 	mov	r2,zero
 1049f4c:	003fb006 	br	1049e10 <__alt_data_end+0xfffc9e10>
 1049f50:	d9003617 	ldw	r4,216(sp)
 1049f54:	000d883a 	mov	r6,zero
 1049f58:	000f883a 	mov	r7,zero
 1049f5c:	980b883a 	mov	r5,r19
 1049f60:	d8c03c15 	stw	r3,240(sp)
 1049f64:	da003d15 	stw	r8,244(sp)
 1049f68:	104471c0 	call	104471c <__eqdf2>
 1049f6c:	d8c03c17 	ldw	r3,240(sp)
 1049f70:	da003d17 	ldw	r8,244(sp)
 1049f74:	103f9826 	beq	r2,zero,1049dd8 <__alt_data_end+0xfffc9dd8>
 1049f78:	00800044 	movi	r2,1
 1049f7c:	10c7c83a 	sub	r3,r2,r3
 1049f80:	d8c02615 	stw	r3,152(sp)
 1049f84:	003f9506 	br	1049ddc <__alt_data_end+0xfffc9ddc>
 1049f88:	d9002917 	ldw	r4,164(sp)
 1049f8c:	d8c03217 	ldw	r3,200(sp)
 1049f90:	20800044 	addi	r2,r4,1
 1049f94:	1885883a 	add	r2,r3,r2
 1049f98:	d8802e15 	stw	r2,184(sp)
 1049f9c:	103dbf0e 	bge	r2,zero,104969c <__alt_data_end+0xfffc969c>
 1049fa0:	0005883a 	mov	r2,zero
 1049fa4:	003dbd06 	br	104969c <__alt_data_end+0xfffc969c>
 1049fa8:	2000211e 	bne	r4,zero,104a030 <___vfprintf_internal_r+0x2168>
 1049fac:	9480004c 	andi	r18,r18,1
 1049fb0:	90001f1e 	bne	r18,zero,104a030 <___vfprintf_internal_r+0x2168>
 1049fb4:	00800044 	movi	r2,1
 1049fb8:	d8802e15 	stw	r2,184(sp)
 1049fbc:	003db706 	br	104969c <__alt_data_end+0xfffc969c>
 1049fc0:	00800b44 	movi	r2,45
 1049fc4:	05adc83a 	sub	r22,zero,r22
 1049fc8:	d8802305 	stb	r2,140(sp)
 1049fcc:	003f3f06 	br	1049ccc <__alt_data_end+0xfffc9ccc>
 1049fd0:	0005883a 	mov	r2,zero
 1049fd4:	003f5206 	br	1049d20 <__alt_data_end+0xfffc9d20>
 1049fd8:	90a4703a 	and	r18,r18,r2
 1049fdc:	903f4e26 	beq	r18,zero,1049d18 <__alt_data_end+0xfffc9d18>
 1049fe0:	003f4a06 	br	1049d0c <__alt_data_end+0xfffc9d0c>
 1049fe4:	00800084 	movi	r2,2
 1049fe8:	10c5c83a 	sub	r2,r2,r3
 1049fec:	003f8406 	br	1049e00 <__alt_data_end+0xfffc9e00>
 1049ff0:	d8802d17 	ldw	r2,180(sp)
 1049ff4:	d9002d17 	ldw	r4,180(sp)
 1049ff8:	ac400043 	ldbu	r17,1(r21)
 1049ffc:	10800017 	ldw	r2,0(r2)
 104a000:	582b883a 	mov	r21,r11
 104a004:	d8802915 	stw	r2,164(sp)
 104a008:	20800104 	addi	r2,r4,4
 104a00c:	d9002917 	ldw	r4,164(sp)
 104a010:	d8802d15 	stw	r2,180(sp)
 104a014:	203e7a0e 	bge	r4,zero,1049a00 <__alt_data_end+0xfffc9a00>
 104a018:	8c403fcc 	andi	r17,r17,255
 104a01c:	00bfffc4 	movi	r2,-1
 104a020:	8c40201c 	xori	r17,r17,128
 104a024:	d8802915 	stw	r2,164(sp)
 104a028:	8c7fe004 	addi	r17,r17,-128
 104a02c:	00380706 	br	104804c <__alt_data_end+0xfffc804c>
 104a030:	d8c02917 	ldw	r3,164(sp)
 104a034:	18c00084 	addi	r3,r3,2
 104a038:	d8c02e15 	stw	r3,184(sp)
 104a03c:	1805883a 	mov	r2,r3
 104a040:	183d960e 	bge	r3,zero,104969c <__alt_data_end+0xfffc969c>
 104a044:	003fd606 	br	1049fa0 <__alt_data_end+0xfffc9fa0>
 104a048:	0005883a 	mov	r2,zero
 104a04c:	003f8e06 	br	1049e88 <__alt_data_end+0xfffc9e88>
 104a050:	9080004c 	andi	r2,r18,1
 104a054:	103f811e 	bne	r2,zero,1049e5c <__alt_data_end+0xfffc9e5c>
 104a058:	d8802117 	ldw	r2,132(sp)
 104a05c:	1405c83a 	sub	r2,r2,r16
 104a060:	d8803315 	stw	r2,204(sp)
 104a064:	b47ef326 	beq	r22,r17,1049c34 <__alt_data_end+0xfffc9c34>
 104a068:	dd802617 	ldw	r22,152(sp)
 104a06c:	003f1106 	br	1049cb4 <__alt_data_end+0xfffc9cb4>
 104a070:	d9c02785 	stb	r7,158(sp)
 104a074:	00390406 	br	1048488 <__alt_data_end+0xfffc8488>
 104a078:	d9c02785 	stb	r7,158(sp)
 104a07c:	0038d306 	br	10483cc <__alt_data_end+0xfffc83cc>
 104a080:	d9c02785 	stb	r7,158(sp)
 104a084:	003a6106 	br	1048a0c <__alt_data_end+0xfffc8a0c>
 104a088:	d9c02785 	stb	r7,158(sp)
 104a08c:	003af806 	br	1048c70 <__alt_data_end+0xfffc8c70>
 104a090:	0005883a 	mov	r2,zero
 104a094:	003d7e06 	br	1049690 <__alt_data_end+0xfffc9690>
 104a098:	d8802344 	addi	r2,sp,141
 104a09c:	003f1306 	br	1049cec <__alt_data_end+0xfffc9cec>
 104a0a0:	d9c02785 	stb	r7,158(sp)
 104a0a4:	00392306 	br	1048534 <__alt_data_end+0xfffc8534>
 104a0a8:	d9c02785 	stb	r7,158(sp)
 104a0ac:	003aa906 	br	1048b54 <__alt_data_end+0xfffc8b54>
 104a0b0:	d9c02785 	stb	r7,158(sp)
 104a0b4:	003a3d06 	br	10489ac <__alt_data_end+0xfffc89ac>
 104a0b8:	d9c02785 	stb	r7,158(sp)
 104a0bc:	003aca06 	br	1048be8 <__alt_data_end+0xfffc8be8>

0104a0c0 <__vfprintf_internal>:
 104a0c0:	008041b4 	movhi	r2,262
 104a0c4:	10a1fa04 	addi	r2,r2,-30744
 104a0c8:	300f883a 	mov	r7,r6
 104a0cc:	280d883a 	mov	r6,r5
 104a0d0:	200b883a 	mov	r5,r4
 104a0d4:	11000017 	ldw	r4,0(r2)
 104a0d8:	1047ec81 	jmpi	1047ec8 <___vfprintf_internal_r>

0104a0dc <__sbprintf>:
 104a0dc:	2880030b 	ldhu	r2,12(r5)
 104a0e0:	2ac01917 	ldw	r11,100(r5)
 104a0e4:	2a80038b 	ldhu	r10,14(r5)
 104a0e8:	2a400717 	ldw	r9,28(r5)
 104a0ec:	2a000917 	ldw	r8,36(r5)
 104a0f0:	defee204 	addi	sp,sp,-1144
 104a0f4:	00c10004 	movi	r3,1024
 104a0f8:	dc011a15 	stw	r16,1128(sp)
 104a0fc:	10bfff4c 	andi	r2,r2,65533
 104a100:	2821883a 	mov	r16,r5
 104a104:	d8cb883a 	add	r5,sp,r3
 104a108:	dc811c15 	stw	r18,1136(sp)
 104a10c:	dc411b15 	stw	r17,1132(sp)
 104a110:	dfc11d15 	stw	ra,1140(sp)
 104a114:	2025883a 	mov	r18,r4
 104a118:	d881030d 	sth	r2,1036(sp)
 104a11c:	dac11915 	stw	r11,1124(sp)
 104a120:	da81038d 	sth	r10,1038(sp)
 104a124:	da410715 	stw	r9,1052(sp)
 104a128:	da010915 	stw	r8,1060(sp)
 104a12c:	dec10015 	stw	sp,1024(sp)
 104a130:	dec10415 	stw	sp,1040(sp)
 104a134:	d8c10215 	stw	r3,1032(sp)
 104a138:	d8c10515 	stw	r3,1044(sp)
 104a13c:	d8010615 	stw	zero,1048(sp)
 104a140:	1047ec80 	call	1047ec8 <___vfprintf_internal_r>
 104a144:	1023883a 	mov	r17,r2
 104a148:	10000416 	blt	r2,zero,104a15c <__sbprintf+0x80>
 104a14c:	d9410004 	addi	r5,sp,1024
 104a150:	9009883a 	mov	r4,r18
 104a154:	104beb40 	call	104beb4 <_fflush_r>
 104a158:	10000d1e 	bne	r2,zero,104a190 <__sbprintf+0xb4>
 104a15c:	d881030b 	ldhu	r2,1036(sp)
 104a160:	1080100c 	andi	r2,r2,64
 104a164:	10000326 	beq	r2,zero,104a174 <__sbprintf+0x98>
 104a168:	8080030b 	ldhu	r2,12(r16)
 104a16c:	10801014 	ori	r2,r2,64
 104a170:	8080030d 	sth	r2,12(r16)
 104a174:	8805883a 	mov	r2,r17
 104a178:	dfc11d17 	ldw	ra,1140(sp)
 104a17c:	dc811c17 	ldw	r18,1136(sp)
 104a180:	dc411b17 	ldw	r17,1132(sp)
 104a184:	dc011a17 	ldw	r16,1128(sp)
 104a188:	dec11e04 	addi	sp,sp,1144
 104a18c:	f800283a 	ret
 104a190:	047fffc4 	movi	r17,-1
 104a194:	003ff106 	br	104a15c <__alt_data_end+0xfffca15c>

0104a198 <_vsnprintf_r>:
 104a198:	30003716 	blt	r6,zero,104a278 <_vsnprintf_r+0xe0>
 104a19c:	deffe404 	addi	sp,sp,-112
 104a1a0:	00c08204 	movi	r3,520
 104a1a4:	dc001a15 	stw	r16,104(sp)
 104a1a8:	3005883a 	mov	r2,r6
 104a1ac:	dfc01b15 	stw	ra,108(sp)
 104a1b0:	d8c0030d 	sth	r3,12(sp)
 104a1b4:	d9400015 	stw	r5,0(sp)
 104a1b8:	d9400415 	stw	r5,16(sp)
 104a1bc:	380d883a 	mov	r6,r7
 104a1c0:	2021883a 	mov	r16,r4
 104a1c4:	10001326 	beq	r2,zero,104a214 <_vsnprintf_r+0x7c>
 104a1c8:	00c041b4 	movhi	r3,262
 104a1cc:	18e1fa04 	addi	r3,r3,-30744
 104a1d0:	19000017 	ldw	r4,0(r3)
 104a1d4:	d9c01c17 	ldw	r7,112(sp)
 104a1d8:	10bfffc4 	addi	r2,r2,-1
 104a1dc:	d8800215 	stw	r2,8(sp)
 104a1e0:	d8800515 	stw	r2,20(sp)
 104a1e4:	d80b883a 	mov	r5,sp
 104a1e8:	00bfffc4 	movi	r2,-1
 104a1ec:	d880038d 	sth	r2,14(sp)
 104a1f0:	1045cf00 	call	1045cf0 <___svfprintf_internal_r>
 104a1f4:	00ffffc4 	movi	r3,-1
 104a1f8:	10c01616 	blt	r2,r3,104a254 <_vsnprintf_r+0xbc>
 104a1fc:	d8c00017 	ldw	r3,0(sp)
 104a200:	18000005 	stb	zero,0(r3)
 104a204:	dfc01b17 	ldw	ra,108(sp)
 104a208:	dc001a17 	ldw	r16,104(sp)
 104a20c:	dec01c04 	addi	sp,sp,112
 104a210:	f800283a 	ret
 104a214:	008041b4 	movhi	r2,262
 104a218:	10a1fa04 	addi	r2,r2,-30744
 104a21c:	11000017 	ldw	r4,0(r2)
 104a220:	d9c01c17 	ldw	r7,112(sp)
 104a224:	00bfffc4 	movi	r2,-1
 104a228:	d80b883a 	mov	r5,sp
 104a22c:	d8000215 	stw	zero,8(sp)
 104a230:	d8000515 	stw	zero,20(sp)
 104a234:	d880038d 	sth	r2,14(sp)
 104a238:	1045cf00 	call	1045cf0 <___svfprintf_internal_r>
 104a23c:	00ffffc4 	movi	r3,-1
 104a240:	10c00716 	blt	r2,r3,104a260 <_vsnprintf_r+0xc8>
 104a244:	dfc01b17 	ldw	ra,108(sp)
 104a248:	dc001a17 	ldw	r16,104(sp)
 104a24c:	dec01c04 	addi	sp,sp,112
 104a250:	f800283a 	ret
 104a254:	00c022c4 	movi	r3,139
 104a258:	80c00015 	stw	r3,0(r16)
 104a25c:	003fe706 	br	104a1fc <__alt_data_end+0xfffca1fc>
 104a260:	00c022c4 	movi	r3,139
 104a264:	80c00015 	stw	r3,0(r16)
 104a268:	dfc01b17 	ldw	ra,108(sp)
 104a26c:	dc001a17 	ldw	r16,104(sp)
 104a270:	dec01c04 	addi	sp,sp,112
 104a274:	f800283a 	ret
 104a278:	008022c4 	movi	r2,139
 104a27c:	20800015 	stw	r2,0(r4)
 104a280:	00bfffc4 	movi	r2,-1
 104a284:	f800283a 	ret

0104a288 <vsnprintf>:
 104a288:	defffe04 	addi	sp,sp,-8
 104a28c:	008041b4 	movhi	r2,262
 104a290:	d9c00015 	stw	r7,0(sp)
 104a294:	10a1fa04 	addi	r2,r2,-30744
 104a298:	300f883a 	mov	r7,r6
 104a29c:	280d883a 	mov	r6,r5
 104a2a0:	200b883a 	mov	r5,r4
 104a2a4:	11000017 	ldw	r4,0(r2)
 104a2a8:	dfc00115 	stw	ra,4(sp)
 104a2ac:	104a1980 	call	104a198 <_vsnprintf_r>
 104a2b0:	dfc00117 	ldw	ra,4(sp)
 104a2b4:	dec00204 	addi	sp,sp,8
 104a2b8:	f800283a 	ret

0104a2bc <__swsetup_r>:
 104a2bc:	008041b4 	movhi	r2,262
 104a2c0:	defffd04 	addi	sp,sp,-12
 104a2c4:	10a1fa04 	addi	r2,r2,-30744
 104a2c8:	dc400115 	stw	r17,4(sp)
 104a2cc:	2023883a 	mov	r17,r4
 104a2d0:	11000017 	ldw	r4,0(r2)
 104a2d4:	dc000015 	stw	r16,0(sp)
 104a2d8:	dfc00215 	stw	ra,8(sp)
 104a2dc:	2821883a 	mov	r16,r5
 104a2e0:	20000226 	beq	r4,zero,104a2ec <__swsetup_r+0x30>
 104a2e4:	20800e17 	ldw	r2,56(r4)
 104a2e8:	10003126 	beq	r2,zero,104a3b0 <__swsetup_r+0xf4>
 104a2ec:	8080030b 	ldhu	r2,12(r16)
 104a2f0:	10c0020c 	andi	r3,r2,8
 104a2f4:	1009883a 	mov	r4,r2
 104a2f8:	18000f26 	beq	r3,zero,104a338 <__swsetup_r+0x7c>
 104a2fc:	80c00417 	ldw	r3,16(r16)
 104a300:	18001526 	beq	r3,zero,104a358 <__swsetup_r+0x9c>
 104a304:	1100004c 	andi	r4,r2,1
 104a308:	20001c1e 	bne	r4,zero,104a37c <__swsetup_r+0xc0>
 104a30c:	1080008c 	andi	r2,r2,2
 104a310:	1000291e 	bne	r2,zero,104a3b8 <__swsetup_r+0xfc>
 104a314:	80800517 	ldw	r2,20(r16)
 104a318:	80800215 	stw	r2,8(r16)
 104a31c:	18001c26 	beq	r3,zero,104a390 <__swsetup_r+0xd4>
 104a320:	0005883a 	mov	r2,zero
 104a324:	dfc00217 	ldw	ra,8(sp)
 104a328:	dc400117 	ldw	r17,4(sp)
 104a32c:	dc000017 	ldw	r16,0(sp)
 104a330:	dec00304 	addi	sp,sp,12
 104a334:	f800283a 	ret
 104a338:	2080040c 	andi	r2,r4,16
 104a33c:	10002e26 	beq	r2,zero,104a3f8 <__swsetup_r+0x13c>
 104a340:	2080010c 	andi	r2,r4,4
 104a344:	10001e1e 	bne	r2,zero,104a3c0 <__swsetup_r+0x104>
 104a348:	80c00417 	ldw	r3,16(r16)
 104a34c:	20800214 	ori	r2,r4,8
 104a350:	8080030d 	sth	r2,12(r16)
 104a354:	183feb1e 	bne	r3,zero,104a304 <__alt_data_end+0xfffca304>
 104a358:	1100a00c 	andi	r4,r2,640
 104a35c:	01408004 	movi	r5,512
 104a360:	217fe826 	beq	r4,r5,104a304 <__alt_data_end+0xfffca304>
 104a364:	800b883a 	mov	r5,r16
 104a368:	8809883a 	mov	r4,r17
 104a36c:	104ce340 	call	104ce34 <__smakebuf_r>
 104a370:	8080030b 	ldhu	r2,12(r16)
 104a374:	80c00417 	ldw	r3,16(r16)
 104a378:	003fe206 	br	104a304 <__alt_data_end+0xfffca304>
 104a37c:	80800517 	ldw	r2,20(r16)
 104a380:	80000215 	stw	zero,8(r16)
 104a384:	0085c83a 	sub	r2,zero,r2
 104a388:	80800615 	stw	r2,24(r16)
 104a38c:	183fe41e 	bne	r3,zero,104a320 <__alt_data_end+0xfffca320>
 104a390:	80c0030b 	ldhu	r3,12(r16)
 104a394:	0005883a 	mov	r2,zero
 104a398:	1900200c 	andi	r4,r3,128
 104a39c:	203fe126 	beq	r4,zero,104a324 <__alt_data_end+0xfffca324>
 104a3a0:	18c01014 	ori	r3,r3,64
 104a3a4:	80c0030d 	sth	r3,12(r16)
 104a3a8:	00bfffc4 	movi	r2,-1
 104a3ac:	003fdd06 	br	104a324 <__alt_data_end+0xfffca324>
 104a3b0:	104c2900 	call	104c290 <__sinit>
 104a3b4:	003fcd06 	br	104a2ec <__alt_data_end+0xfffca2ec>
 104a3b8:	0005883a 	mov	r2,zero
 104a3bc:	003fd606 	br	104a318 <__alt_data_end+0xfffca318>
 104a3c0:	81400c17 	ldw	r5,48(r16)
 104a3c4:	28000626 	beq	r5,zero,104a3e0 <__swsetup_r+0x124>
 104a3c8:	80801004 	addi	r2,r16,64
 104a3cc:	28800326 	beq	r5,r2,104a3dc <__swsetup_r+0x120>
 104a3d0:	8809883a 	mov	r4,r17
 104a3d4:	104c4040 	call	104c404 <_free_r>
 104a3d8:	8100030b 	ldhu	r4,12(r16)
 104a3dc:	80000c15 	stw	zero,48(r16)
 104a3e0:	80c00417 	ldw	r3,16(r16)
 104a3e4:	00bff6c4 	movi	r2,-37
 104a3e8:	1108703a 	and	r4,r2,r4
 104a3ec:	80000115 	stw	zero,4(r16)
 104a3f0:	80c00015 	stw	r3,0(r16)
 104a3f4:	003fd506 	br	104a34c <__alt_data_end+0xfffca34c>
 104a3f8:	00800244 	movi	r2,9
 104a3fc:	88800015 	stw	r2,0(r17)
 104a400:	20801014 	ori	r2,r4,64
 104a404:	8080030d 	sth	r2,12(r16)
 104a408:	00bfffc4 	movi	r2,-1
 104a40c:	003fc506 	br	104a324 <__alt_data_end+0xfffca324>

0104a410 <quorem>:
 104a410:	defff704 	addi	sp,sp,-36
 104a414:	dc800215 	stw	r18,8(sp)
 104a418:	20800417 	ldw	r2,16(r4)
 104a41c:	2c800417 	ldw	r18,16(r5)
 104a420:	dfc00815 	stw	ra,32(sp)
 104a424:	ddc00715 	stw	r23,28(sp)
 104a428:	dd800615 	stw	r22,24(sp)
 104a42c:	dd400515 	stw	r21,20(sp)
 104a430:	dd000415 	stw	r20,16(sp)
 104a434:	dcc00315 	stw	r19,12(sp)
 104a438:	dc400115 	stw	r17,4(sp)
 104a43c:	dc000015 	stw	r16,0(sp)
 104a440:	14807116 	blt	r2,r18,104a608 <quorem+0x1f8>
 104a444:	94bfffc4 	addi	r18,r18,-1
 104a448:	94ad883a 	add	r22,r18,r18
 104a44c:	b5ad883a 	add	r22,r22,r22
 104a450:	2c400504 	addi	r17,r5,20
 104a454:	8da9883a 	add	r20,r17,r22
 104a458:	25400504 	addi	r21,r4,20
 104a45c:	282f883a 	mov	r23,r5
 104a460:	adad883a 	add	r22,r21,r22
 104a464:	a1400017 	ldw	r5,0(r20)
 104a468:	2021883a 	mov	r16,r4
 104a46c:	b1000017 	ldw	r4,0(r22)
 104a470:	29400044 	addi	r5,r5,1
 104a474:	1043db40 	call	1043db4 <__udivsi3>
 104a478:	1027883a 	mov	r19,r2
 104a47c:	10002c26 	beq	r2,zero,104a530 <quorem+0x120>
 104a480:	a813883a 	mov	r9,r21
 104a484:	880b883a 	mov	r5,r17
 104a488:	0009883a 	mov	r4,zero
 104a48c:	000d883a 	mov	r6,zero
 104a490:	2a000017 	ldw	r8,0(r5)
 104a494:	49c00017 	ldw	r7,0(r9)
 104a498:	29400104 	addi	r5,r5,4
 104a49c:	40bfffcc 	andi	r2,r8,65535
 104a4a0:	14c5383a 	mul	r2,r2,r19
 104a4a4:	4010d43a 	srli	r8,r8,16
 104a4a8:	38ffffcc 	andi	r3,r7,65535
 104a4ac:	1105883a 	add	r2,r2,r4
 104a4b0:	1008d43a 	srli	r4,r2,16
 104a4b4:	44d1383a 	mul	r8,r8,r19
 104a4b8:	198d883a 	add	r6,r3,r6
 104a4bc:	10ffffcc 	andi	r3,r2,65535
 104a4c0:	30c7c83a 	sub	r3,r6,r3
 104a4c4:	380ed43a 	srli	r7,r7,16
 104a4c8:	4105883a 	add	r2,r8,r4
 104a4cc:	180dd43a 	srai	r6,r3,16
 104a4d0:	113fffcc 	andi	r4,r2,65535
 104a4d4:	390fc83a 	sub	r7,r7,r4
 104a4d8:	398d883a 	add	r6,r7,r6
 104a4dc:	300e943a 	slli	r7,r6,16
 104a4e0:	18ffffcc 	andi	r3,r3,65535
 104a4e4:	1008d43a 	srli	r4,r2,16
 104a4e8:	38ceb03a 	or	r7,r7,r3
 104a4ec:	49c00015 	stw	r7,0(r9)
 104a4f0:	300dd43a 	srai	r6,r6,16
 104a4f4:	4a400104 	addi	r9,r9,4
 104a4f8:	a17fe52e 	bgeu	r20,r5,104a490 <__alt_data_end+0xfffca490>
 104a4fc:	b0800017 	ldw	r2,0(r22)
 104a500:	10000b1e 	bne	r2,zero,104a530 <quorem+0x120>
 104a504:	b0bfff04 	addi	r2,r22,-4
 104a508:	a880082e 	bgeu	r21,r2,104a52c <quorem+0x11c>
 104a50c:	b0ffff17 	ldw	r3,-4(r22)
 104a510:	18000326 	beq	r3,zero,104a520 <quorem+0x110>
 104a514:	00000506 	br	104a52c <quorem+0x11c>
 104a518:	10c00017 	ldw	r3,0(r2)
 104a51c:	1800031e 	bne	r3,zero,104a52c <quorem+0x11c>
 104a520:	10bfff04 	addi	r2,r2,-4
 104a524:	94bfffc4 	addi	r18,r18,-1
 104a528:	a8bffb36 	bltu	r21,r2,104a518 <__alt_data_end+0xfffca518>
 104a52c:	84800415 	stw	r18,16(r16)
 104a530:	b80b883a 	mov	r5,r23
 104a534:	8009883a 	mov	r4,r16
 104a538:	104e5740 	call	104e574 <__mcmp>
 104a53c:	10002616 	blt	r2,zero,104a5d8 <quorem+0x1c8>
 104a540:	9cc00044 	addi	r19,r19,1
 104a544:	a805883a 	mov	r2,r21
 104a548:	000b883a 	mov	r5,zero
 104a54c:	11000017 	ldw	r4,0(r2)
 104a550:	89800017 	ldw	r6,0(r17)
 104a554:	10800104 	addi	r2,r2,4
 104a558:	20ffffcc 	andi	r3,r4,65535
 104a55c:	194b883a 	add	r5,r3,r5
 104a560:	30ffffcc 	andi	r3,r6,65535
 104a564:	28c7c83a 	sub	r3,r5,r3
 104a568:	300cd43a 	srli	r6,r6,16
 104a56c:	2008d43a 	srli	r4,r4,16
 104a570:	180bd43a 	srai	r5,r3,16
 104a574:	18ffffcc 	andi	r3,r3,65535
 104a578:	2189c83a 	sub	r4,r4,r6
 104a57c:	2149883a 	add	r4,r4,r5
 104a580:	200c943a 	slli	r6,r4,16
 104a584:	8c400104 	addi	r17,r17,4
 104a588:	200bd43a 	srai	r5,r4,16
 104a58c:	30c6b03a 	or	r3,r6,r3
 104a590:	10ffff15 	stw	r3,-4(r2)
 104a594:	a47fed2e 	bgeu	r20,r17,104a54c <__alt_data_end+0xfffca54c>
 104a598:	9485883a 	add	r2,r18,r18
 104a59c:	1085883a 	add	r2,r2,r2
 104a5a0:	a887883a 	add	r3,r21,r2
 104a5a4:	18800017 	ldw	r2,0(r3)
 104a5a8:	10000b1e 	bne	r2,zero,104a5d8 <quorem+0x1c8>
 104a5ac:	18bfff04 	addi	r2,r3,-4
 104a5b0:	a880082e 	bgeu	r21,r2,104a5d4 <quorem+0x1c4>
 104a5b4:	18ffff17 	ldw	r3,-4(r3)
 104a5b8:	18000326 	beq	r3,zero,104a5c8 <quorem+0x1b8>
 104a5bc:	00000506 	br	104a5d4 <quorem+0x1c4>
 104a5c0:	10c00017 	ldw	r3,0(r2)
 104a5c4:	1800031e 	bne	r3,zero,104a5d4 <quorem+0x1c4>
 104a5c8:	10bfff04 	addi	r2,r2,-4
 104a5cc:	94bfffc4 	addi	r18,r18,-1
 104a5d0:	a8bffb36 	bltu	r21,r2,104a5c0 <__alt_data_end+0xfffca5c0>
 104a5d4:	84800415 	stw	r18,16(r16)
 104a5d8:	9805883a 	mov	r2,r19
 104a5dc:	dfc00817 	ldw	ra,32(sp)
 104a5e0:	ddc00717 	ldw	r23,28(sp)
 104a5e4:	dd800617 	ldw	r22,24(sp)
 104a5e8:	dd400517 	ldw	r21,20(sp)
 104a5ec:	dd000417 	ldw	r20,16(sp)
 104a5f0:	dcc00317 	ldw	r19,12(sp)
 104a5f4:	dc800217 	ldw	r18,8(sp)
 104a5f8:	dc400117 	ldw	r17,4(sp)
 104a5fc:	dc000017 	ldw	r16,0(sp)
 104a600:	dec00904 	addi	sp,sp,36
 104a604:	f800283a 	ret
 104a608:	0005883a 	mov	r2,zero
 104a60c:	003ff306 	br	104a5dc <__alt_data_end+0xfffca5dc>

0104a610 <_dtoa_r>:
 104a610:	20801017 	ldw	r2,64(r4)
 104a614:	deffde04 	addi	sp,sp,-136
 104a618:	df002015 	stw	fp,128(sp)
 104a61c:	dcc01b15 	stw	r19,108(sp)
 104a620:	dc801a15 	stw	r18,104(sp)
 104a624:	dc401915 	stw	r17,100(sp)
 104a628:	dc001815 	stw	r16,96(sp)
 104a62c:	dfc02115 	stw	ra,132(sp)
 104a630:	ddc01f15 	stw	r23,124(sp)
 104a634:	dd801e15 	stw	r22,120(sp)
 104a638:	dd401d15 	stw	r21,116(sp)
 104a63c:	dd001c15 	stw	r20,112(sp)
 104a640:	d9c00315 	stw	r7,12(sp)
 104a644:	2039883a 	mov	fp,r4
 104a648:	3023883a 	mov	r17,r6
 104a64c:	2825883a 	mov	r18,r5
 104a650:	dc002417 	ldw	r16,144(sp)
 104a654:	3027883a 	mov	r19,r6
 104a658:	10000826 	beq	r2,zero,104a67c <_dtoa_r+0x6c>
 104a65c:	21801117 	ldw	r6,68(r4)
 104a660:	00c00044 	movi	r3,1
 104a664:	100b883a 	mov	r5,r2
 104a668:	1986983a 	sll	r3,r3,r6
 104a66c:	11800115 	stw	r6,4(r2)
 104a670:	10c00215 	stw	r3,8(r2)
 104a674:	104dd540 	call	104dd54 <_Bfree>
 104a678:	e0001015 	stw	zero,64(fp)
 104a67c:	88002e16 	blt	r17,zero,104a738 <_dtoa_r+0x128>
 104a680:	80000015 	stw	zero,0(r16)
 104a684:	889ffc2c 	andhi	r2,r17,32752
 104a688:	00dffc34 	movhi	r3,32752
 104a68c:	10c01c26 	beq	r2,r3,104a700 <_dtoa_r+0xf0>
 104a690:	000d883a 	mov	r6,zero
 104a694:	000f883a 	mov	r7,zero
 104a698:	9009883a 	mov	r4,r18
 104a69c:	980b883a 	mov	r5,r19
 104a6a0:	104471c0 	call	104471c <__eqdf2>
 104a6a4:	10002b1e 	bne	r2,zero,104a754 <_dtoa_r+0x144>
 104a6a8:	d9c02317 	ldw	r7,140(sp)
 104a6ac:	00800044 	movi	r2,1
 104a6b0:	38800015 	stw	r2,0(r7)
 104a6b4:	d8802517 	ldw	r2,148(sp)
 104a6b8:	10019e26 	beq	r2,zero,104ad34 <_dtoa_r+0x724>
 104a6bc:	d8c02517 	ldw	r3,148(sp)
 104a6c0:	00804174 	movhi	r2,261
 104a6c4:	109ad144 	addi	r2,r2,27461
 104a6c8:	18800015 	stw	r2,0(r3)
 104a6cc:	10bfffc4 	addi	r2,r2,-1
 104a6d0:	dfc02117 	ldw	ra,132(sp)
 104a6d4:	df002017 	ldw	fp,128(sp)
 104a6d8:	ddc01f17 	ldw	r23,124(sp)
 104a6dc:	dd801e17 	ldw	r22,120(sp)
 104a6e0:	dd401d17 	ldw	r21,116(sp)
 104a6e4:	dd001c17 	ldw	r20,112(sp)
 104a6e8:	dcc01b17 	ldw	r19,108(sp)
 104a6ec:	dc801a17 	ldw	r18,104(sp)
 104a6f0:	dc401917 	ldw	r17,100(sp)
 104a6f4:	dc001817 	ldw	r16,96(sp)
 104a6f8:	dec02204 	addi	sp,sp,136
 104a6fc:	f800283a 	ret
 104a700:	d8c02317 	ldw	r3,140(sp)
 104a704:	0089c3c4 	movi	r2,9999
 104a708:	18800015 	stw	r2,0(r3)
 104a70c:	90017726 	beq	r18,zero,104acec <_dtoa_r+0x6dc>
 104a710:	00804174 	movhi	r2,261
 104a714:	109ae504 	addi	r2,r2,27540
 104a718:	d9002517 	ldw	r4,148(sp)
 104a71c:	203fec26 	beq	r4,zero,104a6d0 <__alt_data_end+0xfffca6d0>
 104a720:	10c000c7 	ldb	r3,3(r2)
 104a724:	1801781e 	bne	r3,zero,104ad08 <_dtoa_r+0x6f8>
 104a728:	10c000c4 	addi	r3,r2,3
 104a72c:	d9802517 	ldw	r6,148(sp)
 104a730:	30c00015 	stw	r3,0(r6)
 104a734:	003fe606 	br	104a6d0 <__alt_data_end+0xfffca6d0>
 104a738:	04e00034 	movhi	r19,32768
 104a73c:	9cffffc4 	addi	r19,r19,-1
 104a740:	00800044 	movi	r2,1
 104a744:	8ce6703a 	and	r19,r17,r19
 104a748:	80800015 	stw	r2,0(r16)
 104a74c:	9823883a 	mov	r17,r19
 104a750:	003fcc06 	br	104a684 <__alt_data_end+0xfffca684>
 104a754:	d8800204 	addi	r2,sp,8
 104a758:	d8800015 	stw	r2,0(sp)
 104a75c:	d9c00104 	addi	r7,sp,4
 104a760:	900b883a 	mov	r5,r18
 104a764:	980d883a 	mov	r6,r19
 104a768:	e009883a 	mov	r4,fp
 104a76c:	8820d53a 	srli	r16,r17,20
 104a770:	104e9400 	call	104e940 <__d2b>
 104a774:	d8800915 	stw	r2,36(sp)
 104a778:	8001651e 	bne	r16,zero,104ad10 <_dtoa_r+0x700>
 104a77c:	dd800217 	ldw	r22,8(sp)
 104a780:	dc000117 	ldw	r16,4(sp)
 104a784:	00800804 	movi	r2,32
 104a788:	b421883a 	add	r16,r22,r16
 104a78c:	80c10c84 	addi	r3,r16,1074
 104a790:	10c2d10e 	bge	r2,r3,104b2d8 <_dtoa_r+0xcc8>
 104a794:	00801004 	movi	r2,64
 104a798:	81010484 	addi	r4,r16,1042
 104a79c:	10c7c83a 	sub	r3,r2,r3
 104a7a0:	9108d83a 	srl	r4,r18,r4
 104a7a4:	88e2983a 	sll	r17,r17,r3
 104a7a8:	2448b03a 	or	r4,r4,r17
 104a7ac:	1053d000 	call	1053d00 <__floatunsidf>
 104a7b0:	017f8434 	movhi	r5,65040
 104a7b4:	01800044 	movi	r6,1
 104a7b8:	1009883a 	mov	r4,r2
 104a7bc:	194b883a 	add	r5,r3,r5
 104a7c0:	843fffc4 	addi	r16,r16,-1
 104a7c4:	d9801115 	stw	r6,68(sp)
 104a7c8:	000d883a 	mov	r6,zero
 104a7cc:	01cffe34 	movhi	r7,16376
 104a7d0:	1044f980 	call	1044f98 <__subdf3>
 104a7d4:	0198dbf4 	movhi	r6,25455
 104a7d8:	01cff4f4 	movhi	r7,16339
 104a7dc:	3190d844 	addi	r6,r6,17249
 104a7e0:	39e1e9c4 	addi	r7,r7,-30809
 104a7e4:	1009883a 	mov	r4,r2
 104a7e8:	180b883a 	mov	r5,r3
 104a7ec:	10448800 	call	1044880 <__muldf3>
 104a7f0:	01a2d874 	movhi	r6,35681
 104a7f4:	01cff1f4 	movhi	r7,16327
 104a7f8:	31b22cc4 	addi	r6,r6,-14157
 104a7fc:	39e28a04 	addi	r7,r7,-30168
 104a800:	180b883a 	mov	r5,r3
 104a804:	1009883a 	mov	r4,r2
 104a808:	1043e700 	call	1043e70 <__adddf3>
 104a80c:	8009883a 	mov	r4,r16
 104a810:	1029883a 	mov	r20,r2
 104a814:	1823883a 	mov	r17,r3
 104a818:	10459140 	call	1045914 <__floatsidf>
 104a81c:	019427f4 	movhi	r6,20639
 104a820:	01cff4f4 	movhi	r7,16339
 104a824:	319e7ec4 	addi	r6,r6,31227
 104a828:	39d104c4 	addi	r7,r7,17427
 104a82c:	1009883a 	mov	r4,r2
 104a830:	180b883a 	mov	r5,r3
 104a834:	10448800 	call	1044880 <__muldf3>
 104a838:	100d883a 	mov	r6,r2
 104a83c:	180f883a 	mov	r7,r3
 104a840:	a009883a 	mov	r4,r20
 104a844:	880b883a 	mov	r5,r17
 104a848:	1043e700 	call	1043e70 <__adddf3>
 104a84c:	1009883a 	mov	r4,r2
 104a850:	180b883a 	mov	r5,r3
 104a854:	1029883a 	mov	r20,r2
 104a858:	1823883a 	mov	r17,r3
 104a85c:	10458940 	call	1045894 <__fixdfsi>
 104a860:	000d883a 	mov	r6,zero
 104a864:	000f883a 	mov	r7,zero
 104a868:	a009883a 	mov	r4,r20
 104a86c:	880b883a 	mov	r5,r17
 104a870:	d8800515 	stw	r2,20(sp)
 104a874:	1053c0c0 	call	1053c0c <__ledf2>
 104a878:	10028716 	blt	r2,zero,104b298 <_dtoa_r+0xc88>
 104a87c:	d8c00517 	ldw	r3,20(sp)
 104a880:	00800584 	movi	r2,22
 104a884:	10c27536 	bltu	r2,r3,104b25c <_dtoa_r+0xc4c>
 104a888:	180490fa 	slli	r2,r3,3
 104a88c:	00c04174 	movhi	r3,261
 104a890:	18db0104 	addi	r3,r3,27652
 104a894:	1885883a 	add	r2,r3,r2
 104a898:	11000017 	ldw	r4,0(r2)
 104a89c:	11400117 	ldw	r5,4(r2)
 104a8a0:	900d883a 	mov	r6,r18
 104a8a4:	980f883a 	mov	r7,r19
 104a8a8:	10447a40 	call	10447a4 <__gedf2>
 104a8ac:	00828d0e 	bge	zero,r2,104b2e4 <_dtoa_r+0xcd4>
 104a8b0:	d9000517 	ldw	r4,20(sp)
 104a8b4:	d8000e15 	stw	zero,56(sp)
 104a8b8:	213fffc4 	addi	r4,r4,-1
 104a8bc:	d9000515 	stw	r4,20(sp)
 104a8c0:	b42dc83a 	sub	r22,r22,r16
 104a8c4:	b5bfffc4 	addi	r22,r22,-1
 104a8c8:	b0026f16 	blt	r22,zero,104b288 <_dtoa_r+0xc78>
 104a8cc:	d8000815 	stw	zero,32(sp)
 104a8d0:	d9c00517 	ldw	r7,20(sp)
 104a8d4:	38026416 	blt	r7,zero,104b268 <_dtoa_r+0xc58>
 104a8d8:	b1ed883a 	add	r22,r22,r7
 104a8dc:	d9c00d15 	stw	r7,52(sp)
 104a8e0:	d8000a15 	stw	zero,40(sp)
 104a8e4:	d9800317 	ldw	r6,12(sp)
 104a8e8:	00800244 	movi	r2,9
 104a8ec:	11811436 	bltu	r2,r6,104ad40 <_dtoa_r+0x730>
 104a8f0:	00800144 	movi	r2,5
 104a8f4:	1184e10e 	bge	r2,r6,104bc7c <_dtoa_r+0x166c>
 104a8f8:	31bfff04 	addi	r6,r6,-4
 104a8fc:	d9800315 	stw	r6,12(sp)
 104a900:	0023883a 	mov	r17,zero
 104a904:	d9800317 	ldw	r6,12(sp)
 104a908:	008000c4 	movi	r2,3
 104a90c:	30836726 	beq	r6,r2,104b6ac <_dtoa_r+0x109c>
 104a910:	1183410e 	bge	r2,r6,104b618 <_dtoa_r+0x1008>
 104a914:	d9c00317 	ldw	r7,12(sp)
 104a918:	00800104 	movi	r2,4
 104a91c:	38827c26 	beq	r7,r2,104b310 <_dtoa_r+0xd00>
 104a920:	00800144 	movi	r2,5
 104a924:	3884c41e 	bne	r7,r2,104bc38 <_dtoa_r+0x1628>
 104a928:	00800044 	movi	r2,1
 104a92c:	d8800b15 	stw	r2,44(sp)
 104a930:	d8c00517 	ldw	r3,20(sp)
 104a934:	d9002217 	ldw	r4,136(sp)
 104a938:	1907883a 	add	r3,r3,r4
 104a93c:	19800044 	addi	r6,r3,1
 104a940:	d8c00c15 	stw	r3,48(sp)
 104a944:	d9800615 	stw	r6,24(sp)
 104a948:	0183a40e 	bge	zero,r6,104b7dc <_dtoa_r+0x11cc>
 104a94c:	d9800617 	ldw	r6,24(sp)
 104a950:	3021883a 	mov	r16,r6
 104a954:	e0001115 	stw	zero,68(fp)
 104a958:	008005c4 	movi	r2,23
 104a95c:	1184c92e 	bgeu	r2,r6,104bc84 <_dtoa_r+0x1674>
 104a960:	00c00044 	movi	r3,1
 104a964:	00800104 	movi	r2,4
 104a968:	1085883a 	add	r2,r2,r2
 104a96c:	11000504 	addi	r4,r2,20
 104a970:	180b883a 	mov	r5,r3
 104a974:	18c00044 	addi	r3,r3,1
 104a978:	313ffb2e 	bgeu	r6,r4,104a968 <__alt_data_end+0xfffca968>
 104a97c:	e1401115 	stw	r5,68(fp)
 104a980:	e009883a 	mov	r4,fp
 104a984:	104dcac0 	call	104dcac <_Balloc>
 104a988:	d8800715 	stw	r2,28(sp)
 104a98c:	e0801015 	stw	r2,64(fp)
 104a990:	00800384 	movi	r2,14
 104a994:	1400f736 	bltu	r2,r16,104ad74 <_dtoa_r+0x764>
 104a998:	8800f626 	beq	r17,zero,104ad74 <_dtoa_r+0x764>
 104a99c:	d9c00517 	ldw	r7,20(sp)
 104a9a0:	01c39a0e 	bge	zero,r7,104b80c <_dtoa_r+0x11fc>
 104a9a4:	388003cc 	andi	r2,r7,15
 104a9a8:	100490fa 	slli	r2,r2,3
 104a9ac:	382bd13a 	srai	r21,r7,4
 104a9b0:	00c04174 	movhi	r3,261
 104a9b4:	18db0104 	addi	r3,r3,27652
 104a9b8:	1885883a 	add	r2,r3,r2
 104a9bc:	a8c0040c 	andi	r3,r21,16
 104a9c0:	12400017 	ldw	r9,0(r2)
 104a9c4:	12000117 	ldw	r8,4(r2)
 104a9c8:	18037926 	beq	r3,zero,104b7b0 <_dtoa_r+0x11a0>
 104a9cc:	00804174 	movhi	r2,261
 104a9d0:	109af704 	addi	r2,r2,27612
 104a9d4:	11800817 	ldw	r6,32(r2)
 104a9d8:	11c00917 	ldw	r7,36(r2)
 104a9dc:	9009883a 	mov	r4,r18
 104a9e0:	980b883a 	mov	r5,r19
 104a9e4:	da001715 	stw	r8,92(sp)
 104a9e8:	da401615 	stw	r9,88(sp)
 104a9ec:	10533240 	call	1053324 <__divdf3>
 104a9f0:	da001717 	ldw	r8,92(sp)
 104a9f4:	da401617 	ldw	r9,88(sp)
 104a9f8:	ad4003cc 	andi	r21,r21,15
 104a9fc:	040000c4 	movi	r16,3
 104aa00:	1023883a 	mov	r17,r2
 104aa04:	1829883a 	mov	r20,r3
 104aa08:	a8001126 	beq	r21,zero,104aa50 <_dtoa_r+0x440>
 104aa0c:	05c04174 	movhi	r23,261
 104aa10:	bddaf704 	addi	r23,r23,27612
 104aa14:	4805883a 	mov	r2,r9
 104aa18:	4007883a 	mov	r3,r8
 104aa1c:	a980004c 	andi	r6,r21,1
 104aa20:	1009883a 	mov	r4,r2
 104aa24:	a82bd07a 	srai	r21,r21,1
 104aa28:	180b883a 	mov	r5,r3
 104aa2c:	30000426 	beq	r6,zero,104aa40 <_dtoa_r+0x430>
 104aa30:	b9800017 	ldw	r6,0(r23)
 104aa34:	b9c00117 	ldw	r7,4(r23)
 104aa38:	84000044 	addi	r16,r16,1
 104aa3c:	10448800 	call	1044880 <__muldf3>
 104aa40:	bdc00204 	addi	r23,r23,8
 104aa44:	a83ff51e 	bne	r21,zero,104aa1c <__alt_data_end+0xfffcaa1c>
 104aa48:	1013883a 	mov	r9,r2
 104aa4c:	1811883a 	mov	r8,r3
 104aa50:	480d883a 	mov	r6,r9
 104aa54:	400f883a 	mov	r7,r8
 104aa58:	8809883a 	mov	r4,r17
 104aa5c:	a00b883a 	mov	r5,r20
 104aa60:	10533240 	call	1053324 <__divdf3>
 104aa64:	d8800f15 	stw	r2,60(sp)
 104aa68:	d8c01015 	stw	r3,64(sp)
 104aa6c:	d8c00e17 	ldw	r3,56(sp)
 104aa70:	18000626 	beq	r3,zero,104aa8c <_dtoa_r+0x47c>
 104aa74:	d9000f17 	ldw	r4,60(sp)
 104aa78:	d9401017 	ldw	r5,64(sp)
 104aa7c:	000d883a 	mov	r6,zero
 104aa80:	01cffc34 	movhi	r7,16368
 104aa84:	1053c0c0 	call	1053c0c <__ledf2>
 104aa88:	10040b16 	blt	r2,zero,104bab8 <_dtoa_r+0x14a8>
 104aa8c:	8009883a 	mov	r4,r16
 104aa90:	10459140 	call	1045914 <__floatsidf>
 104aa94:	d9800f17 	ldw	r6,60(sp)
 104aa98:	d9c01017 	ldw	r7,64(sp)
 104aa9c:	1009883a 	mov	r4,r2
 104aaa0:	180b883a 	mov	r5,r3
 104aaa4:	10448800 	call	1044880 <__muldf3>
 104aaa8:	000d883a 	mov	r6,zero
 104aaac:	01d00734 	movhi	r7,16412
 104aab0:	1009883a 	mov	r4,r2
 104aab4:	180b883a 	mov	r5,r3
 104aab8:	1043e700 	call	1043e70 <__adddf3>
 104aabc:	1021883a 	mov	r16,r2
 104aac0:	d8800617 	ldw	r2,24(sp)
 104aac4:	047f3034 	movhi	r17,64704
 104aac8:	1c63883a 	add	r17,r3,r17
 104aacc:	10031826 	beq	r2,zero,104b730 <_dtoa_r+0x1120>
 104aad0:	d8c00517 	ldw	r3,20(sp)
 104aad4:	db000617 	ldw	r12,24(sp)
 104aad8:	d8c01315 	stw	r3,76(sp)
 104aadc:	d9000b17 	ldw	r4,44(sp)
 104aae0:	20038f26 	beq	r4,zero,104b920 <_dtoa_r+0x1310>
 104aae4:	60bfffc4 	addi	r2,r12,-1
 104aae8:	100490fa 	slli	r2,r2,3
 104aaec:	00c04174 	movhi	r3,261
 104aaf0:	18db0104 	addi	r3,r3,27652
 104aaf4:	1885883a 	add	r2,r3,r2
 104aaf8:	11800017 	ldw	r6,0(r2)
 104aafc:	11c00117 	ldw	r7,4(r2)
 104ab00:	d8800717 	ldw	r2,28(sp)
 104ab04:	0009883a 	mov	r4,zero
 104ab08:	014ff834 	movhi	r5,16352
 104ab0c:	db001615 	stw	r12,88(sp)
 104ab10:	15c00044 	addi	r23,r2,1
 104ab14:	10533240 	call	1053324 <__divdf3>
 104ab18:	800d883a 	mov	r6,r16
 104ab1c:	880f883a 	mov	r7,r17
 104ab20:	1009883a 	mov	r4,r2
 104ab24:	180b883a 	mov	r5,r3
 104ab28:	1044f980 	call	1044f98 <__subdf3>
 104ab2c:	d9401017 	ldw	r5,64(sp)
 104ab30:	d9000f17 	ldw	r4,60(sp)
 104ab34:	102b883a 	mov	r21,r2
 104ab38:	d8c01215 	stw	r3,72(sp)
 104ab3c:	10458940 	call	1045894 <__fixdfsi>
 104ab40:	1009883a 	mov	r4,r2
 104ab44:	1029883a 	mov	r20,r2
 104ab48:	10459140 	call	1045914 <__floatsidf>
 104ab4c:	d9000f17 	ldw	r4,60(sp)
 104ab50:	d9401017 	ldw	r5,64(sp)
 104ab54:	100d883a 	mov	r6,r2
 104ab58:	180f883a 	mov	r7,r3
 104ab5c:	1044f980 	call	1044f98 <__subdf3>
 104ab60:	1823883a 	mov	r17,r3
 104ab64:	d8c00717 	ldw	r3,28(sp)
 104ab68:	d9401217 	ldw	r5,72(sp)
 104ab6c:	a2000c04 	addi	r8,r20,48
 104ab70:	1021883a 	mov	r16,r2
 104ab74:	1a000005 	stb	r8,0(r3)
 104ab78:	800d883a 	mov	r6,r16
 104ab7c:	880f883a 	mov	r7,r17
 104ab80:	a809883a 	mov	r4,r21
 104ab84:	4029883a 	mov	r20,r8
 104ab88:	10447a40 	call	10447a4 <__gedf2>
 104ab8c:	00841d16 	blt	zero,r2,104bc04 <_dtoa_r+0x15f4>
 104ab90:	800d883a 	mov	r6,r16
 104ab94:	880f883a 	mov	r7,r17
 104ab98:	0009883a 	mov	r4,zero
 104ab9c:	014ffc34 	movhi	r5,16368
 104aba0:	1044f980 	call	1044f98 <__subdf3>
 104aba4:	d9401217 	ldw	r5,72(sp)
 104aba8:	100d883a 	mov	r6,r2
 104abac:	180f883a 	mov	r7,r3
 104abb0:	a809883a 	mov	r4,r21
 104abb4:	10447a40 	call	10447a4 <__gedf2>
 104abb8:	db001617 	ldw	r12,88(sp)
 104abbc:	00840e16 	blt	zero,r2,104bbf8 <_dtoa_r+0x15e8>
 104abc0:	00800044 	movi	r2,1
 104abc4:	13006b0e 	bge	r2,r12,104ad74 <_dtoa_r+0x764>
 104abc8:	d9000717 	ldw	r4,28(sp)
 104abcc:	dd800f15 	stw	r22,60(sp)
 104abd0:	dcc01015 	stw	r19,64(sp)
 104abd4:	2319883a 	add	r12,r4,r12
 104abd8:	dcc01217 	ldw	r19,72(sp)
 104abdc:	602d883a 	mov	r22,r12
 104abe0:	dc801215 	stw	r18,72(sp)
 104abe4:	b825883a 	mov	r18,r23
 104abe8:	00000906 	br	104ac10 <_dtoa_r+0x600>
 104abec:	1044f980 	call	1044f98 <__subdf3>
 104abf0:	a80d883a 	mov	r6,r21
 104abf4:	980f883a 	mov	r7,r19
 104abf8:	1009883a 	mov	r4,r2
 104abfc:	180b883a 	mov	r5,r3
 104ac00:	1053c0c0 	call	1053c0c <__ledf2>
 104ac04:	1003e816 	blt	r2,zero,104bba8 <_dtoa_r+0x1598>
 104ac08:	b825883a 	mov	r18,r23
 104ac0c:	bd83e926 	beq	r23,r22,104bbb4 <_dtoa_r+0x15a4>
 104ac10:	a809883a 	mov	r4,r21
 104ac14:	980b883a 	mov	r5,r19
 104ac18:	000d883a 	mov	r6,zero
 104ac1c:	01d00934 	movhi	r7,16420
 104ac20:	10448800 	call	1044880 <__muldf3>
 104ac24:	000d883a 	mov	r6,zero
 104ac28:	01d00934 	movhi	r7,16420
 104ac2c:	8009883a 	mov	r4,r16
 104ac30:	880b883a 	mov	r5,r17
 104ac34:	102b883a 	mov	r21,r2
 104ac38:	1827883a 	mov	r19,r3
 104ac3c:	10448800 	call	1044880 <__muldf3>
 104ac40:	180b883a 	mov	r5,r3
 104ac44:	1009883a 	mov	r4,r2
 104ac48:	1821883a 	mov	r16,r3
 104ac4c:	1023883a 	mov	r17,r2
 104ac50:	10458940 	call	1045894 <__fixdfsi>
 104ac54:	1009883a 	mov	r4,r2
 104ac58:	1029883a 	mov	r20,r2
 104ac5c:	10459140 	call	1045914 <__floatsidf>
 104ac60:	8809883a 	mov	r4,r17
 104ac64:	800b883a 	mov	r5,r16
 104ac68:	100d883a 	mov	r6,r2
 104ac6c:	180f883a 	mov	r7,r3
 104ac70:	1044f980 	call	1044f98 <__subdf3>
 104ac74:	a5000c04 	addi	r20,r20,48
 104ac78:	a80d883a 	mov	r6,r21
 104ac7c:	980f883a 	mov	r7,r19
 104ac80:	1009883a 	mov	r4,r2
 104ac84:	180b883a 	mov	r5,r3
 104ac88:	95000005 	stb	r20,0(r18)
 104ac8c:	1021883a 	mov	r16,r2
 104ac90:	1823883a 	mov	r17,r3
 104ac94:	1053c0c0 	call	1053c0c <__ledf2>
 104ac98:	bdc00044 	addi	r23,r23,1
 104ac9c:	800d883a 	mov	r6,r16
 104aca0:	880f883a 	mov	r7,r17
 104aca4:	0009883a 	mov	r4,zero
 104aca8:	014ffc34 	movhi	r5,16368
 104acac:	103fcf0e 	bge	r2,zero,104abec <__alt_data_end+0xfffcabec>
 104acb0:	d8c01317 	ldw	r3,76(sp)
 104acb4:	d8c00515 	stw	r3,20(sp)
 104acb8:	d9400917 	ldw	r5,36(sp)
 104acbc:	e009883a 	mov	r4,fp
 104acc0:	104dd540 	call	104dd54 <_Bfree>
 104acc4:	d9000517 	ldw	r4,20(sp)
 104acc8:	d9802317 	ldw	r6,140(sp)
 104accc:	d9c02517 	ldw	r7,148(sp)
 104acd0:	b8000005 	stb	zero,0(r23)
 104acd4:	20800044 	addi	r2,r4,1
 104acd8:	30800015 	stw	r2,0(r6)
 104acdc:	3802aa26 	beq	r7,zero,104b788 <_dtoa_r+0x1178>
 104ace0:	3dc00015 	stw	r23,0(r7)
 104ace4:	d8800717 	ldw	r2,28(sp)
 104ace8:	003e7906 	br	104a6d0 <__alt_data_end+0xfffca6d0>
 104acec:	00800434 	movhi	r2,16
 104acf0:	10bfffc4 	addi	r2,r2,-1
 104acf4:	88a2703a 	and	r17,r17,r2
 104acf8:	883e851e 	bne	r17,zero,104a710 <__alt_data_end+0xfffca710>
 104acfc:	00804174 	movhi	r2,261
 104ad00:	109ae204 	addi	r2,r2,27528
 104ad04:	003e8406 	br	104a718 <__alt_data_end+0xfffca718>
 104ad08:	10c00204 	addi	r3,r2,8
 104ad0c:	003e8706 	br	104a72c <__alt_data_end+0xfffca72c>
 104ad10:	01400434 	movhi	r5,16
 104ad14:	297fffc4 	addi	r5,r5,-1
 104ad18:	994a703a 	and	r5,r19,r5
 104ad1c:	9009883a 	mov	r4,r18
 104ad20:	843f0044 	addi	r16,r16,-1023
 104ad24:	294ffc34 	orhi	r5,r5,16368
 104ad28:	dd800217 	ldw	r22,8(sp)
 104ad2c:	d8001115 	stw	zero,68(sp)
 104ad30:	003ea506 	br	104a7c8 <__alt_data_end+0xfffca7c8>
 104ad34:	00804174 	movhi	r2,261
 104ad38:	109ad104 	addi	r2,r2,27460
 104ad3c:	003e6406 	br	104a6d0 <__alt_data_end+0xfffca6d0>
 104ad40:	e0001115 	stw	zero,68(fp)
 104ad44:	000b883a 	mov	r5,zero
 104ad48:	e009883a 	mov	r4,fp
 104ad4c:	104dcac0 	call	104dcac <_Balloc>
 104ad50:	01bfffc4 	movi	r6,-1
 104ad54:	01c00044 	movi	r7,1
 104ad58:	d8800715 	stw	r2,28(sp)
 104ad5c:	d9800c15 	stw	r6,48(sp)
 104ad60:	e0801015 	stw	r2,64(fp)
 104ad64:	d8000315 	stw	zero,12(sp)
 104ad68:	d9c00b15 	stw	r7,44(sp)
 104ad6c:	d9800615 	stw	r6,24(sp)
 104ad70:	d8002215 	stw	zero,136(sp)
 104ad74:	d8800117 	ldw	r2,4(sp)
 104ad78:	10008916 	blt	r2,zero,104afa0 <_dtoa_r+0x990>
 104ad7c:	d9000517 	ldw	r4,20(sp)
 104ad80:	00c00384 	movi	r3,14
 104ad84:	19008616 	blt	r3,r4,104afa0 <_dtoa_r+0x990>
 104ad88:	200490fa 	slli	r2,r4,3
 104ad8c:	00c04174 	movhi	r3,261
 104ad90:	d9802217 	ldw	r6,136(sp)
 104ad94:	18db0104 	addi	r3,r3,27652
 104ad98:	1885883a 	add	r2,r3,r2
 104ad9c:	14000017 	ldw	r16,0(r2)
 104ada0:	14400117 	ldw	r17,4(r2)
 104ada4:	30016316 	blt	r6,zero,104b334 <_dtoa_r+0xd24>
 104ada8:	800d883a 	mov	r6,r16
 104adac:	880f883a 	mov	r7,r17
 104adb0:	9009883a 	mov	r4,r18
 104adb4:	980b883a 	mov	r5,r19
 104adb8:	10533240 	call	1053324 <__divdf3>
 104adbc:	180b883a 	mov	r5,r3
 104adc0:	1009883a 	mov	r4,r2
 104adc4:	10458940 	call	1045894 <__fixdfsi>
 104adc8:	1009883a 	mov	r4,r2
 104adcc:	102b883a 	mov	r21,r2
 104add0:	10459140 	call	1045914 <__floatsidf>
 104add4:	800d883a 	mov	r6,r16
 104add8:	880f883a 	mov	r7,r17
 104addc:	1009883a 	mov	r4,r2
 104ade0:	180b883a 	mov	r5,r3
 104ade4:	10448800 	call	1044880 <__muldf3>
 104ade8:	100d883a 	mov	r6,r2
 104adec:	180f883a 	mov	r7,r3
 104adf0:	9009883a 	mov	r4,r18
 104adf4:	980b883a 	mov	r5,r19
 104adf8:	1044f980 	call	1044f98 <__subdf3>
 104adfc:	d9c00717 	ldw	r7,28(sp)
 104ae00:	1009883a 	mov	r4,r2
 104ae04:	a8800c04 	addi	r2,r21,48
 104ae08:	38800005 	stb	r2,0(r7)
 104ae0c:	3dc00044 	addi	r23,r7,1
 104ae10:	d9c00617 	ldw	r7,24(sp)
 104ae14:	01800044 	movi	r6,1
 104ae18:	180b883a 	mov	r5,r3
 104ae1c:	2005883a 	mov	r2,r4
 104ae20:	39803826 	beq	r7,r6,104af04 <_dtoa_r+0x8f4>
 104ae24:	000d883a 	mov	r6,zero
 104ae28:	01d00934 	movhi	r7,16420
 104ae2c:	10448800 	call	1044880 <__muldf3>
 104ae30:	000d883a 	mov	r6,zero
 104ae34:	000f883a 	mov	r7,zero
 104ae38:	1009883a 	mov	r4,r2
 104ae3c:	180b883a 	mov	r5,r3
 104ae40:	1025883a 	mov	r18,r2
 104ae44:	1827883a 	mov	r19,r3
 104ae48:	104471c0 	call	104471c <__eqdf2>
 104ae4c:	103f9a26 	beq	r2,zero,104acb8 <__alt_data_end+0xfffcacb8>
 104ae50:	d9c00617 	ldw	r7,24(sp)
 104ae54:	d8c00717 	ldw	r3,28(sp)
 104ae58:	b829883a 	mov	r20,r23
 104ae5c:	38bfffc4 	addi	r2,r7,-1
 104ae60:	18ad883a 	add	r22,r3,r2
 104ae64:	00000a06 	br	104ae90 <_dtoa_r+0x880>
 104ae68:	10448800 	call	1044880 <__muldf3>
 104ae6c:	000d883a 	mov	r6,zero
 104ae70:	000f883a 	mov	r7,zero
 104ae74:	1009883a 	mov	r4,r2
 104ae78:	180b883a 	mov	r5,r3
 104ae7c:	1025883a 	mov	r18,r2
 104ae80:	1827883a 	mov	r19,r3
 104ae84:	b829883a 	mov	r20,r23
 104ae88:	104471c0 	call	104471c <__eqdf2>
 104ae8c:	103f8a26 	beq	r2,zero,104acb8 <__alt_data_end+0xfffcacb8>
 104ae90:	800d883a 	mov	r6,r16
 104ae94:	880f883a 	mov	r7,r17
 104ae98:	9009883a 	mov	r4,r18
 104ae9c:	980b883a 	mov	r5,r19
 104aea0:	10533240 	call	1053324 <__divdf3>
 104aea4:	180b883a 	mov	r5,r3
 104aea8:	1009883a 	mov	r4,r2
 104aeac:	10458940 	call	1045894 <__fixdfsi>
 104aeb0:	1009883a 	mov	r4,r2
 104aeb4:	102b883a 	mov	r21,r2
 104aeb8:	10459140 	call	1045914 <__floatsidf>
 104aebc:	800d883a 	mov	r6,r16
 104aec0:	880f883a 	mov	r7,r17
 104aec4:	1009883a 	mov	r4,r2
 104aec8:	180b883a 	mov	r5,r3
 104aecc:	10448800 	call	1044880 <__muldf3>
 104aed0:	100d883a 	mov	r6,r2
 104aed4:	180f883a 	mov	r7,r3
 104aed8:	9009883a 	mov	r4,r18
 104aedc:	980b883a 	mov	r5,r19
 104aee0:	1044f980 	call	1044f98 <__subdf3>
 104aee4:	aa000c04 	addi	r8,r21,48
 104aee8:	a2000005 	stb	r8,0(r20)
 104aeec:	000d883a 	mov	r6,zero
 104aef0:	01d00934 	movhi	r7,16420
 104aef4:	1009883a 	mov	r4,r2
 104aef8:	180b883a 	mov	r5,r3
 104aefc:	a5c00044 	addi	r23,r20,1
 104af00:	b53fd91e 	bne	r22,r20,104ae68 <__alt_data_end+0xfffcae68>
 104af04:	100d883a 	mov	r6,r2
 104af08:	180f883a 	mov	r7,r3
 104af0c:	1009883a 	mov	r4,r2
 104af10:	180b883a 	mov	r5,r3
 104af14:	1043e700 	call	1043e70 <__adddf3>
 104af18:	100d883a 	mov	r6,r2
 104af1c:	180f883a 	mov	r7,r3
 104af20:	8009883a 	mov	r4,r16
 104af24:	880b883a 	mov	r5,r17
 104af28:	1027883a 	mov	r19,r2
 104af2c:	1825883a 	mov	r18,r3
 104af30:	1053c0c0 	call	1053c0c <__ledf2>
 104af34:	10000816 	blt	r2,zero,104af58 <_dtoa_r+0x948>
 104af38:	980d883a 	mov	r6,r19
 104af3c:	900f883a 	mov	r7,r18
 104af40:	8009883a 	mov	r4,r16
 104af44:	880b883a 	mov	r5,r17
 104af48:	104471c0 	call	104471c <__eqdf2>
 104af4c:	103f5a1e 	bne	r2,zero,104acb8 <__alt_data_end+0xfffcacb8>
 104af50:	ad40004c 	andi	r21,r21,1
 104af54:	a83f5826 	beq	r21,zero,104acb8 <__alt_data_end+0xfffcacb8>
 104af58:	bd3fffc3 	ldbu	r20,-1(r23)
 104af5c:	b8bfffc4 	addi	r2,r23,-1
 104af60:	1007883a 	mov	r3,r2
 104af64:	01400e44 	movi	r5,57
 104af68:	d9800717 	ldw	r6,28(sp)
 104af6c:	00000506 	br	104af84 <_dtoa_r+0x974>
 104af70:	18ffffc4 	addi	r3,r3,-1
 104af74:	11824726 	beq	r2,r6,104b894 <_dtoa_r+0x1284>
 104af78:	1d000003 	ldbu	r20,0(r3)
 104af7c:	102f883a 	mov	r23,r2
 104af80:	10bfffc4 	addi	r2,r2,-1
 104af84:	a1003fcc 	andi	r4,r20,255
 104af88:	2100201c 	xori	r4,r4,128
 104af8c:	213fe004 	addi	r4,r4,-128
 104af90:	217ff726 	beq	r4,r5,104af70 <__alt_data_end+0xfffcaf70>
 104af94:	a2000044 	addi	r8,r20,1
 104af98:	12000005 	stb	r8,0(r2)
 104af9c:	003f4606 	br	104acb8 <__alt_data_end+0xfffcacb8>
 104afa0:	d9000b17 	ldw	r4,44(sp)
 104afa4:	2000c826 	beq	r4,zero,104b2c8 <_dtoa_r+0xcb8>
 104afa8:	d9800317 	ldw	r6,12(sp)
 104afac:	00c00044 	movi	r3,1
 104afb0:	1980f90e 	bge	r3,r6,104b398 <_dtoa_r+0xd88>
 104afb4:	d8800617 	ldw	r2,24(sp)
 104afb8:	d8c00a17 	ldw	r3,40(sp)
 104afbc:	157fffc4 	addi	r21,r2,-1
 104afc0:	1d41f316 	blt	r3,r21,104b790 <_dtoa_r+0x1180>
 104afc4:	1d6bc83a 	sub	r21,r3,r21
 104afc8:	d9c00617 	ldw	r7,24(sp)
 104afcc:	3802aa16 	blt	r7,zero,104ba78 <_dtoa_r+0x1468>
 104afd0:	dd000817 	ldw	r20,32(sp)
 104afd4:	d8800617 	ldw	r2,24(sp)
 104afd8:	d8c00817 	ldw	r3,32(sp)
 104afdc:	01400044 	movi	r5,1
 104afe0:	e009883a 	mov	r4,fp
 104afe4:	1887883a 	add	r3,r3,r2
 104afe8:	d8c00815 	stw	r3,32(sp)
 104afec:	b0ad883a 	add	r22,r22,r2
 104aff0:	104e0b80 	call	104e0b8 <__i2b>
 104aff4:	1023883a 	mov	r17,r2
 104aff8:	a0000826 	beq	r20,zero,104b01c <_dtoa_r+0xa0c>
 104affc:	0580070e 	bge	zero,r22,104b01c <_dtoa_r+0xa0c>
 104b000:	a005883a 	mov	r2,r20
 104b004:	b500b916 	blt	r22,r20,104b2ec <_dtoa_r+0xcdc>
 104b008:	d9000817 	ldw	r4,32(sp)
 104b00c:	a0a9c83a 	sub	r20,r20,r2
 104b010:	b0adc83a 	sub	r22,r22,r2
 104b014:	2089c83a 	sub	r4,r4,r2
 104b018:	d9000815 	stw	r4,32(sp)
 104b01c:	d9800a17 	ldw	r6,40(sp)
 104b020:	0181810e 	bge	zero,r6,104b628 <_dtoa_r+0x1018>
 104b024:	d9c00b17 	ldw	r7,44(sp)
 104b028:	3800b326 	beq	r7,zero,104b2f8 <_dtoa_r+0xce8>
 104b02c:	a800b226 	beq	r21,zero,104b2f8 <_dtoa_r+0xce8>
 104b030:	880b883a 	mov	r5,r17
 104b034:	a80d883a 	mov	r6,r21
 104b038:	e009883a 	mov	r4,fp
 104b03c:	104e2ec0 	call	104e2ec <__pow5mult>
 104b040:	d9800917 	ldw	r6,36(sp)
 104b044:	100b883a 	mov	r5,r2
 104b048:	e009883a 	mov	r4,fp
 104b04c:	1023883a 	mov	r17,r2
 104b050:	104e0f40 	call	104e0f4 <__multiply>
 104b054:	1021883a 	mov	r16,r2
 104b058:	d8800a17 	ldw	r2,40(sp)
 104b05c:	d9400917 	ldw	r5,36(sp)
 104b060:	e009883a 	mov	r4,fp
 104b064:	1545c83a 	sub	r2,r2,r21
 104b068:	d8800a15 	stw	r2,40(sp)
 104b06c:	104dd540 	call	104dd54 <_Bfree>
 104b070:	d8c00a17 	ldw	r3,40(sp)
 104b074:	18009f1e 	bne	r3,zero,104b2f4 <_dtoa_r+0xce4>
 104b078:	05c00044 	movi	r23,1
 104b07c:	e009883a 	mov	r4,fp
 104b080:	b80b883a 	mov	r5,r23
 104b084:	104e0b80 	call	104e0b8 <__i2b>
 104b088:	d9000d17 	ldw	r4,52(sp)
 104b08c:	102b883a 	mov	r21,r2
 104b090:	2000ce26 	beq	r4,zero,104b3cc <_dtoa_r+0xdbc>
 104b094:	200d883a 	mov	r6,r4
 104b098:	100b883a 	mov	r5,r2
 104b09c:	e009883a 	mov	r4,fp
 104b0a0:	104e2ec0 	call	104e2ec <__pow5mult>
 104b0a4:	d9800317 	ldw	r6,12(sp)
 104b0a8:	102b883a 	mov	r21,r2
 104b0ac:	b981810e 	bge	r23,r6,104b6b4 <_dtoa_r+0x10a4>
 104b0b0:	0027883a 	mov	r19,zero
 104b0b4:	a8800417 	ldw	r2,16(r21)
 104b0b8:	05c00804 	movi	r23,32
 104b0bc:	10800104 	addi	r2,r2,4
 104b0c0:	1085883a 	add	r2,r2,r2
 104b0c4:	1085883a 	add	r2,r2,r2
 104b0c8:	a885883a 	add	r2,r21,r2
 104b0cc:	11000017 	ldw	r4,0(r2)
 104b0d0:	104dfa00 	call	104dfa0 <__hi0bits>
 104b0d4:	b885c83a 	sub	r2,r23,r2
 104b0d8:	1585883a 	add	r2,r2,r22
 104b0dc:	108007cc 	andi	r2,r2,31
 104b0e0:	1000b326 	beq	r2,zero,104b3b0 <_dtoa_r+0xda0>
 104b0e4:	00c00804 	movi	r3,32
 104b0e8:	1887c83a 	sub	r3,r3,r2
 104b0ec:	01000104 	movi	r4,4
 104b0f0:	20c2cd0e 	bge	r4,r3,104bc28 <_dtoa_r+0x1618>
 104b0f4:	00c00704 	movi	r3,28
 104b0f8:	1885c83a 	sub	r2,r3,r2
 104b0fc:	d8c00817 	ldw	r3,32(sp)
 104b100:	a0a9883a 	add	r20,r20,r2
 104b104:	b0ad883a 	add	r22,r22,r2
 104b108:	1887883a 	add	r3,r3,r2
 104b10c:	d8c00815 	stw	r3,32(sp)
 104b110:	d9800817 	ldw	r6,32(sp)
 104b114:	0180040e 	bge	zero,r6,104b128 <_dtoa_r+0xb18>
 104b118:	800b883a 	mov	r5,r16
 104b11c:	e009883a 	mov	r4,fp
 104b120:	104e42c0 	call	104e42c <__lshift>
 104b124:	1021883a 	mov	r16,r2
 104b128:	0580050e 	bge	zero,r22,104b140 <_dtoa_r+0xb30>
 104b12c:	a80b883a 	mov	r5,r21
 104b130:	b00d883a 	mov	r6,r22
 104b134:	e009883a 	mov	r4,fp
 104b138:	104e42c0 	call	104e42c <__lshift>
 104b13c:	102b883a 	mov	r21,r2
 104b140:	d9c00e17 	ldw	r7,56(sp)
 104b144:	3801211e 	bne	r7,zero,104b5cc <_dtoa_r+0xfbc>
 104b148:	d9800617 	ldw	r6,24(sp)
 104b14c:	0181380e 	bge	zero,r6,104b630 <_dtoa_r+0x1020>
 104b150:	d8c00b17 	ldw	r3,44(sp)
 104b154:	1800ab1e 	bne	r3,zero,104b404 <_dtoa_r+0xdf4>
 104b158:	dc800717 	ldw	r18,28(sp)
 104b15c:	dcc00617 	ldw	r19,24(sp)
 104b160:	9029883a 	mov	r20,r18
 104b164:	00000206 	br	104b170 <_dtoa_r+0xb60>
 104b168:	104dd7c0 	call	104dd7c <__multadd>
 104b16c:	1021883a 	mov	r16,r2
 104b170:	a80b883a 	mov	r5,r21
 104b174:	8009883a 	mov	r4,r16
 104b178:	104a4100 	call	104a410 <quorem>
 104b17c:	10800c04 	addi	r2,r2,48
 104b180:	90800005 	stb	r2,0(r18)
 104b184:	94800044 	addi	r18,r18,1
 104b188:	9507c83a 	sub	r3,r18,r20
 104b18c:	000f883a 	mov	r7,zero
 104b190:	01800284 	movi	r6,10
 104b194:	800b883a 	mov	r5,r16
 104b198:	e009883a 	mov	r4,fp
 104b19c:	1cfff216 	blt	r3,r19,104b168 <__alt_data_end+0xfffcb168>
 104b1a0:	1011883a 	mov	r8,r2
 104b1a4:	d8800617 	ldw	r2,24(sp)
 104b1a8:	0082370e 	bge	zero,r2,104ba88 <_dtoa_r+0x1478>
 104b1ac:	d9000717 	ldw	r4,28(sp)
 104b1b0:	0025883a 	mov	r18,zero
 104b1b4:	20af883a 	add	r23,r4,r2
 104b1b8:	01800044 	movi	r6,1
 104b1bc:	800b883a 	mov	r5,r16
 104b1c0:	e009883a 	mov	r4,fp
 104b1c4:	da001715 	stw	r8,92(sp)
 104b1c8:	104e42c0 	call	104e42c <__lshift>
 104b1cc:	a80b883a 	mov	r5,r21
 104b1d0:	1009883a 	mov	r4,r2
 104b1d4:	d8800915 	stw	r2,36(sp)
 104b1d8:	104e5740 	call	104e574 <__mcmp>
 104b1dc:	da001717 	ldw	r8,92(sp)
 104b1e0:	0081800e 	bge	zero,r2,104b7e4 <_dtoa_r+0x11d4>
 104b1e4:	b93fffc3 	ldbu	r4,-1(r23)
 104b1e8:	b8bfffc4 	addi	r2,r23,-1
 104b1ec:	1007883a 	mov	r3,r2
 104b1f0:	01800e44 	movi	r6,57
 104b1f4:	d9c00717 	ldw	r7,28(sp)
 104b1f8:	00000506 	br	104b210 <_dtoa_r+0xc00>
 104b1fc:	18ffffc4 	addi	r3,r3,-1
 104b200:	11c12326 	beq	r2,r7,104b690 <_dtoa_r+0x1080>
 104b204:	19000003 	ldbu	r4,0(r3)
 104b208:	102f883a 	mov	r23,r2
 104b20c:	10bfffc4 	addi	r2,r2,-1
 104b210:	21403fcc 	andi	r5,r4,255
 104b214:	2940201c 	xori	r5,r5,128
 104b218:	297fe004 	addi	r5,r5,-128
 104b21c:	29bff726 	beq	r5,r6,104b1fc <__alt_data_end+0xfffcb1fc>
 104b220:	21000044 	addi	r4,r4,1
 104b224:	11000005 	stb	r4,0(r2)
 104b228:	a80b883a 	mov	r5,r21
 104b22c:	e009883a 	mov	r4,fp
 104b230:	104dd540 	call	104dd54 <_Bfree>
 104b234:	883ea026 	beq	r17,zero,104acb8 <__alt_data_end+0xfffcacb8>
 104b238:	90000426 	beq	r18,zero,104b24c <_dtoa_r+0xc3c>
 104b23c:	94400326 	beq	r18,r17,104b24c <_dtoa_r+0xc3c>
 104b240:	900b883a 	mov	r5,r18
 104b244:	e009883a 	mov	r4,fp
 104b248:	104dd540 	call	104dd54 <_Bfree>
 104b24c:	880b883a 	mov	r5,r17
 104b250:	e009883a 	mov	r4,fp
 104b254:	104dd540 	call	104dd54 <_Bfree>
 104b258:	003e9706 	br	104acb8 <__alt_data_end+0xfffcacb8>
 104b25c:	01800044 	movi	r6,1
 104b260:	d9800e15 	stw	r6,56(sp)
 104b264:	003d9606 	br	104a8c0 <__alt_data_end+0xfffca8c0>
 104b268:	d8800817 	ldw	r2,32(sp)
 104b26c:	d8c00517 	ldw	r3,20(sp)
 104b270:	d8000d15 	stw	zero,52(sp)
 104b274:	10c5c83a 	sub	r2,r2,r3
 104b278:	00c9c83a 	sub	r4,zero,r3
 104b27c:	d8800815 	stw	r2,32(sp)
 104b280:	d9000a15 	stw	r4,40(sp)
 104b284:	003d9706 	br	104a8e4 <__alt_data_end+0xfffca8e4>
 104b288:	05adc83a 	sub	r22,zero,r22
 104b28c:	dd800815 	stw	r22,32(sp)
 104b290:	002d883a 	mov	r22,zero
 104b294:	003d8e06 	br	104a8d0 <__alt_data_end+0xfffca8d0>
 104b298:	d9000517 	ldw	r4,20(sp)
 104b29c:	10459140 	call	1045914 <__floatsidf>
 104b2a0:	100d883a 	mov	r6,r2
 104b2a4:	180f883a 	mov	r7,r3
 104b2a8:	a009883a 	mov	r4,r20
 104b2ac:	880b883a 	mov	r5,r17
 104b2b0:	104471c0 	call	104471c <__eqdf2>
 104b2b4:	103d7126 	beq	r2,zero,104a87c <__alt_data_end+0xfffca87c>
 104b2b8:	d9c00517 	ldw	r7,20(sp)
 104b2bc:	39ffffc4 	addi	r7,r7,-1
 104b2c0:	d9c00515 	stw	r7,20(sp)
 104b2c4:	003d6d06 	br	104a87c <__alt_data_end+0xfffca87c>
 104b2c8:	dd400a17 	ldw	r21,40(sp)
 104b2cc:	dd000817 	ldw	r20,32(sp)
 104b2d0:	0023883a 	mov	r17,zero
 104b2d4:	003f4806 	br	104aff8 <__alt_data_end+0xfffcaff8>
 104b2d8:	10e3c83a 	sub	r17,r2,r3
 104b2dc:	9448983a 	sll	r4,r18,r17
 104b2e0:	003d3206 	br	104a7ac <__alt_data_end+0xfffca7ac>
 104b2e4:	d8000e15 	stw	zero,56(sp)
 104b2e8:	003d7506 	br	104a8c0 <__alt_data_end+0xfffca8c0>
 104b2ec:	b005883a 	mov	r2,r22
 104b2f0:	003f4506 	br	104b008 <__alt_data_end+0xfffcb008>
 104b2f4:	dc000915 	stw	r16,36(sp)
 104b2f8:	d9800a17 	ldw	r6,40(sp)
 104b2fc:	d9400917 	ldw	r5,36(sp)
 104b300:	e009883a 	mov	r4,fp
 104b304:	104e2ec0 	call	104e2ec <__pow5mult>
 104b308:	1021883a 	mov	r16,r2
 104b30c:	003f5a06 	br	104b078 <__alt_data_end+0xfffcb078>
 104b310:	01c00044 	movi	r7,1
 104b314:	d9c00b15 	stw	r7,44(sp)
 104b318:	d8802217 	ldw	r2,136(sp)
 104b31c:	0081280e 	bge	zero,r2,104b7c0 <_dtoa_r+0x11b0>
 104b320:	100d883a 	mov	r6,r2
 104b324:	1021883a 	mov	r16,r2
 104b328:	d8800c15 	stw	r2,48(sp)
 104b32c:	d8800615 	stw	r2,24(sp)
 104b330:	003d8806 	br	104a954 <__alt_data_end+0xfffca954>
 104b334:	d8800617 	ldw	r2,24(sp)
 104b338:	00be9b16 	blt	zero,r2,104ada8 <__alt_data_end+0xfffcada8>
 104b33c:	10010f1e 	bne	r2,zero,104b77c <_dtoa_r+0x116c>
 104b340:	880b883a 	mov	r5,r17
 104b344:	000d883a 	mov	r6,zero
 104b348:	01d00534 	movhi	r7,16404
 104b34c:	8009883a 	mov	r4,r16
 104b350:	10448800 	call	1044880 <__muldf3>
 104b354:	900d883a 	mov	r6,r18
 104b358:	980f883a 	mov	r7,r19
 104b35c:	1009883a 	mov	r4,r2
 104b360:	180b883a 	mov	r5,r3
 104b364:	10447a40 	call	10447a4 <__gedf2>
 104b368:	002b883a 	mov	r21,zero
 104b36c:	0023883a 	mov	r17,zero
 104b370:	1000bf16 	blt	r2,zero,104b670 <_dtoa_r+0x1060>
 104b374:	d9802217 	ldw	r6,136(sp)
 104b378:	ddc00717 	ldw	r23,28(sp)
 104b37c:	018c303a 	nor	r6,zero,r6
 104b380:	d9800515 	stw	r6,20(sp)
 104b384:	a80b883a 	mov	r5,r21
 104b388:	e009883a 	mov	r4,fp
 104b38c:	104dd540 	call	104dd54 <_Bfree>
 104b390:	883e4926 	beq	r17,zero,104acb8 <__alt_data_end+0xfffcacb8>
 104b394:	003fad06 	br	104b24c <__alt_data_end+0xfffcb24c>
 104b398:	d9c01117 	ldw	r7,68(sp)
 104b39c:	3801bc26 	beq	r7,zero,104ba90 <_dtoa_r+0x1480>
 104b3a0:	10810cc4 	addi	r2,r2,1075
 104b3a4:	dd400a17 	ldw	r21,40(sp)
 104b3a8:	dd000817 	ldw	r20,32(sp)
 104b3ac:	003f0a06 	br	104afd8 <__alt_data_end+0xfffcafd8>
 104b3b0:	00800704 	movi	r2,28
 104b3b4:	d9000817 	ldw	r4,32(sp)
 104b3b8:	a0a9883a 	add	r20,r20,r2
 104b3bc:	b0ad883a 	add	r22,r22,r2
 104b3c0:	2089883a 	add	r4,r4,r2
 104b3c4:	d9000815 	stw	r4,32(sp)
 104b3c8:	003f5106 	br	104b110 <__alt_data_end+0xfffcb110>
 104b3cc:	d8c00317 	ldw	r3,12(sp)
 104b3d0:	b8c1fc0e 	bge	r23,r3,104bbc4 <_dtoa_r+0x15b4>
 104b3d4:	0027883a 	mov	r19,zero
 104b3d8:	b805883a 	mov	r2,r23
 104b3dc:	003f3e06 	br	104b0d8 <__alt_data_end+0xfffcb0d8>
 104b3e0:	880b883a 	mov	r5,r17
 104b3e4:	e009883a 	mov	r4,fp
 104b3e8:	000f883a 	mov	r7,zero
 104b3ec:	01800284 	movi	r6,10
 104b3f0:	104dd7c0 	call	104dd7c <__multadd>
 104b3f4:	d9000c17 	ldw	r4,48(sp)
 104b3f8:	1023883a 	mov	r17,r2
 104b3fc:	0102040e 	bge	zero,r4,104bc10 <_dtoa_r+0x1600>
 104b400:	d9000615 	stw	r4,24(sp)
 104b404:	0500050e 	bge	zero,r20,104b41c <_dtoa_r+0xe0c>
 104b408:	880b883a 	mov	r5,r17
 104b40c:	a00d883a 	mov	r6,r20
 104b410:	e009883a 	mov	r4,fp
 104b414:	104e42c0 	call	104e42c <__lshift>
 104b418:	1023883a 	mov	r17,r2
 104b41c:	9801241e 	bne	r19,zero,104b8b0 <_dtoa_r+0x12a0>
 104b420:	8829883a 	mov	r20,r17
 104b424:	d9000617 	ldw	r4,24(sp)
 104b428:	dcc00717 	ldw	r19,28(sp)
 104b42c:	9480004c 	andi	r18,r18,1
 104b430:	20bfffc4 	addi	r2,r4,-1
 104b434:	9885883a 	add	r2,r19,r2
 104b438:	d8800415 	stw	r2,16(sp)
 104b43c:	dc800615 	stw	r18,24(sp)
 104b440:	a80b883a 	mov	r5,r21
 104b444:	8009883a 	mov	r4,r16
 104b448:	104a4100 	call	104a410 <quorem>
 104b44c:	880b883a 	mov	r5,r17
 104b450:	8009883a 	mov	r4,r16
 104b454:	102f883a 	mov	r23,r2
 104b458:	104e5740 	call	104e574 <__mcmp>
 104b45c:	a80b883a 	mov	r5,r21
 104b460:	a00d883a 	mov	r6,r20
 104b464:	e009883a 	mov	r4,fp
 104b468:	102d883a 	mov	r22,r2
 104b46c:	104e5d40 	call	104e5d4 <__mdiff>
 104b470:	1007883a 	mov	r3,r2
 104b474:	10800317 	ldw	r2,12(r2)
 104b478:	bc800c04 	addi	r18,r23,48
 104b47c:	180b883a 	mov	r5,r3
 104b480:	10004e1e 	bne	r2,zero,104b5bc <_dtoa_r+0xfac>
 104b484:	8009883a 	mov	r4,r16
 104b488:	d8c01615 	stw	r3,88(sp)
 104b48c:	104e5740 	call	104e574 <__mcmp>
 104b490:	d8c01617 	ldw	r3,88(sp)
 104b494:	e009883a 	mov	r4,fp
 104b498:	d8801615 	stw	r2,88(sp)
 104b49c:	180b883a 	mov	r5,r3
 104b4a0:	104dd540 	call	104dd54 <_Bfree>
 104b4a4:	d8801617 	ldw	r2,88(sp)
 104b4a8:	1000041e 	bne	r2,zero,104b4bc <_dtoa_r+0xeac>
 104b4ac:	d9800317 	ldw	r6,12(sp)
 104b4b0:	3000021e 	bne	r6,zero,104b4bc <_dtoa_r+0xeac>
 104b4b4:	d8c00617 	ldw	r3,24(sp)
 104b4b8:	18003726 	beq	r3,zero,104b598 <_dtoa_r+0xf88>
 104b4bc:	b0002016 	blt	r22,zero,104b540 <_dtoa_r+0xf30>
 104b4c0:	b000041e 	bne	r22,zero,104b4d4 <_dtoa_r+0xec4>
 104b4c4:	d9000317 	ldw	r4,12(sp)
 104b4c8:	2000021e 	bne	r4,zero,104b4d4 <_dtoa_r+0xec4>
 104b4cc:	d8c00617 	ldw	r3,24(sp)
 104b4d0:	18001b26 	beq	r3,zero,104b540 <_dtoa_r+0xf30>
 104b4d4:	00810716 	blt	zero,r2,104b8f4 <_dtoa_r+0x12e4>
 104b4d8:	d8c00417 	ldw	r3,16(sp)
 104b4dc:	9d800044 	addi	r22,r19,1
 104b4e0:	9c800005 	stb	r18,0(r19)
 104b4e4:	b02f883a 	mov	r23,r22
 104b4e8:	98c10626 	beq	r19,r3,104b904 <_dtoa_r+0x12f4>
 104b4ec:	800b883a 	mov	r5,r16
 104b4f0:	000f883a 	mov	r7,zero
 104b4f4:	01800284 	movi	r6,10
 104b4f8:	e009883a 	mov	r4,fp
 104b4fc:	104dd7c0 	call	104dd7c <__multadd>
 104b500:	1021883a 	mov	r16,r2
 104b504:	000f883a 	mov	r7,zero
 104b508:	01800284 	movi	r6,10
 104b50c:	880b883a 	mov	r5,r17
 104b510:	e009883a 	mov	r4,fp
 104b514:	8d002526 	beq	r17,r20,104b5ac <_dtoa_r+0xf9c>
 104b518:	104dd7c0 	call	104dd7c <__multadd>
 104b51c:	a00b883a 	mov	r5,r20
 104b520:	000f883a 	mov	r7,zero
 104b524:	01800284 	movi	r6,10
 104b528:	e009883a 	mov	r4,fp
 104b52c:	1023883a 	mov	r17,r2
 104b530:	104dd7c0 	call	104dd7c <__multadd>
 104b534:	1029883a 	mov	r20,r2
 104b538:	b027883a 	mov	r19,r22
 104b53c:	003fc006 	br	104b440 <__alt_data_end+0xfffcb440>
 104b540:	9011883a 	mov	r8,r18
 104b544:	00800e0e 	bge	zero,r2,104b580 <_dtoa_r+0xf70>
 104b548:	800b883a 	mov	r5,r16
 104b54c:	01800044 	movi	r6,1
 104b550:	e009883a 	mov	r4,fp
 104b554:	da001715 	stw	r8,92(sp)
 104b558:	104e42c0 	call	104e42c <__lshift>
 104b55c:	a80b883a 	mov	r5,r21
 104b560:	1009883a 	mov	r4,r2
 104b564:	1021883a 	mov	r16,r2
 104b568:	104e5740 	call	104e574 <__mcmp>
 104b56c:	da001717 	ldw	r8,92(sp)
 104b570:	0081960e 	bge	zero,r2,104bbcc <_dtoa_r+0x15bc>
 104b574:	00800e44 	movi	r2,57
 104b578:	40817026 	beq	r8,r2,104bb3c <_dtoa_r+0x152c>
 104b57c:	ba000c44 	addi	r8,r23,49
 104b580:	8825883a 	mov	r18,r17
 104b584:	9dc00044 	addi	r23,r19,1
 104b588:	9a000005 	stb	r8,0(r19)
 104b58c:	a023883a 	mov	r17,r20
 104b590:	dc000915 	stw	r16,36(sp)
 104b594:	003f2406 	br	104b228 <__alt_data_end+0xfffcb228>
 104b598:	00800e44 	movi	r2,57
 104b59c:	9011883a 	mov	r8,r18
 104b5a0:	90816626 	beq	r18,r2,104bb3c <_dtoa_r+0x152c>
 104b5a4:	05bff516 	blt	zero,r22,104b57c <__alt_data_end+0xfffcb57c>
 104b5a8:	003ff506 	br	104b580 <__alt_data_end+0xfffcb580>
 104b5ac:	104dd7c0 	call	104dd7c <__multadd>
 104b5b0:	1023883a 	mov	r17,r2
 104b5b4:	1029883a 	mov	r20,r2
 104b5b8:	003fdf06 	br	104b538 <__alt_data_end+0xfffcb538>
 104b5bc:	e009883a 	mov	r4,fp
 104b5c0:	104dd540 	call	104dd54 <_Bfree>
 104b5c4:	00800044 	movi	r2,1
 104b5c8:	003fbc06 	br	104b4bc <__alt_data_end+0xfffcb4bc>
 104b5cc:	a80b883a 	mov	r5,r21
 104b5d0:	8009883a 	mov	r4,r16
 104b5d4:	104e5740 	call	104e574 <__mcmp>
 104b5d8:	103edb0e 	bge	r2,zero,104b148 <__alt_data_end+0xfffcb148>
 104b5dc:	800b883a 	mov	r5,r16
 104b5e0:	000f883a 	mov	r7,zero
 104b5e4:	01800284 	movi	r6,10
 104b5e8:	e009883a 	mov	r4,fp
 104b5ec:	104dd7c0 	call	104dd7c <__multadd>
 104b5f0:	1021883a 	mov	r16,r2
 104b5f4:	d8800517 	ldw	r2,20(sp)
 104b5f8:	d8c00b17 	ldw	r3,44(sp)
 104b5fc:	10bfffc4 	addi	r2,r2,-1
 104b600:	d8800515 	stw	r2,20(sp)
 104b604:	183f761e 	bne	r3,zero,104b3e0 <__alt_data_end+0xfffcb3e0>
 104b608:	d9000c17 	ldw	r4,48(sp)
 104b60c:	0101730e 	bge	zero,r4,104bbdc <_dtoa_r+0x15cc>
 104b610:	d9000615 	stw	r4,24(sp)
 104b614:	003ed006 	br	104b158 <__alt_data_end+0xfffcb158>
 104b618:	00800084 	movi	r2,2
 104b61c:	3081861e 	bne	r6,r2,104bc38 <_dtoa_r+0x1628>
 104b620:	d8000b15 	stw	zero,44(sp)
 104b624:	003f3c06 	br	104b318 <__alt_data_end+0xfffcb318>
 104b628:	dc000917 	ldw	r16,36(sp)
 104b62c:	003e9206 	br	104b078 <__alt_data_end+0xfffcb078>
 104b630:	d9c00317 	ldw	r7,12(sp)
 104b634:	00800084 	movi	r2,2
 104b638:	11fec50e 	bge	r2,r7,104b150 <__alt_data_end+0xfffcb150>
 104b63c:	d9000617 	ldw	r4,24(sp)
 104b640:	20013c1e 	bne	r4,zero,104bb34 <_dtoa_r+0x1524>
 104b644:	a80b883a 	mov	r5,r21
 104b648:	000f883a 	mov	r7,zero
 104b64c:	01800144 	movi	r6,5
 104b650:	e009883a 	mov	r4,fp
 104b654:	104dd7c0 	call	104dd7c <__multadd>
 104b658:	100b883a 	mov	r5,r2
 104b65c:	8009883a 	mov	r4,r16
 104b660:	102b883a 	mov	r21,r2
 104b664:	104e5740 	call	104e574 <__mcmp>
 104b668:	dc000915 	stw	r16,36(sp)
 104b66c:	00bf410e 	bge	zero,r2,104b374 <__alt_data_end+0xfffcb374>
 104b670:	d9c00717 	ldw	r7,28(sp)
 104b674:	00800c44 	movi	r2,49
 104b678:	38800005 	stb	r2,0(r7)
 104b67c:	d8800517 	ldw	r2,20(sp)
 104b680:	3dc00044 	addi	r23,r7,1
 104b684:	10800044 	addi	r2,r2,1
 104b688:	d8800515 	stw	r2,20(sp)
 104b68c:	003f3d06 	br	104b384 <__alt_data_end+0xfffcb384>
 104b690:	d9800517 	ldw	r6,20(sp)
 104b694:	d9c00717 	ldw	r7,28(sp)
 104b698:	00800c44 	movi	r2,49
 104b69c:	31800044 	addi	r6,r6,1
 104b6a0:	d9800515 	stw	r6,20(sp)
 104b6a4:	38800005 	stb	r2,0(r7)
 104b6a8:	003edf06 	br	104b228 <__alt_data_end+0xfffcb228>
 104b6ac:	d8000b15 	stw	zero,44(sp)
 104b6b0:	003c9f06 	br	104a930 <__alt_data_end+0xfffca930>
 104b6b4:	903e7e1e 	bne	r18,zero,104b0b0 <__alt_data_end+0xfffcb0b0>
 104b6b8:	00800434 	movhi	r2,16
 104b6bc:	10bfffc4 	addi	r2,r2,-1
 104b6c0:	9884703a 	and	r2,r19,r2
 104b6c4:	1000ea1e 	bne	r2,zero,104ba70 <_dtoa_r+0x1460>
 104b6c8:	9cdffc2c 	andhi	r19,r19,32752
 104b6cc:	9800e826 	beq	r19,zero,104ba70 <_dtoa_r+0x1460>
 104b6d0:	d9c00817 	ldw	r7,32(sp)
 104b6d4:	b5800044 	addi	r22,r22,1
 104b6d8:	04c00044 	movi	r19,1
 104b6dc:	39c00044 	addi	r7,r7,1
 104b6e0:	d9c00815 	stw	r7,32(sp)
 104b6e4:	d8800d17 	ldw	r2,52(sp)
 104b6e8:	103e721e 	bne	r2,zero,104b0b4 <__alt_data_end+0xfffcb0b4>
 104b6ec:	00800044 	movi	r2,1
 104b6f0:	003e7906 	br	104b0d8 <__alt_data_end+0xfffcb0d8>
 104b6f4:	8009883a 	mov	r4,r16
 104b6f8:	10459140 	call	1045914 <__floatsidf>
 104b6fc:	d9800f17 	ldw	r6,60(sp)
 104b700:	d9c01017 	ldw	r7,64(sp)
 104b704:	1009883a 	mov	r4,r2
 104b708:	180b883a 	mov	r5,r3
 104b70c:	10448800 	call	1044880 <__muldf3>
 104b710:	000d883a 	mov	r6,zero
 104b714:	01d00734 	movhi	r7,16412
 104b718:	1009883a 	mov	r4,r2
 104b71c:	180b883a 	mov	r5,r3
 104b720:	1043e700 	call	1043e70 <__adddf3>
 104b724:	047f3034 	movhi	r17,64704
 104b728:	1021883a 	mov	r16,r2
 104b72c:	1c63883a 	add	r17,r3,r17
 104b730:	d9000f17 	ldw	r4,60(sp)
 104b734:	d9401017 	ldw	r5,64(sp)
 104b738:	000d883a 	mov	r6,zero
 104b73c:	01d00534 	movhi	r7,16404
 104b740:	1044f980 	call	1044f98 <__subdf3>
 104b744:	800d883a 	mov	r6,r16
 104b748:	880f883a 	mov	r7,r17
 104b74c:	1009883a 	mov	r4,r2
 104b750:	180b883a 	mov	r5,r3
 104b754:	102b883a 	mov	r21,r2
 104b758:	1829883a 	mov	r20,r3
 104b75c:	10447a40 	call	10447a4 <__gedf2>
 104b760:	00806c16 	blt	zero,r2,104b914 <_dtoa_r+0x1304>
 104b764:	89e0003c 	xorhi	r7,r17,32768
 104b768:	800d883a 	mov	r6,r16
 104b76c:	a809883a 	mov	r4,r21
 104b770:	a00b883a 	mov	r5,r20
 104b774:	1053c0c0 	call	1053c0c <__ledf2>
 104b778:	103d7e0e 	bge	r2,zero,104ad74 <__alt_data_end+0xfffcad74>
 104b77c:	002b883a 	mov	r21,zero
 104b780:	0023883a 	mov	r17,zero
 104b784:	003efb06 	br	104b374 <__alt_data_end+0xfffcb374>
 104b788:	d8800717 	ldw	r2,28(sp)
 104b78c:	003bd006 	br	104a6d0 <__alt_data_end+0xfffca6d0>
 104b790:	d9000a17 	ldw	r4,40(sp)
 104b794:	d9800d17 	ldw	r6,52(sp)
 104b798:	dd400a15 	stw	r21,40(sp)
 104b79c:	a905c83a 	sub	r2,r21,r4
 104b7a0:	308d883a 	add	r6,r6,r2
 104b7a4:	d9800d15 	stw	r6,52(sp)
 104b7a8:	002b883a 	mov	r21,zero
 104b7ac:	003e0606 	br	104afc8 <__alt_data_end+0xfffcafc8>
 104b7b0:	9023883a 	mov	r17,r18
 104b7b4:	9829883a 	mov	r20,r19
 104b7b8:	04000084 	movi	r16,2
 104b7bc:	003c9206 	br	104aa08 <__alt_data_end+0xfffcaa08>
 104b7c0:	04000044 	movi	r16,1
 104b7c4:	dc000c15 	stw	r16,48(sp)
 104b7c8:	dc000615 	stw	r16,24(sp)
 104b7cc:	dc002215 	stw	r16,136(sp)
 104b7d0:	e0001115 	stw	zero,68(fp)
 104b7d4:	000b883a 	mov	r5,zero
 104b7d8:	003c6906 	br	104a980 <__alt_data_end+0xfffca980>
 104b7dc:	3021883a 	mov	r16,r6
 104b7e0:	003ffb06 	br	104b7d0 <__alt_data_end+0xfffcb7d0>
 104b7e4:	1000021e 	bne	r2,zero,104b7f0 <_dtoa_r+0x11e0>
 104b7e8:	4200004c 	andi	r8,r8,1
 104b7ec:	403e7d1e 	bne	r8,zero,104b1e4 <__alt_data_end+0xfffcb1e4>
 104b7f0:	01000c04 	movi	r4,48
 104b7f4:	00000106 	br	104b7fc <_dtoa_r+0x11ec>
 104b7f8:	102f883a 	mov	r23,r2
 104b7fc:	b8bfffc4 	addi	r2,r23,-1
 104b800:	10c00007 	ldb	r3,0(r2)
 104b804:	193ffc26 	beq	r3,r4,104b7f8 <__alt_data_end+0xfffcb7f8>
 104b808:	003e8706 	br	104b228 <__alt_data_end+0xfffcb228>
 104b80c:	d8800517 	ldw	r2,20(sp)
 104b810:	00a3c83a 	sub	r17,zero,r2
 104b814:	8800a426 	beq	r17,zero,104baa8 <_dtoa_r+0x1498>
 104b818:	888003cc 	andi	r2,r17,15
 104b81c:	100490fa 	slli	r2,r2,3
 104b820:	00c04174 	movhi	r3,261
 104b824:	18db0104 	addi	r3,r3,27652
 104b828:	1885883a 	add	r2,r3,r2
 104b82c:	11800017 	ldw	r6,0(r2)
 104b830:	11c00117 	ldw	r7,4(r2)
 104b834:	9009883a 	mov	r4,r18
 104b838:	980b883a 	mov	r5,r19
 104b83c:	8823d13a 	srai	r17,r17,4
 104b840:	10448800 	call	1044880 <__muldf3>
 104b844:	d8800f15 	stw	r2,60(sp)
 104b848:	d8c01015 	stw	r3,64(sp)
 104b84c:	8800e826 	beq	r17,zero,104bbf0 <_dtoa_r+0x15e0>
 104b850:	05004174 	movhi	r20,261
 104b854:	a51af704 	addi	r20,r20,27612
 104b858:	04000084 	movi	r16,2
 104b85c:	8980004c 	andi	r6,r17,1
 104b860:	1009883a 	mov	r4,r2
 104b864:	8823d07a 	srai	r17,r17,1
 104b868:	180b883a 	mov	r5,r3
 104b86c:	30000426 	beq	r6,zero,104b880 <_dtoa_r+0x1270>
 104b870:	a1800017 	ldw	r6,0(r20)
 104b874:	a1c00117 	ldw	r7,4(r20)
 104b878:	84000044 	addi	r16,r16,1
 104b87c:	10448800 	call	1044880 <__muldf3>
 104b880:	a5000204 	addi	r20,r20,8
 104b884:	883ff51e 	bne	r17,zero,104b85c <__alt_data_end+0xfffcb85c>
 104b888:	d8800f15 	stw	r2,60(sp)
 104b88c:	d8c01015 	stw	r3,64(sp)
 104b890:	003c7606 	br	104aa6c <__alt_data_end+0xfffcaa6c>
 104b894:	00c00c04 	movi	r3,48
 104b898:	10c00005 	stb	r3,0(r2)
 104b89c:	d8c00517 	ldw	r3,20(sp)
 104b8a0:	bd3fffc3 	ldbu	r20,-1(r23)
 104b8a4:	18c00044 	addi	r3,r3,1
 104b8a8:	d8c00515 	stw	r3,20(sp)
 104b8ac:	003db906 	br	104af94 <__alt_data_end+0xfffcaf94>
 104b8b0:	89400117 	ldw	r5,4(r17)
 104b8b4:	e009883a 	mov	r4,fp
 104b8b8:	104dcac0 	call	104dcac <_Balloc>
 104b8bc:	89800417 	ldw	r6,16(r17)
 104b8c0:	89400304 	addi	r5,r17,12
 104b8c4:	11000304 	addi	r4,r2,12
 104b8c8:	31800084 	addi	r6,r6,2
 104b8cc:	318d883a 	add	r6,r6,r6
 104b8d0:	318d883a 	add	r6,r6,r6
 104b8d4:	1027883a 	mov	r19,r2
 104b8d8:	104d8e00 	call	104d8e0 <memcpy>
 104b8dc:	01800044 	movi	r6,1
 104b8e0:	980b883a 	mov	r5,r19
 104b8e4:	e009883a 	mov	r4,fp
 104b8e8:	104e42c0 	call	104e42c <__lshift>
 104b8ec:	1029883a 	mov	r20,r2
 104b8f0:	003ecc06 	br	104b424 <__alt_data_end+0xfffcb424>
 104b8f4:	00800e44 	movi	r2,57
 104b8f8:	90809026 	beq	r18,r2,104bb3c <_dtoa_r+0x152c>
 104b8fc:	92000044 	addi	r8,r18,1
 104b900:	003f1f06 	br	104b580 <__alt_data_end+0xfffcb580>
 104b904:	9011883a 	mov	r8,r18
 104b908:	8825883a 	mov	r18,r17
 104b90c:	a023883a 	mov	r17,r20
 104b910:	003e2906 	br	104b1b8 <__alt_data_end+0xfffcb1b8>
 104b914:	002b883a 	mov	r21,zero
 104b918:	0023883a 	mov	r17,zero
 104b91c:	003f5406 	br	104b670 <__alt_data_end+0xfffcb670>
 104b920:	61bfffc4 	addi	r6,r12,-1
 104b924:	300490fa 	slli	r2,r6,3
 104b928:	00c04174 	movhi	r3,261
 104b92c:	18db0104 	addi	r3,r3,27652
 104b930:	1885883a 	add	r2,r3,r2
 104b934:	11000017 	ldw	r4,0(r2)
 104b938:	11400117 	ldw	r5,4(r2)
 104b93c:	d8800717 	ldw	r2,28(sp)
 104b940:	880f883a 	mov	r7,r17
 104b944:	d9801215 	stw	r6,72(sp)
 104b948:	800d883a 	mov	r6,r16
 104b94c:	db001615 	stw	r12,88(sp)
 104b950:	15c00044 	addi	r23,r2,1
 104b954:	10448800 	call	1044880 <__muldf3>
 104b958:	d9401017 	ldw	r5,64(sp)
 104b95c:	d9000f17 	ldw	r4,60(sp)
 104b960:	d8c01515 	stw	r3,84(sp)
 104b964:	d8801415 	stw	r2,80(sp)
 104b968:	10458940 	call	1045894 <__fixdfsi>
 104b96c:	1009883a 	mov	r4,r2
 104b970:	1021883a 	mov	r16,r2
 104b974:	10459140 	call	1045914 <__floatsidf>
 104b978:	d9000f17 	ldw	r4,60(sp)
 104b97c:	d9401017 	ldw	r5,64(sp)
 104b980:	100d883a 	mov	r6,r2
 104b984:	180f883a 	mov	r7,r3
 104b988:	1044f980 	call	1044f98 <__subdf3>
 104b98c:	1829883a 	mov	r20,r3
 104b990:	d8c00717 	ldw	r3,28(sp)
 104b994:	84000c04 	addi	r16,r16,48
 104b998:	1023883a 	mov	r17,r2
 104b99c:	1c000005 	stb	r16,0(r3)
 104b9a0:	db001617 	ldw	r12,88(sp)
 104b9a4:	00800044 	movi	r2,1
 104b9a8:	60802226 	beq	r12,r2,104ba34 <_dtoa_r+0x1424>
 104b9ac:	d9c00717 	ldw	r7,28(sp)
 104b9b0:	8805883a 	mov	r2,r17
 104b9b4:	b82b883a 	mov	r21,r23
 104b9b8:	3b19883a 	add	r12,r7,r12
 104b9bc:	6023883a 	mov	r17,r12
 104b9c0:	a007883a 	mov	r3,r20
 104b9c4:	dc800f15 	stw	r18,60(sp)
 104b9c8:	000d883a 	mov	r6,zero
 104b9cc:	01d00934 	movhi	r7,16420
 104b9d0:	1009883a 	mov	r4,r2
 104b9d4:	180b883a 	mov	r5,r3
 104b9d8:	10448800 	call	1044880 <__muldf3>
 104b9dc:	180b883a 	mov	r5,r3
 104b9e0:	1009883a 	mov	r4,r2
 104b9e4:	1829883a 	mov	r20,r3
 104b9e8:	1025883a 	mov	r18,r2
 104b9ec:	10458940 	call	1045894 <__fixdfsi>
 104b9f0:	1009883a 	mov	r4,r2
 104b9f4:	1021883a 	mov	r16,r2
 104b9f8:	10459140 	call	1045914 <__floatsidf>
 104b9fc:	100d883a 	mov	r6,r2
 104ba00:	180f883a 	mov	r7,r3
 104ba04:	9009883a 	mov	r4,r18
 104ba08:	a00b883a 	mov	r5,r20
 104ba0c:	84000c04 	addi	r16,r16,48
 104ba10:	1044f980 	call	1044f98 <__subdf3>
 104ba14:	ad400044 	addi	r21,r21,1
 104ba18:	ac3fffc5 	stb	r16,-1(r21)
 104ba1c:	ac7fea1e 	bne	r21,r17,104b9c8 <__alt_data_end+0xfffcb9c8>
 104ba20:	1023883a 	mov	r17,r2
 104ba24:	d8801217 	ldw	r2,72(sp)
 104ba28:	dc800f17 	ldw	r18,60(sp)
 104ba2c:	1829883a 	mov	r20,r3
 104ba30:	b8af883a 	add	r23,r23,r2
 104ba34:	d9001417 	ldw	r4,80(sp)
 104ba38:	d9401517 	ldw	r5,84(sp)
 104ba3c:	000d883a 	mov	r6,zero
 104ba40:	01cff834 	movhi	r7,16352
 104ba44:	1043e700 	call	1043e70 <__adddf3>
 104ba48:	880d883a 	mov	r6,r17
 104ba4c:	a00f883a 	mov	r7,r20
 104ba50:	1009883a 	mov	r4,r2
 104ba54:	180b883a 	mov	r5,r3
 104ba58:	1053c0c0 	call	1053c0c <__ledf2>
 104ba5c:	10003e0e 	bge	r2,zero,104bb58 <_dtoa_r+0x1548>
 104ba60:	d9001317 	ldw	r4,76(sp)
 104ba64:	bd3fffc3 	ldbu	r20,-1(r23)
 104ba68:	d9000515 	stw	r4,20(sp)
 104ba6c:	003d3b06 	br	104af5c <__alt_data_end+0xfffcaf5c>
 104ba70:	0027883a 	mov	r19,zero
 104ba74:	003f1b06 	br	104b6e4 <__alt_data_end+0xfffcb6e4>
 104ba78:	d8800817 	ldw	r2,32(sp)
 104ba7c:	11e9c83a 	sub	r20,r2,r7
 104ba80:	0005883a 	mov	r2,zero
 104ba84:	003d5406 	br	104afd8 <__alt_data_end+0xfffcafd8>
 104ba88:	00800044 	movi	r2,1
 104ba8c:	003dc706 	br	104b1ac <__alt_data_end+0xfffcb1ac>
 104ba90:	d8c00217 	ldw	r3,8(sp)
 104ba94:	00800d84 	movi	r2,54
 104ba98:	dd400a17 	ldw	r21,40(sp)
 104ba9c:	10c5c83a 	sub	r2,r2,r3
 104baa0:	dd000817 	ldw	r20,32(sp)
 104baa4:	003d4c06 	br	104afd8 <__alt_data_end+0xfffcafd8>
 104baa8:	dc800f15 	stw	r18,60(sp)
 104baac:	dcc01015 	stw	r19,64(sp)
 104bab0:	04000084 	movi	r16,2
 104bab4:	003bed06 	br	104aa6c <__alt_data_end+0xfffcaa6c>
 104bab8:	d9000617 	ldw	r4,24(sp)
 104babc:	203f0d26 	beq	r4,zero,104b6f4 <__alt_data_end+0xfffcb6f4>
 104bac0:	d9800c17 	ldw	r6,48(sp)
 104bac4:	01bcab0e 	bge	zero,r6,104ad74 <__alt_data_end+0xfffcad74>
 104bac8:	d9401017 	ldw	r5,64(sp)
 104bacc:	d9000f17 	ldw	r4,60(sp)
 104bad0:	000d883a 	mov	r6,zero
 104bad4:	01d00934 	movhi	r7,16420
 104bad8:	10448800 	call	1044880 <__muldf3>
 104badc:	81000044 	addi	r4,r16,1
 104bae0:	d8800f15 	stw	r2,60(sp)
 104bae4:	d8c01015 	stw	r3,64(sp)
 104bae8:	10459140 	call	1045914 <__floatsidf>
 104baec:	d9800f17 	ldw	r6,60(sp)
 104baf0:	d9c01017 	ldw	r7,64(sp)
 104baf4:	1009883a 	mov	r4,r2
 104baf8:	180b883a 	mov	r5,r3
 104bafc:	10448800 	call	1044880 <__muldf3>
 104bb00:	01d00734 	movhi	r7,16412
 104bb04:	000d883a 	mov	r6,zero
 104bb08:	1009883a 	mov	r4,r2
 104bb0c:	180b883a 	mov	r5,r3
 104bb10:	1043e700 	call	1043e70 <__adddf3>
 104bb14:	d9c00517 	ldw	r7,20(sp)
 104bb18:	047f3034 	movhi	r17,64704
 104bb1c:	1021883a 	mov	r16,r2
 104bb20:	39ffffc4 	addi	r7,r7,-1
 104bb24:	d9c01315 	stw	r7,76(sp)
 104bb28:	1c63883a 	add	r17,r3,r17
 104bb2c:	db000c17 	ldw	r12,48(sp)
 104bb30:	003bea06 	br	104aadc <__alt_data_end+0xfffcaadc>
 104bb34:	dc000915 	stw	r16,36(sp)
 104bb38:	003e0e06 	br	104b374 <__alt_data_end+0xfffcb374>
 104bb3c:	01000e44 	movi	r4,57
 104bb40:	8825883a 	mov	r18,r17
 104bb44:	9dc00044 	addi	r23,r19,1
 104bb48:	99000005 	stb	r4,0(r19)
 104bb4c:	a023883a 	mov	r17,r20
 104bb50:	dc000915 	stw	r16,36(sp)
 104bb54:	003da406 	br	104b1e8 <__alt_data_end+0xfffcb1e8>
 104bb58:	d9801417 	ldw	r6,80(sp)
 104bb5c:	d9c01517 	ldw	r7,84(sp)
 104bb60:	0009883a 	mov	r4,zero
 104bb64:	014ff834 	movhi	r5,16352
 104bb68:	1044f980 	call	1044f98 <__subdf3>
 104bb6c:	880d883a 	mov	r6,r17
 104bb70:	a00f883a 	mov	r7,r20
 104bb74:	1009883a 	mov	r4,r2
 104bb78:	180b883a 	mov	r5,r3
 104bb7c:	10447a40 	call	10447a4 <__gedf2>
 104bb80:	00bc7c0e 	bge	zero,r2,104ad74 <__alt_data_end+0xfffcad74>
 104bb84:	01000c04 	movi	r4,48
 104bb88:	00000106 	br	104bb90 <_dtoa_r+0x1580>
 104bb8c:	102f883a 	mov	r23,r2
 104bb90:	b8bfffc4 	addi	r2,r23,-1
 104bb94:	10c00007 	ldb	r3,0(r2)
 104bb98:	193ffc26 	beq	r3,r4,104bb8c <__alt_data_end+0xfffcbb8c>
 104bb9c:	d9801317 	ldw	r6,76(sp)
 104bba0:	d9800515 	stw	r6,20(sp)
 104bba4:	003c4406 	br	104acb8 <__alt_data_end+0xfffcacb8>
 104bba8:	d9801317 	ldw	r6,76(sp)
 104bbac:	d9800515 	stw	r6,20(sp)
 104bbb0:	003cea06 	br	104af5c <__alt_data_end+0xfffcaf5c>
 104bbb4:	dd800f17 	ldw	r22,60(sp)
 104bbb8:	dcc01017 	ldw	r19,64(sp)
 104bbbc:	dc801217 	ldw	r18,72(sp)
 104bbc0:	003c6c06 	br	104ad74 <__alt_data_end+0xfffcad74>
 104bbc4:	903e031e 	bne	r18,zero,104b3d4 <__alt_data_end+0xfffcb3d4>
 104bbc8:	003ebb06 	br	104b6b8 <__alt_data_end+0xfffcb6b8>
 104bbcc:	103e6c1e 	bne	r2,zero,104b580 <__alt_data_end+0xfffcb580>
 104bbd0:	4080004c 	andi	r2,r8,1
 104bbd4:	103e6a26 	beq	r2,zero,104b580 <__alt_data_end+0xfffcb580>
 104bbd8:	003e6606 	br	104b574 <__alt_data_end+0xfffcb574>
 104bbdc:	d8c00317 	ldw	r3,12(sp)
 104bbe0:	00800084 	movi	r2,2
 104bbe4:	10c02916 	blt	r2,r3,104bc8c <_dtoa_r+0x167c>
 104bbe8:	d9000c17 	ldw	r4,48(sp)
 104bbec:	003e8806 	br	104b610 <__alt_data_end+0xfffcb610>
 104bbf0:	04000084 	movi	r16,2
 104bbf4:	003b9d06 	br	104aa6c <__alt_data_end+0xfffcaa6c>
 104bbf8:	d9001317 	ldw	r4,76(sp)
 104bbfc:	d9000515 	stw	r4,20(sp)
 104bc00:	003cd606 	br	104af5c <__alt_data_end+0xfffcaf5c>
 104bc04:	d8801317 	ldw	r2,76(sp)
 104bc08:	d8800515 	stw	r2,20(sp)
 104bc0c:	003c2a06 	br	104acb8 <__alt_data_end+0xfffcacb8>
 104bc10:	d9800317 	ldw	r6,12(sp)
 104bc14:	00800084 	movi	r2,2
 104bc18:	11801516 	blt	r2,r6,104bc70 <_dtoa_r+0x1660>
 104bc1c:	d9c00c17 	ldw	r7,48(sp)
 104bc20:	d9c00615 	stw	r7,24(sp)
 104bc24:	003df706 	br	104b404 <__alt_data_end+0xfffcb404>
 104bc28:	193d3926 	beq	r3,r4,104b110 <__alt_data_end+0xfffcb110>
 104bc2c:	00c00f04 	movi	r3,60
 104bc30:	1885c83a 	sub	r2,r3,r2
 104bc34:	003ddf06 	br	104b3b4 <__alt_data_end+0xfffcb3b4>
 104bc38:	e009883a 	mov	r4,fp
 104bc3c:	e0001115 	stw	zero,68(fp)
 104bc40:	000b883a 	mov	r5,zero
 104bc44:	104dcac0 	call	104dcac <_Balloc>
 104bc48:	d8800715 	stw	r2,28(sp)
 104bc4c:	d8c00717 	ldw	r3,28(sp)
 104bc50:	00bfffc4 	movi	r2,-1
 104bc54:	01000044 	movi	r4,1
 104bc58:	d8800c15 	stw	r2,48(sp)
 104bc5c:	e0c01015 	stw	r3,64(fp)
 104bc60:	d9000b15 	stw	r4,44(sp)
 104bc64:	d8800615 	stw	r2,24(sp)
 104bc68:	d8002215 	stw	zero,136(sp)
 104bc6c:	003c4106 	br	104ad74 <__alt_data_end+0xfffcad74>
 104bc70:	d8c00c17 	ldw	r3,48(sp)
 104bc74:	d8c00615 	stw	r3,24(sp)
 104bc78:	003e7006 	br	104b63c <__alt_data_end+0xfffcb63c>
 104bc7c:	04400044 	movi	r17,1
 104bc80:	003b2006 	br	104a904 <__alt_data_end+0xfffca904>
 104bc84:	000b883a 	mov	r5,zero
 104bc88:	003b3d06 	br	104a980 <__alt_data_end+0xfffca980>
 104bc8c:	d8800c17 	ldw	r2,48(sp)
 104bc90:	d8800615 	stw	r2,24(sp)
 104bc94:	003e6906 	br	104b63c <__alt_data_end+0xfffcb63c>

0104bc98 <__sflush_r>:
 104bc98:	2880030b 	ldhu	r2,12(r5)
 104bc9c:	defffb04 	addi	sp,sp,-20
 104bca0:	dcc00315 	stw	r19,12(sp)
 104bca4:	dc400115 	stw	r17,4(sp)
 104bca8:	dfc00415 	stw	ra,16(sp)
 104bcac:	dc800215 	stw	r18,8(sp)
 104bcb0:	dc000015 	stw	r16,0(sp)
 104bcb4:	10c0020c 	andi	r3,r2,8
 104bcb8:	2823883a 	mov	r17,r5
 104bcbc:	2027883a 	mov	r19,r4
 104bcc0:	1800311e 	bne	r3,zero,104bd88 <__sflush_r+0xf0>
 104bcc4:	28c00117 	ldw	r3,4(r5)
 104bcc8:	10820014 	ori	r2,r2,2048
 104bccc:	2880030d 	sth	r2,12(r5)
 104bcd0:	00c04b0e 	bge	zero,r3,104be00 <__sflush_r+0x168>
 104bcd4:	8a000a17 	ldw	r8,40(r17)
 104bcd8:	40002326 	beq	r8,zero,104bd68 <__sflush_r+0xd0>
 104bcdc:	9c000017 	ldw	r16,0(r19)
 104bce0:	10c4000c 	andi	r3,r2,4096
 104bce4:	98000015 	stw	zero,0(r19)
 104bce8:	18004826 	beq	r3,zero,104be0c <__sflush_r+0x174>
 104bcec:	89801417 	ldw	r6,80(r17)
 104bcf0:	10c0010c 	andi	r3,r2,4
 104bcf4:	18000626 	beq	r3,zero,104bd10 <__sflush_r+0x78>
 104bcf8:	88c00117 	ldw	r3,4(r17)
 104bcfc:	88800c17 	ldw	r2,48(r17)
 104bd00:	30cdc83a 	sub	r6,r6,r3
 104bd04:	10000226 	beq	r2,zero,104bd10 <__sflush_r+0x78>
 104bd08:	88800f17 	ldw	r2,60(r17)
 104bd0c:	308dc83a 	sub	r6,r6,r2
 104bd10:	89400717 	ldw	r5,28(r17)
 104bd14:	000f883a 	mov	r7,zero
 104bd18:	9809883a 	mov	r4,r19
 104bd1c:	403ee83a 	callr	r8
 104bd20:	00ffffc4 	movi	r3,-1
 104bd24:	10c04426 	beq	r2,r3,104be38 <__sflush_r+0x1a0>
 104bd28:	88c0030b 	ldhu	r3,12(r17)
 104bd2c:	89000417 	ldw	r4,16(r17)
 104bd30:	88000115 	stw	zero,4(r17)
 104bd34:	197dffcc 	andi	r5,r3,63487
 104bd38:	8940030d 	sth	r5,12(r17)
 104bd3c:	89000015 	stw	r4,0(r17)
 104bd40:	18c4000c 	andi	r3,r3,4096
 104bd44:	18002c1e 	bne	r3,zero,104bdf8 <__sflush_r+0x160>
 104bd48:	89400c17 	ldw	r5,48(r17)
 104bd4c:	9c000015 	stw	r16,0(r19)
 104bd50:	28000526 	beq	r5,zero,104bd68 <__sflush_r+0xd0>
 104bd54:	88801004 	addi	r2,r17,64
 104bd58:	28800226 	beq	r5,r2,104bd64 <__sflush_r+0xcc>
 104bd5c:	9809883a 	mov	r4,r19
 104bd60:	104c4040 	call	104c404 <_free_r>
 104bd64:	88000c15 	stw	zero,48(r17)
 104bd68:	0005883a 	mov	r2,zero
 104bd6c:	dfc00417 	ldw	ra,16(sp)
 104bd70:	dcc00317 	ldw	r19,12(sp)
 104bd74:	dc800217 	ldw	r18,8(sp)
 104bd78:	dc400117 	ldw	r17,4(sp)
 104bd7c:	dc000017 	ldw	r16,0(sp)
 104bd80:	dec00504 	addi	sp,sp,20
 104bd84:	f800283a 	ret
 104bd88:	2c800417 	ldw	r18,16(r5)
 104bd8c:	903ff626 	beq	r18,zero,104bd68 <__alt_data_end+0xfffcbd68>
 104bd90:	2c000017 	ldw	r16,0(r5)
 104bd94:	108000cc 	andi	r2,r2,3
 104bd98:	2c800015 	stw	r18,0(r5)
 104bd9c:	84a1c83a 	sub	r16,r16,r18
 104bda0:	1000131e 	bne	r2,zero,104bdf0 <__sflush_r+0x158>
 104bda4:	28800517 	ldw	r2,20(r5)
 104bda8:	88800215 	stw	r2,8(r17)
 104bdac:	04000316 	blt	zero,r16,104bdbc <__sflush_r+0x124>
 104bdb0:	003fed06 	br	104bd68 <__alt_data_end+0xfffcbd68>
 104bdb4:	90a5883a 	add	r18,r18,r2
 104bdb8:	043feb0e 	bge	zero,r16,104bd68 <__alt_data_end+0xfffcbd68>
 104bdbc:	88800917 	ldw	r2,36(r17)
 104bdc0:	89400717 	ldw	r5,28(r17)
 104bdc4:	800f883a 	mov	r7,r16
 104bdc8:	900d883a 	mov	r6,r18
 104bdcc:	9809883a 	mov	r4,r19
 104bdd0:	103ee83a 	callr	r2
 104bdd4:	80a1c83a 	sub	r16,r16,r2
 104bdd8:	00bff616 	blt	zero,r2,104bdb4 <__alt_data_end+0xfffcbdb4>
 104bddc:	88c0030b 	ldhu	r3,12(r17)
 104bde0:	00bfffc4 	movi	r2,-1
 104bde4:	18c01014 	ori	r3,r3,64
 104bde8:	88c0030d 	sth	r3,12(r17)
 104bdec:	003fdf06 	br	104bd6c <__alt_data_end+0xfffcbd6c>
 104bdf0:	0005883a 	mov	r2,zero
 104bdf4:	003fec06 	br	104bda8 <__alt_data_end+0xfffcbda8>
 104bdf8:	88801415 	stw	r2,80(r17)
 104bdfc:	003fd206 	br	104bd48 <__alt_data_end+0xfffcbd48>
 104be00:	28c00f17 	ldw	r3,60(r5)
 104be04:	00ffb316 	blt	zero,r3,104bcd4 <__alt_data_end+0xfffcbcd4>
 104be08:	003fd706 	br	104bd68 <__alt_data_end+0xfffcbd68>
 104be0c:	89400717 	ldw	r5,28(r17)
 104be10:	000d883a 	mov	r6,zero
 104be14:	01c00044 	movi	r7,1
 104be18:	9809883a 	mov	r4,r19
 104be1c:	403ee83a 	callr	r8
 104be20:	100d883a 	mov	r6,r2
 104be24:	00bfffc4 	movi	r2,-1
 104be28:	30801426 	beq	r6,r2,104be7c <__sflush_r+0x1e4>
 104be2c:	8880030b 	ldhu	r2,12(r17)
 104be30:	8a000a17 	ldw	r8,40(r17)
 104be34:	003fae06 	br	104bcf0 <__alt_data_end+0xfffcbcf0>
 104be38:	98c00017 	ldw	r3,0(r19)
 104be3c:	183fba26 	beq	r3,zero,104bd28 <__alt_data_end+0xfffcbd28>
 104be40:	01000744 	movi	r4,29
 104be44:	19000626 	beq	r3,r4,104be60 <__sflush_r+0x1c8>
 104be48:	01000584 	movi	r4,22
 104be4c:	19000426 	beq	r3,r4,104be60 <__sflush_r+0x1c8>
 104be50:	88c0030b 	ldhu	r3,12(r17)
 104be54:	18c01014 	ori	r3,r3,64
 104be58:	88c0030d 	sth	r3,12(r17)
 104be5c:	003fc306 	br	104bd6c <__alt_data_end+0xfffcbd6c>
 104be60:	8880030b 	ldhu	r2,12(r17)
 104be64:	88c00417 	ldw	r3,16(r17)
 104be68:	88000115 	stw	zero,4(r17)
 104be6c:	10bdffcc 	andi	r2,r2,63487
 104be70:	8880030d 	sth	r2,12(r17)
 104be74:	88c00015 	stw	r3,0(r17)
 104be78:	003fb306 	br	104bd48 <__alt_data_end+0xfffcbd48>
 104be7c:	98800017 	ldw	r2,0(r19)
 104be80:	103fea26 	beq	r2,zero,104be2c <__alt_data_end+0xfffcbe2c>
 104be84:	00c00744 	movi	r3,29
 104be88:	10c00226 	beq	r2,r3,104be94 <__sflush_r+0x1fc>
 104be8c:	00c00584 	movi	r3,22
 104be90:	10c0031e 	bne	r2,r3,104bea0 <__sflush_r+0x208>
 104be94:	9c000015 	stw	r16,0(r19)
 104be98:	0005883a 	mov	r2,zero
 104be9c:	003fb306 	br	104bd6c <__alt_data_end+0xfffcbd6c>
 104bea0:	88c0030b 	ldhu	r3,12(r17)
 104bea4:	3005883a 	mov	r2,r6
 104bea8:	18c01014 	ori	r3,r3,64
 104beac:	88c0030d 	sth	r3,12(r17)
 104beb0:	003fae06 	br	104bd6c <__alt_data_end+0xfffcbd6c>

0104beb4 <_fflush_r>:
 104beb4:	defffd04 	addi	sp,sp,-12
 104beb8:	dc000115 	stw	r16,4(sp)
 104bebc:	dfc00215 	stw	ra,8(sp)
 104bec0:	2021883a 	mov	r16,r4
 104bec4:	20000226 	beq	r4,zero,104bed0 <_fflush_r+0x1c>
 104bec8:	20800e17 	ldw	r2,56(r4)
 104becc:	10000c26 	beq	r2,zero,104bf00 <_fflush_r+0x4c>
 104bed0:	2880030f 	ldh	r2,12(r5)
 104bed4:	1000051e 	bne	r2,zero,104beec <_fflush_r+0x38>
 104bed8:	0005883a 	mov	r2,zero
 104bedc:	dfc00217 	ldw	ra,8(sp)
 104bee0:	dc000117 	ldw	r16,4(sp)
 104bee4:	dec00304 	addi	sp,sp,12
 104bee8:	f800283a 	ret
 104beec:	8009883a 	mov	r4,r16
 104bef0:	dfc00217 	ldw	ra,8(sp)
 104bef4:	dc000117 	ldw	r16,4(sp)
 104bef8:	dec00304 	addi	sp,sp,12
 104befc:	104bc981 	jmpi	104bc98 <__sflush_r>
 104bf00:	d9400015 	stw	r5,0(sp)
 104bf04:	104c2900 	call	104c290 <__sinit>
 104bf08:	d9400017 	ldw	r5,0(sp)
 104bf0c:	003ff006 	br	104bed0 <__alt_data_end+0xfffcbed0>

0104bf10 <fflush>:
 104bf10:	20000526 	beq	r4,zero,104bf28 <fflush+0x18>
 104bf14:	008041b4 	movhi	r2,262
 104bf18:	10a1fa04 	addi	r2,r2,-30744
 104bf1c:	200b883a 	mov	r5,r4
 104bf20:	11000017 	ldw	r4,0(r2)
 104bf24:	104beb41 	jmpi	104beb4 <_fflush_r>
 104bf28:	008041b4 	movhi	r2,262
 104bf2c:	10a1f904 	addi	r2,r2,-30748
 104bf30:	11000017 	ldw	r4,0(r2)
 104bf34:	01404174 	movhi	r5,261
 104bf38:	296fad04 	addi	r5,r5,-16716
 104bf3c:	104cc941 	jmpi	104cc94 <_fwalk_reent>

0104bf40 <__fp_unlock>:
 104bf40:	0005883a 	mov	r2,zero
 104bf44:	f800283a 	ret

0104bf48 <_cleanup_r>:
 104bf48:	01404174 	movhi	r5,261
 104bf4c:	29482e04 	addi	r5,r5,8376
 104bf50:	104cc941 	jmpi	104cc94 <_fwalk_reent>

0104bf54 <__sinit.part.1>:
 104bf54:	defff704 	addi	sp,sp,-36
 104bf58:	00c04174 	movhi	r3,261
 104bf5c:	dfc00815 	stw	ra,32(sp)
 104bf60:	ddc00715 	stw	r23,28(sp)
 104bf64:	dd800615 	stw	r22,24(sp)
 104bf68:	dd400515 	stw	r21,20(sp)
 104bf6c:	dd000415 	stw	r20,16(sp)
 104bf70:	dcc00315 	stw	r19,12(sp)
 104bf74:	dc800215 	stw	r18,8(sp)
 104bf78:	dc400115 	stw	r17,4(sp)
 104bf7c:	dc000015 	stw	r16,0(sp)
 104bf80:	18efd204 	addi	r3,r3,-16568
 104bf84:	24000117 	ldw	r16,4(r4)
 104bf88:	20c00f15 	stw	r3,60(r4)
 104bf8c:	2080bb04 	addi	r2,r4,748
 104bf90:	00c000c4 	movi	r3,3
 104bf94:	20c0b915 	stw	r3,740(r4)
 104bf98:	2080ba15 	stw	r2,744(r4)
 104bf9c:	2000b815 	stw	zero,736(r4)
 104bfa0:	05c00204 	movi	r23,8
 104bfa4:	00800104 	movi	r2,4
 104bfa8:	2025883a 	mov	r18,r4
 104bfac:	b80d883a 	mov	r6,r23
 104bfb0:	81001704 	addi	r4,r16,92
 104bfb4:	000b883a 	mov	r5,zero
 104bfb8:	80000015 	stw	zero,0(r16)
 104bfbc:	80000115 	stw	zero,4(r16)
 104bfc0:	80000215 	stw	zero,8(r16)
 104bfc4:	8080030d 	sth	r2,12(r16)
 104bfc8:	80001915 	stw	zero,100(r16)
 104bfcc:	8000038d 	sth	zero,14(r16)
 104bfd0:	80000415 	stw	zero,16(r16)
 104bfd4:	80000515 	stw	zero,20(r16)
 104bfd8:	80000615 	stw	zero,24(r16)
 104bfdc:	104db840 	call	104db84 <memset>
 104bfe0:	05804174 	movhi	r22,261
 104bfe4:	94400217 	ldw	r17,8(r18)
 104bfe8:	05404174 	movhi	r21,261
 104bfec:	05004174 	movhi	r20,261
 104bff0:	04c04174 	movhi	r19,261
 104bff4:	b5bcb504 	addi	r22,r22,-3372
 104bff8:	ad7ccc04 	addi	r21,r21,-3280
 104bffc:	a53ceb04 	addi	r20,r20,-3156
 104c000:	9cfd0204 	addi	r19,r19,-3064
 104c004:	85800815 	stw	r22,32(r16)
 104c008:	85400915 	stw	r21,36(r16)
 104c00c:	85000a15 	stw	r20,40(r16)
 104c010:	84c00b15 	stw	r19,44(r16)
 104c014:	84000715 	stw	r16,28(r16)
 104c018:	00800284 	movi	r2,10
 104c01c:	8880030d 	sth	r2,12(r17)
 104c020:	00800044 	movi	r2,1
 104c024:	b80d883a 	mov	r6,r23
 104c028:	89001704 	addi	r4,r17,92
 104c02c:	000b883a 	mov	r5,zero
 104c030:	88000015 	stw	zero,0(r17)
 104c034:	88000115 	stw	zero,4(r17)
 104c038:	88000215 	stw	zero,8(r17)
 104c03c:	88001915 	stw	zero,100(r17)
 104c040:	8880038d 	sth	r2,14(r17)
 104c044:	88000415 	stw	zero,16(r17)
 104c048:	88000515 	stw	zero,20(r17)
 104c04c:	88000615 	stw	zero,24(r17)
 104c050:	104db840 	call	104db84 <memset>
 104c054:	94000317 	ldw	r16,12(r18)
 104c058:	00800484 	movi	r2,18
 104c05c:	8c400715 	stw	r17,28(r17)
 104c060:	8d800815 	stw	r22,32(r17)
 104c064:	8d400915 	stw	r21,36(r17)
 104c068:	8d000a15 	stw	r20,40(r17)
 104c06c:	8cc00b15 	stw	r19,44(r17)
 104c070:	8080030d 	sth	r2,12(r16)
 104c074:	00800084 	movi	r2,2
 104c078:	80000015 	stw	zero,0(r16)
 104c07c:	80000115 	stw	zero,4(r16)
 104c080:	80000215 	stw	zero,8(r16)
 104c084:	80001915 	stw	zero,100(r16)
 104c088:	8080038d 	sth	r2,14(r16)
 104c08c:	80000415 	stw	zero,16(r16)
 104c090:	80000515 	stw	zero,20(r16)
 104c094:	80000615 	stw	zero,24(r16)
 104c098:	b80d883a 	mov	r6,r23
 104c09c:	000b883a 	mov	r5,zero
 104c0a0:	81001704 	addi	r4,r16,92
 104c0a4:	104db840 	call	104db84 <memset>
 104c0a8:	00800044 	movi	r2,1
 104c0ac:	84000715 	stw	r16,28(r16)
 104c0b0:	85800815 	stw	r22,32(r16)
 104c0b4:	85400915 	stw	r21,36(r16)
 104c0b8:	85000a15 	stw	r20,40(r16)
 104c0bc:	84c00b15 	stw	r19,44(r16)
 104c0c0:	90800e15 	stw	r2,56(r18)
 104c0c4:	dfc00817 	ldw	ra,32(sp)
 104c0c8:	ddc00717 	ldw	r23,28(sp)
 104c0cc:	dd800617 	ldw	r22,24(sp)
 104c0d0:	dd400517 	ldw	r21,20(sp)
 104c0d4:	dd000417 	ldw	r20,16(sp)
 104c0d8:	dcc00317 	ldw	r19,12(sp)
 104c0dc:	dc800217 	ldw	r18,8(sp)
 104c0e0:	dc400117 	ldw	r17,4(sp)
 104c0e4:	dc000017 	ldw	r16,0(sp)
 104c0e8:	dec00904 	addi	sp,sp,36
 104c0ec:	f800283a 	ret

0104c0f0 <__fp_lock>:
 104c0f0:	0005883a 	mov	r2,zero
 104c0f4:	f800283a 	ret

0104c0f8 <__sfmoreglue>:
 104c0f8:	defffc04 	addi	sp,sp,-16
 104c0fc:	dc400115 	stw	r17,4(sp)
 104c100:	2c7fffc4 	addi	r17,r5,-1
 104c104:	8c401a24 	muli	r17,r17,104
 104c108:	dc800215 	stw	r18,8(sp)
 104c10c:	2825883a 	mov	r18,r5
 104c110:	89401d04 	addi	r5,r17,116
 104c114:	dc000015 	stw	r16,0(sp)
 104c118:	dfc00315 	stw	ra,12(sp)
 104c11c:	104cff00 	call	104cff0 <_malloc_r>
 104c120:	1021883a 	mov	r16,r2
 104c124:	10000726 	beq	r2,zero,104c144 <__sfmoreglue+0x4c>
 104c128:	11000304 	addi	r4,r2,12
 104c12c:	10000015 	stw	zero,0(r2)
 104c130:	14800115 	stw	r18,4(r2)
 104c134:	11000215 	stw	r4,8(r2)
 104c138:	89801a04 	addi	r6,r17,104
 104c13c:	000b883a 	mov	r5,zero
 104c140:	104db840 	call	104db84 <memset>
 104c144:	8005883a 	mov	r2,r16
 104c148:	dfc00317 	ldw	ra,12(sp)
 104c14c:	dc800217 	ldw	r18,8(sp)
 104c150:	dc400117 	ldw	r17,4(sp)
 104c154:	dc000017 	ldw	r16,0(sp)
 104c158:	dec00404 	addi	sp,sp,16
 104c15c:	f800283a 	ret

0104c160 <__sfp>:
 104c160:	defffb04 	addi	sp,sp,-20
 104c164:	dc000015 	stw	r16,0(sp)
 104c168:	040041b4 	movhi	r16,262
 104c16c:	8421f904 	addi	r16,r16,-30748
 104c170:	dcc00315 	stw	r19,12(sp)
 104c174:	2027883a 	mov	r19,r4
 104c178:	81000017 	ldw	r4,0(r16)
 104c17c:	dfc00415 	stw	ra,16(sp)
 104c180:	dc800215 	stw	r18,8(sp)
 104c184:	20800e17 	ldw	r2,56(r4)
 104c188:	dc400115 	stw	r17,4(sp)
 104c18c:	1000021e 	bne	r2,zero,104c198 <__sfp+0x38>
 104c190:	104bf540 	call	104bf54 <__sinit.part.1>
 104c194:	81000017 	ldw	r4,0(r16)
 104c198:	2480b804 	addi	r18,r4,736
 104c19c:	047fffc4 	movi	r17,-1
 104c1a0:	91000117 	ldw	r4,4(r18)
 104c1a4:	94000217 	ldw	r16,8(r18)
 104c1a8:	213fffc4 	addi	r4,r4,-1
 104c1ac:	20000a16 	blt	r4,zero,104c1d8 <__sfp+0x78>
 104c1b0:	8080030f 	ldh	r2,12(r16)
 104c1b4:	10000c26 	beq	r2,zero,104c1e8 <__sfp+0x88>
 104c1b8:	80c01d04 	addi	r3,r16,116
 104c1bc:	00000206 	br	104c1c8 <__sfp+0x68>
 104c1c0:	18bfe60f 	ldh	r2,-104(r3)
 104c1c4:	10000826 	beq	r2,zero,104c1e8 <__sfp+0x88>
 104c1c8:	213fffc4 	addi	r4,r4,-1
 104c1cc:	1c3ffd04 	addi	r16,r3,-12
 104c1d0:	18c01a04 	addi	r3,r3,104
 104c1d4:	247ffa1e 	bne	r4,r17,104c1c0 <__alt_data_end+0xfffcc1c0>
 104c1d8:	90800017 	ldw	r2,0(r18)
 104c1dc:	10001d26 	beq	r2,zero,104c254 <__sfp+0xf4>
 104c1e0:	1025883a 	mov	r18,r2
 104c1e4:	003fee06 	br	104c1a0 <__alt_data_end+0xfffcc1a0>
 104c1e8:	00bfffc4 	movi	r2,-1
 104c1ec:	8080038d 	sth	r2,14(r16)
 104c1f0:	00800044 	movi	r2,1
 104c1f4:	8080030d 	sth	r2,12(r16)
 104c1f8:	80001915 	stw	zero,100(r16)
 104c1fc:	80000015 	stw	zero,0(r16)
 104c200:	80000215 	stw	zero,8(r16)
 104c204:	80000115 	stw	zero,4(r16)
 104c208:	80000415 	stw	zero,16(r16)
 104c20c:	80000515 	stw	zero,20(r16)
 104c210:	80000615 	stw	zero,24(r16)
 104c214:	01800204 	movi	r6,8
 104c218:	000b883a 	mov	r5,zero
 104c21c:	81001704 	addi	r4,r16,92
 104c220:	104db840 	call	104db84 <memset>
 104c224:	8005883a 	mov	r2,r16
 104c228:	80000c15 	stw	zero,48(r16)
 104c22c:	80000d15 	stw	zero,52(r16)
 104c230:	80001115 	stw	zero,68(r16)
 104c234:	80001215 	stw	zero,72(r16)
 104c238:	dfc00417 	ldw	ra,16(sp)
 104c23c:	dcc00317 	ldw	r19,12(sp)
 104c240:	dc800217 	ldw	r18,8(sp)
 104c244:	dc400117 	ldw	r17,4(sp)
 104c248:	dc000017 	ldw	r16,0(sp)
 104c24c:	dec00504 	addi	sp,sp,20
 104c250:	f800283a 	ret
 104c254:	01400104 	movi	r5,4
 104c258:	9809883a 	mov	r4,r19
 104c25c:	104c0f80 	call	104c0f8 <__sfmoreglue>
 104c260:	90800015 	stw	r2,0(r18)
 104c264:	103fde1e 	bne	r2,zero,104c1e0 <__alt_data_end+0xfffcc1e0>
 104c268:	00800304 	movi	r2,12
 104c26c:	98800015 	stw	r2,0(r19)
 104c270:	0005883a 	mov	r2,zero
 104c274:	003ff006 	br	104c238 <__alt_data_end+0xfffcc238>

0104c278 <_cleanup>:
 104c278:	008041b4 	movhi	r2,262
 104c27c:	10a1f904 	addi	r2,r2,-30748
 104c280:	11000017 	ldw	r4,0(r2)
 104c284:	01404174 	movhi	r5,261
 104c288:	29482e04 	addi	r5,r5,8376
 104c28c:	104cc941 	jmpi	104cc94 <_fwalk_reent>

0104c290 <__sinit>:
 104c290:	20800e17 	ldw	r2,56(r4)
 104c294:	10000126 	beq	r2,zero,104c29c <__sinit+0xc>
 104c298:	f800283a 	ret
 104c29c:	104bf541 	jmpi	104bf54 <__sinit.part.1>

0104c2a0 <__sfp_lock_acquire>:
 104c2a0:	f800283a 	ret

0104c2a4 <__sfp_lock_release>:
 104c2a4:	f800283a 	ret

0104c2a8 <__sinit_lock_acquire>:
 104c2a8:	f800283a 	ret

0104c2ac <__sinit_lock_release>:
 104c2ac:	f800283a 	ret

0104c2b0 <__fp_lock_all>:
 104c2b0:	008041b4 	movhi	r2,262
 104c2b4:	10a1fa04 	addi	r2,r2,-30744
 104c2b8:	11000017 	ldw	r4,0(r2)
 104c2bc:	01404174 	movhi	r5,261
 104c2c0:	29703c04 	addi	r5,r5,-16144
 104c2c4:	104cbd01 	jmpi	104cbd0 <_fwalk>

0104c2c8 <__fp_unlock_all>:
 104c2c8:	008041b4 	movhi	r2,262
 104c2cc:	10a1fa04 	addi	r2,r2,-30744
 104c2d0:	11000017 	ldw	r4,0(r2)
 104c2d4:	01404174 	movhi	r5,261
 104c2d8:	296fd004 	addi	r5,r5,-16576
 104c2dc:	104cbd01 	jmpi	104cbd0 <_fwalk>

0104c2e0 <_malloc_trim_r>:
 104c2e0:	defffb04 	addi	sp,sp,-20
 104c2e4:	dcc00315 	stw	r19,12(sp)
 104c2e8:	04c04174 	movhi	r19,261
 104c2ec:	dc800215 	stw	r18,8(sp)
 104c2f0:	dc400115 	stw	r17,4(sp)
 104c2f4:	dc000015 	stw	r16,0(sp)
 104c2f8:	dfc00415 	stw	ra,16(sp)
 104c2fc:	2821883a 	mov	r16,r5
 104c300:	9cdc7504 	addi	r19,r19,29140
 104c304:	2025883a 	mov	r18,r4
 104c308:	10543240 	call	1054324 <__malloc_lock>
 104c30c:	98800217 	ldw	r2,8(r19)
 104c310:	14400117 	ldw	r17,4(r2)
 104c314:	00bfff04 	movi	r2,-4
 104c318:	88a2703a 	and	r17,r17,r2
 104c31c:	8c21c83a 	sub	r16,r17,r16
 104c320:	8403fbc4 	addi	r16,r16,4079
 104c324:	8020d33a 	srli	r16,r16,12
 104c328:	0083ffc4 	movi	r2,4095
 104c32c:	843fffc4 	addi	r16,r16,-1
 104c330:	8020933a 	slli	r16,r16,12
 104c334:	1400060e 	bge	r2,r16,104c350 <_malloc_trim_r+0x70>
 104c338:	000b883a 	mov	r5,zero
 104c33c:	9009883a 	mov	r4,r18
 104c340:	104f2800 	call	104f280 <_sbrk_r>
 104c344:	98c00217 	ldw	r3,8(r19)
 104c348:	1c47883a 	add	r3,r3,r17
 104c34c:	10c00a26 	beq	r2,r3,104c378 <_malloc_trim_r+0x98>
 104c350:	9009883a 	mov	r4,r18
 104c354:	10543480 	call	1054348 <__malloc_unlock>
 104c358:	0005883a 	mov	r2,zero
 104c35c:	dfc00417 	ldw	ra,16(sp)
 104c360:	dcc00317 	ldw	r19,12(sp)
 104c364:	dc800217 	ldw	r18,8(sp)
 104c368:	dc400117 	ldw	r17,4(sp)
 104c36c:	dc000017 	ldw	r16,0(sp)
 104c370:	dec00504 	addi	sp,sp,20
 104c374:	f800283a 	ret
 104c378:	040bc83a 	sub	r5,zero,r16
 104c37c:	9009883a 	mov	r4,r18
 104c380:	104f2800 	call	104f280 <_sbrk_r>
 104c384:	00ffffc4 	movi	r3,-1
 104c388:	10c00d26 	beq	r2,r3,104c3c0 <_malloc_trim_r+0xe0>
 104c38c:	00c041b4 	movhi	r3,262
 104c390:	18e8dc04 	addi	r3,r3,-23696
 104c394:	18800017 	ldw	r2,0(r3)
 104c398:	99000217 	ldw	r4,8(r19)
 104c39c:	8c23c83a 	sub	r17,r17,r16
 104c3a0:	8c400054 	ori	r17,r17,1
 104c3a4:	1421c83a 	sub	r16,r2,r16
 104c3a8:	24400115 	stw	r17,4(r4)
 104c3ac:	9009883a 	mov	r4,r18
 104c3b0:	1c000015 	stw	r16,0(r3)
 104c3b4:	10543480 	call	1054348 <__malloc_unlock>
 104c3b8:	00800044 	movi	r2,1
 104c3bc:	003fe706 	br	104c35c <__alt_data_end+0xfffcc35c>
 104c3c0:	000b883a 	mov	r5,zero
 104c3c4:	9009883a 	mov	r4,r18
 104c3c8:	104f2800 	call	104f280 <_sbrk_r>
 104c3cc:	99000217 	ldw	r4,8(r19)
 104c3d0:	014003c4 	movi	r5,15
 104c3d4:	1107c83a 	sub	r3,r2,r4
 104c3d8:	28ffdd0e 	bge	r5,r3,104c350 <__alt_data_end+0xfffcc350>
 104c3dc:	014041b4 	movhi	r5,262
 104c3e0:	2961fc04 	addi	r5,r5,-30736
 104c3e4:	29400017 	ldw	r5,0(r5)
 104c3e8:	18c00054 	ori	r3,r3,1
 104c3ec:	20c00115 	stw	r3,4(r4)
 104c3f0:	00c041b4 	movhi	r3,262
 104c3f4:	1145c83a 	sub	r2,r2,r5
 104c3f8:	18e8dc04 	addi	r3,r3,-23696
 104c3fc:	18800015 	stw	r2,0(r3)
 104c400:	003fd306 	br	104c350 <__alt_data_end+0xfffcc350>

0104c404 <_free_r>:
 104c404:	28004126 	beq	r5,zero,104c50c <_free_r+0x108>
 104c408:	defffd04 	addi	sp,sp,-12
 104c40c:	dc400115 	stw	r17,4(sp)
 104c410:	dc000015 	stw	r16,0(sp)
 104c414:	2023883a 	mov	r17,r4
 104c418:	2821883a 	mov	r16,r5
 104c41c:	dfc00215 	stw	ra,8(sp)
 104c420:	10543240 	call	1054324 <__malloc_lock>
 104c424:	81ffff17 	ldw	r7,-4(r16)
 104c428:	00bfff84 	movi	r2,-2
 104c42c:	01004174 	movhi	r4,261
 104c430:	81bffe04 	addi	r6,r16,-8
 104c434:	3884703a 	and	r2,r7,r2
 104c438:	211c7504 	addi	r4,r4,29140
 104c43c:	308b883a 	add	r5,r6,r2
 104c440:	2a400117 	ldw	r9,4(r5)
 104c444:	22000217 	ldw	r8,8(r4)
 104c448:	00ffff04 	movi	r3,-4
 104c44c:	48c6703a 	and	r3,r9,r3
 104c450:	2a005726 	beq	r5,r8,104c5b0 <_free_r+0x1ac>
 104c454:	28c00115 	stw	r3,4(r5)
 104c458:	39c0004c 	andi	r7,r7,1
 104c45c:	3800091e 	bne	r7,zero,104c484 <_free_r+0x80>
 104c460:	823ffe17 	ldw	r8,-8(r16)
 104c464:	22400204 	addi	r9,r4,8
 104c468:	320dc83a 	sub	r6,r6,r8
 104c46c:	31c00217 	ldw	r7,8(r6)
 104c470:	1205883a 	add	r2,r2,r8
 104c474:	3a406526 	beq	r7,r9,104c60c <_free_r+0x208>
 104c478:	32000317 	ldw	r8,12(r6)
 104c47c:	3a000315 	stw	r8,12(r7)
 104c480:	41c00215 	stw	r7,8(r8)
 104c484:	28cf883a 	add	r7,r5,r3
 104c488:	39c00117 	ldw	r7,4(r7)
 104c48c:	39c0004c 	andi	r7,r7,1
 104c490:	38003a26 	beq	r7,zero,104c57c <_free_r+0x178>
 104c494:	10c00054 	ori	r3,r2,1
 104c498:	30c00115 	stw	r3,4(r6)
 104c49c:	3087883a 	add	r3,r6,r2
 104c4a0:	18800015 	stw	r2,0(r3)
 104c4a4:	00c07fc4 	movi	r3,511
 104c4a8:	18801936 	bltu	r3,r2,104c510 <_free_r+0x10c>
 104c4ac:	1004d0fa 	srli	r2,r2,3
 104c4b0:	01c00044 	movi	r7,1
 104c4b4:	21400117 	ldw	r5,4(r4)
 104c4b8:	10c00044 	addi	r3,r2,1
 104c4bc:	18c7883a 	add	r3,r3,r3
 104c4c0:	1005d0ba 	srai	r2,r2,2
 104c4c4:	18c7883a 	add	r3,r3,r3
 104c4c8:	18c7883a 	add	r3,r3,r3
 104c4cc:	1907883a 	add	r3,r3,r4
 104c4d0:	3884983a 	sll	r2,r7,r2
 104c4d4:	19c00017 	ldw	r7,0(r3)
 104c4d8:	1a3ffe04 	addi	r8,r3,-8
 104c4dc:	1144b03a 	or	r2,r2,r5
 104c4e0:	32000315 	stw	r8,12(r6)
 104c4e4:	31c00215 	stw	r7,8(r6)
 104c4e8:	20800115 	stw	r2,4(r4)
 104c4ec:	19800015 	stw	r6,0(r3)
 104c4f0:	39800315 	stw	r6,12(r7)
 104c4f4:	8809883a 	mov	r4,r17
 104c4f8:	dfc00217 	ldw	ra,8(sp)
 104c4fc:	dc400117 	ldw	r17,4(sp)
 104c500:	dc000017 	ldw	r16,0(sp)
 104c504:	dec00304 	addi	sp,sp,12
 104c508:	10543481 	jmpi	1054348 <__malloc_unlock>
 104c50c:	f800283a 	ret
 104c510:	100ad27a 	srli	r5,r2,9
 104c514:	00c00104 	movi	r3,4
 104c518:	19404a36 	bltu	r3,r5,104c644 <_free_r+0x240>
 104c51c:	100ad1ba 	srli	r5,r2,6
 104c520:	28c00e44 	addi	r3,r5,57
 104c524:	18c7883a 	add	r3,r3,r3
 104c528:	29400e04 	addi	r5,r5,56
 104c52c:	18c7883a 	add	r3,r3,r3
 104c530:	18c7883a 	add	r3,r3,r3
 104c534:	1909883a 	add	r4,r3,r4
 104c538:	20c00017 	ldw	r3,0(r4)
 104c53c:	01c04174 	movhi	r7,261
 104c540:	213ffe04 	addi	r4,r4,-8
 104c544:	39dc7504 	addi	r7,r7,29140
 104c548:	20c04426 	beq	r4,r3,104c65c <_free_r+0x258>
 104c54c:	01ffff04 	movi	r7,-4
 104c550:	19400117 	ldw	r5,4(r3)
 104c554:	29ca703a 	and	r5,r5,r7
 104c558:	1140022e 	bgeu	r2,r5,104c564 <_free_r+0x160>
 104c55c:	18c00217 	ldw	r3,8(r3)
 104c560:	20fffb1e 	bne	r4,r3,104c550 <__alt_data_end+0xfffcc550>
 104c564:	19000317 	ldw	r4,12(r3)
 104c568:	31000315 	stw	r4,12(r6)
 104c56c:	30c00215 	stw	r3,8(r6)
 104c570:	21800215 	stw	r6,8(r4)
 104c574:	19800315 	stw	r6,12(r3)
 104c578:	003fde06 	br	104c4f4 <__alt_data_end+0xfffcc4f4>
 104c57c:	29c00217 	ldw	r7,8(r5)
 104c580:	10c5883a 	add	r2,r2,r3
 104c584:	00c04174 	movhi	r3,261
 104c588:	18dc7704 	addi	r3,r3,29148
 104c58c:	38c03b26 	beq	r7,r3,104c67c <_free_r+0x278>
 104c590:	2a000317 	ldw	r8,12(r5)
 104c594:	11400054 	ori	r5,r2,1
 104c598:	3087883a 	add	r3,r6,r2
 104c59c:	3a000315 	stw	r8,12(r7)
 104c5a0:	41c00215 	stw	r7,8(r8)
 104c5a4:	31400115 	stw	r5,4(r6)
 104c5a8:	18800015 	stw	r2,0(r3)
 104c5ac:	003fbd06 	br	104c4a4 <__alt_data_end+0xfffcc4a4>
 104c5b0:	39c0004c 	andi	r7,r7,1
 104c5b4:	10c5883a 	add	r2,r2,r3
 104c5b8:	3800071e 	bne	r7,zero,104c5d8 <_free_r+0x1d4>
 104c5bc:	81fffe17 	ldw	r7,-8(r16)
 104c5c0:	31cdc83a 	sub	r6,r6,r7
 104c5c4:	30c00317 	ldw	r3,12(r6)
 104c5c8:	31400217 	ldw	r5,8(r6)
 104c5cc:	11c5883a 	add	r2,r2,r7
 104c5d0:	28c00315 	stw	r3,12(r5)
 104c5d4:	19400215 	stw	r5,8(r3)
 104c5d8:	10c00054 	ori	r3,r2,1
 104c5dc:	30c00115 	stw	r3,4(r6)
 104c5e0:	00c041b4 	movhi	r3,262
 104c5e4:	18e1fd04 	addi	r3,r3,-30732
 104c5e8:	18c00017 	ldw	r3,0(r3)
 104c5ec:	21800215 	stw	r6,8(r4)
 104c5f0:	10ffc036 	bltu	r2,r3,104c4f4 <__alt_data_end+0xfffcc4f4>
 104c5f4:	008041b4 	movhi	r2,262
 104c5f8:	10a8c904 	addi	r2,r2,-23772
 104c5fc:	11400017 	ldw	r5,0(r2)
 104c600:	8809883a 	mov	r4,r17
 104c604:	104c2e00 	call	104c2e0 <_malloc_trim_r>
 104c608:	003fba06 	br	104c4f4 <__alt_data_end+0xfffcc4f4>
 104c60c:	28c9883a 	add	r4,r5,r3
 104c610:	21000117 	ldw	r4,4(r4)
 104c614:	2100004c 	andi	r4,r4,1
 104c618:	2000391e 	bne	r4,zero,104c700 <_free_r+0x2fc>
 104c61c:	29c00217 	ldw	r7,8(r5)
 104c620:	29000317 	ldw	r4,12(r5)
 104c624:	1885883a 	add	r2,r3,r2
 104c628:	10c00054 	ori	r3,r2,1
 104c62c:	39000315 	stw	r4,12(r7)
 104c630:	21c00215 	stw	r7,8(r4)
 104c634:	30c00115 	stw	r3,4(r6)
 104c638:	308d883a 	add	r6,r6,r2
 104c63c:	30800015 	stw	r2,0(r6)
 104c640:	003fac06 	br	104c4f4 <__alt_data_end+0xfffcc4f4>
 104c644:	00c00504 	movi	r3,20
 104c648:	19401536 	bltu	r3,r5,104c6a0 <_free_r+0x29c>
 104c64c:	28c01704 	addi	r3,r5,92
 104c650:	18c7883a 	add	r3,r3,r3
 104c654:	294016c4 	addi	r5,r5,91
 104c658:	003fb406 	br	104c52c <__alt_data_end+0xfffcc52c>
 104c65c:	280bd0ba 	srai	r5,r5,2
 104c660:	00c00044 	movi	r3,1
 104c664:	38800117 	ldw	r2,4(r7)
 104c668:	194a983a 	sll	r5,r3,r5
 104c66c:	2007883a 	mov	r3,r4
 104c670:	2884b03a 	or	r2,r5,r2
 104c674:	38800115 	stw	r2,4(r7)
 104c678:	003fbb06 	br	104c568 <__alt_data_end+0xfffcc568>
 104c67c:	21800515 	stw	r6,20(r4)
 104c680:	21800415 	stw	r6,16(r4)
 104c684:	10c00054 	ori	r3,r2,1
 104c688:	31c00315 	stw	r7,12(r6)
 104c68c:	31c00215 	stw	r7,8(r6)
 104c690:	30c00115 	stw	r3,4(r6)
 104c694:	308d883a 	add	r6,r6,r2
 104c698:	30800015 	stw	r2,0(r6)
 104c69c:	003f9506 	br	104c4f4 <__alt_data_end+0xfffcc4f4>
 104c6a0:	00c01504 	movi	r3,84
 104c6a4:	19400536 	bltu	r3,r5,104c6bc <_free_r+0x2b8>
 104c6a8:	100ad33a 	srli	r5,r2,12
 104c6ac:	28c01bc4 	addi	r3,r5,111
 104c6b0:	18c7883a 	add	r3,r3,r3
 104c6b4:	29401b84 	addi	r5,r5,110
 104c6b8:	003f9c06 	br	104c52c <__alt_data_end+0xfffcc52c>
 104c6bc:	00c05504 	movi	r3,340
 104c6c0:	19400536 	bltu	r3,r5,104c6d8 <_free_r+0x2d4>
 104c6c4:	100ad3fa 	srli	r5,r2,15
 104c6c8:	28c01e04 	addi	r3,r5,120
 104c6cc:	18c7883a 	add	r3,r3,r3
 104c6d0:	29401dc4 	addi	r5,r5,119
 104c6d4:	003f9506 	br	104c52c <__alt_data_end+0xfffcc52c>
 104c6d8:	00c15504 	movi	r3,1364
 104c6dc:	19400536 	bltu	r3,r5,104c6f4 <_free_r+0x2f0>
 104c6e0:	100ad4ba 	srli	r5,r2,18
 104c6e4:	28c01f44 	addi	r3,r5,125
 104c6e8:	18c7883a 	add	r3,r3,r3
 104c6ec:	29401f04 	addi	r5,r5,124
 104c6f0:	003f8e06 	br	104c52c <__alt_data_end+0xfffcc52c>
 104c6f4:	00c03f84 	movi	r3,254
 104c6f8:	01401f84 	movi	r5,126
 104c6fc:	003f8b06 	br	104c52c <__alt_data_end+0xfffcc52c>
 104c700:	10c00054 	ori	r3,r2,1
 104c704:	30c00115 	stw	r3,4(r6)
 104c708:	308d883a 	add	r6,r6,r2
 104c70c:	30800015 	stw	r2,0(r6)
 104c710:	003f7806 	br	104c4f4 <__alt_data_end+0xfffcc4f4>

0104c714 <__sfvwrite_r>:
 104c714:	30800217 	ldw	r2,8(r6)
 104c718:	10006726 	beq	r2,zero,104c8b8 <__sfvwrite_r+0x1a4>
 104c71c:	28c0030b 	ldhu	r3,12(r5)
 104c720:	defff404 	addi	sp,sp,-48
 104c724:	dd400715 	stw	r21,28(sp)
 104c728:	dd000615 	stw	r20,24(sp)
 104c72c:	dc000215 	stw	r16,8(sp)
 104c730:	dfc00b15 	stw	ra,44(sp)
 104c734:	df000a15 	stw	fp,40(sp)
 104c738:	ddc00915 	stw	r23,36(sp)
 104c73c:	dd800815 	stw	r22,32(sp)
 104c740:	dcc00515 	stw	r19,20(sp)
 104c744:	dc800415 	stw	r18,16(sp)
 104c748:	dc400315 	stw	r17,12(sp)
 104c74c:	1880020c 	andi	r2,r3,8
 104c750:	2821883a 	mov	r16,r5
 104c754:	202b883a 	mov	r21,r4
 104c758:	3029883a 	mov	r20,r6
 104c75c:	10002726 	beq	r2,zero,104c7fc <__sfvwrite_r+0xe8>
 104c760:	28800417 	ldw	r2,16(r5)
 104c764:	10002526 	beq	r2,zero,104c7fc <__sfvwrite_r+0xe8>
 104c768:	1880008c 	andi	r2,r3,2
 104c76c:	a4400017 	ldw	r17,0(r20)
 104c770:	10002a26 	beq	r2,zero,104c81c <__sfvwrite_r+0x108>
 104c774:	05a00034 	movhi	r22,32768
 104c778:	0027883a 	mov	r19,zero
 104c77c:	0025883a 	mov	r18,zero
 104c780:	b5bf0004 	addi	r22,r22,-1024
 104c784:	980d883a 	mov	r6,r19
 104c788:	a809883a 	mov	r4,r21
 104c78c:	90004626 	beq	r18,zero,104c8a8 <__sfvwrite_r+0x194>
 104c790:	900f883a 	mov	r7,r18
 104c794:	b480022e 	bgeu	r22,r18,104c7a0 <__sfvwrite_r+0x8c>
 104c798:	01e00034 	movhi	r7,32768
 104c79c:	39ff0004 	addi	r7,r7,-1024
 104c7a0:	80800917 	ldw	r2,36(r16)
 104c7a4:	81400717 	ldw	r5,28(r16)
 104c7a8:	103ee83a 	callr	r2
 104c7ac:	0080570e 	bge	zero,r2,104c90c <__sfvwrite_r+0x1f8>
 104c7b0:	a0c00217 	ldw	r3,8(r20)
 104c7b4:	98a7883a 	add	r19,r19,r2
 104c7b8:	90a5c83a 	sub	r18,r18,r2
 104c7bc:	1885c83a 	sub	r2,r3,r2
 104c7c0:	a0800215 	stw	r2,8(r20)
 104c7c4:	103fef1e 	bne	r2,zero,104c784 <__alt_data_end+0xfffcc784>
 104c7c8:	0005883a 	mov	r2,zero
 104c7cc:	dfc00b17 	ldw	ra,44(sp)
 104c7d0:	df000a17 	ldw	fp,40(sp)
 104c7d4:	ddc00917 	ldw	r23,36(sp)
 104c7d8:	dd800817 	ldw	r22,32(sp)
 104c7dc:	dd400717 	ldw	r21,28(sp)
 104c7e0:	dd000617 	ldw	r20,24(sp)
 104c7e4:	dcc00517 	ldw	r19,20(sp)
 104c7e8:	dc800417 	ldw	r18,16(sp)
 104c7ec:	dc400317 	ldw	r17,12(sp)
 104c7f0:	dc000217 	ldw	r16,8(sp)
 104c7f4:	dec00c04 	addi	sp,sp,48
 104c7f8:	f800283a 	ret
 104c7fc:	800b883a 	mov	r5,r16
 104c800:	a809883a 	mov	r4,r21
 104c804:	104a2bc0 	call	104a2bc <__swsetup_r>
 104c808:	1000eb1e 	bne	r2,zero,104cbb8 <__sfvwrite_r+0x4a4>
 104c80c:	80c0030b 	ldhu	r3,12(r16)
 104c810:	a4400017 	ldw	r17,0(r20)
 104c814:	1880008c 	andi	r2,r3,2
 104c818:	103fd61e 	bne	r2,zero,104c774 <__alt_data_end+0xfffcc774>
 104c81c:	1880004c 	andi	r2,r3,1
 104c820:	10003f1e 	bne	r2,zero,104c920 <__sfvwrite_r+0x20c>
 104c824:	0039883a 	mov	fp,zero
 104c828:	0025883a 	mov	r18,zero
 104c82c:	90001a26 	beq	r18,zero,104c898 <__sfvwrite_r+0x184>
 104c830:	1880800c 	andi	r2,r3,512
 104c834:	84c00217 	ldw	r19,8(r16)
 104c838:	10002126 	beq	r2,zero,104c8c0 <__sfvwrite_r+0x1ac>
 104c83c:	982f883a 	mov	r23,r19
 104c840:	94c09336 	bltu	r18,r19,104ca90 <__sfvwrite_r+0x37c>
 104c844:	1881200c 	andi	r2,r3,1152
 104c848:	10009e1e 	bne	r2,zero,104cac4 <__sfvwrite_r+0x3b0>
 104c84c:	81000017 	ldw	r4,0(r16)
 104c850:	b80d883a 	mov	r6,r23
 104c854:	e00b883a 	mov	r5,fp
 104c858:	104da280 	call	104da28 <memmove>
 104c85c:	80c00217 	ldw	r3,8(r16)
 104c860:	81000017 	ldw	r4,0(r16)
 104c864:	9005883a 	mov	r2,r18
 104c868:	1ce7c83a 	sub	r19,r3,r19
 104c86c:	25cf883a 	add	r7,r4,r23
 104c870:	84c00215 	stw	r19,8(r16)
 104c874:	81c00015 	stw	r7,0(r16)
 104c878:	a0c00217 	ldw	r3,8(r20)
 104c87c:	e0b9883a 	add	fp,fp,r2
 104c880:	90a5c83a 	sub	r18,r18,r2
 104c884:	18a7c83a 	sub	r19,r3,r2
 104c888:	a4c00215 	stw	r19,8(r20)
 104c88c:	983fce26 	beq	r19,zero,104c7c8 <__alt_data_end+0xfffcc7c8>
 104c890:	80c0030b 	ldhu	r3,12(r16)
 104c894:	903fe61e 	bne	r18,zero,104c830 <__alt_data_end+0xfffcc830>
 104c898:	8f000017 	ldw	fp,0(r17)
 104c89c:	8c800117 	ldw	r18,4(r17)
 104c8a0:	8c400204 	addi	r17,r17,8
 104c8a4:	003fe106 	br	104c82c <__alt_data_end+0xfffcc82c>
 104c8a8:	8cc00017 	ldw	r19,0(r17)
 104c8ac:	8c800117 	ldw	r18,4(r17)
 104c8b0:	8c400204 	addi	r17,r17,8
 104c8b4:	003fb306 	br	104c784 <__alt_data_end+0xfffcc784>
 104c8b8:	0005883a 	mov	r2,zero
 104c8bc:	f800283a 	ret
 104c8c0:	81000017 	ldw	r4,0(r16)
 104c8c4:	80800417 	ldw	r2,16(r16)
 104c8c8:	11005736 	bltu	r2,r4,104ca28 <__sfvwrite_r+0x314>
 104c8cc:	85c00517 	ldw	r23,20(r16)
 104c8d0:	95c05536 	bltu	r18,r23,104ca28 <__sfvwrite_r+0x314>
 104c8d4:	00a00034 	movhi	r2,32768
 104c8d8:	10bfffc4 	addi	r2,r2,-1
 104c8dc:	9009883a 	mov	r4,r18
 104c8e0:	1480012e 	bgeu	r2,r18,104c8e8 <__sfvwrite_r+0x1d4>
 104c8e4:	1009883a 	mov	r4,r2
 104c8e8:	b80b883a 	mov	r5,r23
 104c8ec:	1043cbc0 	call	1043cbc <__divsi3>
 104c8f0:	15cf383a 	mul	r7,r2,r23
 104c8f4:	81400717 	ldw	r5,28(r16)
 104c8f8:	80800917 	ldw	r2,36(r16)
 104c8fc:	e00d883a 	mov	r6,fp
 104c900:	a809883a 	mov	r4,r21
 104c904:	103ee83a 	callr	r2
 104c908:	00bfdb16 	blt	zero,r2,104c878 <__alt_data_end+0xfffcc878>
 104c90c:	8080030b 	ldhu	r2,12(r16)
 104c910:	10801014 	ori	r2,r2,64
 104c914:	8080030d 	sth	r2,12(r16)
 104c918:	00bfffc4 	movi	r2,-1
 104c91c:	003fab06 	br	104c7cc <__alt_data_end+0xfffcc7cc>
 104c920:	0027883a 	mov	r19,zero
 104c924:	0011883a 	mov	r8,zero
 104c928:	0039883a 	mov	fp,zero
 104c92c:	0025883a 	mov	r18,zero
 104c930:	90001f26 	beq	r18,zero,104c9b0 <__sfvwrite_r+0x29c>
 104c934:	40005a26 	beq	r8,zero,104caa0 <__sfvwrite_r+0x38c>
 104c938:	982d883a 	mov	r22,r19
 104c93c:	94c0012e 	bgeu	r18,r19,104c944 <__sfvwrite_r+0x230>
 104c940:	902d883a 	mov	r22,r18
 104c944:	81000017 	ldw	r4,0(r16)
 104c948:	80800417 	ldw	r2,16(r16)
 104c94c:	b02f883a 	mov	r23,r22
 104c950:	81c00517 	ldw	r7,20(r16)
 104c954:	1100032e 	bgeu	r2,r4,104c964 <__sfvwrite_r+0x250>
 104c958:	80c00217 	ldw	r3,8(r16)
 104c95c:	38c7883a 	add	r3,r7,r3
 104c960:	1d801816 	blt	r3,r22,104c9c4 <__sfvwrite_r+0x2b0>
 104c964:	b1c03e16 	blt	r22,r7,104ca60 <__sfvwrite_r+0x34c>
 104c968:	80800917 	ldw	r2,36(r16)
 104c96c:	81400717 	ldw	r5,28(r16)
 104c970:	e00d883a 	mov	r6,fp
 104c974:	da000115 	stw	r8,4(sp)
 104c978:	a809883a 	mov	r4,r21
 104c97c:	103ee83a 	callr	r2
 104c980:	102f883a 	mov	r23,r2
 104c984:	da000117 	ldw	r8,4(sp)
 104c988:	00bfe00e 	bge	zero,r2,104c90c <__alt_data_end+0xfffcc90c>
 104c98c:	9de7c83a 	sub	r19,r19,r23
 104c990:	98001f26 	beq	r19,zero,104ca10 <__sfvwrite_r+0x2fc>
 104c994:	a0800217 	ldw	r2,8(r20)
 104c998:	e5f9883a 	add	fp,fp,r23
 104c99c:	95e5c83a 	sub	r18,r18,r23
 104c9a0:	15efc83a 	sub	r23,r2,r23
 104c9a4:	a5c00215 	stw	r23,8(r20)
 104c9a8:	b83f8726 	beq	r23,zero,104c7c8 <__alt_data_end+0xfffcc7c8>
 104c9ac:	903fe11e 	bne	r18,zero,104c934 <__alt_data_end+0xfffcc934>
 104c9b0:	8f000017 	ldw	fp,0(r17)
 104c9b4:	8c800117 	ldw	r18,4(r17)
 104c9b8:	0011883a 	mov	r8,zero
 104c9bc:	8c400204 	addi	r17,r17,8
 104c9c0:	003fdb06 	br	104c930 <__alt_data_end+0xfffcc930>
 104c9c4:	180d883a 	mov	r6,r3
 104c9c8:	e00b883a 	mov	r5,fp
 104c9cc:	da000115 	stw	r8,4(sp)
 104c9d0:	d8c00015 	stw	r3,0(sp)
 104c9d4:	104da280 	call	104da28 <memmove>
 104c9d8:	d8c00017 	ldw	r3,0(sp)
 104c9dc:	80800017 	ldw	r2,0(r16)
 104c9e0:	800b883a 	mov	r5,r16
 104c9e4:	a809883a 	mov	r4,r21
 104c9e8:	10c5883a 	add	r2,r2,r3
 104c9ec:	80800015 	stw	r2,0(r16)
 104c9f0:	d8c00015 	stw	r3,0(sp)
 104c9f4:	104beb40 	call	104beb4 <_fflush_r>
 104c9f8:	d8c00017 	ldw	r3,0(sp)
 104c9fc:	da000117 	ldw	r8,4(sp)
 104ca00:	103fc21e 	bne	r2,zero,104c90c <__alt_data_end+0xfffcc90c>
 104ca04:	182f883a 	mov	r23,r3
 104ca08:	9de7c83a 	sub	r19,r19,r23
 104ca0c:	983fe11e 	bne	r19,zero,104c994 <__alt_data_end+0xfffcc994>
 104ca10:	800b883a 	mov	r5,r16
 104ca14:	a809883a 	mov	r4,r21
 104ca18:	104beb40 	call	104beb4 <_fflush_r>
 104ca1c:	103fbb1e 	bne	r2,zero,104c90c <__alt_data_end+0xfffcc90c>
 104ca20:	0011883a 	mov	r8,zero
 104ca24:	003fdb06 	br	104c994 <__alt_data_end+0xfffcc994>
 104ca28:	94c0012e 	bgeu	r18,r19,104ca30 <__sfvwrite_r+0x31c>
 104ca2c:	9027883a 	mov	r19,r18
 104ca30:	980d883a 	mov	r6,r19
 104ca34:	e00b883a 	mov	r5,fp
 104ca38:	104da280 	call	104da28 <memmove>
 104ca3c:	80800217 	ldw	r2,8(r16)
 104ca40:	80c00017 	ldw	r3,0(r16)
 104ca44:	14c5c83a 	sub	r2,r2,r19
 104ca48:	1cc7883a 	add	r3,r3,r19
 104ca4c:	80800215 	stw	r2,8(r16)
 104ca50:	80c00015 	stw	r3,0(r16)
 104ca54:	10004326 	beq	r2,zero,104cb64 <__sfvwrite_r+0x450>
 104ca58:	9805883a 	mov	r2,r19
 104ca5c:	003f8606 	br	104c878 <__alt_data_end+0xfffcc878>
 104ca60:	b00d883a 	mov	r6,r22
 104ca64:	e00b883a 	mov	r5,fp
 104ca68:	da000115 	stw	r8,4(sp)
 104ca6c:	104da280 	call	104da28 <memmove>
 104ca70:	80800217 	ldw	r2,8(r16)
 104ca74:	80c00017 	ldw	r3,0(r16)
 104ca78:	da000117 	ldw	r8,4(sp)
 104ca7c:	1585c83a 	sub	r2,r2,r22
 104ca80:	1dad883a 	add	r22,r3,r22
 104ca84:	80800215 	stw	r2,8(r16)
 104ca88:	85800015 	stw	r22,0(r16)
 104ca8c:	003fbf06 	br	104c98c <__alt_data_end+0xfffcc98c>
 104ca90:	81000017 	ldw	r4,0(r16)
 104ca94:	9027883a 	mov	r19,r18
 104ca98:	902f883a 	mov	r23,r18
 104ca9c:	003f6c06 	br	104c850 <__alt_data_end+0xfffcc850>
 104caa0:	900d883a 	mov	r6,r18
 104caa4:	01400284 	movi	r5,10
 104caa8:	e009883a 	mov	r4,fp
 104caac:	104d7fc0 	call	104d7fc <memchr>
 104cab0:	10003e26 	beq	r2,zero,104cbac <__sfvwrite_r+0x498>
 104cab4:	10800044 	addi	r2,r2,1
 104cab8:	1727c83a 	sub	r19,r2,fp
 104cabc:	02000044 	movi	r8,1
 104cac0:	003f9d06 	br	104c938 <__alt_data_end+0xfffcc938>
 104cac4:	80800517 	ldw	r2,20(r16)
 104cac8:	81400417 	ldw	r5,16(r16)
 104cacc:	81c00017 	ldw	r7,0(r16)
 104cad0:	10a7883a 	add	r19,r2,r2
 104cad4:	9885883a 	add	r2,r19,r2
 104cad8:	1026d7fa 	srli	r19,r2,31
 104cadc:	396dc83a 	sub	r22,r7,r5
 104cae0:	b1000044 	addi	r4,r22,1
 104cae4:	9885883a 	add	r2,r19,r2
 104cae8:	1027d07a 	srai	r19,r2,1
 104caec:	2485883a 	add	r2,r4,r18
 104caf0:	980d883a 	mov	r6,r19
 104caf4:	9880022e 	bgeu	r19,r2,104cb00 <__sfvwrite_r+0x3ec>
 104caf8:	1027883a 	mov	r19,r2
 104cafc:	100d883a 	mov	r6,r2
 104cb00:	18c1000c 	andi	r3,r3,1024
 104cb04:	18001c26 	beq	r3,zero,104cb78 <__sfvwrite_r+0x464>
 104cb08:	300b883a 	mov	r5,r6
 104cb0c:	a809883a 	mov	r4,r21
 104cb10:	104cff00 	call	104cff0 <_malloc_r>
 104cb14:	102f883a 	mov	r23,r2
 104cb18:	10002926 	beq	r2,zero,104cbc0 <__sfvwrite_r+0x4ac>
 104cb1c:	81400417 	ldw	r5,16(r16)
 104cb20:	b00d883a 	mov	r6,r22
 104cb24:	1009883a 	mov	r4,r2
 104cb28:	104d8e00 	call	104d8e0 <memcpy>
 104cb2c:	8080030b 	ldhu	r2,12(r16)
 104cb30:	00fedfc4 	movi	r3,-1153
 104cb34:	10c4703a 	and	r2,r2,r3
 104cb38:	10802014 	ori	r2,r2,128
 104cb3c:	8080030d 	sth	r2,12(r16)
 104cb40:	bd89883a 	add	r4,r23,r22
 104cb44:	9d8fc83a 	sub	r7,r19,r22
 104cb48:	85c00415 	stw	r23,16(r16)
 104cb4c:	84c00515 	stw	r19,20(r16)
 104cb50:	81000015 	stw	r4,0(r16)
 104cb54:	9027883a 	mov	r19,r18
 104cb58:	81c00215 	stw	r7,8(r16)
 104cb5c:	902f883a 	mov	r23,r18
 104cb60:	003f3b06 	br	104c850 <__alt_data_end+0xfffcc850>
 104cb64:	800b883a 	mov	r5,r16
 104cb68:	a809883a 	mov	r4,r21
 104cb6c:	104beb40 	call	104beb4 <_fflush_r>
 104cb70:	103fb926 	beq	r2,zero,104ca58 <__alt_data_end+0xfffcca58>
 104cb74:	003f6506 	br	104c90c <__alt_data_end+0xfffcc90c>
 104cb78:	a809883a 	mov	r4,r21
 104cb7c:	104eca80 	call	104eca8 <_realloc_r>
 104cb80:	102f883a 	mov	r23,r2
 104cb84:	103fee1e 	bne	r2,zero,104cb40 <__alt_data_end+0xfffccb40>
 104cb88:	81400417 	ldw	r5,16(r16)
 104cb8c:	a809883a 	mov	r4,r21
 104cb90:	104c4040 	call	104c404 <_free_r>
 104cb94:	8080030b 	ldhu	r2,12(r16)
 104cb98:	00ffdfc4 	movi	r3,-129
 104cb9c:	1884703a 	and	r2,r3,r2
 104cba0:	00c00304 	movi	r3,12
 104cba4:	a8c00015 	stw	r3,0(r21)
 104cba8:	003f5906 	br	104c910 <__alt_data_end+0xfffcc910>
 104cbac:	94c00044 	addi	r19,r18,1
 104cbb0:	02000044 	movi	r8,1
 104cbb4:	003f6006 	br	104c938 <__alt_data_end+0xfffcc938>
 104cbb8:	00bfffc4 	movi	r2,-1
 104cbbc:	003f0306 	br	104c7cc <__alt_data_end+0xfffcc7cc>
 104cbc0:	00800304 	movi	r2,12
 104cbc4:	a8800015 	stw	r2,0(r21)
 104cbc8:	8080030b 	ldhu	r2,12(r16)
 104cbcc:	003f5006 	br	104c910 <__alt_data_end+0xfffcc910>

0104cbd0 <_fwalk>:
 104cbd0:	defff704 	addi	sp,sp,-36
 104cbd4:	dd000415 	stw	r20,16(sp)
 104cbd8:	dfc00815 	stw	ra,32(sp)
 104cbdc:	ddc00715 	stw	r23,28(sp)
 104cbe0:	dd800615 	stw	r22,24(sp)
 104cbe4:	dd400515 	stw	r21,20(sp)
 104cbe8:	dcc00315 	stw	r19,12(sp)
 104cbec:	dc800215 	stw	r18,8(sp)
 104cbf0:	dc400115 	stw	r17,4(sp)
 104cbf4:	dc000015 	stw	r16,0(sp)
 104cbf8:	2500b804 	addi	r20,r4,736
 104cbfc:	a0002326 	beq	r20,zero,104cc8c <_fwalk+0xbc>
 104cc00:	282b883a 	mov	r21,r5
 104cc04:	002f883a 	mov	r23,zero
 104cc08:	05800044 	movi	r22,1
 104cc0c:	04ffffc4 	movi	r19,-1
 104cc10:	a4400117 	ldw	r17,4(r20)
 104cc14:	a4800217 	ldw	r18,8(r20)
 104cc18:	8c7fffc4 	addi	r17,r17,-1
 104cc1c:	88000d16 	blt	r17,zero,104cc54 <_fwalk+0x84>
 104cc20:	94000304 	addi	r16,r18,12
 104cc24:	94800384 	addi	r18,r18,14
 104cc28:	8080000b 	ldhu	r2,0(r16)
 104cc2c:	8c7fffc4 	addi	r17,r17,-1
 104cc30:	813ffd04 	addi	r4,r16,-12
 104cc34:	b080042e 	bgeu	r22,r2,104cc48 <_fwalk+0x78>
 104cc38:	9080000f 	ldh	r2,0(r18)
 104cc3c:	14c00226 	beq	r2,r19,104cc48 <_fwalk+0x78>
 104cc40:	a83ee83a 	callr	r21
 104cc44:	b8aeb03a 	or	r23,r23,r2
 104cc48:	84001a04 	addi	r16,r16,104
 104cc4c:	94801a04 	addi	r18,r18,104
 104cc50:	8cfff51e 	bne	r17,r19,104cc28 <__alt_data_end+0xfffccc28>
 104cc54:	a5000017 	ldw	r20,0(r20)
 104cc58:	a03fed1e 	bne	r20,zero,104cc10 <__alt_data_end+0xfffccc10>
 104cc5c:	b805883a 	mov	r2,r23
 104cc60:	dfc00817 	ldw	ra,32(sp)
 104cc64:	ddc00717 	ldw	r23,28(sp)
 104cc68:	dd800617 	ldw	r22,24(sp)
 104cc6c:	dd400517 	ldw	r21,20(sp)
 104cc70:	dd000417 	ldw	r20,16(sp)
 104cc74:	dcc00317 	ldw	r19,12(sp)
 104cc78:	dc800217 	ldw	r18,8(sp)
 104cc7c:	dc400117 	ldw	r17,4(sp)
 104cc80:	dc000017 	ldw	r16,0(sp)
 104cc84:	dec00904 	addi	sp,sp,36
 104cc88:	f800283a 	ret
 104cc8c:	002f883a 	mov	r23,zero
 104cc90:	003ff206 	br	104cc5c <__alt_data_end+0xfffccc5c>

0104cc94 <_fwalk_reent>:
 104cc94:	defff704 	addi	sp,sp,-36
 104cc98:	dd000415 	stw	r20,16(sp)
 104cc9c:	dfc00815 	stw	ra,32(sp)
 104cca0:	ddc00715 	stw	r23,28(sp)
 104cca4:	dd800615 	stw	r22,24(sp)
 104cca8:	dd400515 	stw	r21,20(sp)
 104ccac:	dcc00315 	stw	r19,12(sp)
 104ccb0:	dc800215 	stw	r18,8(sp)
 104ccb4:	dc400115 	stw	r17,4(sp)
 104ccb8:	dc000015 	stw	r16,0(sp)
 104ccbc:	2500b804 	addi	r20,r4,736
 104ccc0:	a0002326 	beq	r20,zero,104cd50 <_fwalk_reent+0xbc>
 104ccc4:	282b883a 	mov	r21,r5
 104ccc8:	2027883a 	mov	r19,r4
 104cccc:	002f883a 	mov	r23,zero
 104ccd0:	05800044 	movi	r22,1
 104ccd4:	04bfffc4 	movi	r18,-1
 104ccd8:	a4400117 	ldw	r17,4(r20)
 104ccdc:	a4000217 	ldw	r16,8(r20)
 104cce0:	8c7fffc4 	addi	r17,r17,-1
 104cce4:	88000c16 	blt	r17,zero,104cd18 <_fwalk_reent+0x84>
 104cce8:	84000304 	addi	r16,r16,12
 104ccec:	8080000b 	ldhu	r2,0(r16)
 104ccf0:	8c7fffc4 	addi	r17,r17,-1
 104ccf4:	817ffd04 	addi	r5,r16,-12
 104ccf8:	b080052e 	bgeu	r22,r2,104cd10 <_fwalk_reent+0x7c>
 104ccfc:	8080008f 	ldh	r2,2(r16)
 104cd00:	9809883a 	mov	r4,r19
 104cd04:	14800226 	beq	r2,r18,104cd10 <_fwalk_reent+0x7c>
 104cd08:	a83ee83a 	callr	r21
 104cd0c:	b8aeb03a 	or	r23,r23,r2
 104cd10:	84001a04 	addi	r16,r16,104
 104cd14:	8cbff51e 	bne	r17,r18,104ccec <__alt_data_end+0xfffcccec>
 104cd18:	a5000017 	ldw	r20,0(r20)
 104cd1c:	a03fee1e 	bne	r20,zero,104ccd8 <__alt_data_end+0xfffcccd8>
 104cd20:	b805883a 	mov	r2,r23
 104cd24:	dfc00817 	ldw	ra,32(sp)
 104cd28:	ddc00717 	ldw	r23,28(sp)
 104cd2c:	dd800617 	ldw	r22,24(sp)
 104cd30:	dd400517 	ldw	r21,20(sp)
 104cd34:	dd000417 	ldw	r20,16(sp)
 104cd38:	dcc00317 	ldw	r19,12(sp)
 104cd3c:	dc800217 	ldw	r18,8(sp)
 104cd40:	dc400117 	ldw	r17,4(sp)
 104cd44:	dc000017 	ldw	r16,0(sp)
 104cd48:	dec00904 	addi	sp,sp,36
 104cd4c:	f800283a 	ret
 104cd50:	002f883a 	mov	r23,zero
 104cd54:	003ff206 	br	104cd20 <__alt_data_end+0xfffccd20>

0104cd58 <_setlocale_r>:
 104cd58:	30001b26 	beq	r6,zero,104cdc8 <_setlocale_r+0x70>
 104cd5c:	01404174 	movhi	r5,261
 104cd60:	defffe04 	addi	sp,sp,-8
 104cd64:	295ae704 	addi	r5,r5,27548
 104cd68:	3009883a 	mov	r4,r6
 104cd6c:	dc000015 	stw	r16,0(sp)
 104cd70:	dfc00115 	stw	ra,4(sp)
 104cd74:	3021883a 	mov	r16,r6
 104cd78:	104f4100 	call	104f410 <strcmp>
 104cd7c:	1000061e 	bne	r2,zero,104cd98 <_setlocale_r+0x40>
 104cd80:	00804174 	movhi	r2,261
 104cd84:	109ae604 	addi	r2,r2,27544
 104cd88:	dfc00117 	ldw	ra,4(sp)
 104cd8c:	dc000017 	ldw	r16,0(sp)
 104cd90:	dec00204 	addi	sp,sp,8
 104cd94:	f800283a 	ret
 104cd98:	01404174 	movhi	r5,261
 104cd9c:	295ae604 	addi	r5,r5,27544
 104cda0:	8009883a 	mov	r4,r16
 104cda4:	104f4100 	call	104f410 <strcmp>
 104cda8:	103ff526 	beq	r2,zero,104cd80 <__alt_data_end+0xfffccd80>
 104cdac:	01404174 	movhi	r5,261
 104cdb0:	295ac904 	addi	r5,r5,27428
 104cdb4:	8009883a 	mov	r4,r16
 104cdb8:	104f4100 	call	104f410 <strcmp>
 104cdbc:	103ff026 	beq	r2,zero,104cd80 <__alt_data_end+0xfffccd80>
 104cdc0:	0005883a 	mov	r2,zero
 104cdc4:	003ff006 	br	104cd88 <__alt_data_end+0xfffccd88>
 104cdc8:	00804174 	movhi	r2,261
 104cdcc:	109ae604 	addi	r2,r2,27544
 104cdd0:	f800283a 	ret

0104cdd4 <__locale_charset>:
 104cdd4:	00804174 	movhi	r2,261
 104cdd8:	109c5f04 	addi	r2,r2,29052
 104cddc:	f800283a 	ret

0104cde0 <__locale_mb_cur_max>:
 104cde0:	008041b4 	movhi	r2,262
 104cde4:	10a1fb04 	addi	r2,r2,-30740
 104cde8:	10800017 	ldw	r2,0(r2)
 104cdec:	f800283a 	ret

0104cdf0 <__locale_msgcharset>:
 104cdf0:	00804174 	movhi	r2,261
 104cdf4:	109c5704 	addi	r2,r2,29020
 104cdf8:	f800283a 	ret

0104cdfc <__locale_cjk_lang>:
 104cdfc:	0005883a 	mov	r2,zero
 104ce00:	f800283a 	ret

0104ce04 <_localeconv_r>:
 104ce04:	00804174 	movhi	r2,261
 104ce08:	109c6704 	addi	r2,r2,29084
 104ce0c:	f800283a 	ret

0104ce10 <setlocale>:
 104ce10:	008041b4 	movhi	r2,262
 104ce14:	10a1fa04 	addi	r2,r2,-30744
 104ce18:	280d883a 	mov	r6,r5
 104ce1c:	200b883a 	mov	r5,r4
 104ce20:	11000017 	ldw	r4,0(r2)
 104ce24:	104cd581 	jmpi	104cd58 <_setlocale_r>

0104ce28 <localeconv>:
 104ce28:	00804174 	movhi	r2,261
 104ce2c:	109c6704 	addi	r2,r2,29084
 104ce30:	f800283a 	ret

0104ce34 <__smakebuf_r>:
 104ce34:	2880030b 	ldhu	r2,12(r5)
 104ce38:	10c0008c 	andi	r3,r2,2
 104ce3c:	1800411e 	bne	r3,zero,104cf44 <__smakebuf_r+0x110>
 104ce40:	deffec04 	addi	sp,sp,-80
 104ce44:	dc000f15 	stw	r16,60(sp)
 104ce48:	2821883a 	mov	r16,r5
 104ce4c:	2940038f 	ldh	r5,14(r5)
 104ce50:	dc401015 	stw	r17,64(sp)
 104ce54:	dfc01315 	stw	ra,76(sp)
 104ce58:	dcc01215 	stw	r19,72(sp)
 104ce5c:	dc801115 	stw	r18,68(sp)
 104ce60:	2023883a 	mov	r17,r4
 104ce64:	28001c16 	blt	r5,zero,104ced8 <__smakebuf_r+0xa4>
 104ce68:	d80d883a 	mov	r6,sp
 104ce6c:	10523c40 	call	10523c4 <_fstat_r>
 104ce70:	10001816 	blt	r2,zero,104ced4 <__smakebuf_r+0xa0>
 104ce74:	d8800117 	ldw	r2,4(sp)
 104ce78:	00e00014 	movui	r3,32768
 104ce7c:	10bc000c 	andi	r2,r2,61440
 104ce80:	14c80020 	cmpeqi	r19,r2,8192
 104ce84:	10c03726 	beq	r2,r3,104cf64 <__smakebuf_r+0x130>
 104ce88:	80c0030b 	ldhu	r3,12(r16)
 104ce8c:	18c20014 	ori	r3,r3,2048
 104ce90:	80c0030d 	sth	r3,12(r16)
 104ce94:	00c80004 	movi	r3,8192
 104ce98:	10c0521e 	bne	r2,r3,104cfe4 <__smakebuf_r+0x1b0>
 104ce9c:	8140038f 	ldh	r5,14(r16)
 104cea0:	8809883a 	mov	r4,r17
 104cea4:	10524200 	call	1052420 <_isatty_r>
 104cea8:	10004c26 	beq	r2,zero,104cfdc <__smakebuf_r+0x1a8>
 104ceac:	8080030b 	ldhu	r2,12(r16)
 104ceb0:	80c010c4 	addi	r3,r16,67
 104ceb4:	80c00015 	stw	r3,0(r16)
 104ceb8:	10800054 	ori	r2,r2,1
 104cebc:	8080030d 	sth	r2,12(r16)
 104cec0:	00800044 	movi	r2,1
 104cec4:	80c00415 	stw	r3,16(r16)
 104cec8:	80800515 	stw	r2,20(r16)
 104cecc:	04810004 	movi	r18,1024
 104ced0:	00000706 	br	104cef0 <__smakebuf_r+0xbc>
 104ced4:	8080030b 	ldhu	r2,12(r16)
 104ced8:	10c0200c 	andi	r3,r2,128
 104cedc:	18001f1e 	bne	r3,zero,104cf5c <__smakebuf_r+0x128>
 104cee0:	04810004 	movi	r18,1024
 104cee4:	10820014 	ori	r2,r2,2048
 104cee8:	8080030d 	sth	r2,12(r16)
 104ceec:	0027883a 	mov	r19,zero
 104cef0:	900b883a 	mov	r5,r18
 104cef4:	8809883a 	mov	r4,r17
 104cef8:	104cff00 	call	104cff0 <_malloc_r>
 104cefc:	10002c26 	beq	r2,zero,104cfb0 <__smakebuf_r+0x17c>
 104cf00:	80c0030b 	ldhu	r3,12(r16)
 104cf04:	01004174 	movhi	r4,261
 104cf08:	212fd204 	addi	r4,r4,-16568
 104cf0c:	89000f15 	stw	r4,60(r17)
 104cf10:	18c02014 	ori	r3,r3,128
 104cf14:	80c0030d 	sth	r3,12(r16)
 104cf18:	80800015 	stw	r2,0(r16)
 104cf1c:	80800415 	stw	r2,16(r16)
 104cf20:	84800515 	stw	r18,20(r16)
 104cf24:	98001a1e 	bne	r19,zero,104cf90 <__smakebuf_r+0x15c>
 104cf28:	dfc01317 	ldw	ra,76(sp)
 104cf2c:	dcc01217 	ldw	r19,72(sp)
 104cf30:	dc801117 	ldw	r18,68(sp)
 104cf34:	dc401017 	ldw	r17,64(sp)
 104cf38:	dc000f17 	ldw	r16,60(sp)
 104cf3c:	dec01404 	addi	sp,sp,80
 104cf40:	f800283a 	ret
 104cf44:	288010c4 	addi	r2,r5,67
 104cf48:	28800015 	stw	r2,0(r5)
 104cf4c:	28800415 	stw	r2,16(r5)
 104cf50:	00800044 	movi	r2,1
 104cf54:	28800515 	stw	r2,20(r5)
 104cf58:	f800283a 	ret
 104cf5c:	04801004 	movi	r18,64
 104cf60:	003fe006 	br	104cee4 <__alt_data_end+0xfffccee4>
 104cf64:	81000a17 	ldw	r4,40(r16)
 104cf68:	00c04174 	movhi	r3,261
 104cf6c:	18fceb04 	addi	r3,r3,-3156
 104cf70:	20ffc51e 	bne	r4,r3,104ce88 <__alt_data_end+0xfffcce88>
 104cf74:	8080030b 	ldhu	r2,12(r16)
 104cf78:	04810004 	movi	r18,1024
 104cf7c:	84801315 	stw	r18,76(r16)
 104cf80:	1484b03a 	or	r2,r2,r18
 104cf84:	8080030d 	sth	r2,12(r16)
 104cf88:	0027883a 	mov	r19,zero
 104cf8c:	003fd806 	br	104cef0 <__alt_data_end+0xfffccef0>
 104cf90:	8140038f 	ldh	r5,14(r16)
 104cf94:	8809883a 	mov	r4,r17
 104cf98:	10524200 	call	1052420 <_isatty_r>
 104cf9c:	103fe226 	beq	r2,zero,104cf28 <__alt_data_end+0xfffccf28>
 104cfa0:	8080030b 	ldhu	r2,12(r16)
 104cfa4:	10800054 	ori	r2,r2,1
 104cfa8:	8080030d 	sth	r2,12(r16)
 104cfac:	003fde06 	br	104cf28 <__alt_data_end+0xfffccf28>
 104cfb0:	8080030b 	ldhu	r2,12(r16)
 104cfb4:	10c0800c 	andi	r3,r2,512
 104cfb8:	183fdb1e 	bne	r3,zero,104cf28 <__alt_data_end+0xfffccf28>
 104cfbc:	10800094 	ori	r2,r2,2
 104cfc0:	80c010c4 	addi	r3,r16,67
 104cfc4:	8080030d 	sth	r2,12(r16)
 104cfc8:	00800044 	movi	r2,1
 104cfcc:	80c00015 	stw	r3,0(r16)
 104cfd0:	80c00415 	stw	r3,16(r16)
 104cfd4:	80800515 	stw	r2,20(r16)
 104cfd8:	003fd306 	br	104cf28 <__alt_data_end+0xfffccf28>
 104cfdc:	04810004 	movi	r18,1024
 104cfe0:	003fc306 	br	104cef0 <__alt_data_end+0xfffccef0>
 104cfe4:	0027883a 	mov	r19,zero
 104cfe8:	04810004 	movi	r18,1024
 104cfec:	003fc006 	br	104cef0 <__alt_data_end+0xfffccef0>

0104cff0 <_malloc_r>:
 104cff0:	defff504 	addi	sp,sp,-44
 104cff4:	dc800315 	stw	r18,12(sp)
 104cff8:	dfc00a15 	stw	ra,40(sp)
 104cffc:	df000915 	stw	fp,36(sp)
 104d000:	ddc00815 	stw	r23,32(sp)
 104d004:	dd800715 	stw	r22,28(sp)
 104d008:	dd400615 	stw	r21,24(sp)
 104d00c:	dd000515 	stw	r20,20(sp)
 104d010:	dcc00415 	stw	r19,16(sp)
 104d014:	dc400215 	stw	r17,8(sp)
 104d018:	dc000115 	stw	r16,4(sp)
 104d01c:	288002c4 	addi	r2,r5,11
 104d020:	00c00584 	movi	r3,22
 104d024:	2025883a 	mov	r18,r4
 104d028:	18807f2e 	bgeu	r3,r2,104d228 <_malloc_r+0x238>
 104d02c:	047ffe04 	movi	r17,-8
 104d030:	1462703a 	and	r17,r2,r17
 104d034:	8800a316 	blt	r17,zero,104d2c4 <_malloc_r+0x2d4>
 104d038:	8940a236 	bltu	r17,r5,104d2c4 <_malloc_r+0x2d4>
 104d03c:	10543240 	call	1054324 <__malloc_lock>
 104d040:	00807dc4 	movi	r2,503
 104d044:	1441e92e 	bgeu	r2,r17,104d7ec <_malloc_r+0x7fc>
 104d048:	8804d27a 	srli	r2,r17,9
 104d04c:	1000a126 	beq	r2,zero,104d2d4 <_malloc_r+0x2e4>
 104d050:	00c00104 	movi	r3,4
 104d054:	18811e36 	bltu	r3,r2,104d4d0 <_malloc_r+0x4e0>
 104d058:	8804d1ba 	srli	r2,r17,6
 104d05c:	12000e44 	addi	r8,r2,57
 104d060:	11c00e04 	addi	r7,r2,56
 104d064:	4209883a 	add	r4,r8,r8
 104d068:	04c04174 	movhi	r19,261
 104d06c:	2109883a 	add	r4,r4,r4
 104d070:	9cdc7504 	addi	r19,r19,29140
 104d074:	2109883a 	add	r4,r4,r4
 104d078:	9909883a 	add	r4,r19,r4
 104d07c:	24000117 	ldw	r16,4(r4)
 104d080:	213ffe04 	addi	r4,r4,-8
 104d084:	24009726 	beq	r4,r16,104d2e4 <_malloc_r+0x2f4>
 104d088:	80800117 	ldw	r2,4(r16)
 104d08c:	01bfff04 	movi	r6,-4
 104d090:	014003c4 	movi	r5,15
 104d094:	1184703a 	and	r2,r2,r6
 104d098:	1447c83a 	sub	r3,r2,r17
 104d09c:	28c00716 	blt	r5,r3,104d0bc <_malloc_r+0xcc>
 104d0a0:	1800920e 	bge	r3,zero,104d2ec <_malloc_r+0x2fc>
 104d0a4:	84000317 	ldw	r16,12(r16)
 104d0a8:	24008e26 	beq	r4,r16,104d2e4 <_malloc_r+0x2f4>
 104d0ac:	80800117 	ldw	r2,4(r16)
 104d0b0:	1184703a 	and	r2,r2,r6
 104d0b4:	1447c83a 	sub	r3,r2,r17
 104d0b8:	28fff90e 	bge	r5,r3,104d0a0 <__alt_data_end+0xfffcd0a0>
 104d0bc:	3809883a 	mov	r4,r7
 104d0c0:	01804174 	movhi	r6,261
 104d0c4:	9c000417 	ldw	r16,16(r19)
 104d0c8:	319c7504 	addi	r6,r6,29140
 104d0cc:	32000204 	addi	r8,r6,8
 104d0d0:	82013426 	beq	r16,r8,104d5a4 <_malloc_r+0x5b4>
 104d0d4:	80c00117 	ldw	r3,4(r16)
 104d0d8:	00bfff04 	movi	r2,-4
 104d0dc:	188e703a 	and	r7,r3,r2
 104d0e0:	3c45c83a 	sub	r2,r7,r17
 104d0e4:	00c003c4 	movi	r3,15
 104d0e8:	18811f16 	blt	r3,r2,104d568 <_malloc_r+0x578>
 104d0ec:	32000515 	stw	r8,20(r6)
 104d0f0:	32000415 	stw	r8,16(r6)
 104d0f4:	10007f0e 	bge	r2,zero,104d2f4 <_malloc_r+0x304>
 104d0f8:	00807fc4 	movi	r2,511
 104d0fc:	11c0fd36 	bltu	r2,r7,104d4f4 <_malloc_r+0x504>
 104d100:	3806d0fa 	srli	r3,r7,3
 104d104:	01c00044 	movi	r7,1
 104d108:	30800117 	ldw	r2,4(r6)
 104d10c:	19400044 	addi	r5,r3,1
 104d110:	294b883a 	add	r5,r5,r5
 104d114:	1807d0ba 	srai	r3,r3,2
 104d118:	294b883a 	add	r5,r5,r5
 104d11c:	294b883a 	add	r5,r5,r5
 104d120:	298b883a 	add	r5,r5,r6
 104d124:	38c6983a 	sll	r3,r7,r3
 104d128:	29c00017 	ldw	r7,0(r5)
 104d12c:	2a7ffe04 	addi	r9,r5,-8
 104d130:	1886b03a 	or	r3,r3,r2
 104d134:	82400315 	stw	r9,12(r16)
 104d138:	81c00215 	stw	r7,8(r16)
 104d13c:	30c00115 	stw	r3,4(r6)
 104d140:	2c000015 	stw	r16,0(r5)
 104d144:	3c000315 	stw	r16,12(r7)
 104d148:	2005d0ba 	srai	r2,r4,2
 104d14c:	01400044 	movi	r5,1
 104d150:	288a983a 	sll	r5,r5,r2
 104d154:	19406f36 	bltu	r3,r5,104d314 <_malloc_r+0x324>
 104d158:	28c4703a 	and	r2,r5,r3
 104d15c:	10000a1e 	bne	r2,zero,104d188 <_malloc_r+0x198>
 104d160:	00bfff04 	movi	r2,-4
 104d164:	294b883a 	add	r5,r5,r5
 104d168:	2088703a 	and	r4,r4,r2
 104d16c:	28c4703a 	and	r2,r5,r3
 104d170:	21000104 	addi	r4,r4,4
 104d174:	1000041e 	bne	r2,zero,104d188 <_malloc_r+0x198>
 104d178:	294b883a 	add	r5,r5,r5
 104d17c:	28c4703a 	and	r2,r5,r3
 104d180:	21000104 	addi	r4,r4,4
 104d184:	103ffc26 	beq	r2,zero,104d178 <__alt_data_end+0xfffcd178>
 104d188:	02bfff04 	movi	r10,-4
 104d18c:	024003c4 	movi	r9,15
 104d190:	21800044 	addi	r6,r4,1
 104d194:	318d883a 	add	r6,r6,r6
 104d198:	318d883a 	add	r6,r6,r6
 104d19c:	318d883a 	add	r6,r6,r6
 104d1a0:	998d883a 	add	r6,r19,r6
 104d1a4:	333ffe04 	addi	r12,r6,-8
 104d1a8:	2017883a 	mov	r11,r4
 104d1ac:	31800104 	addi	r6,r6,4
 104d1b0:	34000017 	ldw	r16,0(r6)
 104d1b4:	31fffd04 	addi	r7,r6,-12
 104d1b8:	81c0041e 	bne	r16,r7,104d1cc <_malloc_r+0x1dc>
 104d1bc:	0000fb06 	br	104d5ac <_malloc_r+0x5bc>
 104d1c0:	1801030e 	bge	r3,zero,104d5d0 <_malloc_r+0x5e0>
 104d1c4:	84000317 	ldw	r16,12(r16)
 104d1c8:	81c0f826 	beq	r16,r7,104d5ac <_malloc_r+0x5bc>
 104d1cc:	80800117 	ldw	r2,4(r16)
 104d1d0:	1284703a 	and	r2,r2,r10
 104d1d4:	1447c83a 	sub	r3,r2,r17
 104d1d8:	48fff90e 	bge	r9,r3,104d1c0 <__alt_data_end+0xfffcd1c0>
 104d1dc:	80800317 	ldw	r2,12(r16)
 104d1e0:	81000217 	ldw	r4,8(r16)
 104d1e4:	89400054 	ori	r5,r17,1
 104d1e8:	81400115 	stw	r5,4(r16)
 104d1ec:	20800315 	stw	r2,12(r4)
 104d1f0:	11000215 	stw	r4,8(r2)
 104d1f4:	8463883a 	add	r17,r16,r17
 104d1f8:	9c400515 	stw	r17,20(r19)
 104d1fc:	9c400415 	stw	r17,16(r19)
 104d200:	18800054 	ori	r2,r3,1
 104d204:	88800115 	stw	r2,4(r17)
 104d208:	8a000315 	stw	r8,12(r17)
 104d20c:	8a000215 	stw	r8,8(r17)
 104d210:	88e3883a 	add	r17,r17,r3
 104d214:	88c00015 	stw	r3,0(r17)
 104d218:	9009883a 	mov	r4,r18
 104d21c:	10543480 	call	1054348 <__malloc_unlock>
 104d220:	80800204 	addi	r2,r16,8
 104d224:	00001b06 	br	104d294 <_malloc_r+0x2a4>
 104d228:	04400404 	movi	r17,16
 104d22c:	89402536 	bltu	r17,r5,104d2c4 <_malloc_r+0x2d4>
 104d230:	10543240 	call	1054324 <__malloc_lock>
 104d234:	00800184 	movi	r2,6
 104d238:	01000084 	movi	r4,2
 104d23c:	04c04174 	movhi	r19,261
 104d240:	1085883a 	add	r2,r2,r2
 104d244:	9cdc7504 	addi	r19,r19,29140
 104d248:	1085883a 	add	r2,r2,r2
 104d24c:	9885883a 	add	r2,r19,r2
 104d250:	14000117 	ldw	r16,4(r2)
 104d254:	10fffe04 	addi	r3,r2,-8
 104d258:	80c0d926 	beq	r16,r3,104d5c0 <_malloc_r+0x5d0>
 104d25c:	80c00117 	ldw	r3,4(r16)
 104d260:	81000317 	ldw	r4,12(r16)
 104d264:	00bfff04 	movi	r2,-4
 104d268:	1884703a 	and	r2,r3,r2
 104d26c:	81400217 	ldw	r5,8(r16)
 104d270:	8085883a 	add	r2,r16,r2
 104d274:	10c00117 	ldw	r3,4(r2)
 104d278:	29000315 	stw	r4,12(r5)
 104d27c:	21400215 	stw	r5,8(r4)
 104d280:	18c00054 	ori	r3,r3,1
 104d284:	10c00115 	stw	r3,4(r2)
 104d288:	9009883a 	mov	r4,r18
 104d28c:	10543480 	call	1054348 <__malloc_unlock>
 104d290:	80800204 	addi	r2,r16,8
 104d294:	dfc00a17 	ldw	ra,40(sp)
 104d298:	df000917 	ldw	fp,36(sp)
 104d29c:	ddc00817 	ldw	r23,32(sp)
 104d2a0:	dd800717 	ldw	r22,28(sp)
 104d2a4:	dd400617 	ldw	r21,24(sp)
 104d2a8:	dd000517 	ldw	r20,20(sp)
 104d2ac:	dcc00417 	ldw	r19,16(sp)
 104d2b0:	dc800317 	ldw	r18,12(sp)
 104d2b4:	dc400217 	ldw	r17,8(sp)
 104d2b8:	dc000117 	ldw	r16,4(sp)
 104d2bc:	dec00b04 	addi	sp,sp,44
 104d2c0:	f800283a 	ret
 104d2c4:	00800304 	movi	r2,12
 104d2c8:	90800015 	stw	r2,0(r18)
 104d2cc:	0005883a 	mov	r2,zero
 104d2d0:	003ff006 	br	104d294 <__alt_data_end+0xfffcd294>
 104d2d4:	01002004 	movi	r4,128
 104d2d8:	02001004 	movi	r8,64
 104d2dc:	01c00fc4 	movi	r7,63
 104d2e0:	003f6106 	br	104d068 <__alt_data_end+0xfffcd068>
 104d2e4:	4009883a 	mov	r4,r8
 104d2e8:	003f7506 	br	104d0c0 <__alt_data_end+0xfffcd0c0>
 104d2ec:	81000317 	ldw	r4,12(r16)
 104d2f0:	003fde06 	br	104d26c <__alt_data_end+0xfffcd26c>
 104d2f4:	81c5883a 	add	r2,r16,r7
 104d2f8:	11400117 	ldw	r5,4(r2)
 104d2fc:	9009883a 	mov	r4,r18
 104d300:	29400054 	ori	r5,r5,1
 104d304:	11400115 	stw	r5,4(r2)
 104d308:	10543480 	call	1054348 <__malloc_unlock>
 104d30c:	80800204 	addi	r2,r16,8
 104d310:	003fe006 	br	104d294 <__alt_data_end+0xfffcd294>
 104d314:	9c000217 	ldw	r16,8(r19)
 104d318:	00bfff04 	movi	r2,-4
 104d31c:	85800117 	ldw	r22,4(r16)
 104d320:	b0ac703a 	and	r22,r22,r2
 104d324:	b4400336 	bltu	r22,r17,104d334 <_malloc_r+0x344>
 104d328:	b445c83a 	sub	r2,r22,r17
 104d32c:	00c003c4 	movi	r3,15
 104d330:	18805d16 	blt	r3,r2,104d4a8 <_malloc_r+0x4b8>
 104d334:	05c041b4 	movhi	r23,262
 104d338:	008041b4 	movhi	r2,262
 104d33c:	10a8c904 	addi	r2,r2,-23772
 104d340:	bde1fc04 	addi	r23,r23,-30736
 104d344:	15400017 	ldw	r21,0(r2)
 104d348:	b8c00017 	ldw	r3,0(r23)
 104d34c:	00bfffc4 	movi	r2,-1
 104d350:	858d883a 	add	r6,r16,r22
 104d354:	8d6b883a 	add	r21,r17,r21
 104d358:	1880ea26 	beq	r3,r2,104d704 <_malloc_r+0x714>
 104d35c:	ad4403c4 	addi	r21,r21,4111
 104d360:	00bc0004 	movi	r2,-4096
 104d364:	a8aa703a 	and	r21,r21,r2
 104d368:	a80b883a 	mov	r5,r21
 104d36c:	9009883a 	mov	r4,r18
 104d370:	d9800015 	stw	r6,0(sp)
 104d374:	104f2800 	call	104f280 <_sbrk_r>
 104d378:	1029883a 	mov	r20,r2
 104d37c:	00bfffc4 	movi	r2,-1
 104d380:	d9800017 	ldw	r6,0(sp)
 104d384:	a080e826 	beq	r20,r2,104d728 <_malloc_r+0x738>
 104d388:	a180a636 	bltu	r20,r6,104d624 <_malloc_r+0x634>
 104d38c:	070041b4 	movhi	fp,262
 104d390:	e728dc04 	addi	fp,fp,-23696
 104d394:	e0800017 	ldw	r2,0(fp)
 104d398:	a887883a 	add	r3,r21,r2
 104d39c:	e0c00015 	stw	r3,0(fp)
 104d3a0:	3500e626 	beq	r6,r20,104d73c <_malloc_r+0x74c>
 104d3a4:	b9000017 	ldw	r4,0(r23)
 104d3a8:	00bfffc4 	movi	r2,-1
 104d3ac:	2080ee26 	beq	r4,r2,104d768 <_malloc_r+0x778>
 104d3b0:	a185c83a 	sub	r2,r20,r6
 104d3b4:	10c5883a 	add	r2,r2,r3
 104d3b8:	e0800015 	stw	r2,0(fp)
 104d3bc:	a0c001cc 	andi	r3,r20,7
 104d3c0:	1800bc26 	beq	r3,zero,104d6b4 <_malloc_r+0x6c4>
 104d3c4:	a0e9c83a 	sub	r20,r20,r3
 104d3c8:	00840204 	movi	r2,4104
 104d3cc:	a5000204 	addi	r20,r20,8
 104d3d0:	10c7c83a 	sub	r3,r2,r3
 104d3d4:	a545883a 	add	r2,r20,r21
 104d3d8:	1083ffcc 	andi	r2,r2,4095
 104d3dc:	18abc83a 	sub	r21,r3,r2
 104d3e0:	a80b883a 	mov	r5,r21
 104d3e4:	9009883a 	mov	r4,r18
 104d3e8:	104f2800 	call	104f280 <_sbrk_r>
 104d3ec:	00ffffc4 	movi	r3,-1
 104d3f0:	10c0e126 	beq	r2,r3,104d778 <_malloc_r+0x788>
 104d3f4:	1505c83a 	sub	r2,r2,r20
 104d3f8:	1545883a 	add	r2,r2,r21
 104d3fc:	10800054 	ori	r2,r2,1
 104d400:	e0c00017 	ldw	r3,0(fp)
 104d404:	9d000215 	stw	r20,8(r19)
 104d408:	a0800115 	stw	r2,4(r20)
 104d40c:	a8c7883a 	add	r3,r21,r3
 104d410:	e0c00015 	stw	r3,0(fp)
 104d414:	84c00e26 	beq	r16,r19,104d450 <_malloc_r+0x460>
 104d418:	018003c4 	movi	r6,15
 104d41c:	3580a72e 	bgeu	r6,r22,104d6bc <_malloc_r+0x6cc>
 104d420:	81400117 	ldw	r5,4(r16)
 104d424:	013ffe04 	movi	r4,-8
 104d428:	b0bffd04 	addi	r2,r22,-12
 104d42c:	1104703a 	and	r2,r2,r4
 104d430:	2900004c 	andi	r4,r5,1
 104d434:	2088b03a 	or	r4,r4,r2
 104d438:	81000115 	stw	r4,4(r16)
 104d43c:	01400144 	movi	r5,5
 104d440:	8089883a 	add	r4,r16,r2
 104d444:	21400115 	stw	r5,4(r4)
 104d448:	21400215 	stw	r5,8(r4)
 104d44c:	3080cd36 	bltu	r6,r2,104d784 <_malloc_r+0x794>
 104d450:	008041b4 	movhi	r2,262
 104d454:	10a8c804 	addi	r2,r2,-23776
 104d458:	11000017 	ldw	r4,0(r2)
 104d45c:	20c0012e 	bgeu	r4,r3,104d464 <_malloc_r+0x474>
 104d460:	10c00015 	stw	r3,0(r2)
 104d464:	008041b4 	movhi	r2,262
 104d468:	10a8c704 	addi	r2,r2,-23780
 104d46c:	11000017 	ldw	r4,0(r2)
 104d470:	9c000217 	ldw	r16,8(r19)
 104d474:	20c0012e 	bgeu	r4,r3,104d47c <_malloc_r+0x48c>
 104d478:	10c00015 	stw	r3,0(r2)
 104d47c:	80c00117 	ldw	r3,4(r16)
 104d480:	00bfff04 	movi	r2,-4
 104d484:	1886703a 	and	r3,r3,r2
 104d488:	1c45c83a 	sub	r2,r3,r17
 104d48c:	1c400236 	bltu	r3,r17,104d498 <_malloc_r+0x4a8>
 104d490:	00c003c4 	movi	r3,15
 104d494:	18800416 	blt	r3,r2,104d4a8 <_malloc_r+0x4b8>
 104d498:	9009883a 	mov	r4,r18
 104d49c:	10543480 	call	1054348 <__malloc_unlock>
 104d4a0:	0005883a 	mov	r2,zero
 104d4a4:	003f7b06 	br	104d294 <__alt_data_end+0xfffcd294>
 104d4a8:	88c00054 	ori	r3,r17,1
 104d4ac:	80c00115 	stw	r3,4(r16)
 104d4b0:	8463883a 	add	r17,r16,r17
 104d4b4:	10800054 	ori	r2,r2,1
 104d4b8:	9c400215 	stw	r17,8(r19)
 104d4bc:	88800115 	stw	r2,4(r17)
 104d4c0:	9009883a 	mov	r4,r18
 104d4c4:	10543480 	call	1054348 <__malloc_unlock>
 104d4c8:	80800204 	addi	r2,r16,8
 104d4cc:	003f7106 	br	104d294 <__alt_data_end+0xfffcd294>
 104d4d0:	00c00504 	movi	r3,20
 104d4d4:	18804a2e 	bgeu	r3,r2,104d600 <_malloc_r+0x610>
 104d4d8:	00c01504 	movi	r3,84
 104d4dc:	18806e36 	bltu	r3,r2,104d698 <_malloc_r+0x6a8>
 104d4e0:	8804d33a 	srli	r2,r17,12
 104d4e4:	12001bc4 	addi	r8,r2,111
 104d4e8:	11c01b84 	addi	r7,r2,110
 104d4ec:	4209883a 	add	r4,r8,r8
 104d4f0:	003edd06 	br	104d068 <__alt_data_end+0xfffcd068>
 104d4f4:	3804d27a 	srli	r2,r7,9
 104d4f8:	00c00104 	movi	r3,4
 104d4fc:	1880442e 	bgeu	r3,r2,104d610 <_malloc_r+0x620>
 104d500:	00c00504 	movi	r3,20
 104d504:	18808136 	bltu	r3,r2,104d70c <_malloc_r+0x71c>
 104d508:	11401704 	addi	r5,r2,92
 104d50c:	10c016c4 	addi	r3,r2,91
 104d510:	294b883a 	add	r5,r5,r5
 104d514:	294b883a 	add	r5,r5,r5
 104d518:	294b883a 	add	r5,r5,r5
 104d51c:	994b883a 	add	r5,r19,r5
 104d520:	28800017 	ldw	r2,0(r5)
 104d524:	01804174 	movhi	r6,261
 104d528:	297ffe04 	addi	r5,r5,-8
 104d52c:	319c7504 	addi	r6,r6,29140
 104d530:	28806526 	beq	r5,r2,104d6c8 <_malloc_r+0x6d8>
 104d534:	01bfff04 	movi	r6,-4
 104d538:	10c00117 	ldw	r3,4(r2)
 104d53c:	1986703a 	and	r3,r3,r6
 104d540:	38c0022e 	bgeu	r7,r3,104d54c <_malloc_r+0x55c>
 104d544:	10800217 	ldw	r2,8(r2)
 104d548:	28bffb1e 	bne	r5,r2,104d538 <__alt_data_end+0xfffcd538>
 104d54c:	11400317 	ldw	r5,12(r2)
 104d550:	98c00117 	ldw	r3,4(r19)
 104d554:	81400315 	stw	r5,12(r16)
 104d558:	80800215 	stw	r2,8(r16)
 104d55c:	2c000215 	stw	r16,8(r5)
 104d560:	14000315 	stw	r16,12(r2)
 104d564:	003ef806 	br	104d148 <__alt_data_end+0xfffcd148>
 104d568:	88c00054 	ori	r3,r17,1
 104d56c:	80c00115 	stw	r3,4(r16)
 104d570:	8463883a 	add	r17,r16,r17
 104d574:	34400515 	stw	r17,20(r6)
 104d578:	34400415 	stw	r17,16(r6)
 104d57c:	10c00054 	ori	r3,r2,1
 104d580:	8a000315 	stw	r8,12(r17)
 104d584:	8a000215 	stw	r8,8(r17)
 104d588:	88c00115 	stw	r3,4(r17)
 104d58c:	88a3883a 	add	r17,r17,r2
 104d590:	88800015 	stw	r2,0(r17)
 104d594:	9009883a 	mov	r4,r18
 104d598:	10543480 	call	1054348 <__malloc_unlock>
 104d59c:	80800204 	addi	r2,r16,8
 104d5a0:	003f3c06 	br	104d294 <__alt_data_end+0xfffcd294>
 104d5a4:	30c00117 	ldw	r3,4(r6)
 104d5a8:	003ee706 	br	104d148 <__alt_data_end+0xfffcd148>
 104d5ac:	5ac00044 	addi	r11,r11,1
 104d5b0:	588000cc 	andi	r2,r11,3
 104d5b4:	31800204 	addi	r6,r6,8
 104d5b8:	103efd1e 	bne	r2,zero,104d1b0 <__alt_data_end+0xfffcd1b0>
 104d5bc:	00002406 	br	104d650 <_malloc_r+0x660>
 104d5c0:	14000317 	ldw	r16,12(r2)
 104d5c4:	143f251e 	bne	r2,r16,104d25c <__alt_data_end+0xfffcd25c>
 104d5c8:	21000084 	addi	r4,r4,2
 104d5cc:	003ebc06 	br	104d0c0 <__alt_data_end+0xfffcd0c0>
 104d5d0:	8085883a 	add	r2,r16,r2
 104d5d4:	10c00117 	ldw	r3,4(r2)
 104d5d8:	81000317 	ldw	r4,12(r16)
 104d5dc:	81400217 	ldw	r5,8(r16)
 104d5e0:	18c00054 	ori	r3,r3,1
 104d5e4:	10c00115 	stw	r3,4(r2)
 104d5e8:	29000315 	stw	r4,12(r5)
 104d5ec:	21400215 	stw	r5,8(r4)
 104d5f0:	9009883a 	mov	r4,r18
 104d5f4:	10543480 	call	1054348 <__malloc_unlock>
 104d5f8:	80800204 	addi	r2,r16,8
 104d5fc:	003f2506 	br	104d294 <__alt_data_end+0xfffcd294>
 104d600:	12001704 	addi	r8,r2,92
 104d604:	11c016c4 	addi	r7,r2,91
 104d608:	4209883a 	add	r4,r8,r8
 104d60c:	003e9606 	br	104d068 <__alt_data_end+0xfffcd068>
 104d610:	3804d1ba 	srli	r2,r7,6
 104d614:	11400e44 	addi	r5,r2,57
 104d618:	10c00e04 	addi	r3,r2,56
 104d61c:	294b883a 	add	r5,r5,r5
 104d620:	003fbc06 	br	104d514 <__alt_data_end+0xfffcd514>
 104d624:	84ff5926 	beq	r16,r19,104d38c <__alt_data_end+0xfffcd38c>
 104d628:	00804174 	movhi	r2,261
 104d62c:	109c7504 	addi	r2,r2,29140
 104d630:	14000217 	ldw	r16,8(r2)
 104d634:	00bfff04 	movi	r2,-4
 104d638:	80c00117 	ldw	r3,4(r16)
 104d63c:	1886703a 	and	r3,r3,r2
 104d640:	003f9106 	br	104d488 <__alt_data_end+0xfffcd488>
 104d644:	60800217 	ldw	r2,8(r12)
 104d648:	213fffc4 	addi	r4,r4,-1
 104d64c:	1300651e 	bne	r2,r12,104d7e4 <_malloc_r+0x7f4>
 104d650:	208000cc 	andi	r2,r4,3
 104d654:	633ffe04 	addi	r12,r12,-8
 104d658:	103ffa1e 	bne	r2,zero,104d644 <__alt_data_end+0xfffcd644>
 104d65c:	98800117 	ldw	r2,4(r19)
 104d660:	0146303a 	nor	r3,zero,r5
 104d664:	1884703a 	and	r2,r3,r2
 104d668:	98800115 	stw	r2,4(r19)
 104d66c:	294b883a 	add	r5,r5,r5
 104d670:	117f2836 	bltu	r2,r5,104d314 <__alt_data_end+0xfffcd314>
 104d674:	283f2726 	beq	r5,zero,104d314 <__alt_data_end+0xfffcd314>
 104d678:	2886703a 	and	r3,r5,r2
 104d67c:	5809883a 	mov	r4,r11
 104d680:	183ec31e 	bne	r3,zero,104d190 <__alt_data_end+0xfffcd190>
 104d684:	294b883a 	add	r5,r5,r5
 104d688:	2886703a 	and	r3,r5,r2
 104d68c:	21000104 	addi	r4,r4,4
 104d690:	183ffc26 	beq	r3,zero,104d684 <__alt_data_end+0xfffcd684>
 104d694:	003ebe06 	br	104d190 <__alt_data_end+0xfffcd190>
 104d698:	00c05504 	movi	r3,340
 104d69c:	18801236 	bltu	r3,r2,104d6e8 <_malloc_r+0x6f8>
 104d6a0:	8804d3fa 	srli	r2,r17,15
 104d6a4:	12001e04 	addi	r8,r2,120
 104d6a8:	11c01dc4 	addi	r7,r2,119
 104d6ac:	4209883a 	add	r4,r8,r8
 104d6b0:	003e6d06 	br	104d068 <__alt_data_end+0xfffcd068>
 104d6b4:	00c40004 	movi	r3,4096
 104d6b8:	003f4606 	br	104d3d4 <__alt_data_end+0xfffcd3d4>
 104d6bc:	00800044 	movi	r2,1
 104d6c0:	a0800115 	stw	r2,4(r20)
 104d6c4:	003f7406 	br	104d498 <__alt_data_end+0xfffcd498>
 104d6c8:	1805d0ba 	srai	r2,r3,2
 104d6cc:	01c00044 	movi	r7,1
 104d6d0:	30c00117 	ldw	r3,4(r6)
 104d6d4:	388e983a 	sll	r7,r7,r2
 104d6d8:	2805883a 	mov	r2,r5
 104d6dc:	38c6b03a 	or	r3,r7,r3
 104d6e0:	30c00115 	stw	r3,4(r6)
 104d6e4:	003f9b06 	br	104d554 <__alt_data_end+0xfffcd554>
 104d6e8:	00c15504 	movi	r3,1364
 104d6ec:	18801a36 	bltu	r3,r2,104d758 <_malloc_r+0x768>
 104d6f0:	8804d4ba 	srli	r2,r17,18
 104d6f4:	12001f44 	addi	r8,r2,125
 104d6f8:	11c01f04 	addi	r7,r2,124
 104d6fc:	4209883a 	add	r4,r8,r8
 104d700:	003e5906 	br	104d068 <__alt_data_end+0xfffcd068>
 104d704:	ad400404 	addi	r21,r21,16
 104d708:	003f1706 	br	104d368 <__alt_data_end+0xfffcd368>
 104d70c:	00c01504 	movi	r3,84
 104d710:	18802336 	bltu	r3,r2,104d7a0 <_malloc_r+0x7b0>
 104d714:	3804d33a 	srli	r2,r7,12
 104d718:	11401bc4 	addi	r5,r2,111
 104d71c:	10c01b84 	addi	r3,r2,110
 104d720:	294b883a 	add	r5,r5,r5
 104d724:	003f7b06 	br	104d514 <__alt_data_end+0xfffcd514>
 104d728:	9c000217 	ldw	r16,8(r19)
 104d72c:	00bfff04 	movi	r2,-4
 104d730:	80c00117 	ldw	r3,4(r16)
 104d734:	1886703a 	and	r3,r3,r2
 104d738:	003f5306 	br	104d488 <__alt_data_end+0xfffcd488>
 104d73c:	3083ffcc 	andi	r2,r6,4095
 104d740:	103f181e 	bne	r2,zero,104d3a4 <__alt_data_end+0xfffcd3a4>
 104d744:	99000217 	ldw	r4,8(r19)
 104d748:	b545883a 	add	r2,r22,r21
 104d74c:	10800054 	ori	r2,r2,1
 104d750:	20800115 	stw	r2,4(r4)
 104d754:	003f3e06 	br	104d450 <__alt_data_end+0xfffcd450>
 104d758:	01003f84 	movi	r4,254
 104d75c:	02001fc4 	movi	r8,127
 104d760:	01c01f84 	movi	r7,126
 104d764:	003e4006 	br	104d068 <__alt_data_end+0xfffcd068>
 104d768:	008041b4 	movhi	r2,262
 104d76c:	10a1fc04 	addi	r2,r2,-30736
 104d770:	15000015 	stw	r20,0(r2)
 104d774:	003f1106 	br	104d3bc <__alt_data_end+0xfffcd3bc>
 104d778:	00800044 	movi	r2,1
 104d77c:	002b883a 	mov	r21,zero
 104d780:	003f1f06 	br	104d400 <__alt_data_end+0xfffcd400>
 104d784:	81400204 	addi	r5,r16,8
 104d788:	9009883a 	mov	r4,r18
 104d78c:	104c4040 	call	104c404 <_free_r>
 104d790:	008041b4 	movhi	r2,262
 104d794:	10a8dc04 	addi	r2,r2,-23696
 104d798:	10c00017 	ldw	r3,0(r2)
 104d79c:	003f2c06 	br	104d450 <__alt_data_end+0xfffcd450>
 104d7a0:	00c05504 	movi	r3,340
 104d7a4:	18800536 	bltu	r3,r2,104d7bc <_malloc_r+0x7cc>
 104d7a8:	3804d3fa 	srli	r2,r7,15
 104d7ac:	11401e04 	addi	r5,r2,120
 104d7b0:	10c01dc4 	addi	r3,r2,119
 104d7b4:	294b883a 	add	r5,r5,r5
 104d7b8:	003f5606 	br	104d514 <__alt_data_end+0xfffcd514>
 104d7bc:	00c15504 	movi	r3,1364
 104d7c0:	18800536 	bltu	r3,r2,104d7d8 <_malloc_r+0x7e8>
 104d7c4:	3804d4ba 	srli	r2,r7,18
 104d7c8:	11401f44 	addi	r5,r2,125
 104d7cc:	10c01f04 	addi	r3,r2,124
 104d7d0:	294b883a 	add	r5,r5,r5
 104d7d4:	003f4f06 	br	104d514 <__alt_data_end+0xfffcd514>
 104d7d8:	01403f84 	movi	r5,254
 104d7dc:	00c01f84 	movi	r3,126
 104d7e0:	003f4c06 	br	104d514 <__alt_data_end+0xfffcd514>
 104d7e4:	98800117 	ldw	r2,4(r19)
 104d7e8:	003fa006 	br	104d66c <__alt_data_end+0xfffcd66c>
 104d7ec:	8808d0fa 	srli	r4,r17,3
 104d7f0:	20800044 	addi	r2,r4,1
 104d7f4:	1085883a 	add	r2,r2,r2
 104d7f8:	003e9006 	br	104d23c <__alt_data_end+0xfffcd23c>

0104d7fc <memchr>:
 104d7fc:	208000cc 	andi	r2,r4,3
 104d800:	280f883a 	mov	r7,r5
 104d804:	10003426 	beq	r2,zero,104d8d8 <memchr+0xdc>
 104d808:	30bfffc4 	addi	r2,r6,-1
 104d80c:	30001a26 	beq	r6,zero,104d878 <memchr+0x7c>
 104d810:	20c00003 	ldbu	r3,0(r4)
 104d814:	29803fcc 	andi	r6,r5,255
 104d818:	30c0051e 	bne	r6,r3,104d830 <memchr+0x34>
 104d81c:	00001806 	br	104d880 <memchr+0x84>
 104d820:	10001526 	beq	r2,zero,104d878 <memchr+0x7c>
 104d824:	20c00003 	ldbu	r3,0(r4)
 104d828:	10bfffc4 	addi	r2,r2,-1
 104d82c:	30c01426 	beq	r6,r3,104d880 <memchr+0x84>
 104d830:	21000044 	addi	r4,r4,1
 104d834:	20c000cc 	andi	r3,r4,3
 104d838:	183ff91e 	bne	r3,zero,104d820 <__alt_data_end+0xfffcd820>
 104d83c:	020000c4 	movi	r8,3
 104d840:	40801136 	bltu	r8,r2,104d888 <memchr+0x8c>
 104d844:	10000c26 	beq	r2,zero,104d878 <memchr+0x7c>
 104d848:	20c00003 	ldbu	r3,0(r4)
 104d84c:	29403fcc 	andi	r5,r5,255
 104d850:	28c00b26 	beq	r5,r3,104d880 <memchr+0x84>
 104d854:	20c00044 	addi	r3,r4,1
 104d858:	39803fcc 	andi	r6,r7,255
 104d85c:	2089883a 	add	r4,r4,r2
 104d860:	00000306 	br	104d870 <memchr+0x74>
 104d864:	18c00044 	addi	r3,r3,1
 104d868:	197fffc3 	ldbu	r5,-1(r3)
 104d86c:	31400526 	beq	r6,r5,104d884 <memchr+0x88>
 104d870:	1805883a 	mov	r2,r3
 104d874:	20fffb1e 	bne	r4,r3,104d864 <__alt_data_end+0xfffcd864>
 104d878:	0005883a 	mov	r2,zero
 104d87c:	f800283a 	ret
 104d880:	2005883a 	mov	r2,r4
 104d884:	f800283a 	ret
 104d888:	28c03fcc 	andi	r3,r5,255
 104d88c:	1812923a 	slli	r9,r3,8
 104d890:	02ffbff4 	movhi	r11,65279
 104d894:	02a02074 	movhi	r10,32897
 104d898:	48d2b03a 	or	r9,r9,r3
 104d89c:	4806943a 	slli	r3,r9,16
 104d8a0:	5affbfc4 	addi	r11,r11,-257
 104d8a4:	52a02004 	addi	r10,r10,-32640
 104d8a8:	48d2b03a 	or	r9,r9,r3
 104d8ac:	20c00017 	ldw	r3,0(r4)
 104d8b0:	48c6f03a 	xor	r3,r9,r3
 104d8b4:	1acd883a 	add	r6,r3,r11
 104d8b8:	00c6303a 	nor	r3,zero,r3
 104d8bc:	30c6703a 	and	r3,r6,r3
 104d8c0:	1a86703a 	and	r3,r3,r10
 104d8c4:	183fe01e 	bne	r3,zero,104d848 <__alt_data_end+0xfffcd848>
 104d8c8:	10bfff04 	addi	r2,r2,-4
 104d8cc:	21000104 	addi	r4,r4,4
 104d8d0:	40bff636 	bltu	r8,r2,104d8ac <__alt_data_end+0xfffcd8ac>
 104d8d4:	003fdb06 	br	104d844 <__alt_data_end+0xfffcd844>
 104d8d8:	3005883a 	mov	r2,r6
 104d8dc:	003fd706 	br	104d83c <__alt_data_end+0xfffcd83c>

0104d8e0 <memcpy>:
 104d8e0:	defffd04 	addi	sp,sp,-12
 104d8e4:	dfc00215 	stw	ra,8(sp)
 104d8e8:	dc400115 	stw	r17,4(sp)
 104d8ec:	dc000015 	stw	r16,0(sp)
 104d8f0:	00c003c4 	movi	r3,15
 104d8f4:	2005883a 	mov	r2,r4
 104d8f8:	1980452e 	bgeu	r3,r6,104da10 <memcpy+0x130>
 104d8fc:	2906b03a 	or	r3,r5,r4
 104d900:	18c000cc 	andi	r3,r3,3
 104d904:	1800441e 	bne	r3,zero,104da18 <memcpy+0x138>
 104d908:	347ffc04 	addi	r17,r6,-16
 104d90c:	8822d13a 	srli	r17,r17,4
 104d910:	28c00104 	addi	r3,r5,4
 104d914:	23400104 	addi	r13,r4,4
 104d918:	8820913a 	slli	r16,r17,4
 104d91c:	2b000204 	addi	r12,r5,8
 104d920:	22c00204 	addi	r11,r4,8
 104d924:	84000504 	addi	r16,r16,20
 104d928:	2a800304 	addi	r10,r5,12
 104d92c:	22400304 	addi	r9,r4,12
 104d930:	2c21883a 	add	r16,r5,r16
 104d934:	2811883a 	mov	r8,r5
 104d938:	200f883a 	mov	r7,r4
 104d93c:	41000017 	ldw	r4,0(r8)
 104d940:	1fc00017 	ldw	ra,0(r3)
 104d944:	63c00017 	ldw	r15,0(r12)
 104d948:	39000015 	stw	r4,0(r7)
 104d94c:	53800017 	ldw	r14,0(r10)
 104d950:	6fc00015 	stw	ra,0(r13)
 104d954:	5bc00015 	stw	r15,0(r11)
 104d958:	4b800015 	stw	r14,0(r9)
 104d95c:	18c00404 	addi	r3,r3,16
 104d960:	39c00404 	addi	r7,r7,16
 104d964:	42000404 	addi	r8,r8,16
 104d968:	6b400404 	addi	r13,r13,16
 104d96c:	63000404 	addi	r12,r12,16
 104d970:	5ac00404 	addi	r11,r11,16
 104d974:	52800404 	addi	r10,r10,16
 104d978:	4a400404 	addi	r9,r9,16
 104d97c:	1c3fef1e 	bne	r3,r16,104d93c <__alt_data_end+0xfffcd93c>
 104d980:	89c00044 	addi	r7,r17,1
 104d984:	380e913a 	slli	r7,r7,4
 104d988:	310003cc 	andi	r4,r6,15
 104d98c:	02c000c4 	movi	r11,3
 104d990:	11c7883a 	add	r3,r2,r7
 104d994:	29cb883a 	add	r5,r5,r7
 104d998:	5900212e 	bgeu	r11,r4,104da20 <memcpy+0x140>
 104d99c:	1813883a 	mov	r9,r3
 104d9a0:	2811883a 	mov	r8,r5
 104d9a4:	200f883a 	mov	r7,r4
 104d9a8:	42800017 	ldw	r10,0(r8)
 104d9ac:	4a400104 	addi	r9,r9,4
 104d9b0:	39ffff04 	addi	r7,r7,-4
 104d9b4:	4abfff15 	stw	r10,-4(r9)
 104d9b8:	42000104 	addi	r8,r8,4
 104d9bc:	59fffa36 	bltu	r11,r7,104d9a8 <__alt_data_end+0xfffcd9a8>
 104d9c0:	213fff04 	addi	r4,r4,-4
 104d9c4:	2008d0ba 	srli	r4,r4,2
 104d9c8:	318000cc 	andi	r6,r6,3
 104d9cc:	21000044 	addi	r4,r4,1
 104d9d0:	2109883a 	add	r4,r4,r4
 104d9d4:	2109883a 	add	r4,r4,r4
 104d9d8:	1907883a 	add	r3,r3,r4
 104d9dc:	290b883a 	add	r5,r5,r4
 104d9e0:	30000626 	beq	r6,zero,104d9fc <memcpy+0x11c>
 104d9e4:	198d883a 	add	r6,r3,r6
 104d9e8:	29c00003 	ldbu	r7,0(r5)
 104d9ec:	18c00044 	addi	r3,r3,1
 104d9f0:	29400044 	addi	r5,r5,1
 104d9f4:	19ffffc5 	stb	r7,-1(r3)
 104d9f8:	19bffb1e 	bne	r3,r6,104d9e8 <__alt_data_end+0xfffcd9e8>
 104d9fc:	dfc00217 	ldw	ra,8(sp)
 104da00:	dc400117 	ldw	r17,4(sp)
 104da04:	dc000017 	ldw	r16,0(sp)
 104da08:	dec00304 	addi	sp,sp,12
 104da0c:	f800283a 	ret
 104da10:	2007883a 	mov	r3,r4
 104da14:	003ff206 	br	104d9e0 <__alt_data_end+0xfffcd9e0>
 104da18:	2007883a 	mov	r3,r4
 104da1c:	003ff106 	br	104d9e4 <__alt_data_end+0xfffcd9e4>
 104da20:	200d883a 	mov	r6,r4
 104da24:	003fee06 	br	104d9e0 <__alt_data_end+0xfffcd9e0>

0104da28 <memmove>:
 104da28:	2005883a 	mov	r2,r4
 104da2c:	29000b2e 	bgeu	r5,r4,104da5c <memmove+0x34>
 104da30:	298f883a 	add	r7,r5,r6
 104da34:	21c0092e 	bgeu	r4,r7,104da5c <memmove+0x34>
 104da38:	2187883a 	add	r3,r4,r6
 104da3c:	198bc83a 	sub	r5,r3,r6
 104da40:	30004826 	beq	r6,zero,104db64 <memmove+0x13c>
 104da44:	39ffffc4 	addi	r7,r7,-1
 104da48:	39000003 	ldbu	r4,0(r7)
 104da4c:	18ffffc4 	addi	r3,r3,-1
 104da50:	19000005 	stb	r4,0(r3)
 104da54:	28fffb1e 	bne	r5,r3,104da44 <__alt_data_end+0xfffcda44>
 104da58:	f800283a 	ret
 104da5c:	00c003c4 	movi	r3,15
 104da60:	1980412e 	bgeu	r3,r6,104db68 <memmove+0x140>
 104da64:	2886b03a 	or	r3,r5,r2
 104da68:	18c000cc 	andi	r3,r3,3
 104da6c:	1800401e 	bne	r3,zero,104db70 <memmove+0x148>
 104da70:	33fffc04 	addi	r15,r6,-16
 104da74:	781ed13a 	srli	r15,r15,4
 104da78:	28c00104 	addi	r3,r5,4
 104da7c:	13400104 	addi	r13,r2,4
 104da80:	781c913a 	slli	r14,r15,4
 104da84:	2b000204 	addi	r12,r5,8
 104da88:	12c00204 	addi	r11,r2,8
 104da8c:	73800504 	addi	r14,r14,20
 104da90:	2a800304 	addi	r10,r5,12
 104da94:	12400304 	addi	r9,r2,12
 104da98:	2b9d883a 	add	r14,r5,r14
 104da9c:	2811883a 	mov	r8,r5
 104daa0:	100f883a 	mov	r7,r2
 104daa4:	41000017 	ldw	r4,0(r8)
 104daa8:	39c00404 	addi	r7,r7,16
 104daac:	18c00404 	addi	r3,r3,16
 104dab0:	393ffc15 	stw	r4,-16(r7)
 104dab4:	193ffc17 	ldw	r4,-16(r3)
 104dab8:	6b400404 	addi	r13,r13,16
 104dabc:	5ac00404 	addi	r11,r11,16
 104dac0:	693ffc15 	stw	r4,-16(r13)
 104dac4:	61000017 	ldw	r4,0(r12)
 104dac8:	4a400404 	addi	r9,r9,16
 104dacc:	42000404 	addi	r8,r8,16
 104dad0:	593ffc15 	stw	r4,-16(r11)
 104dad4:	51000017 	ldw	r4,0(r10)
 104dad8:	63000404 	addi	r12,r12,16
 104dadc:	52800404 	addi	r10,r10,16
 104dae0:	493ffc15 	stw	r4,-16(r9)
 104dae4:	1bbfef1e 	bne	r3,r14,104daa4 <__alt_data_end+0xfffcdaa4>
 104dae8:	79000044 	addi	r4,r15,1
 104daec:	2008913a 	slli	r4,r4,4
 104daf0:	328003cc 	andi	r10,r6,15
 104daf4:	02c000c4 	movi	r11,3
 104daf8:	1107883a 	add	r3,r2,r4
 104dafc:	290b883a 	add	r5,r5,r4
 104db00:	5a801e2e 	bgeu	r11,r10,104db7c <memmove+0x154>
 104db04:	1813883a 	mov	r9,r3
 104db08:	2811883a 	mov	r8,r5
 104db0c:	500f883a 	mov	r7,r10
 104db10:	41000017 	ldw	r4,0(r8)
 104db14:	4a400104 	addi	r9,r9,4
 104db18:	39ffff04 	addi	r7,r7,-4
 104db1c:	493fff15 	stw	r4,-4(r9)
 104db20:	42000104 	addi	r8,r8,4
 104db24:	59fffa36 	bltu	r11,r7,104db10 <__alt_data_end+0xfffcdb10>
 104db28:	513fff04 	addi	r4,r10,-4
 104db2c:	2008d0ba 	srli	r4,r4,2
 104db30:	318000cc 	andi	r6,r6,3
 104db34:	21000044 	addi	r4,r4,1
 104db38:	2109883a 	add	r4,r4,r4
 104db3c:	2109883a 	add	r4,r4,r4
 104db40:	1907883a 	add	r3,r3,r4
 104db44:	290b883a 	add	r5,r5,r4
 104db48:	30000b26 	beq	r6,zero,104db78 <memmove+0x150>
 104db4c:	198d883a 	add	r6,r3,r6
 104db50:	29c00003 	ldbu	r7,0(r5)
 104db54:	18c00044 	addi	r3,r3,1
 104db58:	29400044 	addi	r5,r5,1
 104db5c:	19ffffc5 	stb	r7,-1(r3)
 104db60:	19bffb1e 	bne	r3,r6,104db50 <__alt_data_end+0xfffcdb50>
 104db64:	f800283a 	ret
 104db68:	1007883a 	mov	r3,r2
 104db6c:	003ff606 	br	104db48 <__alt_data_end+0xfffcdb48>
 104db70:	1007883a 	mov	r3,r2
 104db74:	003ff506 	br	104db4c <__alt_data_end+0xfffcdb4c>
 104db78:	f800283a 	ret
 104db7c:	500d883a 	mov	r6,r10
 104db80:	003ff106 	br	104db48 <__alt_data_end+0xfffcdb48>

0104db84 <memset>:
 104db84:	20c000cc 	andi	r3,r4,3
 104db88:	2005883a 	mov	r2,r4
 104db8c:	18004426 	beq	r3,zero,104dca0 <memset+0x11c>
 104db90:	31ffffc4 	addi	r7,r6,-1
 104db94:	30004026 	beq	r6,zero,104dc98 <memset+0x114>
 104db98:	2813883a 	mov	r9,r5
 104db9c:	200d883a 	mov	r6,r4
 104dba0:	2007883a 	mov	r3,r4
 104dba4:	00000406 	br	104dbb8 <memset+0x34>
 104dba8:	3a3fffc4 	addi	r8,r7,-1
 104dbac:	31800044 	addi	r6,r6,1
 104dbb0:	38003926 	beq	r7,zero,104dc98 <memset+0x114>
 104dbb4:	400f883a 	mov	r7,r8
 104dbb8:	18c00044 	addi	r3,r3,1
 104dbbc:	32400005 	stb	r9,0(r6)
 104dbc0:	1a0000cc 	andi	r8,r3,3
 104dbc4:	403ff81e 	bne	r8,zero,104dba8 <__alt_data_end+0xfffcdba8>
 104dbc8:	010000c4 	movi	r4,3
 104dbcc:	21c02d2e 	bgeu	r4,r7,104dc84 <memset+0x100>
 104dbd0:	29003fcc 	andi	r4,r5,255
 104dbd4:	200c923a 	slli	r6,r4,8
 104dbd8:	3108b03a 	or	r4,r6,r4
 104dbdc:	200c943a 	slli	r6,r4,16
 104dbe0:	218cb03a 	or	r6,r4,r6
 104dbe4:	010003c4 	movi	r4,15
 104dbe8:	21c0182e 	bgeu	r4,r7,104dc4c <memset+0xc8>
 104dbec:	3b3ffc04 	addi	r12,r7,-16
 104dbf0:	6018d13a 	srli	r12,r12,4
 104dbf4:	1a000104 	addi	r8,r3,4
 104dbf8:	1ac00204 	addi	r11,r3,8
 104dbfc:	6008913a 	slli	r4,r12,4
 104dc00:	1a800304 	addi	r10,r3,12
 104dc04:	1813883a 	mov	r9,r3
 104dc08:	21000504 	addi	r4,r4,20
 104dc0c:	1909883a 	add	r4,r3,r4
 104dc10:	49800015 	stw	r6,0(r9)
 104dc14:	41800015 	stw	r6,0(r8)
 104dc18:	59800015 	stw	r6,0(r11)
 104dc1c:	51800015 	stw	r6,0(r10)
 104dc20:	42000404 	addi	r8,r8,16
 104dc24:	4a400404 	addi	r9,r9,16
 104dc28:	5ac00404 	addi	r11,r11,16
 104dc2c:	52800404 	addi	r10,r10,16
 104dc30:	413ff71e 	bne	r8,r4,104dc10 <__alt_data_end+0xfffcdc10>
 104dc34:	63000044 	addi	r12,r12,1
 104dc38:	6018913a 	slli	r12,r12,4
 104dc3c:	39c003cc 	andi	r7,r7,15
 104dc40:	010000c4 	movi	r4,3
 104dc44:	1b07883a 	add	r3,r3,r12
 104dc48:	21c00e2e 	bgeu	r4,r7,104dc84 <memset+0x100>
 104dc4c:	1813883a 	mov	r9,r3
 104dc50:	3811883a 	mov	r8,r7
 104dc54:	010000c4 	movi	r4,3
 104dc58:	49800015 	stw	r6,0(r9)
 104dc5c:	423fff04 	addi	r8,r8,-4
 104dc60:	4a400104 	addi	r9,r9,4
 104dc64:	223ffc36 	bltu	r4,r8,104dc58 <__alt_data_end+0xfffcdc58>
 104dc68:	393fff04 	addi	r4,r7,-4
 104dc6c:	2008d0ba 	srli	r4,r4,2
 104dc70:	39c000cc 	andi	r7,r7,3
 104dc74:	21000044 	addi	r4,r4,1
 104dc78:	2109883a 	add	r4,r4,r4
 104dc7c:	2109883a 	add	r4,r4,r4
 104dc80:	1907883a 	add	r3,r3,r4
 104dc84:	38000526 	beq	r7,zero,104dc9c <memset+0x118>
 104dc88:	19cf883a 	add	r7,r3,r7
 104dc8c:	19400005 	stb	r5,0(r3)
 104dc90:	18c00044 	addi	r3,r3,1
 104dc94:	38fffd1e 	bne	r7,r3,104dc8c <__alt_data_end+0xfffcdc8c>
 104dc98:	f800283a 	ret
 104dc9c:	f800283a 	ret
 104dca0:	2007883a 	mov	r3,r4
 104dca4:	300f883a 	mov	r7,r6
 104dca8:	003fc706 	br	104dbc8 <__alt_data_end+0xfffcdbc8>

0104dcac <_Balloc>:
 104dcac:	20801317 	ldw	r2,76(r4)
 104dcb0:	defffc04 	addi	sp,sp,-16
 104dcb4:	dc400115 	stw	r17,4(sp)
 104dcb8:	dc000015 	stw	r16,0(sp)
 104dcbc:	dfc00315 	stw	ra,12(sp)
 104dcc0:	dc800215 	stw	r18,8(sp)
 104dcc4:	2023883a 	mov	r17,r4
 104dcc8:	2821883a 	mov	r16,r5
 104dccc:	10000f26 	beq	r2,zero,104dd0c <_Balloc+0x60>
 104dcd0:	8407883a 	add	r3,r16,r16
 104dcd4:	18c7883a 	add	r3,r3,r3
 104dcd8:	10c7883a 	add	r3,r2,r3
 104dcdc:	18800017 	ldw	r2,0(r3)
 104dce0:	10001126 	beq	r2,zero,104dd28 <_Balloc+0x7c>
 104dce4:	11000017 	ldw	r4,0(r2)
 104dce8:	19000015 	stw	r4,0(r3)
 104dcec:	10000415 	stw	zero,16(r2)
 104dcf0:	10000315 	stw	zero,12(r2)
 104dcf4:	dfc00317 	ldw	ra,12(sp)
 104dcf8:	dc800217 	ldw	r18,8(sp)
 104dcfc:	dc400117 	ldw	r17,4(sp)
 104dd00:	dc000017 	ldw	r16,0(sp)
 104dd04:	dec00404 	addi	sp,sp,16
 104dd08:	f800283a 	ret
 104dd0c:	01800844 	movi	r6,33
 104dd10:	01400104 	movi	r5,4
 104dd14:	1051ff40 	call	1051ff4 <_calloc_r>
 104dd18:	88801315 	stw	r2,76(r17)
 104dd1c:	103fec1e 	bne	r2,zero,104dcd0 <__alt_data_end+0xfffcdcd0>
 104dd20:	0005883a 	mov	r2,zero
 104dd24:	003ff306 	br	104dcf4 <__alt_data_end+0xfffcdcf4>
 104dd28:	01400044 	movi	r5,1
 104dd2c:	2c24983a 	sll	r18,r5,r16
 104dd30:	8809883a 	mov	r4,r17
 104dd34:	91800144 	addi	r6,r18,5
 104dd38:	318d883a 	add	r6,r6,r6
 104dd3c:	318d883a 	add	r6,r6,r6
 104dd40:	1051ff40 	call	1051ff4 <_calloc_r>
 104dd44:	103ff626 	beq	r2,zero,104dd20 <__alt_data_end+0xfffcdd20>
 104dd48:	14000115 	stw	r16,4(r2)
 104dd4c:	14800215 	stw	r18,8(r2)
 104dd50:	003fe606 	br	104dcec <__alt_data_end+0xfffcdcec>

0104dd54 <_Bfree>:
 104dd54:	28000826 	beq	r5,zero,104dd78 <_Bfree+0x24>
 104dd58:	28c00117 	ldw	r3,4(r5)
 104dd5c:	20801317 	ldw	r2,76(r4)
 104dd60:	18c7883a 	add	r3,r3,r3
 104dd64:	18c7883a 	add	r3,r3,r3
 104dd68:	10c5883a 	add	r2,r2,r3
 104dd6c:	10c00017 	ldw	r3,0(r2)
 104dd70:	28c00015 	stw	r3,0(r5)
 104dd74:	11400015 	stw	r5,0(r2)
 104dd78:	f800283a 	ret

0104dd7c <__multadd>:
 104dd7c:	defffa04 	addi	sp,sp,-24
 104dd80:	dc800315 	stw	r18,12(sp)
 104dd84:	dc400215 	stw	r17,8(sp)
 104dd88:	dc000115 	stw	r16,4(sp)
 104dd8c:	2823883a 	mov	r17,r5
 104dd90:	2c000417 	ldw	r16,16(r5)
 104dd94:	dfc00515 	stw	ra,20(sp)
 104dd98:	dcc00415 	stw	r19,16(sp)
 104dd9c:	2025883a 	mov	r18,r4
 104dda0:	29400504 	addi	r5,r5,20
 104dda4:	0011883a 	mov	r8,zero
 104dda8:	28c00017 	ldw	r3,0(r5)
 104ddac:	29400104 	addi	r5,r5,4
 104ddb0:	42000044 	addi	r8,r8,1
 104ddb4:	18bfffcc 	andi	r2,r3,65535
 104ddb8:	1185383a 	mul	r2,r2,r6
 104ddbc:	1806d43a 	srli	r3,r3,16
 104ddc0:	11cf883a 	add	r7,r2,r7
 104ddc4:	3808d43a 	srli	r4,r7,16
 104ddc8:	1987383a 	mul	r3,r3,r6
 104ddcc:	38bfffcc 	andi	r2,r7,65535
 104ddd0:	1907883a 	add	r3,r3,r4
 104ddd4:	1808943a 	slli	r4,r3,16
 104ddd8:	180ed43a 	srli	r7,r3,16
 104dddc:	2085883a 	add	r2,r4,r2
 104dde0:	28bfff15 	stw	r2,-4(r5)
 104dde4:	443ff016 	blt	r8,r16,104dda8 <__alt_data_end+0xfffcdda8>
 104dde8:	38000926 	beq	r7,zero,104de10 <__multadd+0x94>
 104ddec:	88800217 	ldw	r2,8(r17)
 104ddf0:	80800f0e 	bge	r16,r2,104de30 <__multadd+0xb4>
 104ddf4:	80800144 	addi	r2,r16,5
 104ddf8:	1085883a 	add	r2,r2,r2
 104ddfc:	1085883a 	add	r2,r2,r2
 104de00:	8885883a 	add	r2,r17,r2
 104de04:	11c00015 	stw	r7,0(r2)
 104de08:	84000044 	addi	r16,r16,1
 104de0c:	8c000415 	stw	r16,16(r17)
 104de10:	8805883a 	mov	r2,r17
 104de14:	dfc00517 	ldw	ra,20(sp)
 104de18:	dcc00417 	ldw	r19,16(sp)
 104de1c:	dc800317 	ldw	r18,12(sp)
 104de20:	dc400217 	ldw	r17,8(sp)
 104de24:	dc000117 	ldw	r16,4(sp)
 104de28:	dec00604 	addi	sp,sp,24
 104de2c:	f800283a 	ret
 104de30:	89400117 	ldw	r5,4(r17)
 104de34:	9009883a 	mov	r4,r18
 104de38:	d9c00015 	stw	r7,0(sp)
 104de3c:	29400044 	addi	r5,r5,1
 104de40:	104dcac0 	call	104dcac <_Balloc>
 104de44:	89800417 	ldw	r6,16(r17)
 104de48:	89400304 	addi	r5,r17,12
 104de4c:	11000304 	addi	r4,r2,12
 104de50:	31800084 	addi	r6,r6,2
 104de54:	318d883a 	add	r6,r6,r6
 104de58:	318d883a 	add	r6,r6,r6
 104de5c:	1027883a 	mov	r19,r2
 104de60:	104d8e00 	call	104d8e0 <memcpy>
 104de64:	d9c00017 	ldw	r7,0(sp)
 104de68:	88000a26 	beq	r17,zero,104de94 <__multadd+0x118>
 104de6c:	88c00117 	ldw	r3,4(r17)
 104de70:	90801317 	ldw	r2,76(r18)
 104de74:	18c7883a 	add	r3,r3,r3
 104de78:	18c7883a 	add	r3,r3,r3
 104de7c:	10c5883a 	add	r2,r2,r3
 104de80:	10c00017 	ldw	r3,0(r2)
 104de84:	88c00015 	stw	r3,0(r17)
 104de88:	14400015 	stw	r17,0(r2)
 104de8c:	9823883a 	mov	r17,r19
 104de90:	003fd806 	br	104ddf4 <__alt_data_end+0xfffcddf4>
 104de94:	9823883a 	mov	r17,r19
 104de98:	003fd606 	br	104ddf4 <__alt_data_end+0xfffcddf4>

0104de9c <__s2b>:
 104de9c:	defff904 	addi	sp,sp,-28
 104dea0:	dc400115 	stw	r17,4(sp)
 104dea4:	dc000015 	stw	r16,0(sp)
 104dea8:	2023883a 	mov	r17,r4
 104deac:	2821883a 	mov	r16,r5
 104deb0:	39000204 	addi	r4,r7,8
 104deb4:	01400244 	movi	r5,9
 104deb8:	dcc00315 	stw	r19,12(sp)
 104debc:	dc800215 	stw	r18,8(sp)
 104dec0:	dfc00615 	stw	ra,24(sp)
 104dec4:	dd400515 	stw	r21,20(sp)
 104dec8:	dd000415 	stw	r20,16(sp)
 104decc:	3825883a 	mov	r18,r7
 104ded0:	3027883a 	mov	r19,r6
 104ded4:	1043cbc0 	call	1043cbc <__divsi3>
 104ded8:	00c00044 	movi	r3,1
 104dedc:	000b883a 	mov	r5,zero
 104dee0:	1880030e 	bge	r3,r2,104def0 <__s2b+0x54>
 104dee4:	18c7883a 	add	r3,r3,r3
 104dee8:	29400044 	addi	r5,r5,1
 104deec:	18bffd16 	blt	r3,r2,104dee4 <__alt_data_end+0xfffcdee4>
 104def0:	8809883a 	mov	r4,r17
 104def4:	104dcac0 	call	104dcac <_Balloc>
 104def8:	d8c00717 	ldw	r3,28(sp)
 104defc:	10c00515 	stw	r3,20(r2)
 104df00:	00c00044 	movi	r3,1
 104df04:	10c00415 	stw	r3,16(r2)
 104df08:	00c00244 	movi	r3,9
 104df0c:	1cc0210e 	bge	r3,r19,104df94 <__s2b+0xf8>
 104df10:	80eb883a 	add	r21,r16,r3
 104df14:	a829883a 	mov	r20,r21
 104df18:	84e1883a 	add	r16,r16,r19
 104df1c:	a1c00007 	ldb	r7,0(r20)
 104df20:	01800284 	movi	r6,10
 104df24:	a5000044 	addi	r20,r20,1
 104df28:	100b883a 	mov	r5,r2
 104df2c:	39fff404 	addi	r7,r7,-48
 104df30:	8809883a 	mov	r4,r17
 104df34:	104dd7c0 	call	104dd7c <__multadd>
 104df38:	a43ff81e 	bne	r20,r16,104df1c <__alt_data_end+0xfffcdf1c>
 104df3c:	ace1883a 	add	r16,r21,r19
 104df40:	843ffe04 	addi	r16,r16,-8
 104df44:	9c800a0e 	bge	r19,r18,104df70 <__s2b+0xd4>
 104df48:	94e5c83a 	sub	r18,r18,r19
 104df4c:	84a5883a 	add	r18,r16,r18
 104df50:	81c00007 	ldb	r7,0(r16)
 104df54:	01800284 	movi	r6,10
 104df58:	84000044 	addi	r16,r16,1
 104df5c:	100b883a 	mov	r5,r2
 104df60:	39fff404 	addi	r7,r7,-48
 104df64:	8809883a 	mov	r4,r17
 104df68:	104dd7c0 	call	104dd7c <__multadd>
 104df6c:	84bff81e 	bne	r16,r18,104df50 <__alt_data_end+0xfffcdf50>
 104df70:	dfc00617 	ldw	ra,24(sp)
 104df74:	dd400517 	ldw	r21,20(sp)
 104df78:	dd000417 	ldw	r20,16(sp)
 104df7c:	dcc00317 	ldw	r19,12(sp)
 104df80:	dc800217 	ldw	r18,8(sp)
 104df84:	dc400117 	ldw	r17,4(sp)
 104df88:	dc000017 	ldw	r16,0(sp)
 104df8c:	dec00704 	addi	sp,sp,28
 104df90:	f800283a 	ret
 104df94:	84000284 	addi	r16,r16,10
 104df98:	1827883a 	mov	r19,r3
 104df9c:	003fe906 	br	104df44 <__alt_data_end+0xfffcdf44>

0104dfa0 <__hi0bits>:
 104dfa0:	20bfffec 	andhi	r2,r4,65535
 104dfa4:	1000141e 	bne	r2,zero,104dff8 <__hi0bits+0x58>
 104dfa8:	2008943a 	slli	r4,r4,16
 104dfac:	00800404 	movi	r2,16
 104dfb0:	20ffc02c 	andhi	r3,r4,65280
 104dfb4:	1800021e 	bne	r3,zero,104dfc0 <__hi0bits+0x20>
 104dfb8:	2008923a 	slli	r4,r4,8
 104dfbc:	10800204 	addi	r2,r2,8
 104dfc0:	20fc002c 	andhi	r3,r4,61440
 104dfc4:	1800021e 	bne	r3,zero,104dfd0 <__hi0bits+0x30>
 104dfc8:	2008913a 	slli	r4,r4,4
 104dfcc:	10800104 	addi	r2,r2,4
 104dfd0:	20f0002c 	andhi	r3,r4,49152
 104dfd4:	1800031e 	bne	r3,zero,104dfe4 <__hi0bits+0x44>
 104dfd8:	2109883a 	add	r4,r4,r4
 104dfdc:	10800084 	addi	r2,r2,2
 104dfe0:	2109883a 	add	r4,r4,r4
 104dfe4:	20000316 	blt	r4,zero,104dff4 <__hi0bits+0x54>
 104dfe8:	2110002c 	andhi	r4,r4,16384
 104dfec:	2000041e 	bne	r4,zero,104e000 <__hi0bits+0x60>
 104dff0:	00800804 	movi	r2,32
 104dff4:	f800283a 	ret
 104dff8:	0005883a 	mov	r2,zero
 104dffc:	003fec06 	br	104dfb0 <__alt_data_end+0xfffcdfb0>
 104e000:	10800044 	addi	r2,r2,1
 104e004:	f800283a 	ret

0104e008 <__lo0bits>:
 104e008:	20c00017 	ldw	r3,0(r4)
 104e00c:	188001cc 	andi	r2,r3,7
 104e010:	10000826 	beq	r2,zero,104e034 <__lo0bits+0x2c>
 104e014:	1880004c 	andi	r2,r3,1
 104e018:	1000211e 	bne	r2,zero,104e0a0 <__lo0bits+0x98>
 104e01c:	1880008c 	andi	r2,r3,2
 104e020:	1000211e 	bne	r2,zero,104e0a8 <__lo0bits+0xa0>
 104e024:	1806d0ba 	srli	r3,r3,2
 104e028:	00800084 	movi	r2,2
 104e02c:	20c00015 	stw	r3,0(r4)
 104e030:	f800283a 	ret
 104e034:	18bfffcc 	andi	r2,r3,65535
 104e038:	10001326 	beq	r2,zero,104e088 <__lo0bits+0x80>
 104e03c:	0005883a 	mov	r2,zero
 104e040:	19403fcc 	andi	r5,r3,255
 104e044:	2800021e 	bne	r5,zero,104e050 <__lo0bits+0x48>
 104e048:	1806d23a 	srli	r3,r3,8
 104e04c:	10800204 	addi	r2,r2,8
 104e050:	194003cc 	andi	r5,r3,15
 104e054:	2800021e 	bne	r5,zero,104e060 <__lo0bits+0x58>
 104e058:	1806d13a 	srli	r3,r3,4
 104e05c:	10800104 	addi	r2,r2,4
 104e060:	194000cc 	andi	r5,r3,3
 104e064:	2800021e 	bne	r5,zero,104e070 <__lo0bits+0x68>
 104e068:	1806d0ba 	srli	r3,r3,2
 104e06c:	10800084 	addi	r2,r2,2
 104e070:	1940004c 	andi	r5,r3,1
 104e074:	2800081e 	bne	r5,zero,104e098 <__lo0bits+0x90>
 104e078:	1806d07a 	srli	r3,r3,1
 104e07c:	1800051e 	bne	r3,zero,104e094 <__lo0bits+0x8c>
 104e080:	00800804 	movi	r2,32
 104e084:	f800283a 	ret
 104e088:	1806d43a 	srli	r3,r3,16
 104e08c:	00800404 	movi	r2,16
 104e090:	003feb06 	br	104e040 <__alt_data_end+0xfffce040>
 104e094:	10800044 	addi	r2,r2,1
 104e098:	20c00015 	stw	r3,0(r4)
 104e09c:	f800283a 	ret
 104e0a0:	0005883a 	mov	r2,zero
 104e0a4:	f800283a 	ret
 104e0a8:	1806d07a 	srli	r3,r3,1
 104e0ac:	00800044 	movi	r2,1
 104e0b0:	20c00015 	stw	r3,0(r4)
 104e0b4:	f800283a 	ret

0104e0b8 <__i2b>:
 104e0b8:	defffd04 	addi	sp,sp,-12
 104e0bc:	dc000015 	stw	r16,0(sp)
 104e0c0:	04000044 	movi	r16,1
 104e0c4:	dc400115 	stw	r17,4(sp)
 104e0c8:	2823883a 	mov	r17,r5
 104e0cc:	800b883a 	mov	r5,r16
 104e0d0:	dfc00215 	stw	ra,8(sp)
 104e0d4:	104dcac0 	call	104dcac <_Balloc>
 104e0d8:	14400515 	stw	r17,20(r2)
 104e0dc:	14000415 	stw	r16,16(r2)
 104e0e0:	dfc00217 	ldw	ra,8(sp)
 104e0e4:	dc400117 	ldw	r17,4(sp)
 104e0e8:	dc000017 	ldw	r16,0(sp)
 104e0ec:	dec00304 	addi	sp,sp,12
 104e0f0:	f800283a 	ret

0104e0f4 <__multiply>:
 104e0f4:	defffa04 	addi	sp,sp,-24
 104e0f8:	dcc00315 	stw	r19,12(sp)
 104e0fc:	dc800215 	stw	r18,8(sp)
 104e100:	34c00417 	ldw	r19,16(r6)
 104e104:	2c800417 	ldw	r18,16(r5)
 104e108:	dd000415 	stw	r20,16(sp)
 104e10c:	dc400115 	stw	r17,4(sp)
 104e110:	dfc00515 	stw	ra,20(sp)
 104e114:	dc000015 	stw	r16,0(sp)
 104e118:	2829883a 	mov	r20,r5
 104e11c:	3023883a 	mov	r17,r6
 104e120:	94c0050e 	bge	r18,r19,104e138 <__multiply+0x44>
 104e124:	9007883a 	mov	r3,r18
 104e128:	3029883a 	mov	r20,r6
 104e12c:	9825883a 	mov	r18,r19
 104e130:	2823883a 	mov	r17,r5
 104e134:	1827883a 	mov	r19,r3
 104e138:	a0800217 	ldw	r2,8(r20)
 104e13c:	94e1883a 	add	r16,r18,r19
 104e140:	a1400117 	ldw	r5,4(r20)
 104e144:	1400010e 	bge	r2,r16,104e14c <__multiply+0x58>
 104e148:	29400044 	addi	r5,r5,1
 104e14c:	104dcac0 	call	104dcac <_Balloc>
 104e150:	8415883a 	add	r10,r16,r16
 104e154:	12c00504 	addi	r11,r2,20
 104e158:	5295883a 	add	r10,r10,r10
 104e15c:	5a95883a 	add	r10,r11,r10
 104e160:	5807883a 	mov	r3,r11
 104e164:	5a80032e 	bgeu	r11,r10,104e174 <__multiply+0x80>
 104e168:	18000015 	stw	zero,0(r3)
 104e16c:	18c00104 	addi	r3,r3,4
 104e170:	1abffd36 	bltu	r3,r10,104e168 <__alt_data_end+0xfffce168>
 104e174:	9ce7883a 	add	r19,r19,r19
 104e178:	94a5883a 	add	r18,r18,r18
 104e17c:	89800504 	addi	r6,r17,20
 104e180:	9ce7883a 	add	r19,r19,r19
 104e184:	a3400504 	addi	r13,r20,20
 104e188:	94a5883a 	add	r18,r18,r18
 104e18c:	34d9883a 	add	r12,r6,r19
 104e190:	6c93883a 	add	r9,r13,r18
 104e194:	3300422e 	bgeu	r6,r12,104e2a0 <__multiply+0x1ac>
 104e198:	37c00017 	ldw	ra,0(r6)
 104e19c:	fbffffcc 	andi	r15,ra,65535
 104e1a0:	78001b26 	beq	r15,zero,104e210 <__multiply+0x11c>
 104e1a4:	5811883a 	mov	r8,r11
 104e1a8:	681d883a 	mov	r14,r13
 104e1ac:	000f883a 	mov	r7,zero
 104e1b0:	71000017 	ldw	r4,0(r14)
 104e1b4:	40c00017 	ldw	r3,0(r8)
 104e1b8:	73800104 	addi	r14,r14,4
 104e1bc:	217fffcc 	andi	r5,r4,65535
 104e1c0:	2bcb383a 	mul	r5,r5,r15
 104e1c4:	2008d43a 	srli	r4,r4,16
 104e1c8:	1c7fffcc 	andi	r17,r3,65535
 104e1cc:	2c4b883a 	add	r5,r5,r17
 104e1d0:	29cb883a 	add	r5,r5,r7
 104e1d4:	23c9383a 	mul	r4,r4,r15
 104e1d8:	1806d43a 	srli	r3,r3,16
 104e1dc:	280ed43a 	srli	r7,r5,16
 104e1e0:	297fffcc 	andi	r5,r5,65535
 104e1e4:	20c7883a 	add	r3,r4,r3
 104e1e8:	19c7883a 	add	r3,r3,r7
 104e1ec:	1808943a 	slli	r4,r3,16
 104e1f0:	4023883a 	mov	r17,r8
 104e1f4:	180ed43a 	srli	r7,r3,16
 104e1f8:	214ab03a 	or	r5,r4,r5
 104e1fc:	41400015 	stw	r5,0(r8)
 104e200:	42000104 	addi	r8,r8,4
 104e204:	727fea36 	bltu	r14,r9,104e1b0 <__alt_data_end+0xfffce1b0>
 104e208:	89c00115 	stw	r7,4(r17)
 104e20c:	37c00017 	ldw	ra,0(r6)
 104e210:	f83ed43a 	srli	ra,ra,16
 104e214:	f8001f26 	beq	ra,zero,104e294 <__multiply+0x1a0>
 104e218:	58c00017 	ldw	r3,0(r11)
 104e21c:	681d883a 	mov	r14,r13
 104e220:	581f883a 	mov	r15,r11
 104e224:	1811883a 	mov	r8,r3
 104e228:	5825883a 	mov	r18,r11
 104e22c:	000f883a 	mov	r7,zero
 104e230:	00000106 	br	104e238 <__multiply+0x144>
 104e234:	8825883a 	mov	r18,r17
 104e238:	7140000b 	ldhu	r5,0(r14)
 104e23c:	4010d43a 	srli	r8,r8,16
 104e240:	193fffcc 	andi	r4,r3,65535
 104e244:	2fcb383a 	mul	r5,r5,ra
 104e248:	7bc00104 	addi	r15,r15,4
 104e24c:	73800104 	addi	r14,r14,4
 104e250:	2a0b883a 	add	r5,r5,r8
 104e254:	29cb883a 	add	r5,r5,r7
 104e258:	2806943a 	slli	r3,r5,16
 104e25c:	94400104 	addi	r17,r18,4
 104e260:	280ad43a 	srli	r5,r5,16
 104e264:	1908b03a 	or	r4,r3,r4
 104e268:	793fff15 	stw	r4,-4(r15)
 104e26c:	70ffff17 	ldw	r3,-4(r14)
 104e270:	8a000017 	ldw	r8,0(r17)
 104e274:	1806d43a 	srli	r3,r3,16
 104e278:	413fffcc 	andi	r4,r8,65535
 104e27c:	1fc7383a 	mul	r3,r3,ra
 104e280:	1907883a 	add	r3,r3,r4
 104e284:	1947883a 	add	r3,r3,r5
 104e288:	180ed43a 	srli	r7,r3,16
 104e28c:	727fe936 	bltu	r14,r9,104e234 <__alt_data_end+0xfffce234>
 104e290:	90c00115 	stw	r3,4(r18)
 104e294:	31800104 	addi	r6,r6,4
 104e298:	5ac00104 	addi	r11,r11,4
 104e29c:	333fbe36 	bltu	r6,r12,104e198 <__alt_data_end+0xfffce198>
 104e2a0:	0400090e 	bge	zero,r16,104e2c8 <__multiply+0x1d4>
 104e2a4:	50ffff17 	ldw	r3,-4(r10)
 104e2a8:	52bfff04 	addi	r10,r10,-4
 104e2ac:	18000326 	beq	r3,zero,104e2bc <__multiply+0x1c8>
 104e2b0:	00000506 	br	104e2c8 <__multiply+0x1d4>
 104e2b4:	50c00017 	ldw	r3,0(r10)
 104e2b8:	1800031e 	bne	r3,zero,104e2c8 <__multiply+0x1d4>
 104e2bc:	843fffc4 	addi	r16,r16,-1
 104e2c0:	52bfff04 	addi	r10,r10,-4
 104e2c4:	803ffb1e 	bne	r16,zero,104e2b4 <__alt_data_end+0xfffce2b4>
 104e2c8:	14000415 	stw	r16,16(r2)
 104e2cc:	dfc00517 	ldw	ra,20(sp)
 104e2d0:	dd000417 	ldw	r20,16(sp)
 104e2d4:	dcc00317 	ldw	r19,12(sp)
 104e2d8:	dc800217 	ldw	r18,8(sp)
 104e2dc:	dc400117 	ldw	r17,4(sp)
 104e2e0:	dc000017 	ldw	r16,0(sp)
 104e2e4:	dec00604 	addi	sp,sp,24
 104e2e8:	f800283a 	ret

0104e2ec <__pow5mult>:
 104e2ec:	defffa04 	addi	sp,sp,-24
 104e2f0:	dcc00315 	stw	r19,12(sp)
 104e2f4:	dc000015 	stw	r16,0(sp)
 104e2f8:	dfc00515 	stw	ra,20(sp)
 104e2fc:	dd000415 	stw	r20,16(sp)
 104e300:	dc800215 	stw	r18,8(sp)
 104e304:	dc400115 	stw	r17,4(sp)
 104e308:	308000cc 	andi	r2,r6,3
 104e30c:	3021883a 	mov	r16,r6
 104e310:	2027883a 	mov	r19,r4
 104e314:	10002f1e 	bne	r2,zero,104e3d4 <__pow5mult+0xe8>
 104e318:	2825883a 	mov	r18,r5
 104e31c:	8021d0ba 	srai	r16,r16,2
 104e320:	80001a26 	beq	r16,zero,104e38c <__pow5mult+0xa0>
 104e324:	9c401217 	ldw	r17,72(r19)
 104e328:	8800061e 	bne	r17,zero,104e344 <__pow5mult+0x58>
 104e32c:	00003406 	br	104e400 <__pow5mult+0x114>
 104e330:	8021d07a 	srai	r16,r16,1
 104e334:	80001526 	beq	r16,zero,104e38c <__pow5mult+0xa0>
 104e338:	88800017 	ldw	r2,0(r17)
 104e33c:	10001c26 	beq	r2,zero,104e3b0 <__pow5mult+0xc4>
 104e340:	1023883a 	mov	r17,r2
 104e344:	8080004c 	andi	r2,r16,1
 104e348:	103ff926 	beq	r2,zero,104e330 <__alt_data_end+0xfffce330>
 104e34c:	880d883a 	mov	r6,r17
 104e350:	900b883a 	mov	r5,r18
 104e354:	9809883a 	mov	r4,r19
 104e358:	104e0f40 	call	104e0f4 <__multiply>
 104e35c:	90001b26 	beq	r18,zero,104e3cc <__pow5mult+0xe0>
 104e360:	91000117 	ldw	r4,4(r18)
 104e364:	98c01317 	ldw	r3,76(r19)
 104e368:	8021d07a 	srai	r16,r16,1
 104e36c:	2109883a 	add	r4,r4,r4
 104e370:	2109883a 	add	r4,r4,r4
 104e374:	1907883a 	add	r3,r3,r4
 104e378:	19000017 	ldw	r4,0(r3)
 104e37c:	91000015 	stw	r4,0(r18)
 104e380:	1c800015 	stw	r18,0(r3)
 104e384:	1025883a 	mov	r18,r2
 104e388:	803feb1e 	bne	r16,zero,104e338 <__alt_data_end+0xfffce338>
 104e38c:	9005883a 	mov	r2,r18
 104e390:	dfc00517 	ldw	ra,20(sp)
 104e394:	dd000417 	ldw	r20,16(sp)
 104e398:	dcc00317 	ldw	r19,12(sp)
 104e39c:	dc800217 	ldw	r18,8(sp)
 104e3a0:	dc400117 	ldw	r17,4(sp)
 104e3a4:	dc000017 	ldw	r16,0(sp)
 104e3a8:	dec00604 	addi	sp,sp,24
 104e3ac:	f800283a 	ret
 104e3b0:	880d883a 	mov	r6,r17
 104e3b4:	880b883a 	mov	r5,r17
 104e3b8:	9809883a 	mov	r4,r19
 104e3bc:	104e0f40 	call	104e0f4 <__multiply>
 104e3c0:	88800015 	stw	r2,0(r17)
 104e3c4:	10000015 	stw	zero,0(r2)
 104e3c8:	003fdd06 	br	104e340 <__alt_data_end+0xfffce340>
 104e3cc:	1025883a 	mov	r18,r2
 104e3d0:	003fd706 	br	104e330 <__alt_data_end+0xfffce330>
 104e3d4:	10bfffc4 	addi	r2,r2,-1
 104e3d8:	1085883a 	add	r2,r2,r2
 104e3dc:	00c04174 	movhi	r3,261
 104e3e0:	18daea04 	addi	r3,r3,27560
 104e3e4:	1085883a 	add	r2,r2,r2
 104e3e8:	1885883a 	add	r2,r3,r2
 104e3ec:	11800017 	ldw	r6,0(r2)
 104e3f0:	000f883a 	mov	r7,zero
 104e3f4:	104dd7c0 	call	104dd7c <__multadd>
 104e3f8:	1025883a 	mov	r18,r2
 104e3fc:	003fc706 	br	104e31c <__alt_data_end+0xfffce31c>
 104e400:	05000044 	movi	r20,1
 104e404:	a00b883a 	mov	r5,r20
 104e408:	9809883a 	mov	r4,r19
 104e40c:	104dcac0 	call	104dcac <_Balloc>
 104e410:	1023883a 	mov	r17,r2
 104e414:	00809c44 	movi	r2,625
 104e418:	88800515 	stw	r2,20(r17)
 104e41c:	8d000415 	stw	r20,16(r17)
 104e420:	9c401215 	stw	r17,72(r19)
 104e424:	88000015 	stw	zero,0(r17)
 104e428:	003fc606 	br	104e344 <__alt_data_end+0xfffce344>

0104e42c <__lshift>:
 104e42c:	defff904 	addi	sp,sp,-28
 104e430:	dd400515 	stw	r21,20(sp)
 104e434:	dcc00315 	stw	r19,12(sp)
 104e438:	302bd17a 	srai	r21,r6,5
 104e43c:	2cc00417 	ldw	r19,16(r5)
 104e440:	28800217 	ldw	r2,8(r5)
 104e444:	dd000415 	stw	r20,16(sp)
 104e448:	ace7883a 	add	r19,r21,r19
 104e44c:	dc800215 	stw	r18,8(sp)
 104e450:	dc400115 	stw	r17,4(sp)
 104e454:	dc000015 	stw	r16,0(sp)
 104e458:	dfc00615 	stw	ra,24(sp)
 104e45c:	9c000044 	addi	r16,r19,1
 104e460:	2823883a 	mov	r17,r5
 104e464:	3029883a 	mov	r20,r6
 104e468:	2025883a 	mov	r18,r4
 104e46c:	29400117 	ldw	r5,4(r5)
 104e470:	1400030e 	bge	r2,r16,104e480 <__lshift+0x54>
 104e474:	1085883a 	add	r2,r2,r2
 104e478:	29400044 	addi	r5,r5,1
 104e47c:	143ffd16 	blt	r2,r16,104e474 <__alt_data_end+0xfffce474>
 104e480:	9009883a 	mov	r4,r18
 104e484:	104dcac0 	call	104dcac <_Balloc>
 104e488:	10c00504 	addi	r3,r2,20
 104e48c:	0540070e 	bge	zero,r21,104e4ac <__lshift+0x80>
 104e490:	ad6b883a 	add	r21,r21,r21
 104e494:	ad6b883a 	add	r21,r21,r21
 104e498:	1809883a 	mov	r4,r3
 104e49c:	1d47883a 	add	r3,r3,r21
 104e4a0:	20000015 	stw	zero,0(r4)
 104e4a4:	21000104 	addi	r4,r4,4
 104e4a8:	193ffd1e 	bne	r3,r4,104e4a0 <__alt_data_end+0xfffce4a0>
 104e4ac:	8a000417 	ldw	r8,16(r17)
 104e4b0:	89000504 	addi	r4,r17,20
 104e4b4:	a18007cc 	andi	r6,r20,31
 104e4b8:	4211883a 	add	r8,r8,r8
 104e4bc:	4211883a 	add	r8,r8,r8
 104e4c0:	2211883a 	add	r8,r4,r8
 104e4c4:	30002326 	beq	r6,zero,104e554 <__lshift+0x128>
 104e4c8:	02400804 	movi	r9,32
 104e4cc:	4993c83a 	sub	r9,r9,r6
 104e4d0:	000b883a 	mov	r5,zero
 104e4d4:	21c00017 	ldw	r7,0(r4)
 104e4d8:	1815883a 	mov	r10,r3
 104e4dc:	18c00104 	addi	r3,r3,4
 104e4e0:	398e983a 	sll	r7,r7,r6
 104e4e4:	21000104 	addi	r4,r4,4
 104e4e8:	394ab03a 	or	r5,r7,r5
 104e4ec:	197fff15 	stw	r5,-4(r3)
 104e4f0:	217fff17 	ldw	r5,-4(r4)
 104e4f4:	2a4ad83a 	srl	r5,r5,r9
 104e4f8:	223ff636 	bltu	r4,r8,104e4d4 <__alt_data_end+0xfffce4d4>
 104e4fc:	51400115 	stw	r5,4(r10)
 104e500:	28001a1e 	bne	r5,zero,104e56c <__lshift+0x140>
 104e504:	843fffc4 	addi	r16,r16,-1
 104e508:	14000415 	stw	r16,16(r2)
 104e50c:	88000826 	beq	r17,zero,104e530 <__lshift+0x104>
 104e510:	89000117 	ldw	r4,4(r17)
 104e514:	90c01317 	ldw	r3,76(r18)
 104e518:	2109883a 	add	r4,r4,r4
 104e51c:	2109883a 	add	r4,r4,r4
 104e520:	1907883a 	add	r3,r3,r4
 104e524:	19000017 	ldw	r4,0(r3)
 104e528:	89000015 	stw	r4,0(r17)
 104e52c:	1c400015 	stw	r17,0(r3)
 104e530:	dfc00617 	ldw	ra,24(sp)
 104e534:	dd400517 	ldw	r21,20(sp)
 104e538:	dd000417 	ldw	r20,16(sp)
 104e53c:	dcc00317 	ldw	r19,12(sp)
 104e540:	dc800217 	ldw	r18,8(sp)
 104e544:	dc400117 	ldw	r17,4(sp)
 104e548:	dc000017 	ldw	r16,0(sp)
 104e54c:	dec00704 	addi	sp,sp,28
 104e550:	f800283a 	ret
 104e554:	21400017 	ldw	r5,0(r4)
 104e558:	18c00104 	addi	r3,r3,4
 104e55c:	21000104 	addi	r4,r4,4
 104e560:	197fff15 	stw	r5,-4(r3)
 104e564:	223ffb36 	bltu	r4,r8,104e554 <__alt_data_end+0xfffce554>
 104e568:	003fe606 	br	104e504 <__alt_data_end+0xfffce504>
 104e56c:	9c000084 	addi	r16,r19,2
 104e570:	003fe406 	br	104e504 <__alt_data_end+0xfffce504>

0104e574 <__mcmp>:
 104e574:	20800417 	ldw	r2,16(r4)
 104e578:	28c00417 	ldw	r3,16(r5)
 104e57c:	10c5c83a 	sub	r2,r2,r3
 104e580:	1000111e 	bne	r2,zero,104e5c8 <__mcmp+0x54>
 104e584:	18c7883a 	add	r3,r3,r3
 104e588:	18c7883a 	add	r3,r3,r3
 104e58c:	21000504 	addi	r4,r4,20
 104e590:	29400504 	addi	r5,r5,20
 104e594:	20c5883a 	add	r2,r4,r3
 104e598:	28cb883a 	add	r5,r5,r3
 104e59c:	00000106 	br	104e5a4 <__mcmp+0x30>
 104e5a0:	20800a2e 	bgeu	r4,r2,104e5cc <__mcmp+0x58>
 104e5a4:	10bfff04 	addi	r2,r2,-4
 104e5a8:	297fff04 	addi	r5,r5,-4
 104e5ac:	11800017 	ldw	r6,0(r2)
 104e5b0:	28c00017 	ldw	r3,0(r5)
 104e5b4:	30fffa26 	beq	r6,r3,104e5a0 <__alt_data_end+0xfffce5a0>
 104e5b8:	30c00236 	bltu	r6,r3,104e5c4 <__mcmp+0x50>
 104e5bc:	00800044 	movi	r2,1
 104e5c0:	f800283a 	ret
 104e5c4:	00bfffc4 	movi	r2,-1
 104e5c8:	f800283a 	ret
 104e5cc:	0005883a 	mov	r2,zero
 104e5d0:	f800283a 	ret

0104e5d4 <__mdiff>:
 104e5d4:	28c00417 	ldw	r3,16(r5)
 104e5d8:	30800417 	ldw	r2,16(r6)
 104e5dc:	defffa04 	addi	sp,sp,-24
 104e5e0:	dcc00315 	stw	r19,12(sp)
 104e5e4:	dc800215 	stw	r18,8(sp)
 104e5e8:	dfc00515 	stw	ra,20(sp)
 104e5ec:	dd000415 	stw	r20,16(sp)
 104e5f0:	dc400115 	stw	r17,4(sp)
 104e5f4:	dc000015 	stw	r16,0(sp)
 104e5f8:	1887c83a 	sub	r3,r3,r2
 104e5fc:	2825883a 	mov	r18,r5
 104e600:	3027883a 	mov	r19,r6
 104e604:	1800141e 	bne	r3,zero,104e658 <__mdiff+0x84>
 104e608:	1085883a 	add	r2,r2,r2
 104e60c:	1085883a 	add	r2,r2,r2
 104e610:	2a000504 	addi	r8,r5,20
 104e614:	34000504 	addi	r16,r6,20
 104e618:	4087883a 	add	r3,r8,r2
 104e61c:	8085883a 	add	r2,r16,r2
 104e620:	00000106 	br	104e628 <__mdiff+0x54>
 104e624:	40c0592e 	bgeu	r8,r3,104e78c <__mdiff+0x1b8>
 104e628:	18ffff04 	addi	r3,r3,-4
 104e62c:	10bfff04 	addi	r2,r2,-4
 104e630:	19c00017 	ldw	r7,0(r3)
 104e634:	11400017 	ldw	r5,0(r2)
 104e638:	397ffa26 	beq	r7,r5,104e624 <__alt_data_end+0xfffce624>
 104e63c:	3940592e 	bgeu	r7,r5,104e7a4 <__mdiff+0x1d0>
 104e640:	9005883a 	mov	r2,r18
 104e644:	4023883a 	mov	r17,r8
 104e648:	9825883a 	mov	r18,r19
 104e64c:	05000044 	movi	r20,1
 104e650:	1027883a 	mov	r19,r2
 104e654:	00000406 	br	104e668 <__mdiff+0x94>
 104e658:	18005616 	blt	r3,zero,104e7b4 <__mdiff+0x1e0>
 104e65c:	34400504 	addi	r17,r6,20
 104e660:	2c000504 	addi	r16,r5,20
 104e664:	0029883a 	mov	r20,zero
 104e668:	91400117 	ldw	r5,4(r18)
 104e66c:	104dcac0 	call	104dcac <_Balloc>
 104e670:	92400417 	ldw	r9,16(r18)
 104e674:	9b000417 	ldw	r12,16(r19)
 104e678:	12c00504 	addi	r11,r2,20
 104e67c:	4a51883a 	add	r8,r9,r9
 104e680:	6319883a 	add	r12,r12,r12
 104e684:	4211883a 	add	r8,r8,r8
 104e688:	6319883a 	add	r12,r12,r12
 104e68c:	15000315 	stw	r20,12(r2)
 104e690:	8211883a 	add	r8,r16,r8
 104e694:	8b19883a 	add	r12,r17,r12
 104e698:	0007883a 	mov	r3,zero
 104e69c:	81400017 	ldw	r5,0(r16)
 104e6a0:	89c00017 	ldw	r7,0(r17)
 104e6a4:	59800104 	addi	r6,r11,4
 104e6a8:	293fffcc 	andi	r4,r5,65535
 104e6ac:	20c7883a 	add	r3,r4,r3
 104e6b0:	393fffcc 	andi	r4,r7,65535
 104e6b4:	1909c83a 	sub	r4,r3,r4
 104e6b8:	280ad43a 	srli	r5,r5,16
 104e6bc:	380ed43a 	srli	r7,r7,16
 104e6c0:	2007d43a 	srai	r3,r4,16
 104e6c4:	213fffcc 	andi	r4,r4,65535
 104e6c8:	29cbc83a 	sub	r5,r5,r7
 104e6cc:	28c7883a 	add	r3,r5,r3
 104e6d0:	180a943a 	slli	r5,r3,16
 104e6d4:	8c400104 	addi	r17,r17,4
 104e6d8:	84000104 	addi	r16,r16,4
 104e6dc:	2908b03a 	or	r4,r5,r4
 104e6e0:	59000015 	stw	r4,0(r11)
 104e6e4:	1807d43a 	srai	r3,r3,16
 104e6e8:	3015883a 	mov	r10,r6
 104e6ec:	3017883a 	mov	r11,r6
 104e6f0:	8b3fea36 	bltu	r17,r12,104e69c <__alt_data_end+0xfffce69c>
 104e6f4:	8200162e 	bgeu	r16,r8,104e750 <__mdiff+0x17c>
 104e6f8:	8017883a 	mov	r11,r16
 104e6fc:	59400017 	ldw	r5,0(r11)
 104e700:	31800104 	addi	r6,r6,4
 104e704:	5ac00104 	addi	r11,r11,4
 104e708:	293fffcc 	andi	r4,r5,65535
 104e70c:	20c7883a 	add	r3,r4,r3
 104e710:	280ed43a 	srli	r7,r5,16
 104e714:	180bd43a 	srai	r5,r3,16
 104e718:	193fffcc 	andi	r4,r3,65535
 104e71c:	3947883a 	add	r3,r7,r5
 104e720:	180a943a 	slli	r5,r3,16
 104e724:	1807d43a 	srai	r3,r3,16
 104e728:	2908b03a 	or	r4,r5,r4
 104e72c:	313fff15 	stw	r4,-4(r6)
 104e730:	5a3ff236 	bltu	r11,r8,104e6fc <__alt_data_end+0xfffce6fc>
 104e734:	0406303a 	nor	r3,zero,r16
 104e738:	1a07883a 	add	r3,r3,r8
 104e73c:	1806d0ba 	srli	r3,r3,2
 104e740:	18c00044 	addi	r3,r3,1
 104e744:	18c7883a 	add	r3,r3,r3
 104e748:	18c7883a 	add	r3,r3,r3
 104e74c:	50d5883a 	add	r10,r10,r3
 104e750:	50ffff04 	addi	r3,r10,-4
 104e754:	2000041e 	bne	r4,zero,104e768 <__mdiff+0x194>
 104e758:	18ffff04 	addi	r3,r3,-4
 104e75c:	19000017 	ldw	r4,0(r3)
 104e760:	4a7fffc4 	addi	r9,r9,-1
 104e764:	203ffc26 	beq	r4,zero,104e758 <__alt_data_end+0xfffce758>
 104e768:	12400415 	stw	r9,16(r2)
 104e76c:	dfc00517 	ldw	ra,20(sp)
 104e770:	dd000417 	ldw	r20,16(sp)
 104e774:	dcc00317 	ldw	r19,12(sp)
 104e778:	dc800217 	ldw	r18,8(sp)
 104e77c:	dc400117 	ldw	r17,4(sp)
 104e780:	dc000017 	ldw	r16,0(sp)
 104e784:	dec00604 	addi	sp,sp,24
 104e788:	f800283a 	ret
 104e78c:	000b883a 	mov	r5,zero
 104e790:	104dcac0 	call	104dcac <_Balloc>
 104e794:	00c00044 	movi	r3,1
 104e798:	10c00415 	stw	r3,16(r2)
 104e79c:	10000515 	stw	zero,20(r2)
 104e7a0:	003ff206 	br	104e76c <__alt_data_end+0xfffce76c>
 104e7a4:	8023883a 	mov	r17,r16
 104e7a8:	0029883a 	mov	r20,zero
 104e7ac:	4021883a 	mov	r16,r8
 104e7b0:	003fad06 	br	104e668 <__alt_data_end+0xfffce668>
 104e7b4:	9005883a 	mov	r2,r18
 104e7b8:	94400504 	addi	r17,r18,20
 104e7bc:	9c000504 	addi	r16,r19,20
 104e7c0:	9825883a 	mov	r18,r19
 104e7c4:	05000044 	movi	r20,1
 104e7c8:	1027883a 	mov	r19,r2
 104e7cc:	003fa606 	br	104e668 <__alt_data_end+0xfffce668>

0104e7d0 <__ulp>:
 104e7d0:	295ffc2c 	andhi	r5,r5,32752
 104e7d4:	00bf3034 	movhi	r2,64704
 104e7d8:	2887883a 	add	r3,r5,r2
 104e7dc:	00c0020e 	bge	zero,r3,104e7e8 <__ulp+0x18>
 104e7e0:	0005883a 	mov	r2,zero
 104e7e4:	f800283a 	ret
 104e7e8:	00c7c83a 	sub	r3,zero,r3
 104e7ec:	1807d53a 	srai	r3,r3,20
 104e7f0:	008004c4 	movi	r2,19
 104e7f4:	10c00b0e 	bge	r2,r3,104e824 <__ulp+0x54>
 104e7f8:	18bffb04 	addi	r2,r3,-20
 104e7fc:	01000784 	movi	r4,30
 104e800:	0007883a 	mov	r3,zero
 104e804:	20800516 	blt	r4,r2,104e81c <__ulp+0x4c>
 104e808:	010007c4 	movi	r4,31
 104e80c:	2089c83a 	sub	r4,r4,r2
 104e810:	00800044 	movi	r2,1
 104e814:	1104983a 	sll	r2,r2,r4
 104e818:	f800283a 	ret
 104e81c:	00800044 	movi	r2,1
 104e820:	f800283a 	ret
 104e824:	01400234 	movhi	r5,8
 104e828:	28c7d83a 	sra	r3,r5,r3
 104e82c:	0005883a 	mov	r2,zero
 104e830:	f800283a 	ret

0104e834 <__b2d>:
 104e834:	defffa04 	addi	sp,sp,-24
 104e838:	dc000015 	stw	r16,0(sp)
 104e83c:	24000417 	ldw	r16,16(r4)
 104e840:	dc400115 	stw	r17,4(sp)
 104e844:	24400504 	addi	r17,r4,20
 104e848:	8421883a 	add	r16,r16,r16
 104e84c:	8421883a 	add	r16,r16,r16
 104e850:	8c21883a 	add	r16,r17,r16
 104e854:	dc800215 	stw	r18,8(sp)
 104e858:	84bfff17 	ldw	r18,-4(r16)
 104e85c:	dd000415 	stw	r20,16(sp)
 104e860:	dcc00315 	stw	r19,12(sp)
 104e864:	9009883a 	mov	r4,r18
 104e868:	2829883a 	mov	r20,r5
 104e86c:	dfc00515 	stw	ra,20(sp)
 104e870:	104dfa00 	call	104dfa0 <__hi0bits>
 104e874:	00c00804 	movi	r3,32
 104e878:	1889c83a 	sub	r4,r3,r2
 104e87c:	a1000015 	stw	r4,0(r20)
 104e880:	01000284 	movi	r4,10
 104e884:	84ffff04 	addi	r19,r16,-4
 104e888:	20801216 	blt	r4,r2,104e8d4 <__b2d+0xa0>
 104e88c:	018002c4 	movi	r6,11
 104e890:	308dc83a 	sub	r6,r6,r2
 104e894:	9186d83a 	srl	r3,r18,r6
 104e898:	18cffc34 	orhi	r3,r3,16368
 104e89c:	8cc0212e 	bgeu	r17,r19,104e924 <__b2d+0xf0>
 104e8a0:	813ffe17 	ldw	r4,-8(r16)
 104e8a4:	218cd83a 	srl	r6,r4,r6
 104e8a8:	10800544 	addi	r2,r2,21
 104e8ac:	9084983a 	sll	r2,r18,r2
 104e8b0:	1184b03a 	or	r2,r2,r6
 104e8b4:	dfc00517 	ldw	ra,20(sp)
 104e8b8:	dd000417 	ldw	r20,16(sp)
 104e8bc:	dcc00317 	ldw	r19,12(sp)
 104e8c0:	dc800217 	ldw	r18,8(sp)
 104e8c4:	dc400117 	ldw	r17,4(sp)
 104e8c8:	dc000017 	ldw	r16,0(sp)
 104e8cc:	dec00604 	addi	sp,sp,24
 104e8d0:	f800283a 	ret
 104e8d4:	8cc00f2e 	bgeu	r17,r19,104e914 <__b2d+0xe0>
 104e8d8:	117ffd44 	addi	r5,r2,-11
 104e8dc:	80bffe17 	ldw	r2,-8(r16)
 104e8e0:	28000e26 	beq	r5,zero,104e91c <__b2d+0xe8>
 104e8e4:	1949c83a 	sub	r4,r3,r5
 104e8e8:	9164983a 	sll	r18,r18,r5
 104e8ec:	1106d83a 	srl	r3,r2,r4
 104e8f0:	81bffe04 	addi	r6,r16,-8
 104e8f4:	948ffc34 	orhi	r18,r18,16368
 104e8f8:	90c6b03a 	or	r3,r18,r3
 104e8fc:	89800e2e 	bgeu	r17,r6,104e938 <__b2d+0x104>
 104e900:	81bffd17 	ldw	r6,-12(r16)
 104e904:	1144983a 	sll	r2,r2,r5
 104e908:	310ad83a 	srl	r5,r6,r4
 104e90c:	2884b03a 	or	r2,r5,r2
 104e910:	003fe806 	br	104e8b4 <__alt_data_end+0xfffce8b4>
 104e914:	10bffd44 	addi	r2,r2,-11
 104e918:	1000041e 	bne	r2,zero,104e92c <__b2d+0xf8>
 104e91c:	90cffc34 	orhi	r3,r18,16368
 104e920:	003fe406 	br	104e8b4 <__alt_data_end+0xfffce8b4>
 104e924:	000d883a 	mov	r6,zero
 104e928:	003fdf06 	br	104e8a8 <__alt_data_end+0xfffce8a8>
 104e92c:	90a4983a 	sll	r18,r18,r2
 104e930:	0005883a 	mov	r2,zero
 104e934:	003ff906 	br	104e91c <__alt_data_end+0xfffce91c>
 104e938:	1144983a 	sll	r2,r2,r5
 104e93c:	003fdd06 	br	104e8b4 <__alt_data_end+0xfffce8b4>

0104e940 <__d2b>:
 104e940:	defff804 	addi	sp,sp,-32
 104e944:	dc000215 	stw	r16,8(sp)
 104e948:	3021883a 	mov	r16,r6
 104e94c:	dc400315 	stw	r17,12(sp)
 104e950:	8022907a 	slli	r17,r16,1
 104e954:	dd000615 	stw	r20,24(sp)
 104e958:	2829883a 	mov	r20,r5
 104e95c:	01400044 	movi	r5,1
 104e960:	dcc00515 	stw	r19,20(sp)
 104e964:	dc800415 	stw	r18,16(sp)
 104e968:	dfc00715 	stw	ra,28(sp)
 104e96c:	3825883a 	mov	r18,r7
 104e970:	8822d57a 	srli	r17,r17,21
 104e974:	104dcac0 	call	104dcac <_Balloc>
 104e978:	1027883a 	mov	r19,r2
 104e97c:	00800434 	movhi	r2,16
 104e980:	10bfffc4 	addi	r2,r2,-1
 104e984:	808c703a 	and	r6,r16,r2
 104e988:	88000126 	beq	r17,zero,104e990 <__d2b+0x50>
 104e98c:	31800434 	orhi	r6,r6,16
 104e990:	d9800015 	stw	r6,0(sp)
 104e994:	a0002426 	beq	r20,zero,104ea28 <__d2b+0xe8>
 104e998:	d9000104 	addi	r4,sp,4
 104e99c:	dd000115 	stw	r20,4(sp)
 104e9a0:	104e0080 	call	104e008 <__lo0bits>
 104e9a4:	d8c00017 	ldw	r3,0(sp)
 104e9a8:	10002f1e 	bne	r2,zero,104ea68 <__d2b+0x128>
 104e9ac:	d9000117 	ldw	r4,4(sp)
 104e9b0:	99000515 	stw	r4,20(r19)
 104e9b4:	1821003a 	cmpeq	r16,r3,zero
 104e9b8:	01000084 	movi	r4,2
 104e9bc:	2421c83a 	sub	r16,r4,r16
 104e9c0:	98c00615 	stw	r3,24(r19)
 104e9c4:	9c000415 	stw	r16,16(r19)
 104e9c8:	88001f1e 	bne	r17,zero,104ea48 <__d2b+0x108>
 104e9cc:	10bef384 	addi	r2,r2,-1074
 104e9d0:	90800015 	stw	r2,0(r18)
 104e9d4:	00900034 	movhi	r2,16384
 104e9d8:	10bfffc4 	addi	r2,r2,-1
 104e9dc:	8085883a 	add	r2,r16,r2
 104e9e0:	1085883a 	add	r2,r2,r2
 104e9e4:	1085883a 	add	r2,r2,r2
 104e9e8:	9885883a 	add	r2,r19,r2
 104e9ec:	11000517 	ldw	r4,20(r2)
 104e9f0:	8020917a 	slli	r16,r16,5
 104e9f4:	104dfa00 	call	104dfa0 <__hi0bits>
 104e9f8:	d8c00817 	ldw	r3,32(sp)
 104e9fc:	8085c83a 	sub	r2,r16,r2
 104ea00:	18800015 	stw	r2,0(r3)
 104ea04:	9805883a 	mov	r2,r19
 104ea08:	dfc00717 	ldw	ra,28(sp)
 104ea0c:	dd000617 	ldw	r20,24(sp)
 104ea10:	dcc00517 	ldw	r19,20(sp)
 104ea14:	dc800417 	ldw	r18,16(sp)
 104ea18:	dc400317 	ldw	r17,12(sp)
 104ea1c:	dc000217 	ldw	r16,8(sp)
 104ea20:	dec00804 	addi	sp,sp,32
 104ea24:	f800283a 	ret
 104ea28:	d809883a 	mov	r4,sp
 104ea2c:	104e0080 	call	104e008 <__lo0bits>
 104ea30:	d8c00017 	ldw	r3,0(sp)
 104ea34:	04000044 	movi	r16,1
 104ea38:	9c000415 	stw	r16,16(r19)
 104ea3c:	98c00515 	stw	r3,20(r19)
 104ea40:	10800804 	addi	r2,r2,32
 104ea44:	883fe126 	beq	r17,zero,104e9cc <__alt_data_end+0xfffce9cc>
 104ea48:	00c00d44 	movi	r3,53
 104ea4c:	8c7ef344 	addi	r17,r17,-1075
 104ea50:	88a3883a 	add	r17,r17,r2
 104ea54:	1885c83a 	sub	r2,r3,r2
 104ea58:	d8c00817 	ldw	r3,32(sp)
 104ea5c:	94400015 	stw	r17,0(r18)
 104ea60:	18800015 	stw	r2,0(r3)
 104ea64:	003fe706 	br	104ea04 <__alt_data_end+0xfffcea04>
 104ea68:	01000804 	movi	r4,32
 104ea6c:	2089c83a 	sub	r4,r4,r2
 104ea70:	1908983a 	sll	r4,r3,r4
 104ea74:	d9400117 	ldw	r5,4(sp)
 104ea78:	1886d83a 	srl	r3,r3,r2
 104ea7c:	2148b03a 	or	r4,r4,r5
 104ea80:	99000515 	stw	r4,20(r19)
 104ea84:	d8c00015 	stw	r3,0(sp)
 104ea88:	003fca06 	br	104e9b4 <__alt_data_end+0xfffce9b4>

0104ea8c <__ratio>:
 104ea8c:	defff904 	addi	sp,sp,-28
 104ea90:	dc400315 	stw	r17,12(sp)
 104ea94:	2823883a 	mov	r17,r5
 104ea98:	d9400104 	addi	r5,sp,4
 104ea9c:	dfc00615 	stw	ra,24(sp)
 104eaa0:	dcc00515 	stw	r19,20(sp)
 104eaa4:	dc800415 	stw	r18,16(sp)
 104eaa8:	2027883a 	mov	r19,r4
 104eaac:	dc000215 	stw	r16,8(sp)
 104eab0:	104e8340 	call	104e834 <__b2d>
 104eab4:	d80b883a 	mov	r5,sp
 104eab8:	8809883a 	mov	r4,r17
 104eabc:	1025883a 	mov	r18,r2
 104eac0:	1821883a 	mov	r16,r3
 104eac4:	104e8340 	call	104e834 <__b2d>
 104eac8:	8a000417 	ldw	r8,16(r17)
 104eacc:	99000417 	ldw	r4,16(r19)
 104ead0:	d9400117 	ldw	r5,4(sp)
 104ead4:	2209c83a 	sub	r4,r4,r8
 104ead8:	2010917a 	slli	r8,r4,5
 104eadc:	d9000017 	ldw	r4,0(sp)
 104eae0:	2909c83a 	sub	r4,r5,r4
 104eae4:	4109883a 	add	r4,r8,r4
 104eae8:	01000e0e 	bge	zero,r4,104eb24 <__ratio+0x98>
 104eaec:	2008953a 	slli	r4,r4,20
 104eaf0:	2421883a 	add	r16,r4,r16
 104eaf4:	100d883a 	mov	r6,r2
 104eaf8:	180f883a 	mov	r7,r3
 104eafc:	9009883a 	mov	r4,r18
 104eb00:	800b883a 	mov	r5,r16
 104eb04:	10533240 	call	1053324 <__divdf3>
 104eb08:	dfc00617 	ldw	ra,24(sp)
 104eb0c:	dcc00517 	ldw	r19,20(sp)
 104eb10:	dc800417 	ldw	r18,16(sp)
 104eb14:	dc400317 	ldw	r17,12(sp)
 104eb18:	dc000217 	ldw	r16,8(sp)
 104eb1c:	dec00704 	addi	sp,sp,28
 104eb20:	f800283a 	ret
 104eb24:	2008953a 	slli	r4,r4,20
 104eb28:	1907c83a 	sub	r3,r3,r4
 104eb2c:	003ff106 	br	104eaf4 <__alt_data_end+0xfffceaf4>

0104eb30 <_mprec_log10>:
 104eb30:	defffe04 	addi	sp,sp,-8
 104eb34:	dc000015 	stw	r16,0(sp)
 104eb38:	dfc00115 	stw	ra,4(sp)
 104eb3c:	008005c4 	movi	r2,23
 104eb40:	2021883a 	mov	r16,r4
 104eb44:	11000d0e 	bge	r2,r4,104eb7c <_mprec_log10+0x4c>
 104eb48:	0005883a 	mov	r2,zero
 104eb4c:	00cffc34 	movhi	r3,16368
 104eb50:	843fffc4 	addi	r16,r16,-1
 104eb54:	000d883a 	mov	r6,zero
 104eb58:	01d00934 	movhi	r7,16420
 104eb5c:	1009883a 	mov	r4,r2
 104eb60:	180b883a 	mov	r5,r3
 104eb64:	10448800 	call	1044880 <__muldf3>
 104eb68:	803ff91e 	bne	r16,zero,104eb50 <__alt_data_end+0xfffceb50>
 104eb6c:	dfc00117 	ldw	ra,4(sp)
 104eb70:	dc000017 	ldw	r16,0(sp)
 104eb74:	dec00204 	addi	sp,sp,8
 104eb78:	f800283a 	ret
 104eb7c:	202090fa 	slli	r16,r4,3
 104eb80:	00804174 	movhi	r2,261
 104eb84:	109b0104 	addi	r2,r2,27652
 104eb88:	1421883a 	add	r16,r2,r16
 104eb8c:	80800017 	ldw	r2,0(r16)
 104eb90:	80c00117 	ldw	r3,4(r16)
 104eb94:	dfc00117 	ldw	ra,4(sp)
 104eb98:	dc000017 	ldw	r16,0(sp)
 104eb9c:	dec00204 	addi	sp,sp,8
 104eba0:	f800283a 	ret

0104eba4 <__copybits>:
 104eba4:	297fffc4 	addi	r5,r5,-1
 104eba8:	280fd17a 	srai	r7,r5,5
 104ebac:	30c00417 	ldw	r3,16(r6)
 104ebb0:	30800504 	addi	r2,r6,20
 104ebb4:	39c00044 	addi	r7,r7,1
 104ebb8:	18c7883a 	add	r3,r3,r3
 104ebbc:	39cf883a 	add	r7,r7,r7
 104ebc0:	18c7883a 	add	r3,r3,r3
 104ebc4:	39cf883a 	add	r7,r7,r7
 104ebc8:	10c7883a 	add	r3,r2,r3
 104ebcc:	21cf883a 	add	r7,r4,r7
 104ebd0:	10c00d2e 	bgeu	r2,r3,104ec08 <__copybits+0x64>
 104ebd4:	200b883a 	mov	r5,r4
 104ebd8:	12000017 	ldw	r8,0(r2)
 104ebdc:	29400104 	addi	r5,r5,4
 104ebe0:	10800104 	addi	r2,r2,4
 104ebe4:	2a3fff15 	stw	r8,-4(r5)
 104ebe8:	10fffb36 	bltu	r2,r3,104ebd8 <__alt_data_end+0xfffcebd8>
 104ebec:	1985c83a 	sub	r2,r3,r6
 104ebf0:	10bffac4 	addi	r2,r2,-21
 104ebf4:	1004d0ba 	srli	r2,r2,2
 104ebf8:	10800044 	addi	r2,r2,1
 104ebfc:	1085883a 	add	r2,r2,r2
 104ec00:	1085883a 	add	r2,r2,r2
 104ec04:	2089883a 	add	r4,r4,r2
 104ec08:	21c0032e 	bgeu	r4,r7,104ec18 <__copybits+0x74>
 104ec0c:	20000015 	stw	zero,0(r4)
 104ec10:	21000104 	addi	r4,r4,4
 104ec14:	21fffd36 	bltu	r4,r7,104ec0c <__alt_data_end+0xfffcec0c>
 104ec18:	f800283a 	ret

0104ec1c <__any_on>:
 104ec1c:	20c00417 	ldw	r3,16(r4)
 104ec20:	2805d17a 	srai	r2,r5,5
 104ec24:	21000504 	addi	r4,r4,20
 104ec28:	18800d0e 	bge	r3,r2,104ec60 <__any_on+0x44>
 104ec2c:	18c7883a 	add	r3,r3,r3
 104ec30:	18c7883a 	add	r3,r3,r3
 104ec34:	20c7883a 	add	r3,r4,r3
 104ec38:	20c0192e 	bgeu	r4,r3,104eca0 <__any_on+0x84>
 104ec3c:	18bfff17 	ldw	r2,-4(r3)
 104ec40:	18ffff04 	addi	r3,r3,-4
 104ec44:	1000041e 	bne	r2,zero,104ec58 <__any_on+0x3c>
 104ec48:	20c0142e 	bgeu	r4,r3,104ec9c <__any_on+0x80>
 104ec4c:	18ffff04 	addi	r3,r3,-4
 104ec50:	19400017 	ldw	r5,0(r3)
 104ec54:	283ffc26 	beq	r5,zero,104ec48 <__alt_data_end+0xfffcec48>
 104ec58:	00800044 	movi	r2,1
 104ec5c:	f800283a 	ret
 104ec60:	10c00a0e 	bge	r2,r3,104ec8c <__any_on+0x70>
 104ec64:	1085883a 	add	r2,r2,r2
 104ec68:	1085883a 	add	r2,r2,r2
 104ec6c:	294007cc 	andi	r5,r5,31
 104ec70:	2087883a 	add	r3,r4,r2
 104ec74:	283ff026 	beq	r5,zero,104ec38 <__alt_data_end+0xfffcec38>
 104ec78:	19800017 	ldw	r6,0(r3)
 104ec7c:	3144d83a 	srl	r2,r6,r5
 104ec80:	114a983a 	sll	r5,r2,r5
 104ec84:	317ff41e 	bne	r6,r5,104ec58 <__alt_data_end+0xfffcec58>
 104ec88:	003feb06 	br	104ec38 <__alt_data_end+0xfffcec38>
 104ec8c:	1085883a 	add	r2,r2,r2
 104ec90:	1085883a 	add	r2,r2,r2
 104ec94:	2087883a 	add	r3,r4,r2
 104ec98:	003fe706 	br	104ec38 <__alt_data_end+0xfffcec38>
 104ec9c:	f800283a 	ret
 104eca0:	0005883a 	mov	r2,zero
 104eca4:	f800283a 	ret

0104eca8 <_realloc_r>:
 104eca8:	defff604 	addi	sp,sp,-40
 104ecac:	dc800215 	stw	r18,8(sp)
 104ecb0:	dfc00915 	stw	ra,36(sp)
 104ecb4:	df000815 	stw	fp,32(sp)
 104ecb8:	ddc00715 	stw	r23,28(sp)
 104ecbc:	dd800615 	stw	r22,24(sp)
 104ecc0:	dd400515 	stw	r21,20(sp)
 104ecc4:	dd000415 	stw	r20,16(sp)
 104ecc8:	dcc00315 	stw	r19,12(sp)
 104eccc:	dc400115 	stw	r17,4(sp)
 104ecd0:	dc000015 	stw	r16,0(sp)
 104ecd4:	3025883a 	mov	r18,r6
 104ecd8:	2800b726 	beq	r5,zero,104efb8 <_realloc_r+0x310>
 104ecdc:	282b883a 	mov	r21,r5
 104ece0:	2029883a 	mov	r20,r4
 104ece4:	10543240 	call	1054324 <__malloc_lock>
 104ece8:	a8bfff17 	ldw	r2,-4(r21)
 104ecec:	043fff04 	movi	r16,-4
 104ecf0:	90c002c4 	addi	r3,r18,11
 104ecf4:	01000584 	movi	r4,22
 104ecf8:	acfffe04 	addi	r19,r21,-8
 104ecfc:	1420703a 	and	r16,r2,r16
 104ed00:	20c0332e 	bgeu	r4,r3,104edd0 <_realloc_r+0x128>
 104ed04:	047ffe04 	movi	r17,-8
 104ed08:	1c62703a 	and	r17,r3,r17
 104ed0c:	8807883a 	mov	r3,r17
 104ed10:	88005816 	blt	r17,zero,104ee74 <_realloc_r+0x1cc>
 104ed14:	8c805736 	bltu	r17,r18,104ee74 <_realloc_r+0x1cc>
 104ed18:	80c0300e 	bge	r16,r3,104eddc <_realloc_r+0x134>
 104ed1c:	07004174 	movhi	fp,261
 104ed20:	e71c7504 	addi	fp,fp,29140
 104ed24:	e1c00217 	ldw	r7,8(fp)
 104ed28:	9c09883a 	add	r4,r19,r16
 104ed2c:	22000117 	ldw	r8,4(r4)
 104ed30:	21c06326 	beq	r4,r7,104eec0 <_realloc_r+0x218>
 104ed34:	017fff84 	movi	r5,-2
 104ed38:	414a703a 	and	r5,r8,r5
 104ed3c:	214b883a 	add	r5,r4,r5
 104ed40:	29800117 	ldw	r6,4(r5)
 104ed44:	3180004c 	andi	r6,r6,1
 104ed48:	30003f26 	beq	r6,zero,104ee48 <_realloc_r+0x1a0>
 104ed4c:	1080004c 	andi	r2,r2,1
 104ed50:	10008326 	beq	r2,zero,104ef60 <_realloc_r+0x2b8>
 104ed54:	900b883a 	mov	r5,r18
 104ed58:	a009883a 	mov	r4,r20
 104ed5c:	104cff00 	call	104cff0 <_malloc_r>
 104ed60:	1025883a 	mov	r18,r2
 104ed64:	10011e26 	beq	r2,zero,104f1e0 <_realloc_r+0x538>
 104ed68:	a93fff17 	ldw	r4,-4(r21)
 104ed6c:	10fffe04 	addi	r3,r2,-8
 104ed70:	00bfff84 	movi	r2,-2
 104ed74:	2084703a 	and	r2,r4,r2
 104ed78:	9885883a 	add	r2,r19,r2
 104ed7c:	1880ee26 	beq	r3,r2,104f138 <_realloc_r+0x490>
 104ed80:	81bfff04 	addi	r6,r16,-4
 104ed84:	00800904 	movi	r2,36
 104ed88:	1180b836 	bltu	r2,r6,104f06c <_realloc_r+0x3c4>
 104ed8c:	00c004c4 	movi	r3,19
 104ed90:	19809636 	bltu	r3,r6,104efec <_realloc_r+0x344>
 104ed94:	9005883a 	mov	r2,r18
 104ed98:	a807883a 	mov	r3,r21
 104ed9c:	19000017 	ldw	r4,0(r3)
 104eda0:	11000015 	stw	r4,0(r2)
 104eda4:	19000117 	ldw	r4,4(r3)
 104eda8:	11000115 	stw	r4,4(r2)
 104edac:	18c00217 	ldw	r3,8(r3)
 104edb0:	10c00215 	stw	r3,8(r2)
 104edb4:	a80b883a 	mov	r5,r21
 104edb8:	a009883a 	mov	r4,r20
 104edbc:	104c4040 	call	104c404 <_free_r>
 104edc0:	a009883a 	mov	r4,r20
 104edc4:	10543480 	call	1054348 <__malloc_unlock>
 104edc8:	9005883a 	mov	r2,r18
 104edcc:	00001206 	br	104ee18 <_realloc_r+0x170>
 104edd0:	00c00404 	movi	r3,16
 104edd4:	1823883a 	mov	r17,r3
 104edd8:	003fce06 	br	104ed14 <__alt_data_end+0xfffced14>
 104eddc:	a825883a 	mov	r18,r21
 104ede0:	8445c83a 	sub	r2,r16,r17
 104ede4:	00c003c4 	movi	r3,15
 104ede8:	18802636 	bltu	r3,r2,104ee84 <_realloc_r+0x1dc>
 104edec:	99800117 	ldw	r6,4(r19)
 104edf0:	9c07883a 	add	r3,r19,r16
 104edf4:	3180004c 	andi	r6,r6,1
 104edf8:	3420b03a 	or	r16,r6,r16
 104edfc:	9c000115 	stw	r16,4(r19)
 104ee00:	18800117 	ldw	r2,4(r3)
 104ee04:	10800054 	ori	r2,r2,1
 104ee08:	18800115 	stw	r2,4(r3)
 104ee0c:	a009883a 	mov	r4,r20
 104ee10:	10543480 	call	1054348 <__malloc_unlock>
 104ee14:	9005883a 	mov	r2,r18
 104ee18:	dfc00917 	ldw	ra,36(sp)
 104ee1c:	df000817 	ldw	fp,32(sp)
 104ee20:	ddc00717 	ldw	r23,28(sp)
 104ee24:	dd800617 	ldw	r22,24(sp)
 104ee28:	dd400517 	ldw	r21,20(sp)
 104ee2c:	dd000417 	ldw	r20,16(sp)
 104ee30:	dcc00317 	ldw	r19,12(sp)
 104ee34:	dc800217 	ldw	r18,8(sp)
 104ee38:	dc400117 	ldw	r17,4(sp)
 104ee3c:	dc000017 	ldw	r16,0(sp)
 104ee40:	dec00a04 	addi	sp,sp,40
 104ee44:	f800283a 	ret
 104ee48:	017fff04 	movi	r5,-4
 104ee4c:	414a703a 	and	r5,r8,r5
 104ee50:	814d883a 	add	r6,r16,r5
 104ee54:	30c01f16 	blt	r6,r3,104eed4 <_realloc_r+0x22c>
 104ee58:	20800317 	ldw	r2,12(r4)
 104ee5c:	20c00217 	ldw	r3,8(r4)
 104ee60:	a825883a 	mov	r18,r21
 104ee64:	3021883a 	mov	r16,r6
 104ee68:	18800315 	stw	r2,12(r3)
 104ee6c:	10c00215 	stw	r3,8(r2)
 104ee70:	003fdb06 	br	104ede0 <__alt_data_end+0xfffcede0>
 104ee74:	00800304 	movi	r2,12
 104ee78:	a0800015 	stw	r2,0(r20)
 104ee7c:	0005883a 	mov	r2,zero
 104ee80:	003fe506 	br	104ee18 <__alt_data_end+0xfffcee18>
 104ee84:	98c00117 	ldw	r3,4(r19)
 104ee88:	9c4b883a 	add	r5,r19,r17
 104ee8c:	11000054 	ori	r4,r2,1
 104ee90:	18c0004c 	andi	r3,r3,1
 104ee94:	1c62b03a 	or	r17,r3,r17
 104ee98:	9c400115 	stw	r17,4(r19)
 104ee9c:	29000115 	stw	r4,4(r5)
 104eea0:	2885883a 	add	r2,r5,r2
 104eea4:	10c00117 	ldw	r3,4(r2)
 104eea8:	29400204 	addi	r5,r5,8
 104eeac:	a009883a 	mov	r4,r20
 104eeb0:	18c00054 	ori	r3,r3,1
 104eeb4:	10c00115 	stw	r3,4(r2)
 104eeb8:	104c4040 	call	104c404 <_free_r>
 104eebc:	003fd306 	br	104ee0c <__alt_data_end+0xfffcee0c>
 104eec0:	017fff04 	movi	r5,-4
 104eec4:	414a703a 	and	r5,r8,r5
 104eec8:	89800404 	addi	r6,r17,16
 104eecc:	8151883a 	add	r8,r16,r5
 104eed0:	4180590e 	bge	r8,r6,104f038 <_realloc_r+0x390>
 104eed4:	1080004c 	andi	r2,r2,1
 104eed8:	103f9e1e 	bne	r2,zero,104ed54 <__alt_data_end+0xfffced54>
 104eedc:	adbffe17 	ldw	r22,-8(r21)
 104eee0:	00bfff04 	movi	r2,-4
 104eee4:	9dadc83a 	sub	r22,r19,r22
 104eee8:	b1800117 	ldw	r6,4(r22)
 104eeec:	3084703a 	and	r2,r6,r2
 104eef0:	20002026 	beq	r4,zero,104ef74 <_realloc_r+0x2cc>
 104eef4:	80af883a 	add	r23,r16,r2
 104eef8:	b96f883a 	add	r23,r23,r5
 104eefc:	21c05f26 	beq	r4,r7,104f07c <_realloc_r+0x3d4>
 104ef00:	b8c01c16 	blt	r23,r3,104ef74 <_realloc_r+0x2cc>
 104ef04:	20800317 	ldw	r2,12(r4)
 104ef08:	20c00217 	ldw	r3,8(r4)
 104ef0c:	81bfff04 	addi	r6,r16,-4
 104ef10:	01000904 	movi	r4,36
 104ef14:	18800315 	stw	r2,12(r3)
 104ef18:	10c00215 	stw	r3,8(r2)
 104ef1c:	b0c00217 	ldw	r3,8(r22)
 104ef20:	b0800317 	ldw	r2,12(r22)
 104ef24:	b4800204 	addi	r18,r22,8
 104ef28:	18800315 	stw	r2,12(r3)
 104ef2c:	10c00215 	stw	r3,8(r2)
 104ef30:	21801b36 	bltu	r4,r6,104efa0 <_realloc_r+0x2f8>
 104ef34:	008004c4 	movi	r2,19
 104ef38:	1180352e 	bgeu	r2,r6,104f010 <_realloc_r+0x368>
 104ef3c:	a8800017 	ldw	r2,0(r21)
 104ef40:	b0800215 	stw	r2,8(r22)
 104ef44:	a8800117 	ldw	r2,4(r21)
 104ef48:	b0800315 	stw	r2,12(r22)
 104ef4c:	008006c4 	movi	r2,27
 104ef50:	11807f36 	bltu	r2,r6,104f150 <_realloc_r+0x4a8>
 104ef54:	b0800404 	addi	r2,r22,16
 104ef58:	ad400204 	addi	r21,r21,8
 104ef5c:	00002d06 	br	104f014 <_realloc_r+0x36c>
 104ef60:	adbffe17 	ldw	r22,-8(r21)
 104ef64:	00bfff04 	movi	r2,-4
 104ef68:	9dadc83a 	sub	r22,r19,r22
 104ef6c:	b1000117 	ldw	r4,4(r22)
 104ef70:	2084703a 	and	r2,r4,r2
 104ef74:	b03f7726 	beq	r22,zero,104ed54 <__alt_data_end+0xfffced54>
 104ef78:	80af883a 	add	r23,r16,r2
 104ef7c:	b8ff7516 	blt	r23,r3,104ed54 <__alt_data_end+0xfffced54>
 104ef80:	b0800317 	ldw	r2,12(r22)
 104ef84:	b0c00217 	ldw	r3,8(r22)
 104ef88:	81bfff04 	addi	r6,r16,-4
 104ef8c:	01000904 	movi	r4,36
 104ef90:	18800315 	stw	r2,12(r3)
 104ef94:	10c00215 	stw	r3,8(r2)
 104ef98:	b4800204 	addi	r18,r22,8
 104ef9c:	21bfe52e 	bgeu	r4,r6,104ef34 <__alt_data_end+0xfffcef34>
 104efa0:	a80b883a 	mov	r5,r21
 104efa4:	9009883a 	mov	r4,r18
 104efa8:	104da280 	call	104da28 <memmove>
 104efac:	b821883a 	mov	r16,r23
 104efb0:	b027883a 	mov	r19,r22
 104efb4:	003f8a06 	br	104ede0 <__alt_data_end+0xfffcede0>
 104efb8:	300b883a 	mov	r5,r6
 104efbc:	dfc00917 	ldw	ra,36(sp)
 104efc0:	df000817 	ldw	fp,32(sp)
 104efc4:	ddc00717 	ldw	r23,28(sp)
 104efc8:	dd800617 	ldw	r22,24(sp)
 104efcc:	dd400517 	ldw	r21,20(sp)
 104efd0:	dd000417 	ldw	r20,16(sp)
 104efd4:	dcc00317 	ldw	r19,12(sp)
 104efd8:	dc800217 	ldw	r18,8(sp)
 104efdc:	dc400117 	ldw	r17,4(sp)
 104efe0:	dc000017 	ldw	r16,0(sp)
 104efe4:	dec00a04 	addi	sp,sp,40
 104efe8:	104cff01 	jmpi	104cff0 <_malloc_r>
 104efec:	a8c00017 	ldw	r3,0(r21)
 104eff0:	90c00015 	stw	r3,0(r18)
 104eff4:	a8c00117 	ldw	r3,4(r21)
 104eff8:	90c00115 	stw	r3,4(r18)
 104effc:	00c006c4 	movi	r3,27
 104f000:	19804536 	bltu	r3,r6,104f118 <_realloc_r+0x470>
 104f004:	90800204 	addi	r2,r18,8
 104f008:	a8c00204 	addi	r3,r21,8
 104f00c:	003f6306 	br	104ed9c <__alt_data_end+0xfffced9c>
 104f010:	9005883a 	mov	r2,r18
 104f014:	a8c00017 	ldw	r3,0(r21)
 104f018:	b821883a 	mov	r16,r23
 104f01c:	b027883a 	mov	r19,r22
 104f020:	10c00015 	stw	r3,0(r2)
 104f024:	a8c00117 	ldw	r3,4(r21)
 104f028:	10c00115 	stw	r3,4(r2)
 104f02c:	a8c00217 	ldw	r3,8(r21)
 104f030:	10c00215 	stw	r3,8(r2)
 104f034:	003f6a06 	br	104ede0 <__alt_data_end+0xfffcede0>
 104f038:	9c67883a 	add	r19,r19,r17
 104f03c:	4445c83a 	sub	r2,r8,r17
 104f040:	e4c00215 	stw	r19,8(fp)
 104f044:	10800054 	ori	r2,r2,1
 104f048:	98800115 	stw	r2,4(r19)
 104f04c:	a8bfff17 	ldw	r2,-4(r21)
 104f050:	a009883a 	mov	r4,r20
 104f054:	1080004c 	andi	r2,r2,1
 104f058:	1462b03a 	or	r17,r2,r17
 104f05c:	ac7fff15 	stw	r17,-4(r21)
 104f060:	10543480 	call	1054348 <__malloc_unlock>
 104f064:	a805883a 	mov	r2,r21
 104f068:	003f6b06 	br	104ee18 <__alt_data_end+0xfffcee18>
 104f06c:	a80b883a 	mov	r5,r21
 104f070:	9009883a 	mov	r4,r18
 104f074:	104da280 	call	104da28 <memmove>
 104f078:	003f4e06 	br	104edb4 <__alt_data_end+0xfffcedb4>
 104f07c:	89000404 	addi	r4,r17,16
 104f080:	b93fbc16 	blt	r23,r4,104ef74 <__alt_data_end+0xfffcef74>
 104f084:	b0800317 	ldw	r2,12(r22)
 104f088:	b0c00217 	ldw	r3,8(r22)
 104f08c:	81bfff04 	addi	r6,r16,-4
 104f090:	01000904 	movi	r4,36
 104f094:	18800315 	stw	r2,12(r3)
 104f098:	10c00215 	stw	r3,8(r2)
 104f09c:	b4800204 	addi	r18,r22,8
 104f0a0:	21804336 	bltu	r4,r6,104f1b0 <_realloc_r+0x508>
 104f0a4:	008004c4 	movi	r2,19
 104f0a8:	11803f2e 	bgeu	r2,r6,104f1a8 <_realloc_r+0x500>
 104f0ac:	a8800017 	ldw	r2,0(r21)
 104f0b0:	b0800215 	stw	r2,8(r22)
 104f0b4:	a8800117 	ldw	r2,4(r21)
 104f0b8:	b0800315 	stw	r2,12(r22)
 104f0bc:	008006c4 	movi	r2,27
 104f0c0:	11803f36 	bltu	r2,r6,104f1c0 <_realloc_r+0x518>
 104f0c4:	b0800404 	addi	r2,r22,16
 104f0c8:	ad400204 	addi	r21,r21,8
 104f0cc:	a8c00017 	ldw	r3,0(r21)
 104f0d0:	10c00015 	stw	r3,0(r2)
 104f0d4:	a8c00117 	ldw	r3,4(r21)
 104f0d8:	10c00115 	stw	r3,4(r2)
 104f0dc:	a8c00217 	ldw	r3,8(r21)
 104f0e0:	10c00215 	stw	r3,8(r2)
 104f0e4:	b447883a 	add	r3,r22,r17
 104f0e8:	bc45c83a 	sub	r2,r23,r17
 104f0ec:	e0c00215 	stw	r3,8(fp)
 104f0f0:	10800054 	ori	r2,r2,1
 104f0f4:	18800115 	stw	r2,4(r3)
 104f0f8:	b0800117 	ldw	r2,4(r22)
 104f0fc:	a009883a 	mov	r4,r20
 104f100:	1080004c 	andi	r2,r2,1
 104f104:	1462b03a 	or	r17,r2,r17
 104f108:	b4400115 	stw	r17,4(r22)
 104f10c:	10543480 	call	1054348 <__malloc_unlock>
 104f110:	9005883a 	mov	r2,r18
 104f114:	003f4006 	br	104ee18 <__alt_data_end+0xfffcee18>
 104f118:	a8c00217 	ldw	r3,8(r21)
 104f11c:	90c00215 	stw	r3,8(r18)
 104f120:	a8c00317 	ldw	r3,12(r21)
 104f124:	90c00315 	stw	r3,12(r18)
 104f128:	30801126 	beq	r6,r2,104f170 <_realloc_r+0x4c8>
 104f12c:	90800404 	addi	r2,r18,16
 104f130:	a8c00404 	addi	r3,r21,16
 104f134:	003f1906 	br	104ed9c <__alt_data_end+0xfffced9c>
 104f138:	90ffff17 	ldw	r3,-4(r18)
 104f13c:	00bfff04 	movi	r2,-4
 104f140:	a825883a 	mov	r18,r21
 104f144:	1884703a 	and	r2,r3,r2
 104f148:	80a1883a 	add	r16,r16,r2
 104f14c:	003f2406 	br	104ede0 <__alt_data_end+0xfffcede0>
 104f150:	a8800217 	ldw	r2,8(r21)
 104f154:	b0800415 	stw	r2,16(r22)
 104f158:	a8800317 	ldw	r2,12(r21)
 104f15c:	b0800515 	stw	r2,20(r22)
 104f160:	31000a26 	beq	r6,r4,104f18c <_realloc_r+0x4e4>
 104f164:	b0800604 	addi	r2,r22,24
 104f168:	ad400404 	addi	r21,r21,16
 104f16c:	003fa906 	br	104f014 <__alt_data_end+0xfffcf014>
 104f170:	a9000417 	ldw	r4,16(r21)
 104f174:	90800604 	addi	r2,r18,24
 104f178:	a8c00604 	addi	r3,r21,24
 104f17c:	91000415 	stw	r4,16(r18)
 104f180:	a9000517 	ldw	r4,20(r21)
 104f184:	91000515 	stw	r4,20(r18)
 104f188:	003f0406 	br	104ed9c <__alt_data_end+0xfffced9c>
 104f18c:	a8c00417 	ldw	r3,16(r21)
 104f190:	ad400604 	addi	r21,r21,24
 104f194:	b0800804 	addi	r2,r22,32
 104f198:	b0c00615 	stw	r3,24(r22)
 104f19c:	a8ffff17 	ldw	r3,-4(r21)
 104f1a0:	b0c00715 	stw	r3,28(r22)
 104f1a4:	003f9b06 	br	104f014 <__alt_data_end+0xfffcf014>
 104f1a8:	9005883a 	mov	r2,r18
 104f1ac:	003fc706 	br	104f0cc <__alt_data_end+0xfffcf0cc>
 104f1b0:	a80b883a 	mov	r5,r21
 104f1b4:	9009883a 	mov	r4,r18
 104f1b8:	104da280 	call	104da28 <memmove>
 104f1bc:	003fc906 	br	104f0e4 <__alt_data_end+0xfffcf0e4>
 104f1c0:	a8800217 	ldw	r2,8(r21)
 104f1c4:	b0800415 	stw	r2,16(r22)
 104f1c8:	a8800317 	ldw	r2,12(r21)
 104f1cc:	b0800515 	stw	r2,20(r22)
 104f1d0:	31000726 	beq	r6,r4,104f1f0 <_realloc_r+0x548>
 104f1d4:	b0800604 	addi	r2,r22,24
 104f1d8:	ad400404 	addi	r21,r21,16
 104f1dc:	003fbb06 	br	104f0cc <__alt_data_end+0xfffcf0cc>
 104f1e0:	a009883a 	mov	r4,r20
 104f1e4:	10543480 	call	1054348 <__malloc_unlock>
 104f1e8:	0005883a 	mov	r2,zero
 104f1ec:	003f0a06 	br	104ee18 <__alt_data_end+0xfffcee18>
 104f1f0:	a8c00417 	ldw	r3,16(r21)
 104f1f4:	ad400604 	addi	r21,r21,24
 104f1f8:	b0800804 	addi	r2,r22,32
 104f1fc:	b0c00615 	stw	r3,24(r22)
 104f200:	a8ffff17 	ldw	r3,-4(r21)
 104f204:	b0c00715 	stw	r3,28(r22)
 104f208:	003fb006 	br	104f0cc <__alt_data_end+0xfffcf0cc>

0104f20c <__fpclassifyd>:
 104f20c:	00a00034 	movhi	r2,32768
 104f210:	10bfffc4 	addi	r2,r2,-1
 104f214:	2884703a 	and	r2,r5,r2
 104f218:	10000726 	beq	r2,zero,104f238 <__fpclassifyd+0x2c>
 104f21c:	00fffc34 	movhi	r3,65520
 104f220:	019ff834 	movhi	r6,32736
 104f224:	28c7883a 	add	r3,r5,r3
 104f228:	31bfffc4 	addi	r6,r6,-1
 104f22c:	30c00536 	bltu	r6,r3,104f244 <__fpclassifyd+0x38>
 104f230:	00800104 	movi	r2,4
 104f234:	f800283a 	ret
 104f238:	2000021e 	bne	r4,zero,104f244 <__fpclassifyd+0x38>
 104f23c:	00800084 	movi	r2,2
 104f240:	f800283a 	ret
 104f244:	00dffc34 	movhi	r3,32752
 104f248:	019ff834 	movhi	r6,32736
 104f24c:	28cb883a 	add	r5,r5,r3
 104f250:	31bfffc4 	addi	r6,r6,-1
 104f254:	317ff62e 	bgeu	r6,r5,104f230 <__alt_data_end+0xfffcf230>
 104f258:	01400434 	movhi	r5,16
 104f25c:	297fffc4 	addi	r5,r5,-1
 104f260:	28800236 	bltu	r5,r2,104f26c <__fpclassifyd+0x60>
 104f264:	008000c4 	movi	r2,3
 104f268:	f800283a 	ret
 104f26c:	10c00226 	beq	r2,r3,104f278 <__fpclassifyd+0x6c>
 104f270:	0005883a 	mov	r2,zero
 104f274:	f800283a 	ret
 104f278:	2005003a 	cmpeq	r2,r4,zero
 104f27c:	f800283a 	ret

0104f280 <_sbrk_r>:
 104f280:	defffd04 	addi	sp,sp,-12
 104f284:	dc000015 	stw	r16,0(sp)
 104f288:	040041b4 	movhi	r16,262
 104f28c:	dc400115 	stw	r17,4(sp)
 104f290:	8428ca04 	addi	r16,r16,-23768
 104f294:	2023883a 	mov	r17,r4
 104f298:	2809883a 	mov	r4,r5
 104f29c:	dfc00215 	stw	ra,8(sp)
 104f2a0:	80000015 	stw	zero,0(r16)
 104f2a4:	10545080 	call	1054508 <sbrk>
 104f2a8:	00ffffc4 	movi	r3,-1
 104f2ac:	10c00526 	beq	r2,r3,104f2c4 <_sbrk_r+0x44>
 104f2b0:	dfc00217 	ldw	ra,8(sp)
 104f2b4:	dc400117 	ldw	r17,4(sp)
 104f2b8:	dc000017 	ldw	r16,0(sp)
 104f2bc:	dec00304 	addi	sp,sp,12
 104f2c0:	f800283a 	ret
 104f2c4:	80c00017 	ldw	r3,0(r16)
 104f2c8:	183ff926 	beq	r3,zero,104f2b0 <__alt_data_end+0xfffcf2b0>
 104f2cc:	88c00015 	stw	r3,0(r17)
 104f2d0:	003ff706 	br	104f2b0 <__alt_data_end+0xfffcf2b0>

0104f2d4 <__sread>:
 104f2d4:	defffe04 	addi	sp,sp,-8
 104f2d8:	dc000015 	stw	r16,0(sp)
 104f2dc:	2821883a 	mov	r16,r5
 104f2e0:	2940038f 	ldh	r5,14(r5)
 104f2e4:	dfc00115 	stw	ra,4(sp)
 104f2e8:	10524d40 	call	10524d4 <_read_r>
 104f2ec:	10000716 	blt	r2,zero,104f30c <__sread+0x38>
 104f2f0:	80c01417 	ldw	r3,80(r16)
 104f2f4:	1887883a 	add	r3,r3,r2
 104f2f8:	80c01415 	stw	r3,80(r16)
 104f2fc:	dfc00117 	ldw	ra,4(sp)
 104f300:	dc000017 	ldw	r16,0(sp)
 104f304:	dec00204 	addi	sp,sp,8
 104f308:	f800283a 	ret
 104f30c:	80c0030b 	ldhu	r3,12(r16)
 104f310:	18fbffcc 	andi	r3,r3,61439
 104f314:	80c0030d 	sth	r3,12(r16)
 104f318:	dfc00117 	ldw	ra,4(sp)
 104f31c:	dc000017 	ldw	r16,0(sp)
 104f320:	dec00204 	addi	sp,sp,8
 104f324:	f800283a 	ret

0104f328 <__seofread>:
 104f328:	0005883a 	mov	r2,zero
 104f32c:	f800283a 	ret

0104f330 <__swrite>:
 104f330:	2880030b 	ldhu	r2,12(r5)
 104f334:	defffb04 	addi	sp,sp,-20
 104f338:	dcc00315 	stw	r19,12(sp)
 104f33c:	dc800215 	stw	r18,8(sp)
 104f340:	dc400115 	stw	r17,4(sp)
 104f344:	dc000015 	stw	r16,0(sp)
 104f348:	dfc00415 	stw	ra,16(sp)
 104f34c:	10c0400c 	andi	r3,r2,256
 104f350:	2821883a 	mov	r16,r5
 104f354:	2023883a 	mov	r17,r4
 104f358:	3025883a 	mov	r18,r6
 104f35c:	3827883a 	mov	r19,r7
 104f360:	18000526 	beq	r3,zero,104f378 <__swrite+0x48>
 104f364:	2940038f 	ldh	r5,14(r5)
 104f368:	01c00084 	movi	r7,2
 104f36c:	000d883a 	mov	r6,zero
 104f370:	10524740 	call	1052474 <_lseek_r>
 104f374:	8080030b 	ldhu	r2,12(r16)
 104f378:	8140038f 	ldh	r5,14(r16)
 104f37c:	10bbffcc 	andi	r2,r2,61439
 104f380:	980f883a 	mov	r7,r19
 104f384:	900d883a 	mov	r6,r18
 104f388:	8809883a 	mov	r4,r17
 104f38c:	8080030d 	sth	r2,12(r16)
 104f390:	dfc00417 	ldw	ra,16(sp)
 104f394:	dcc00317 	ldw	r19,12(sp)
 104f398:	dc800217 	ldw	r18,8(sp)
 104f39c:	dc400117 	ldw	r17,4(sp)
 104f3a0:	dc000017 	ldw	r16,0(sp)
 104f3a4:	dec00504 	addi	sp,sp,20
 104f3a8:	1051f401 	jmpi	1051f40 <_write_r>

0104f3ac <__sseek>:
 104f3ac:	defffe04 	addi	sp,sp,-8
 104f3b0:	dc000015 	stw	r16,0(sp)
 104f3b4:	2821883a 	mov	r16,r5
 104f3b8:	2940038f 	ldh	r5,14(r5)
 104f3bc:	dfc00115 	stw	ra,4(sp)
 104f3c0:	10524740 	call	1052474 <_lseek_r>
 104f3c4:	00ffffc4 	movi	r3,-1
 104f3c8:	10c00826 	beq	r2,r3,104f3ec <__sseek+0x40>
 104f3cc:	80c0030b 	ldhu	r3,12(r16)
 104f3d0:	80801415 	stw	r2,80(r16)
 104f3d4:	18c40014 	ori	r3,r3,4096
 104f3d8:	80c0030d 	sth	r3,12(r16)
 104f3dc:	dfc00117 	ldw	ra,4(sp)
 104f3e0:	dc000017 	ldw	r16,0(sp)
 104f3e4:	dec00204 	addi	sp,sp,8
 104f3e8:	f800283a 	ret
 104f3ec:	80c0030b 	ldhu	r3,12(r16)
 104f3f0:	18fbffcc 	andi	r3,r3,61439
 104f3f4:	80c0030d 	sth	r3,12(r16)
 104f3f8:	dfc00117 	ldw	ra,4(sp)
 104f3fc:	dc000017 	ldw	r16,0(sp)
 104f400:	dec00204 	addi	sp,sp,8
 104f404:	f800283a 	ret

0104f408 <__sclose>:
 104f408:	2940038f 	ldh	r5,14(r5)
 104f40c:	1051fa01 	jmpi	1051fa0 <_close_r>

0104f410 <strcmp>:
 104f410:	2144b03a 	or	r2,r4,r5
 104f414:	108000cc 	andi	r2,r2,3
 104f418:	1000171e 	bne	r2,zero,104f478 <strcmp+0x68>
 104f41c:	20800017 	ldw	r2,0(r4)
 104f420:	28c00017 	ldw	r3,0(r5)
 104f424:	10c0141e 	bne	r2,r3,104f478 <strcmp+0x68>
 104f428:	027fbff4 	movhi	r9,65279
 104f42c:	4a7fbfc4 	addi	r9,r9,-257
 104f430:	0086303a 	nor	r3,zero,r2
 104f434:	02202074 	movhi	r8,32897
 104f438:	1245883a 	add	r2,r2,r9
 104f43c:	42202004 	addi	r8,r8,-32640
 104f440:	10c4703a 	and	r2,r2,r3
 104f444:	1204703a 	and	r2,r2,r8
 104f448:	10000226 	beq	r2,zero,104f454 <strcmp+0x44>
 104f44c:	00002306 	br	104f4dc <strcmp+0xcc>
 104f450:	1000221e 	bne	r2,zero,104f4dc <strcmp+0xcc>
 104f454:	21000104 	addi	r4,r4,4
 104f458:	20c00017 	ldw	r3,0(r4)
 104f45c:	29400104 	addi	r5,r5,4
 104f460:	29800017 	ldw	r6,0(r5)
 104f464:	1a4f883a 	add	r7,r3,r9
 104f468:	00c4303a 	nor	r2,zero,r3
 104f46c:	3884703a 	and	r2,r7,r2
 104f470:	1204703a 	and	r2,r2,r8
 104f474:	19bff626 	beq	r3,r6,104f450 <__alt_data_end+0xfffcf450>
 104f478:	20800003 	ldbu	r2,0(r4)
 104f47c:	10c03fcc 	andi	r3,r2,255
 104f480:	18c0201c 	xori	r3,r3,128
 104f484:	18ffe004 	addi	r3,r3,-128
 104f488:	18000c26 	beq	r3,zero,104f4bc <strcmp+0xac>
 104f48c:	29800007 	ldb	r6,0(r5)
 104f490:	19800326 	beq	r3,r6,104f4a0 <strcmp+0x90>
 104f494:	00001306 	br	104f4e4 <strcmp+0xd4>
 104f498:	29800007 	ldb	r6,0(r5)
 104f49c:	11800b1e 	bne	r2,r6,104f4cc <strcmp+0xbc>
 104f4a0:	21000044 	addi	r4,r4,1
 104f4a4:	20c00003 	ldbu	r3,0(r4)
 104f4a8:	29400044 	addi	r5,r5,1
 104f4ac:	18803fcc 	andi	r2,r3,255
 104f4b0:	1080201c 	xori	r2,r2,128
 104f4b4:	10bfe004 	addi	r2,r2,-128
 104f4b8:	103ff71e 	bne	r2,zero,104f498 <__alt_data_end+0xfffcf498>
 104f4bc:	0007883a 	mov	r3,zero
 104f4c0:	28800003 	ldbu	r2,0(r5)
 104f4c4:	1885c83a 	sub	r2,r3,r2
 104f4c8:	f800283a 	ret
 104f4cc:	28800003 	ldbu	r2,0(r5)
 104f4d0:	18c03fcc 	andi	r3,r3,255
 104f4d4:	1885c83a 	sub	r2,r3,r2
 104f4d8:	f800283a 	ret
 104f4dc:	0005883a 	mov	r2,zero
 104f4e0:	f800283a 	ret
 104f4e4:	10c03fcc 	andi	r3,r2,255
 104f4e8:	003ff506 	br	104f4c0 <__alt_data_end+0xfffcf4c0>

0104f4ec <__ssprint_r>:
 104f4ec:	30800217 	ldw	r2,8(r6)
 104f4f0:	defff604 	addi	sp,sp,-40
 104f4f4:	dc800215 	stw	r18,8(sp)
 104f4f8:	dfc00915 	stw	ra,36(sp)
 104f4fc:	df000815 	stw	fp,32(sp)
 104f500:	ddc00715 	stw	r23,28(sp)
 104f504:	dd800615 	stw	r22,24(sp)
 104f508:	dd400515 	stw	r21,20(sp)
 104f50c:	dd000415 	stw	r20,16(sp)
 104f510:	dcc00315 	stw	r19,12(sp)
 104f514:	dc400115 	stw	r17,4(sp)
 104f518:	dc000015 	stw	r16,0(sp)
 104f51c:	3025883a 	mov	r18,r6
 104f520:	10005826 	beq	r2,zero,104f684 <__ssprint_r+0x198>
 104f524:	2027883a 	mov	r19,r4
 104f528:	35c00017 	ldw	r23,0(r6)
 104f52c:	29000017 	ldw	r4,0(r5)
 104f530:	28800217 	ldw	r2,8(r5)
 104f534:	2823883a 	mov	r17,r5
 104f538:	0039883a 	mov	fp,zero
 104f53c:	0021883a 	mov	r16,zero
 104f540:	80003926 	beq	r16,zero,104f628 <__ssprint_r+0x13c>
 104f544:	102b883a 	mov	r21,r2
 104f548:	102d883a 	mov	r22,r2
 104f54c:	80803a36 	bltu	r16,r2,104f638 <__ssprint_r+0x14c>
 104f550:	88c0030b 	ldhu	r3,12(r17)
 104f554:	1881200c 	andi	r2,r3,1152
 104f558:	10002626 	beq	r2,zero,104f5f4 <__ssprint_r+0x108>
 104f55c:	88800517 	ldw	r2,20(r17)
 104f560:	89400417 	ldw	r5,16(r17)
 104f564:	81800044 	addi	r6,r16,1
 104f568:	108f883a 	add	r7,r2,r2
 104f56c:	3885883a 	add	r2,r7,r2
 104f570:	100ed7fa 	srli	r7,r2,31
 104f574:	216dc83a 	sub	r22,r4,r5
 104f578:	3589883a 	add	r4,r6,r22
 104f57c:	3885883a 	add	r2,r7,r2
 104f580:	102bd07a 	srai	r21,r2,1
 104f584:	a80d883a 	mov	r6,r21
 104f588:	a900022e 	bgeu	r21,r4,104f594 <__ssprint_r+0xa8>
 104f58c:	202b883a 	mov	r21,r4
 104f590:	200d883a 	mov	r6,r4
 104f594:	18c1000c 	andi	r3,r3,1024
 104f598:	18002a26 	beq	r3,zero,104f644 <__ssprint_r+0x158>
 104f59c:	300b883a 	mov	r5,r6
 104f5a0:	9809883a 	mov	r4,r19
 104f5a4:	104cff00 	call	104cff0 <_malloc_r>
 104f5a8:	1029883a 	mov	r20,r2
 104f5ac:	10002c26 	beq	r2,zero,104f660 <__ssprint_r+0x174>
 104f5b0:	89400417 	ldw	r5,16(r17)
 104f5b4:	b00d883a 	mov	r6,r22
 104f5b8:	1009883a 	mov	r4,r2
 104f5bc:	104d8e00 	call	104d8e0 <memcpy>
 104f5c0:	8880030b 	ldhu	r2,12(r17)
 104f5c4:	00fedfc4 	movi	r3,-1153
 104f5c8:	10c4703a 	and	r2,r2,r3
 104f5cc:	10802014 	ori	r2,r2,128
 104f5d0:	8880030d 	sth	r2,12(r17)
 104f5d4:	a589883a 	add	r4,r20,r22
 104f5d8:	adadc83a 	sub	r22,r21,r22
 104f5dc:	8d400515 	stw	r21,20(r17)
 104f5e0:	8d800215 	stw	r22,8(r17)
 104f5e4:	8d000415 	stw	r20,16(r17)
 104f5e8:	89000015 	stw	r4,0(r17)
 104f5ec:	802b883a 	mov	r21,r16
 104f5f0:	802d883a 	mov	r22,r16
 104f5f4:	b00d883a 	mov	r6,r22
 104f5f8:	e00b883a 	mov	r5,fp
 104f5fc:	104da280 	call	104da28 <memmove>
 104f600:	88800217 	ldw	r2,8(r17)
 104f604:	89000017 	ldw	r4,0(r17)
 104f608:	90c00217 	ldw	r3,8(r18)
 104f60c:	1545c83a 	sub	r2,r2,r21
 104f610:	2589883a 	add	r4,r4,r22
 104f614:	88800215 	stw	r2,8(r17)
 104f618:	89000015 	stw	r4,0(r17)
 104f61c:	1c21c83a 	sub	r16,r3,r16
 104f620:	94000215 	stw	r16,8(r18)
 104f624:	80001726 	beq	r16,zero,104f684 <__ssprint_r+0x198>
 104f628:	bf000017 	ldw	fp,0(r23)
 104f62c:	bc000117 	ldw	r16,4(r23)
 104f630:	bdc00204 	addi	r23,r23,8
 104f634:	003fc206 	br	104f540 <__alt_data_end+0xfffcf540>
 104f638:	802b883a 	mov	r21,r16
 104f63c:	802d883a 	mov	r22,r16
 104f640:	003fec06 	br	104f5f4 <__alt_data_end+0xfffcf5f4>
 104f644:	9809883a 	mov	r4,r19
 104f648:	104eca80 	call	104eca8 <_realloc_r>
 104f64c:	1029883a 	mov	r20,r2
 104f650:	103fe01e 	bne	r2,zero,104f5d4 <__alt_data_end+0xfffcf5d4>
 104f654:	89400417 	ldw	r5,16(r17)
 104f658:	9809883a 	mov	r4,r19
 104f65c:	104c4040 	call	104c404 <_free_r>
 104f660:	88c0030b 	ldhu	r3,12(r17)
 104f664:	00800304 	movi	r2,12
 104f668:	98800015 	stw	r2,0(r19)
 104f66c:	18c01014 	ori	r3,r3,64
 104f670:	88c0030d 	sth	r3,12(r17)
 104f674:	00bfffc4 	movi	r2,-1
 104f678:	90000215 	stw	zero,8(r18)
 104f67c:	90000115 	stw	zero,4(r18)
 104f680:	00000206 	br	104f68c <__ssprint_r+0x1a0>
 104f684:	90000115 	stw	zero,4(r18)
 104f688:	0005883a 	mov	r2,zero
 104f68c:	dfc00917 	ldw	ra,36(sp)
 104f690:	df000817 	ldw	fp,32(sp)
 104f694:	ddc00717 	ldw	r23,28(sp)
 104f698:	dd800617 	ldw	r22,24(sp)
 104f69c:	dd400517 	ldw	r21,20(sp)
 104f6a0:	dd000417 	ldw	r20,16(sp)
 104f6a4:	dcc00317 	ldw	r19,12(sp)
 104f6a8:	dc800217 	ldw	r18,8(sp)
 104f6ac:	dc400117 	ldw	r17,4(sp)
 104f6b0:	dc000017 	ldw	r16,0(sp)
 104f6b4:	dec00a04 	addi	sp,sp,40
 104f6b8:	f800283a 	ret

0104f6bc <___svfiprintf_internal_r>:
 104f6bc:	2880030b 	ldhu	r2,12(r5)
 104f6c0:	deffc804 	addi	sp,sp,-224
 104f6c4:	dcc03115 	stw	r19,196(sp)
 104f6c8:	dfc03715 	stw	ra,220(sp)
 104f6cc:	df003615 	stw	fp,216(sp)
 104f6d0:	ddc03515 	stw	r23,212(sp)
 104f6d4:	dd803415 	stw	r22,208(sp)
 104f6d8:	dd403315 	stw	r21,204(sp)
 104f6dc:	dd003215 	stw	r20,200(sp)
 104f6e0:	dc803015 	stw	r18,192(sp)
 104f6e4:	dc402f15 	stw	r17,188(sp)
 104f6e8:	dc002e15 	stw	r16,184(sp)
 104f6ec:	d9402715 	stw	r5,156(sp)
 104f6f0:	d9002a15 	stw	r4,168(sp)
 104f6f4:	1080200c 	andi	r2,r2,128
 104f6f8:	d9c02315 	stw	r7,140(sp)
 104f6fc:	3027883a 	mov	r19,r6
 104f700:	10000226 	beq	r2,zero,104f70c <___svfiprintf_internal_r+0x50>
 104f704:	28800417 	ldw	r2,16(r5)
 104f708:	10041d26 	beq	r2,zero,1050780 <___svfiprintf_internal_r+0x10c4>
 104f70c:	dac01a04 	addi	r11,sp,104
 104f710:	dac01e15 	stw	r11,120(sp)
 104f714:	d8801e17 	ldw	r2,120(sp)
 104f718:	dac019c4 	addi	r11,sp,103
 104f71c:	dd402a17 	ldw	r21,168(sp)
 104f720:	ddc02717 	ldw	r23,156(sp)
 104f724:	05804174 	movhi	r22,261
 104f728:	05004174 	movhi	r20,261
 104f72c:	dac01f15 	stw	r11,124(sp)
 104f730:	12d7c83a 	sub	r11,r2,r11
 104f734:	b59b3704 	addi	r22,r22,27868
 104f738:	a51b3304 	addi	r20,r20,27852
 104f73c:	dec01a15 	stw	sp,104(sp)
 104f740:	d8001c15 	stw	zero,112(sp)
 104f744:	d8001b15 	stw	zero,108(sp)
 104f748:	d811883a 	mov	r8,sp
 104f74c:	d8002915 	stw	zero,164(sp)
 104f750:	d8002515 	stw	zero,148(sp)
 104f754:	dac02b15 	stw	r11,172(sp)
 104f758:	98800007 	ldb	r2,0(r19)
 104f75c:	1002dd26 	beq	r2,zero,10502d4 <___svfiprintf_internal_r+0xc18>
 104f760:	00c00944 	movi	r3,37
 104f764:	9823883a 	mov	r17,r19
 104f768:	10c0021e 	bne	r2,r3,104f774 <___svfiprintf_internal_r+0xb8>
 104f76c:	00001406 	br	104f7c0 <___svfiprintf_internal_r+0x104>
 104f770:	10c00326 	beq	r2,r3,104f780 <___svfiprintf_internal_r+0xc4>
 104f774:	8c400044 	addi	r17,r17,1
 104f778:	88800007 	ldb	r2,0(r17)
 104f77c:	103ffc1e 	bne	r2,zero,104f770 <__alt_data_end+0xfffcf770>
 104f780:	8ce1c83a 	sub	r16,r17,r19
 104f784:	80000e26 	beq	r16,zero,104f7c0 <___svfiprintf_internal_r+0x104>
 104f788:	d8c01c17 	ldw	r3,112(sp)
 104f78c:	d8801b17 	ldw	r2,108(sp)
 104f790:	44c00015 	stw	r19,0(r8)
 104f794:	1c07883a 	add	r3,r3,r16
 104f798:	10800044 	addi	r2,r2,1
 104f79c:	d8c01c15 	stw	r3,112(sp)
 104f7a0:	44000115 	stw	r16,4(r8)
 104f7a4:	d8801b15 	stw	r2,108(sp)
 104f7a8:	00c001c4 	movi	r3,7
 104f7ac:	18831e16 	blt	r3,r2,1050428 <___svfiprintf_internal_r+0xd6c>
 104f7b0:	42000204 	addi	r8,r8,8
 104f7b4:	dac02517 	ldw	r11,148(sp)
 104f7b8:	5c17883a 	add	r11,r11,r16
 104f7bc:	dac02515 	stw	r11,148(sp)
 104f7c0:	88800007 	ldb	r2,0(r17)
 104f7c4:	1002c526 	beq	r2,zero,10502dc <___svfiprintf_internal_r+0xc20>
 104f7c8:	88c00047 	ldb	r3,1(r17)
 104f7cc:	8cc00044 	addi	r19,r17,1
 104f7d0:	d8001d85 	stb	zero,118(sp)
 104f7d4:	0009883a 	mov	r4,zero
 104f7d8:	000f883a 	mov	r7,zero
 104f7dc:	043fffc4 	movi	r16,-1
 104f7e0:	d8002415 	stw	zero,144(sp)
 104f7e4:	0025883a 	mov	r18,zero
 104f7e8:	01401604 	movi	r5,88
 104f7ec:	01800244 	movi	r6,9
 104f7f0:	02800a84 	movi	r10,42
 104f7f4:	02401b04 	movi	r9,108
 104f7f8:	9cc00044 	addi	r19,r19,1
 104f7fc:	18bff804 	addi	r2,r3,-32
 104f800:	2881dd36 	bltu	r5,r2,104ff78 <___svfiprintf_internal_r+0x8bc>
 104f804:	100490ba 	slli	r2,r2,2
 104f808:	02c04174 	movhi	r11,261
 104f80c:	5afe0704 	addi	r11,r11,-2020
 104f810:	12c5883a 	add	r2,r2,r11
 104f814:	10800017 	ldw	r2,0(r2)
 104f818:	1000683a 	jmp	r2
 104f81c:	0104fa18 	cmpnei	r4,zero,5096
 104f820:	0104ff78 	rdprs	r4,zero,5117
 104f824:	0104ff78 	rdprs	r4,zero,5117
 104f828:	0104fa0c 	andi	r4,zero,5096
 104f82c:	0104ff78 	rdprs	r4,zero,5117
 104f830:	0104ff78 	rdprs	r4,zero,5117
 104f834:	0104ff78 	rdprs	r4,zero,5117
 104f838:	0104ff78 	rdprs	r4,zero,5117
 104f83c:	0104ff78 	rdprs	r4,zero,5117
 104f840:	0104ff78 	rdprs	r4,zero,5117
 104f844:	0104f980 	call	104f98 <__alt_mem_onchip_memory2-0xf3b068>
 104f848:	0104fb5c 	xori	r4,zero,5101
 104f84c:	0104ff78 	rdprs	r4,zero,5117
 104f850:	0104f9ac 	andhi	r4,zero,5094
 104f854:	0104ffac 	andhi	r4,zero,5118
 104f858:	0104ff78 	rdprs	r4,zero,5117
 104f85c:	0104ffa0 	cmpeqi	r4,zero,5118
 104f860:	0104ff40 	call	104ff4 <__alt_mem_onchip_memory2-0xf3b00c>
 104f864:	0104ff40 	call	104ff4 <__alt_mem_onchip_memory2-0xf3b00c>
 104f868:	0104ff40 	call	104ff4 <__alt_mem_onchip_memory2-0xf3b00c>
 104f86c:	0104ff40 	call	104ff4 <__alt_mem_onchip_memory2-0xf3b00c>
 104f870:	0104ff40 	call	104ff4 <__alt_mem_onchip_memory2-0xf3b00c>
 104f874:	0104ff40 	call	104ff4 <__alt_mem_onchip_memory2-0xf3b00c>
 104f878:	0104ff40 	call	104ff4 <__alt_mem_onchip_memory2-0xf3b00c>
 104f87c:	0104ff40 	call	104ff4 <__alt_mem_onchip_memory2-0xf3b00c>
 104f880:	0104ff40 	call	104ff4 <__alt_mem_onchip_memory2-0xf3b00c>
 104f884:	0104ff78 	rdprs	r4,zero,5117
 104f888:	0104ff78 	rdprs	r4,zero,5117
 104f88c:	0104ff78 	rdprs	r4,zero,5117
 104f890:	0104ff78 	rdprs	r4,zero,5117
 104f894:	0104ff78 	rdprs	r4,zero,5117
 104f898:	0104ff78 	rdprs	r4,zero,5117
 104f89c:	0104ff78 	rdprs	r4,zero,5117
 104f8a0:	0104ff78 	rdprs	r4,zero,5117
 104f8a4:	0104ff78 	rdprs	r4,zero,5117
 104f8a8:	0104ff78 	rdprs	r4,zero,5117
 104f8ac:	0104fedc 	xori	r4,zero,5115
 104f8b0:	0104ff78 	rdprs	r4,zero,5117
 104f8b4:	0104ff78 	rdprs	r4,zero,5117
 104f8b8:	0104ff78 	rdprs	r4,zero,5117
 104f8bc:	0104ff78 	rdprs	r4,zero,5117
 104f8c0:	0104ff78 	rdprs	r4,zero,5117
 104f8c4:	0104ff78 	rdprs	r4,zero,5117
 104f8c8:	0104ff78 	rdprs	r4,zero,5117
 104f8cc:	0104ff78 	rdprs	r4,zero,5117
 104f8d0:	0104ff78 	rdprs	r4,zero,5117
 104f8d4:	0104ff78 	rdprs	r4,zero,5117
 104f8d8:	01050054 	movui	r4,5121
 104f8dc:	0104ff78 	rdprs	r4,zero,5117
 104f8e0:	0104ff78 	rdprs	r4,zero,5117
 104f8e4:	0104ff78 	rdprs	r4,zero,5117
 104f8e8:	0104ff78 	rdprs	r4,zero,5117
 104f8ec:	0104ff78 	rdprs	r4,zero,5117
 104f8f0:	0104ffec 	andhi	r4,zero,5119
 104f8f4:	0104ff78 	rdprs	r4,zero,5117
 104f8f8:	0104ff78 	rdprs	r4,zero,5117
 104f8fc:	0104fd20 	cmpeqi	r4,zero,5108
 104f900:	0104ff78 	rdprs	r4,zero,5117
 104f904:	0104ff78 	rdprs	r4,zero,5117
 104f908:	0104ff78 	rdprs	r4,zero,5117
 104f90c:	0104ff78 	rdprs	r4,zero,5117
 104f910:	0104ff78 	rdprs	r4,zero,5117
 104f914:	0104ff78 	rdprs	r4,zero,5117
 104f918:	0104ff78 	rdprs	r4,zero,5117
 104f91c:	0104ff78 	rdprs	r4,zero,5117
 104f920:	0104ff78 	rdprs	r4,zero,5117
 104f924:	0104ff78 	rdprs	r4,zero,5117
 104f928:	0104fc10 	cmplti	r4,zero,5104
 104f92c:	0104fdbc 	xorhi	r4,zero,5110
 104f930:	0104ff78 	rdprs	r4,zero,5117
 104f934:	0104ff78 	rdprs	r4,zero,5117
 104f938:	0104ff78 	rdprs	r4,zero,5117
 104f93c:	0104fdb0 	cmpltui	r4,zero,5110
 104f940:	0104fdbc 	xorhi	r4,zero,5110
 104f944:	0104ff78 	rdprs	r4,zero,5117
 104f948:	0104ff78 	rdprs	r4,zero,5117
 104f94c:	0104fda0 	cmpeqi	r4,zero,5110
 104f950:	0104ff78 	rdprs	r4,zero,5117
 104f954:	0104fd64 	muli	r4,zero,5109
 104f958:	0104fb6c 	andhi	r4,zero,5101
 104f95c:	0104f9b8 	rdprs	r4,zero,5094
 104f960:	0104fed0 	cmplti	r4,zero,5115
 104f964:	0104ff78 	rdprs	r4,zero,5117
 104f968:	0104fe84 	movi	r4,5114
 104f96c:	0104ff78 	rdprs	r4,zero,5117
 104f970:	0104fadc 	xori	r4,zero,5099
 104f974:	0104ff78 	rdprs	r4,zero,5117
 104f978:	0104ff78 	rdprs	r4,zero,5117
 104f97c:	0104fa38 	rdprs	r4,zero,5096
 104f980:	dac02317 	ldw	r11,140(sp)
 104f984:	5ac00017 	ldw	r11,0(r11)
 104f988:	dac02415 	stw	r11,144(sp)
 104f98c:	dac02317 	ldw	r11,140(sp)
 104f990:	58800104 	addi	r2,r11,4
 104f994:	dac02417 	ldw	r11,144(sp)
 104f998:	5802e90e 	bge	r11,zero,1050540 <___svfiprintf_internal_r+0xe84>
 104f99c:	dac02417 	ldw	r11,144(sp)
 104f9a0:	d8802315 	stw	r2,140(sp)
 104f9a4:	02d7c83a 	sub	r11,zero,r11
 104f9a8:	dac02415 	stw	r11,144(sp)
 104f9ac:	94800114 	ori	r18,r18,4
 104f9b0:	98c00007 	ldb	r3,0(r19)
 104f9b4:	003f9006 	br	104f7f8 <__alt_data_end+0xfffcf7f8>
 104f9b8:	00800c04 	movi	r2,48
 104f9bc:	dac02317 	ldw	r11,140(sp)
 104f9c0:	d8801d05 	stb	r2,116(sp)
 104f9c4:	00801e04 	movi	r2,120
 104f9c8:	d8801d45 	stb	r2,117(sp)
 104f9cc:	d8001d85 	stb	zero,118(sp)
 104f9d0:	58c00104 	addi	r3,r11,4
 104f9d4:	5f000017 	ldw	fp,0(r11)
 104f9d8:	0013883a 	mov	r9,zero
 104f9dc:	90800094 	ori	r2,r18,2
 104f9e0:	80032b16 	blt	r16,zero,1050690 <___svfiprintf_internal_r+0xfd4>
 104f9e4:	00bfdfc4 	movi	r2,-129
 104f9e8:	90a4703a 	and	r18,r18,r2
 104f9ec:	d8c02315 	stw	r3,140(sp)
 104f9f0:	94800094 	ori	r18,r18,2
 104f9f4:	e002dc26 	beq	fp,zero,1050568 <___svfiprintf_internal_r+0xeac>
 104f9f8:	01004174 	movhi	r4,261
 104f9fc:	211aca04 	addi	r4,r4,27432
 104fa00:	0015883a 	mov	r10,zero
 104fa04:	d9002915 	stw	r4,164(sp)
 104fa08:	00002306 	br	104fa98 <___svfiprintf_internal_r+0x3dc>
 104fa0c:	94800054 	ori	r18,r18,1
 104fa10:	98c00007 	ldb	r3,0(r19)
 104fa14:	003f7806 	br	104f7f8 <__alt_data_end+0xfffcf7f8>
 104fa18:	38803fcc 	andi	r2,r7,255
 104fa1c:	1080201c 	xori	r2,r2,128
 104fa20:	10bfe004 	addi	r2,r2,-128
 104fa24:	1002f31e 	bne	r2,zero,10505f4 <___svfiprintf_internal_r+0xf38>
 104fa28:	01000044 	movi	r4,1
 104fa2c:	01c00804 	movi	r7,32
 104fa30:	98c00007 	ldb	r3,0(r19)
 104fa34:	003f7006 	br	104f7f8 <__alt_data_end+0xfffcf7f8>
 104fa38:	21003fcc 	andi	r4,r4,255
 104fa3c:	2003aa1e 	bne	r4,zero,10508e8 <___svfiprintf_internal_r+0x122c>
 104fa40:	00804174 	movhi	r2,261
 104fa44:	109aca04 	addi	r2,r2,27432
 104fa48:	d8802915 	stw	r2,164(sp)
 104fa4c:	9080080c 	andi	r2,r18,32
 104fa50:	1000ba26 	beq	r2,zero,104fd3c <___svfiprintf_internal_r+0x680>
 104fa54:	dac02317 	ldw	r11,140(sp)
 104fa58:	5f000017 	ldw	fp,0(r11)
 104fa5c:	5a400117 	ldw	r9,4(r11)
 104fa60:	5ac00204 	addi	r11,r11,8
 104fa64:	dac02315 	stw	r11,140(sp)
 104fa68:	9080004c 	andi	r2,r18,1
 104fa6c:	10029026 	beq	r2,zero,10504b0 <___svfiprintf_internal_r+0xdf4>
 104fa70:	e244b03a 	or	r2,fp,r9
 104fa74:	1002d41e 	bne	r2,zero,10505c8 <___svfiprintf_internal_r+0xf0c>
 104fa78:	d8001d85 	stb	zero,118(sp)
 104fa7c:	80030b16 	blt	r16,zero,10506ac <___svfiprintf_internal_r+0xff0>
 104fa80:	00bfdfc4 	movi	r2,-129
 104fa84:	90a4703a 	and	r18,r18,r2
 104fa88:	0015883a 	mov	r10,zero
 104fa8c:	80002426 	beq	r16,zero,104fb20 <___svfiprintf_internal_r+0x464>
 104fa90:	0039883a 	mov	fp,zero
 104fa94:	0013883a 	mov	r9,zero
 104fa98:	d9002917 	ldw	r4,164(sp)
 104fa9c:	dc401a04 	addi	r17,sp,104
 104faa0:	e08003cc 	andi	r2,fp,15
 104faa4:	4806973a 	slli	r3,r9,28
 104faa8:	2085883a 	add	r2,r4,r2
 104faac:	e038d13a 	srli	fp,fp,4
 104fab0:	10800003 	ldbu	r2,0(r2)
 104fab4:	4812d13a 	srli	r9,r9,4
 104fab8:	8c7fffc4 	addi	r17,r17,-1
 104fabc:	1f38b03a 	or	fp,r3,fp
 104fac0:	88800005 	stb	r2,0(r17)
 104fac4:	e244b03a 	or	r2,fp,r9
 104fac8:	103ff51e 	bne	r2,zero,104faa0 <__alt_data_end+0xfffcfaa0>
 104facc:	dac01e17 	ldw	r11,120(sp)
 104fad0:	5c57c83a 	sub	r11,r11,r17
 104fad4:	dac02115 	stw	r11,132(sp)
 104fad8:	00001406 	br	104fb2c <___svfiprintf_internal_r+0x470>
 104fadc:	21003fcc 	andi	r4,r4,255
 104fae0:	2003741e 	bne	r4,zero,10508b4 <___svfiprintf_internal_r+0x11f8>
 104fae4:	9080080c 	andi	r2,r18,32
 104fae8:	10014526 	beq	r2,zero,1050000 <___svfiprintf_internal_r+0x944>
 104faec:	dac02317 	ldw	r11,140(sp)
 104faf0:	d8001d85 	stb	zero,118(sp)
 104faf4:	58c00204 	addi	r3,r11,8
 104faf8:	5f000017 	ldw	fp,0(r11)
 104fafc:	5a400117 	ldw	r9,4(r11)
 104fb00:	8002d916 	blt	r16,zero,1050668 <___svfiprintf_internal_r+0xfac>
 104fb04:	013fdfc4 	movi	r4,-129
 104fb08:	e244b03a 	or	r2,fp,r9
 104fb0c:	d8c02315 	stw	r3,140(sp)
 104fb10:	9124703a 	and	r18,r18,r4
 104fb14:	0015883a 	mov	r10,zero
 104fb18:	1000b91e 	bne	r2,zero,104fe00 <___svfiprintf_internal_r+0x744>
 104fb1c:	8002e61e 	bne	r16,zero,10506b8 <___svfiprintf_internal_r+0xffc>
 104fb20:	0021883a 	mov	r16,zero
 104fb24:	d8002115 	stw	zero,132(sp)
 104fb28:	dc401a04 	addi	r17,sp,104
 104fb2c:	d8c02117 	ldw	r3,132(sp)
 104fb30:	dc002015 	stw	r16,128(sp)
 104fb34:	80c0010e 	bge	r16,r3,104fb3c <___svfiprintf_internal_r+0x480>
 104fb38:	d8c02015 	stw	r3,128(sp)
 104fb3c:	52803fcc 	andi	r10,r10,255
 104fb40:	5280201c 	xori	r10,r10,128
 104fb44:	52bfe004 	addi	r10,r10,-128
 104fb48:	50003c26 	beq	r10,zero,104fc3c <___svfiprintf_internal_r+0x580>
 104fb4c:	dac02017 	ldw	r11,128(sp)
 104fb50:	5ac00044 	addi	r11,r11,1
 104fb54:	dac02015 	stw	r11,128(sp)
 104fb58:	00003806 	br	104fc3c <___svfiprintf_internal_r+0x580>
 104fb5c:	01000044 	movi	r4,1
 104fb60:	01c00ac4 	movi	r7,43
 104fb64:	98c00007 	ldb	r3,0(r19)
 104fb68:	003f2306 	br	104f7f8 <__alt_data_end+0xfffcf7f8>
 104fb6c:	21003fcc 	andi	r4,r4,255
 104fb70:	2003481e 	bne	r4,zero,1050894 <___svfiprintf_internal_r+0x11d8>
 104fb74:	9080080c 	andi	r2,r18,32
 104fb78:	10013b26 	beq	r2,zero,1050068 <___svfiprintf_internal_r+0x9ac>
 104fb7c:	dac02317 	ldw	r11,140(sp)
 104fb80:	d8001d85 	stb	zero,118(sp)
 104fb84:	58800204 	addi	r2,r11,8
 104fb88:	5f000017 	ldw	fp,0(r11)
 104fb8c:	5a400117 	ldw	r9,4(r11)
 104fb90:	8002a816 	blt	r16,zero,1050634 <___svfiprintf_internal_r+0xf78>
 104fb94:	013fdfc4 	movi	r4,-129
 104fb98:	e246b03a 	or	r3,fp,r9
 104fb9c:	d8802315 	stw	r2,140(sp)
 104fba0:	9124703a 	and	r18,r18,r4
 104fba4:	18013c26 	beq	r3,zero,1050098 <___svfiprintf_internal_r+0x9dc>
 104fba8:	0015883a 	mov	r10,zero
 104fbac:	dc401a04 	addi	r17,sp,104
 104fbb0:	e006d0fa 	srli	r3,fp,3
 104fbb4:	4808977a 	slli	r4,r9,29
 104fbb8:	4812d0fa 	srli	r9,r9,3
 104fbbc:	e70001cc 	andi	fp,fp,7
 104fbc0:	e0800c04 	addi	r2,fp,48
 104fbc4:	8c7fffc4 	addi	r17,r17,-1
 104fbc8:	20f8b03a 	or	fp,r4,r3
 104fbcc:	88800005 	stb	r2,0(r17)
 104fbd0:	e246b03a 	or	r3,fp,r9
 104fbd4:	183ff61e 	bne	r3,zero,104fbb0 <__alt_data_end+0xfffcfbb0>
 104fbd8:	90c0004c 	andi	r3,r18,1
 104fbdc:	1800a526 	beq	r3,zero,104fe74 <___svfiprintf_internal_r+0x7b8>
 104fbe0:	10803fcc 	andi	r2,r2,255
 104fbe4:	1080201c 	xori	r2,r2,128
 104fbe8:	10bfe004 	addi	r2,r2,-128
 104fbec:	00c00c04 	movi	r3,48
 104fbf0:	10ffb626 	beq	r2,r3,104facc <__alt_data_end+0xfffcfacc>
 104fbf4:	88ffffc5 	stb	r3,-1(r17)
 104fbf8:	d8c01e17 	ldw	r3,120(sp)
 104fbfc:	88bfffc4 	addi	r2,r17,-1
 104fc00:	1023883a 	mov	r17,r2
 104fc04:	1887c83a 	sub	r3,r3,r2
 104fc08:	d8c02115 	stw	r3,132(sp)
 104fc0c:	003fc706 	br	104fb2c <__alt_data_end+0xfffcfb2c>
 104fc10:	dac02317 	ldw	r11,140(sp)
 104fc14:	00c00044 	movi	r3,1
 104fc18:	d8c02015 	stw	r3,128(sp)
 104fc1c:	58800017 	ldw	r2,0(r11)
 104fc20:	5ac00104 	addi	r11,r11,4
 104fc24:	d8001d85 	stb	zero,118(sp)
 104fc28:	d8801005 	stb	r2,64(sp)
 104fc2c:	dac02315 	stw	r11,140(sp)
 104fc30:	d8c02115 	stw	r3,132(sp)
 104fc34:	dc401004 	addi	r17,sp,64
 104fc38:	0021883a 	mov	r16,zero
 104fc3c:	90c0008c 	andi	r3,r18,2
 104fc40:	d8c02215 	stw	r3,136(sp)
 104fc44:	18000326 	beq	r3,zero,104fc54 <___svfiprintf_internal_r+0x598>
 104fc48:	dac02017 	ldw	r11,128(sp)
 104fc4c:	5ac00084 	addi	r11,r11,2
 104fc50:	dac02015 	stw	r11,128(sp)
 104fc54:	90c0210c 	andi	r3,r18,132
 104fc58:	d8c02615 	stw	r3,152(sp)
 104fc5c:	1801131e 	bne	r3,zero,10500ac <___svfiprintf_internal_r+0x9f0>
 104fc60:	dac02417 	ldw	r11,144(sp)
 104fc64:	d8c02017 	ldw	r3,128(sp)
 104fc68:	58f9c83a 	sub	fp,r11,r3
 104fc6c:	07010f0e 	bge	zero,fp,10500ac <___svfiprintf_internal_r+0x9f0>
 104fc70:	02400404 	movi	r9,16
 104fc74:	d8c01c17 	ldw	r3,112(sp)
 104fc78:	d8801b17 	ldw	r2,108(sp)
 104fc7c:	4f02d60e 	bge	r9,fp,10507d8 <___svfiprintf_internal_r+0x111c>
 104fc80:	01404174 	movhi	r5,261
 104fc84:	295b3704 	addi	r5,r5,27868
 104fc88:	d9402815 	stw	r5,160(sp)
 104fc8c:	028001c4 	movi	r10,7
 104fc90:	00000306 	br	104fca0 <___svfiprintf_internal_r+0x5e4>
 104fc94:	e73ffc04 	addi	fp,fp,-16
 104fc98:	42000204 	addi	r8,r8,8
 104fc9c:	4f00150e 	bge	r9,fp,104fcf4 <___svfiprintf_internal_r+0x638>
 104fca0:	18c00404 	addi	r3,r3,16
 104fca4:	10800044 	addi	r2,r2,1
 104fca8:	45800015 	stw	r22,0(r8)
 104fcac:	42400115 	stw	r9,4(r8)
 104fcb0:	d8c01c15 	stw	r3,112(sp)
 104fcb4:	d8801b15 	stw	r2,108(sp)
 104fcb8:	50bff60e 	bge	r10,r2,104fc94 <__alt_data_end+0xfffcfc94>
 104fcbc:	d9801a04 	addi	r6,sp,104
 104fcc0:	b80b883a 	mov	r5,r23
 104fcc4:	a809883a 	mov	r4,r21
 104fcc8:	da402c15 	stw	r9,176(sp)
 104fccc:	da802d15 	stw	r10,180(sp)
 104fcd0:	104f4ec0 	call	104f4ec <__ssprint_r>
 104fcd4:	da402c17 	ldw	r9,176(sp)
 104fcd8:	da802d17 	ldw	r10,180(sp)
 104fcdc:	1001851e 	bne	r2,zero,10502f4 <___svfiprintf_internal_r+0xc38>
 104fce0:	e73ffc04 	addi	fp,fp,-16
 104fce4:	d8c01c17 	ldw	r3,112(sp)
 104fce8:	d8801b17 	ldw	r2,108(sp)
 104fcec:	d811883a 	mov	r8,sp
 104fcf0:	4f3feb16 	blt	r9,fp,104fca0 <__alt_data_end+0xfffcfca0>
 104fcf4:	dac02817 	ldw	r11,160(sp)
 104fcf8:	e0c7883a 	add	r3,fp,r3
 104fcfc:	10800044 	addi	r2,r2,1
 104fd00:	42c00015 	stw	r11,0(r8)
 104fd04:	47000115 	stw	fp,4(r8)
 104fd08:	d8c01c15 	stw	r3,112(sp)
 104fd0c:	d8801b15 	stw	r2,108(sp)
 104fd10:	010001c4 	movi	r4,7
 104fd14:	2081ee16 	blt	r4,r2,10504d0 <___svfiprintf_internal_r+0xe14>
 104fd18:	42000204 	addi	r8,r8,8
 104fd1c:	0000e506 	br	10500b4 <___svfiprintf_internal_r+0x9f8>
 104fd20:	21003fcc 	andi	r4,r4,255
 104fd24:	2002dd1e 	bne	r4,zero,105089c <___svfiprintf_internal_r+0x11e0>
 104fd28:	00804174 	movhi	r2,261
 104fd2c:	109ac504 	addi	r2,r2,27412
 104fd30:	d8802915 	stw	r2,164(sp)
 104fd34:	9080080c 	andi	r2,r18,32
 104fd38:	103f461e 	bne	r2,zero,104fa54 <__alt_data_end+0xfffcfa54>
 104fd3c:	9080040c 	andi	r2,r18,16
 104fd40:	10022e1e 	bne	r2,zero,10505fc <___svfiprintf_internal_r+0xf40>
 104fd44:	9080100c 	andi	r2,r18,64
 104fd48:	dac02317 	ldw	r11,140(sp)
 104fd4c:	10027326 	beq	r2,zero,105071c <___svfiprintf_internal_r+0x1060>
 104fd50:	5f00000b 	ldhu	fp,0(r11)
 104fd54:	5ac00104 	addi	r11,r11,4
 104fd58:	0013883a 	mov	r9,zero
 104fd5c:	dac02315 	stw	r11,140(sp)
 104fd60:	003f4106 	br	104fa68 <__alt_data_end+0xfffcfa68>
 104fd64:	21003fcc 	andi	r4,r4,255
 104fd68:	2002e11e 	bne	r4,zero,10508f0 <___svfiprintf_internal_r+0x1234>
 104fd6c:	9080080c 	andi	r2,r18,32
 104fd70:	1002011e 	bne	r2,zero,1050578 <___svfiprintf_internal_r+0xebc>
 104fd74:	9080040c 	andi	r2,r18,16
 104fd78:	10023e1e 	bne	r2,zero,1050674 <___svfiprintf_internal_r+0xfb8>
 104fd7c:	9480100c 	andi	r18,r18,64
 104fd80:	90023c26 	beq	r18,zero,1050674 <___svfiprintf_internal_r+0xfb8>
 104fd84:	dac02317 	ldw	r11,140(sp)
 104fd88:	58800017 	ldw	r2,0(r11)
 104fd8c:	5ac00104 	addi	r11,r11,4
 104fd90:	dac02315 	stw	r11,140(sp)
 104fd94:	dac02517 	ldw	r11,148(sp)
 104fd98:	12c0000d 	sth	r11,0(r2)
 104fd9c:	003e6e06 	br	104f758 <__alt_data_end+0xfffcf758>
 104fda0:	98c00007 	ldb	r3,0(r19)
 104fda4:	1a422926 	beq	r3,r9,105064c <___svfiprintf_internal_r+0xf90>
 104fda8:	94800414 	ori	r18,r18,16
 104fdac:	003e9206 	br	104f7f8 <__alt_data_end+0xfffcf7f8>
 104fdb0:	94801014 	ori	r18,r18,64
 104fdb4:	98c00007 	ldb	r3,0(r19)
 104fdb8:	003e8f06 	br	104f7f8 <__alt_data_end+0xfffcf7f8>
 104fdbc:	21003fcc 	andi	r4,r4,255
 104fdc0:	2002c71e 	bne	r4,zero,10508e0 <___svfiprintf_internal_r+0x1224>
 104fdc4:	9080080c 	andi	r2,r18,32
 104fdc8:	10004926 	beq	r2,zero,104fef0 <___svfiprintf_internal_r+0x834>
 104fdcc:	dac02317 	ldw	r11,140(sp)
 104fdd0:	58800117 	ldw	r2,4(r11)
 104fdd4:	5f000017 	ldw	fp,0(r11)
 104fdd8:	5ac00204 	addi	r11,r11,8
 104fddc:	dac02315 	stw	r11,140(sp)
 104fde0:	1013883a 	mov	r9,r2
 104fde4:	10004b16 	blt	r2,zero,104ff14 <___svfiprintf_internal_r+0x858>
 104fde8:	da801d83 	ldbu	r10,118(sp)
 104fdec:	8001cb16 	blt	r16,zero,105051c <___svfiprintf_internal_r+0xe60>
 104fdf0:	00ffdfc4 	movi	r3,-129
 104fdf4:	e244b03a 	or	r2,fp,r9
 104fdf8:	90e4703a 	and	r18,r18,r3
 104fdfc:	103f4726 	beq	r2,zero,104fb1c <__alt_data_end+0xfffcfb1c>
 104fe00:	48008c26 	beq	r9,zero,1050034 <___svfiprintf_internal_r+0x978>
 104fe04:	dc802015 	stw	r18,128(sp)
 104fe08:	dc002115 	stw	r16,132(sp)
 104fe0c:	dc401a04 	addi	r17,sp,104
 104fe10:	e021883a 	mov	r16,fp
 104fe14:	da002215 	stw	r8,136(sp)
 104fe18:	5039883a 	mov	fp,r10
 104fe1c:	4825883a 	mov	r18,r9
 104fe20:	8009883a 	mov	r4,r16
 104fe24:	900b883a 	mov	r5,r18
 104fe28:	01800284 	movi	r6,10
 104fe2c:	000f883a 	mov	r7,zero
 104fe30:	1052dec0 	call	1052dec <__umoddi3>
 104fe34:	10800c04 	addi	r2,r2,48
 104fe38:	8c7fffc4 	addi	r17,r17,-1
 104fe3c:	8009883a 	mov	r4,r16
 104fe40:	900b883a 	mov	r5,r18
 104fe44:	88800005 	stb	r2,0(r17)
 104fe48:	01800284 	movi	r6,10
 104fe4c:	000f883a 	mov	r7,zero
 104fe50:	10528740 	call	1052874 <__udivdi3>
 104fe54:	1021883a 	mov	r16,r2
 104fe58:	10c4b03a 	or	r2,r2,r3
 104fe5c:	1825883a 	mov	r18,r3
 104fe60:	103fef1e 	bne	r2,zero,104fe20 <__alt_data_end+0xfffcfe20>
 104fe64:	dc802017 	ldw	r18,128(sp)
 104fe68:	dc002117 	ldw	r16,132(sp)
 104fe6c:	da002217 	ldw	r8,136(sp)
 104fe70:	e015883a 	mov	r10,fp
 104fe74:	d8c01e17 	ldw	r3,120(sp)
 104fe78:	1c47c83a 	sub	r3,r3,r17
 104fe7c:	d8c02115 	stw	r3,132(sp)
 104fe80:	003f2a06 	br	104fb2c <__alt_data_end+0xfffcfb2c>
 104fe84:	dac02317 	ldw	r11,140(sp)
 104fe88:	d8001d85 	stb	zero,118(sp)
 104fe8c:	5c400017 	ldw	r17,0(r11)
 104fe90:	5f000104 	addi	fp,r11,4
 104fe94:	88022f26 	beq	r17,zero,1050754 <___svfiprintf_internal_r+0x1098>
 104fe98:	80022516 	blt	r16,zero,1050730 <___svfiprintf_internal_r+0x1074>
 104fe9c:	800d883a 	mov	r6,r16
 104fea0:	000b883a 	mov	r5,zero
 104fea4:	8809883a 	mov	r4,r17
 104fea8:	da002c15 	stw	r8,176(sp)
 104feac:	104d7fc0 	call	104d7fc <memchr>
 104feb0:	da002c17 	ldw	r8,176(sp)
 104feb4:	10026426 	beq	r2,zero,1050848 <___svfiprintf_internal_r+0x118c>
 104feb8:	1445c83a 	sub	r2,r2,r17
 104febc:	d8802115 	stw	r2,132(sp)
 104fec0:	da801d83 	ldbu	r10,118(sp)
 104fec4:	df002315 	stw	fp,140(sp)
 104fec8:	0021883a 	mov	r16,zero
 104fecc:	003f1706 	br	104fb2c <__alt_data_end+0xfffcfb2c>
 104fed0:	94800814 	ori	r18,r18,32
 104fed4:	98c00007 	ldb	r3,0(r19)
 104fed8:	003e4706 	br	104f7f8 <__alt_data_end+0xfffcf7f8>
 104fedc:	21003fcc 	andi	r4,r4,255
 104fee0:	2002701e 	bne	r4,zero,10508a4 <___svfiprintf_internal_r+0x11e8>
 104fee4:	94800414 	ori	r18,r18,16
 104fee8:	9080080c 	andi	r2,r18,32
 104feec:	103fb71e 	bne	r2,zero,104fdcc <__alt_data_end+0xfffcfdcc>
 104fef0:	9080040c 	andi	r2,r18,16
 104fef4:	1001ab26 	beq	r2,zero,10505a4 <___svfiprintf_internal_r+0xee8>
 104fef8:	dac02317 	ldw	r11,140(sp)
 104fefc:	5f000017 	ldw	fp,0(r11)
 104ff00:	5ac00104 	addi	r11,r11,4
 104ff04:	dac02315 	stw	r11,140(sp)
 104ff08:	e013d7fa 	srai	r9,fp,31
 104ff0c:	4805883a 	mov	r2,r9
 104ff10:	103fb50e 	bge	r2,zero,104fde8 <__alt_data_end+0xfffcfde8>
 104ff14:	0739c83a 	sub	fp,zero,fp
 104ff18:	02800b44 	movi	r10,45
 104ff1c:	e004c03a 	cmpne	r2,fp,zero
 104ff20:	0253c83a 	sub	r9,zero,r9
 104ff24:	da801d85 	stb	r10,118(sp)
 104ff28:	4893c83a 	sub	r9,r9,r2
 104ff2c:	80023016 	blt	r16,zero,10507f0 <___svfiprintf_internal_r+0x1134>
 104ff30:	00bfdfc4 	movi	r2,-129
 104ff34:	90a4703a 	and	r18,r18,r2
 104ff38:	483fb21e 	bne	r9,zero,104fe04 <__alt_data_end+0xfffcfe04>
 104ff3c:	00003d06 	br	1050034 <___svfiprintf_internal_r+0x978>
 104ff40:	9817883a 	mov	r11,r19
 104ff44:	d8002415 	stw	zero,144(sp)
 104ff48:	18bff404 	addi	r2,r3,-48
 104ff4c:	0019883a 	mov	r12,zero
 104ff50:	58c00007 	ldb	r3,0(r11)
 104ff54:	630002a4 	muli	r12,r12,10
 104ff58:	9cc00044 	addi	r19,r19,1
 104ff5c:	9817883a 	mov	r11,r19
 104ff60:	1319883a 	add	r12,r2,r12
 104ff64:	18bff404 	addi	r2,r3,-48
 104ff68:	30bff92e 	bgeu	r6,r2,104ff50 <__alt_data_end+0xfffcff50>
 104ff6c:	db002415 	stw	r12,144(sp)
 104ff70:	18bff804 	addi	r2,r3,-32
 104ff74:	28be232e 	bgeu	r5,r2,104f804 <__alt_data_end+0xfffcf804>
 104ff78:	21003fcc 	andi	r4,r4,255
 104ff7c:	20024b1e 	bne	r4,zero,10508ac <___svfiprintf_internal_r+0x11f0>
 104ff80:	1800d626 	beq	r3,zero,10502dc <___svfiprintf_internal_r+0xc20>
 104ff84:	02c00044 	movi	r11,1
 104ff88:	dac02015 	stw	r11,128(sp)
 104ff8c:	d8c01005 	stb	r3,64(sp)
 104ff90:	d8001d85 	stb	zero,118(sp)
 104ff94:	dac02115 	stw	r11,132(sp)
 104ff98:	dc401004 	addi	r17,sp,64
 104ff9c:	003f2606 	br	104fc38 <__alt_data_end+0xfffcfc38>
 104ffa0:	94802014 	ori	r18,r18,128
 104ffa4:	98c00007 	ldb	r3,0(r19)
 104ffa8:	003e1306 	br	104f7f8 <__alt_data_end+0xfffcf7f8>
 104ffac:	98c00007 	ldb	r3,0(r19)
 104ffb0:	9ac00044 	addi	r11,r19,1
 104ffb4:	1a822b26 	beq	r3,r10,1050864 <___svfiprintf_internal_r+0x11a8>
 104ffb8:	18bff404 	addi	r2,r3,-48
 104ffbc:	0021883a 	mov	r16,zero
 104ffc0:	30821e36 	bltu	r6,r2,105083c <___svfiprintf_internal_r+0x1180>
 104ffc4:	58c00007 	ldb	r3,0(r11)
 104ffc8:	840002a4 	muli	r16,r16,10
 104ffcc:	5cc00044 	addi	r19,r11,1
 104ffd0:	9817883a 	mov	r11,r19
 104ffd4:	80a1883a 	add	r16,r16,r2
 104ffd8:	18bff404 	addi	r2,r3,-48
 104ffdc:	30bff92e 	bgeu	r6,r2,104ffc4 <__alt_data_end+0xfffcffc4>
 104ffe0:	803e060e 	bge	r16,zero,104f7fc <__alt_data_end+0xfffcf7fc>
 104ffe4:	043fffc4 	movi	r16,-1
 104ffe8:	003e0406 	br	104f7fc <__alt_data_end+0xfffcf7fc>
 104ffec:	21003fcc 	andi	r4,r4,255
 104fff0:	2002371e 	bne	r4,zero,10508d0 <___svfiprintf_internal_r+0x1214>
 104fff4:	94800414 	ori	r18,r18,16
 104fff8:	9080080c 	andi	r2,r18,32
 104fffc:	103ebb1e 	bne	r2,zero,104faec <__alt_data_end+0xfffcfaec>
 1050000:	9080040c 	andi	r2,r18,16
 1050004:	10013b26 	beq	r2,zero,10504f4 <___svfiprintf_internal_r+0xe38>
 1050008:	dac02317 	ldw	r11,140(sp)
 105000c:	d8001d85 	stb	zero,118(sp)
 1050010:	0013883a 	mov	r9,zero
 1050014:	58800104 	addi	r2,r11,4
 1050018:	5f000017 	ldw	fp,0(r11)
 105001c:	80013d16 	blt	r16,zero,1050514 <___svfiprintf_internal_r+0xe58>
 1050020:	00ffdfc4 	movi	r3,-129
 1050024:	d8802315 	stw	r2,140(sp)
 1050028:	90e4703a 	and	r18,r18,r3
 105002c:	0015883a 	mov	r10,zero
 1050030:	e03eba26 	beq	fp,zero,104fb1c <__alt_data_end+0xfffcfb1c>
 1050034:	00800244 	movi	r2,9
 1050038:	173f7236 	bltu	r2,fp,104fe04 <__alt_data_end+0xfffcfe04>
 105003c:	dac02b17 	ldw	r11,172(sp)
 1050040:	e7000c04 	addi	fp,fp,48
 1050044:	df0019c5 	stb	fp,103(sp)
 1050048:	dac02115 	stw	r11,132(sp)
 105004c:	dc4019c4 	addi	r17,sp,103
 1050050:	003eb606 	br	104fb2c <__alt_data_end+0xfffcfb2c>
 1050054:	21003fcc 	andi	r4,r4,255
 1050058:	20021f1e 	bne	r4,zero,10508d8 <___svfiprintf_internal_r+0x121c>
 105005c:	94800414 	ori	r18,r18,16
 1050060:	9080080c 	andi	r2,r18,32
 1050064:	103ec51e 	bne	r2,zero,104fb7c <__alt_data_end+0xfffcfb7c>
 1050068:	9080040c 	andi	r2,r18,16
 105006c:	10016926 	beq	r2,zero,1050614 <___svfiprintf_internal_r+0xf58>
 1050070:	dac02317 	ldw	r11,140(sp)
 1050074:	d8001d85 	stb	zero,118(sp)
 1050078:	0013883a 	mov	r9,zero
 105007c:	58800104 	addi	r2,r11,4
 1050080:	5f000017 	ldw	fp,0(r11)
 1050084:	80016b16 	blt	r16,zero,1050634 <___svfiprintf_internal_r+0xf78>
 1050088:	00ffdfc4 	movi	r3,-129
 105008c:	d8802315 	stw	r2,140(sp)
 1050090:	90e4703a 	and	r18,r18,r3
 1050094:	e03ec41e 	bne	fp,zero,104fba8 <__alt_data_end+0xfffcfba8>
 1050098:	0015883a 	mov	r10,zero
 105009c:	8001c226 	beq	r16,zero,10507a8 <___svfiprintf_internal_r+0x10ec>
 10500a0:	0039883a 	mov	fp,zero
 10500a4:	0013883a 	mov	r9,zero
 10500a8:	003ec006 	br	104fbac <__alt_data_end+0xfffcfbac>
 10500ac:	d8c01c17 	ldw	r3,112(sp)
 10500b0:	d8801b17 	ldw	r2,108(sp)
 10500b4:	d9001d87 	ldb	r4,118(sp)
 10500b8:	20000b26 	beq	r4,zero,10500e8 <___svfiprintf_internal_r+0xa2c>
 10500bc:	d9001d84 	addi	r4,sp,118
 10500c0:	18c00044 	addi	r3,r3,1
 10500c4:	10800044 	addi	r2,r2,1
 10500c8:	41000015 	stw	r4,0(r8)
 10500cc:	01000044 	movi	r4,1
 10500d0:	41000115 	stw	r4,4(r8)
 10500d4:	d8c01c15 	stw	r3,112(sp)
 10500d8:	d8801b15 	stw	r2,108(sp)
 10500dc:	010001c4 	movi	r4,7
 10500e0:	2080e116 	blt	r4,r2,1050468 <___svfiprintf_internal_r+0xdac>
 10500e4:	42000204 	addi	r8,r8,8
 10500e8:	dac02217 	ldw	r11,136(sp)
 10500ec:	58000b26 	beq	r11,zero,105011c <___svfiprintf_internal_r+0xa60>
 10500f0:	d9001d04 	addi	r4,sp,116
 10500f4:	18c00084 	addi	r3,r3,2
 10500f8:	10800044 	addi	r2,r2,1
 10500fc:	41000015 	stw	r4,0(r8)
 1050100:	01000084 	movi	r4,2
 1050104:	41000115 	stw	r4,4(r8)
 1050108:	d8c01c15 	stw	r3,112(sp)
 105010c:	d8801b15 	stw	r2,108(sp)
 1050110:	010001c4 	movi	r4,7
 1050114:	2080dd16 	blt	r4,r2,105048c <___svfiprintf_internal_r+0xdd0>
 1050118:	42000204 	addi	r8,r8,8
 105011c:	dac02617 	ldw	r11,152(sp)
 1050120:	01002004 	movi	r4,128
 1050124:	59008426 	beq	r11,r4,1050338 <___svfiprintf_internal_r+0xc7c>
 1050128:	dac02117 	ldw	r11,132(sp)
 105012c:	82e1c83a 	sub	r16,r16,r11
 1050130:	0400270e 	bge	zero,r16,10501d0 <___svfiprintf_internal_r+0xb14>
 1050134:	01c00404 	movi	r7,16
 1050138:	3c016a0e 	bge	r7,r16,10506e4 <___svfiprintf_internal_r+0x1028>
 105013c:	01404174 	movhi	r5,261
 1050140:	295b3304 	addi	r5,r5,27852
 1050144:	d9402215 	stw	r5,136(sp)
 1050148:	070001c4 	movi	fp,7
 105014c:	00000306 	br	105015c <___svfiprintf_internal_r+0xaa0>
 1050150:	843ffc04 	addi	r16,r16,-16
 1050154:	42000204 	addi	r8,r8,8
 1050158:	3c00130e 	bge	r7,r16,10501a8 <___svfiprintf_internal_r+0xaec>
 105015c:	18c00404 	addi	r3,r3,16
 1050160:	10800044 	addi	r2,r2,1
 1050164:	45000015 	stw	r20,0(r8)
 1050168:	41c00115 	stw	r7,4(r8)
 105016c:	d8c01c15 	stw	r3,112(sp)
 1050170:	d8801b15 	stw	r2,108(sp)
 1050174:	e0bff60e 	bge	fp,r2,1050150 <__alt_data_end+0xfffd0150>
 1050178:	d9801a04 	addi	r6,sp,104
 105017c:	b80b883a 	mov	r5,r23
 1050180:	a809883a 	mov	r4,r21
 1050184:	d9c02c15 	stw	r7,176(sp)
 1050188:	104f4ec0 	call	104f4ec <__ssprint_r>
 105018c:	d9c02c17 	ldw	r7,176(sp)
 1050190:	1000581e 	bne	r2,zero,10502f4 <___svfiprintf_internal_r+0xc38>
 1050194:	843ffc04 	addi	r16,r16,-16
 1050198:	d8c01c17 	ldw	r3,112(sp)
 105019c:	d8801b17 	ldw	r2,108(sp)
 10501a0:	d811883a 	mov	r8,sp
 10501a4:	3c3fed16 	blt	r7,r16,105015c <__alt_data_end+0xfffd015c>
 10501a8:	dac02217 	ldw	r11,136(sp)
 10501ac:	1c07883a 	add	r3,r3,r16
 10501b0:	10800044 	addi	r2,r2,1
 10501b4:	42c00015 	stw	r11,0(r8)
 10501b8:	44000115 	stw	r16,4(r8)
 10501bc:	d8c01c15 	stw	r3,112(sp)
 10501c0:	d8801b15 	stw	r2,108(sp)
 10501c4:	010001c4 	movi	r4,7
 10501c8:	20809e16 	blt	r4,r2,1050444 <___svfiprintf_internal_r+0xd88>
 10501cc:	42000204 	addi	r8,r8,8
 10501d0:	dac02117 	ldw	r11,132(sp)
 10501d4:	10800044 	addi	r2,r2,1
 10501d8:	44400015 	stw	r17,0(r8)
 10501dc:	58c7883a 	add	r3,r11,r3
 10501e0:	42c00115 	stw	r11,4(r8)
 10501e4:	d8c01c15 	stw	r3,112(sp)
 10501e8:	d8801b15 	stw	r2,108(sp)
 10501ec:	010001c4 	movi	r4,7
 10501f0:	20807f16 	blt	r4,r2,10503f0 <___svfiprintf_internal_r+0xd34>
 10501f4:	42000204 	addi	r8,r8,8
 10501f8:	9480010c 	andi	r18,r18,4
 10501fc:	90002926 	beq	r18,zero,10502a4 <___svfiprintf_internal_r+0xbe8>
 1050200:	dac02417 	ldw	r11,144(sp)
 1050204:	d8802017 	ldw	r2,128(sp)
 1050208:	58a1c83a 	sub	r16,r11,r2
 105020c:	0400250e 	bge	zero,r16,10502a4 <___svfiprintf_internal_r+0xbe8>
 1050210:	04400404 	movi	r17,16
 1050214:	d8801b17 	ldw	r2,108(sp)
 1050218:	8c017c0e 	bge	r17,r16,105080c <___svfiprintf_internal_r+0x1150>
 105021c:	01404174 	movhi	r5,261
 1050220:	295b3704 	addi	r5,r5,27868
 1050224:	d9402815 	stw	r5,160(sp)
 1050228:	048001c4 	movi	r18,7
 105022c:	00000306 	br	105023c <___svfiprintf_internal_r+0xb80>
 1050230:	843ffc04 	addi	r16,r16,-16
 1050234:	42000204 	addi	r8,r8,8
 1050238:	8c00110e 	bge	r17,r16,1050280 <___svfiprintf_internal_r+0xbc4>
 105023c:	18c00404 	addi	r3,r3,16
 1050240:	10800044 	addi	r2,r2,1
 1050244:	45800015 	stw	r22,0(r8)
 1050248:	44400115 	stw	r17,4(r8)
 105024c:	d8c01c15 	stw	r3,112(sp)
 1050250:	d8801b15 	stw	r2,108(sp)
 1050254:	90bff60e 	bge	r18,r2,1050230 <__alt_data_end+0xfffd0230>
 1050258:	d9801a04 	addi	r6,sp,104
 105025c:	b80b883a 	mov	r5,r23
 1050260:	a809883a 	mov	r4,r21
 1050264:	104f4ec0 	call	104f4ec <__ssprint_r>
 1050268:	1000221e 	bne	r2,zero,10502f4 <___svfiprintf_internal_r+0xc38>
 105026c:	843ffc04 	addi	r16,r16,-16
 1050270:	d8c01c17 	ldw	r3,112(sp)
 1050274:	d8801b17 	ldw	r2,108(sp)
 1050278:	d811883a 	mov	r8,sp
 105027c:	8c3fef16 	blt	r17,r16,105023c <__alt_data_end+0xfffd023c>
 1050280:	dac02817 	ldw	r11,160(sp)
 1050284:	1c07883a 	add	r3,r3,r16
 1050288:	10800044 	addi	r2,r2,1
 105028c:	42c00015 	stw	r11,0(r8)
 1050290:	44000115 	stw	r16,4(r8)
 1050294:	d8c01c15 	stw	r3,112(sp)
 1050298:	d8801b15 	stw	r2,108(sp)
 105029c:	010001c4 	movi	r4,7
 10502a0:	2080aa16 	blt	r4,r2,105054c <___svfiprintf_internal_r+0xe90>
 10502a4:	d8802417 	ldw	r2,144(sp)
 10502a8:	dac02017 	ldw	r11,128(sp)
 10502ac:	12c0010e 	bge	r2,r11,10502b4 <___svfiprintf_internal_r+0xbf8>
 10502b0:	5805883a 	mov	r2,r11
 10502b4:	dac02517 	ldw	r11,148(sp)
 10502b8:	5897883a 	add	r11,r11,r2
 10502bc:	dac02515 	stw	r11,148(sp)
 10502c0:	1800531e 	bne	r3,zero,1050410 <___svfiprintf_internal_r+0xd54>
 10502c4:	98800007 	ldb	r2,0(r19)
 10502c8:	d8001b15 	stw	zero,108(sp)
 10502cc:	d811883a 	mov	r8,sp
 10502d0:	103d231e 	bne	r2,zero,104f760 <__alt_data_end+0xfffcf760>
 10502d4:	9823883a 	mov	r17,r19
 10502d8:	003d3906 	br	104f7c0 <__alt_data_end+0xfffcf7c0>
 10502dc:	d8801c17 	ldw	r2,112(sp)
 10502e0:	10000426 	beq	r2,zero,10502f4 <___svfiprintf_internal_r+0xc38>
 10502e4:	d9402717 	ldw	r5,156(sp)
 10502e8:	d9002a17 	ldw	r4,168(sp)
 10502ec:	d9801a04 	addi	r6,sp,104
 10502f0:	104f4ec0 	call	104f4ec <__ssprint_r>
 10502f4:	dac02717 	ldw	r11,156(sp)
 10502f8:	d8802517 	ldw	r2,148(sp)
 10502fc:	58c0030b 	ldhu	r3,12(r11)
 1050300:	18c0100c 	andi	r3,r3,64
 1050304:	1801381e 	bne	r3,zero,10507e8 <___svfiprintf_internal_r+0x112c>
 1050308:	dfc03717 	ldw	ra,220(sp)
 105030c:	df003617 	ldw	fp,216(sp)
 1050310:	ddc03517 	ldw	r23,212(sp)
 1050314:	dd803417 	ldw	r22,208(sp)
 1050318:	dd403317 	ldw	r21,204(sp)
 105031c:	dd003217 	ldw	r20,200(sp)
 1050320:	dcc03117 	ldw	r19,196(sp)
 1050324:	dc803017 	ldw	r18,192(sp)
 1050328:	dc402f17 	ldw	r17,188(sp)
 105032c:	dc002e17 	ldw	r16,184(sp)
 1050330:	dec03804 	addi	sp,sp,224
 1050334:	f800283a 	ret
 1050338:	dac02417 	ldw	r11,144(sp)
 105033c:	d9002017 	ldw	r4,128(sp)
 1050340:	5939c83a 	sub	fp,r11,r4
 1050344:	073f780e 	bge	zero,fp,1050128 <__alt_data_end+0xfffd0128>
 1050348:	02400404 	movi	r9,16
 105034c:	4f01370e 	bge	r9,fp,105082c <___svfiprintf_internal_r+0x1170>
 1050350:	02c04174 	movhi	r11,261
 1050354:	5adb3304 	addi	r11,r11,27852
 1050358:	dac02215 	stw	r11,136(sp)
 105035c:	028001c4 	movi	r10,7
 1050360:	00000306 	br	1050370 <___svfiprintf_internal_r+0xcb4>
 1050364:	e73ffc04 	addi	fp,fp,-16
 1050368:	42000204 	addi	r8,r8,8
 105036c:	4f00150e 	bge	r9,fp,10503c4 <___svfiprintf_internal_r+0xd08>
 1050370:	18c00404 	addi	r3,r3,16
 1050374:	10800044 	addi	r2,r2,1
 1050378:	45000015 	stw	r20,0(r8)
 105037c:	42400115 	stw	r9,4(r8)
 1050380:	d8c01c15 	stw	r3,112(sp)
 1050384:	d8801b15 	stw	r2,108(sp)
 1050388:	50bff60e 	bge	r10,r2,1050364 <__alt_data_end+0xfffd0364>
 105038c:	d9801a04 	addi	r6,sp,104
 1050390:	b80b883a 	mov	r5,r23
 1050394:	a809883a 	mov	r4,r21
 1050398:	da402c15 	stw	r9,176(sp)
 105039c:	da802d15 	stw	r10,180(sp)
 10503a0:	104f4ec0 	call	104f4ec <__ssprint_r>
 10503a4:	da402c17 	ldw	r9,176(sp)
 10503a8:	da802d17 	ldw	r10,180(sp)
 10503ac:	103fd11e 	bne	r2,zero,10502f4 <__alt_data_end+0xfffd02f4>
 10503b0:	e73ffc04 	addi	fp,fp,-16
 10503b4:	d8c01c17 	ldw	r3,112(sp)
 10503b8:	d8801b17 	ldw	r2,108(sp)
 10503bc:	d811883a 	mov	r8,sp
 10503c0:	4f3feb16 	blt	r9,fp,1050370 <__alt_data_end+0xfffd0370>
 10503c4:	dac02217 	ldw	r11,136(sp)
 10503c8:	1f07883a 	add	r3,r3,fp
 10503cc:	10800044 	addi	r2,r2,1
 10503d0:	42c00015 	stw	r11,0(r8)
 10503d4:	47000115 	stw	fp,4(r8)
 10503d8:	d8c01c15 	stw	r3,112(sp)
 10503dc:	d8801b15 	stw	r2,108(sp)
 10503e0:	010001c4 	movi	r4,7
 10503e4:	2080b616 	blt	r4,r2,10506c0 <___svfiprintf_internal_r+0x1004>
 10503e8:	42000204 	addi	r8,r8,8
 10503ec:	003f4e06 	br	1050128 <__alt_data_end+0xfffd0128>
 10503f0:	d9801a04 	addi	r6,sp,104
 10503f4:	b80b883a 	mov	r5,r23
 10503f8:	a809883a 	mov	r4,r21
 10503fc:	104f4ec0 	call	104f4ec <__ssprint_r>
 1050400:	103fbc1e 	bne	r2,zero,10502f4 <__alt_data_end+0xfffd02f4>
 1050404:	d8c01c17 	ldw	r3,112(sp)
 1050408:	d811883a 	mov	r8,sp
 105040c:	003f7a06 	br	10501f8 <__alt_data_end+0xfffd01f8>
 1050410:	d9801a04 	addi	r6,sp,104
 1050414:	b80b883a 	mov	r5,r23
 1050418:	a809883a 	mov	r4,r21
 105041c:	104f4ec0 	call	104f4ec <__ssprint_r>
 1050420:	103fa826 	beq	r2,zero,10502c4 <__alt_data_end+0xfffd02c4>
 1050424:	003fb306 	br	10502f4 <__alt_data_end+0xfffd02f4>
 1050428:	d9801a04 	addi	r6,sp,104
 105042c:	b80b883a 	mov	r5,r23
 1050430:	a809883a 	mov	r4,r21
 1050434:	104f4ec0 	call	104f4ec <__ssprint_r>
 1050438:	103fae1e 	bne	r2,zero,10502f4 <__alt_data_end+0xfffd02f4>
 105043c:	d811883a 	mov	r8,sp
 1050440:	003cdc06 	br	104f7b4 <__alt_data_end+0xfffcf7b4>
 1050444:	d9801a04 	addi	r6,sp,104
 1050448:	b80b883a 	mov	r5,r23
 105044c:	a809883a 	mov	r4,r21
 1050450:	104f4ec0 	call	104f4ec <__ssprint_r>
 1050454:	103fa71e 	bne	r2,zero,10502f4 <__alt_data_end+0xfffd02f4>
 1050458:	d8c01c17 	ldw	r3,112(sp)
 105045c:	d8801b17 	ldw	r2,108(sp)
 1050460:	d811883a 	mov	r8,sp
 1050464:	003f5a06 	br	10501d0 <__alt_data_end+0xfffd01d0>
 1050468:	d9801a04 	addi	r6,sp,104
 105046c:	b80b883a 	mov	r5,r23
 1050470:	a809883a 	mov	r4,r21
 1050474:	104f4ec0 	call	104f4ec <__ssprint_r>
 1050478:	103f9e1e 	bne	r2,zero,10502f4 <__alt_data_end+0xfffd02f4>
 105047c:	d8c01c17 	ldw	r3,112(sp)
 1050480:	d8801b17 	ldw	r2,108(sp)
 1050484:	d811883a 	mov	r8,sp
 1050488:	003f1706 	br	10500e8 <__alt_data_end+0xfffd00e8>
 105048c:	d9801a04 	addi	r6,sp,104
 1050490:	b80b883a 	mov	r5,r23
 1050494:	a809883a 	mov	r4,r21
 1050498:	104f4ec0 	call	104f4ec <__ssprint_r>
 105049c:	103f951e 	bne	r2,zero,10502f4 <__alt_data_end+0xfffd02f4>
 10504a0:	d8c01c17 	ldw	r3,112(sp)
 10504a4:	d8801b17 	ldw	r2,108(sp)
 10504a8:	d811883a 	mov	r8,sp
 10504ac:	003f1b06 	br	105011c <__alt_data_end+0xfffd011c>
 10504b0:	d8001d85 	stb	zero,118(sp)
 10504b4:	80007b16 	blt	r16,zero,10506a4 <___svfiprintf_internal_r+0xfe8>
 10504b8:	00ffdfc4 	movi	r3,-129
 10504bc:	e244b03a 	or	r2,fp,r9
 10504c0:	90e4703a 	and	r18,r18,r3
 10504c4:	103d7026 	beq	r2,zero,104fa88 <__alt_data_end+0xfffcfa88>
 10504c8:	0015883a 	mov	r10,zero
 10504cc:	003d7206 	br	104fa98 <__alt_data_end+0xfffcfa98>
 10504d0:	d9801a04 	addi	r6,sp,104
 10504d4:	b80b883a 	mov	r5,r23
 10504d8:	a809883a 	mov	r4,r21
 10504dc:	104f4ec0 	call	104f4ec <__ssprint_r>
 10504e0:	103f841e 	bne	r2,zero,10502f4 <__alt_data_end+0xfffd02f4>
 10504e4:	d8c01c17 	ldw	r3,112(sp)
 10504e8:	d8801b17 	ldw	r2,108(sp)
 10504ec:	d811883a 	mov	r8,sp
 10504f0:	003ef006 	br	10500b4 <__alt_data_end+0xfffd00b4>
 10504f4:	9080100c 	andi	r2,r18,64
 10504f8:	d8001d85 	stb	zero,118(sp)
 10504fc:	dac02317 	ldw	r11,140(sp)
 1050500:	10008126 	beq	r2,zero,1050708 <___svfiprintf_internal_r+0x104c>
 1050504:	58800104 	addi	r2,r11,4
 1050508:	5f00000b 	ldhu	fp,0(r11)
 105050c:	0013883a 	mov	r9,zero
 1050510:	803ec30e 	bge	r16,zero,1050020 <__alt_data_end+0xfffd0020>
 1050514:	d8802315 	stw	r2,140(sp)
 1050518:	0015883a 	mov	r10,zero
 105051c:	e244b03a 	or	r2,fp,r9
 1050520:	103e371e 	bne	r2,zero,104fe00 <__alt_data_end+0xfffcfe00>
 1050524:	00800044 	movi	r2,1
 1050528:	10803fcc 	andi	r2,r2,255
 105052c:	00c00044 	movi	r3,1
 1050530:	10c06126 	beq	r2,r3,10506b8 <___svfiprintf_internal_r+0xffc>
 1050534:	00c00084 	movi	r3,2
 1050538:	10fd5526 	beq	r2,r3,104fa90 <__alt_data_end+0xfffcfa90>
 105053c:	003ed806 	br	10500a0 <__alt_data_end+0xfffd00a0>
 1050540:	d8802315 	stw	r2,140(sp)
 1050544:	98c00007 	ldb	r3,0(r19)
 1050548:	003cab06 	br	104f7f8 <__alt_data_end+0xfffcf7f8>
 105054c:	d9801a04 	addi	r6,sp,104
 1050550:	b80b883a 	mov	r5,r23
 1050554:	a809883a 	mov	r4,r21
 1050558:	104f4ec0 	call	104f4ec <__ssprint_r>
 105055c:	103f651e 	bne	r2,zero,10502f4 <__alt_data_end+0xfffd02f4>
 1050560:	d8c01c17 	ldw	r3,112(sp)
 1050564:	003f4f06 	br	10502a4 <__alt_data_end+0xfffd02a4>
 1050568:	00804174 	movhi	r2,261
 105056c:	109aca04 	addi	r2,r2,27432
 1050570:	d8802915 	stw	r2,164(sp)
 1050574:	003d4406 	br	104fa88 <__alt_data_end+0xfffcfa88>
 1050578:	dac02317 	ldw	r11,140(sp)
 105057c:	58800017 	ldw	r2,0(r11)
 1050580:	dac02517 	ldw	r11,148(sp)
 1050584:	5807d7fa 	srai	r3,r11,31
 1050588:	dac02317 	ldw	r11,140(sp)
 105058c:	10c00115 	stw	r3,4(r2)
 1050590:	5ac00104 	addi	r11,r11,4
 1050594:	dac02315 	stw	r11,140(sp)
 1050598:	dac02517 	ldw	r11,148(sp)
 105059c:	12c00015 	stw	r11,0(r2)
 10505a0:	003c6d06 	br	104f758 <__alt_data_end+0xfffcf758>
 10505a4:	9080100c 	andi	r2,r18,64
 10505a8:	dac02317 	ldw	r11,140(sp)
 10505ac:	103e5326 	beq	r2,zero,104fefc <__alt_data_end+0xfffcfefc>
 10505b0:	5f00000f 	ldh	fp,0(r11)
 10505b4:	5ac00104 	addi	r11,r11,4
 10505b8:	dac02315 	stw	r11,140(sp)
 10505bc:	e013d7fa 	srai	r9,fp,31
 10505c0:	4805883a 	mov	r2,r9
 10505c4:	003e0706 	br	104fde4 <__alt_data_end+0xfffcfde4>
 10505c8:	00800c04 	movi	r2,48
 10505cc:	d8801d05 	stb	r2,116(sp)
 10505d0:	d8c01d45 	stb	r3,117(sp)
 10505d4:	d8001d85 	stb	zero,118(sp)
 10505d8:	90800094 	ori	r2,r18,2
 10505dc:	80008f16 	blt	r16,zero,105081c <___svfiprintf_internal_r+0x1160>
 10505e0:	00bfdfc4 	movi	r2,-129
 10505e4:	90a4703a 	and	r18,r18,r2
 10505e8:	94800094 	ori	r18,r18,2
 10505ec:	0015883a 	mov	r10,zero
 10505f0:	003d2906 	br	104fa98 <__alt_data_end+0xfffcfa98>
 10505f4:	98c00007 	ldb	r3,0(r19)
 10505f8:	003c7f06 	br	104f7f8 <__alt_data_end+0xfffcf7f8>
 10505fc:	dac02317 	ldw	r11,140(sp)
 1050600:	0013883a 	mov	r9,zero
 1050604:	5f000017 	ldw	fp,0(r11)
 1050608:	5ac00104 	addi	r11,r11,4
 105060c:	dac02315 	stw	r11,140(sp)
 1050610:	003d1506 	br	104fa68 <__alt_data_end+0xfffcfa68>
 1050614:	9080100c 	andi	r2,r18,64
 1050618:	d8001d85 	stb	zero,118(sp)
 105061c:	dac02317 	ldw	r11,140(sp)
 1050620:	10003426 	beq	r2,zero,10506f4 <___svfiprintf_internal_r+0x1038>
 1050624:	58800104 	addi	r2,r11,4
 1050628:	5f00000b 	ldhu	fp,0(r11)
 105062c:	0013883a 	mov	r9,zero
 1050630:	803e950e 	bge	r16,zero,1050088 <__alt_data_end+0xfffd0088>
 1050634:	e246b03a 	or	r3,fp,r9
 1050638:	d8802315 	stw	r2,140(sp)
 105063c:	183d5a1e 	bne	r3,zero,104fba8 <__alt_data_end+0xfffcfba8>
 1050640:	0015883a 	mov	r10,zero
 1050644:	0005883a 	mov	r2,zero
 1050648:	003fb706 	br	1050528 <__alt_data_end+0xfffd0528>
 105064c:	98c00043 	ldbu	r3,1(r19)
 1050650:	94800814 	ori	r18,r18,32
 1050654:	9cc00044 	addi	r19,r19,1
 1050658:	18c03fcc 	andi	r3,r3,255
 105065c:	18c0201c 	xori	r3,r3,128
 1050660:	18ffe004 	addi	r3,r3,-128
 1050664:	003c6406 	br	104f7f8 <__alt_data_end+0xfffcf7f8>
 1050668:	d8c02315 	stw	r3,140(sp)
 105066c:	0015883a 	mov	r10,zero
 1050670:	003faa06 	br	105051c <__alt_data_end+0xfffd051c>
 1050674:	dac02317 	ldw	r11,140(sp)
 1050678:	58800017 	ldw	r2,0(r11)
 105067c:	5ac00104 	addi	r11,r11,4
 1050680:	dac02315 	stw	r11,140(sp)
 1050684:	dac02517 	ldw	r11,148(sp)
 1050688:	12c00015 	stw	r11,0(r2)
 105068c:	003c3206 	br	104f758 <__alt_data_end+0xfffcf758>
 1050690:	01004174 	movhi	r4,261
 1050694:	211aca04 	addi	r4,r4,27432
 1050698:	d9002915 	stw	r4,164(sp)
 105069c:	d8c02315 	stw	r3,140(sp)
 10506a0:	1025883a 	mov	r18,r2
 10506a4:	e244b03a 	or	r2,fp,r9
 10506a8:	103f871e 	bne	r2,zero,10504c8 <__alt_data_end+0xfffd04c8>
 10506ac:	0015883a 	mov	r10,zero
 10506b0:	00800084 	movi	r2,2
 10506b4:	003f9c06 	br	1050528 <__alt_data_end+0xfffd0528>
 10506b8:	0039883a 	mov	fp,zero
 10506bc:	003e5f06 	br	105003c <__alt_data_end+0xfffd003c>
 10506c0:	d9801a04 	addi	r6,sp,104
 10506c4:	b80b883a 	mov	r5,r23
 10506c8:	a809883a 	mov	r4,r21
 10506cc:	104f4ec0 	call	104f4ec <__ssprint_r>
 10506d0:	103f081e 	bne	r2,zero,10502f4 <__alt_data_end+0xfffd02f4>
 10506d4:	d8c01c17 	ldw	r3,112(sp)
 10506d8:	d8801b17 	ldw	r2,108(sp)
 10506dc:	d811883a 	mov	r8,sp
 10506e0:	003e9106 	br	1050128 <__alt_data_end+0xfffd0128>
 10506e4:	01004174 	movhi	r4,261
 10506e8:	211b3304 	addi	r4,r4,27852
 10506ec:	d9002215 	stw	r4,136(sp)
 10506f0:	003ead06 	br	10501a8 <__alt_data_end+0xfffd01a8>
 10506f4:	58800104 	addi	r2,r11,4
 10506f8:	5f000017 	ldw	fp,0(r11)
 10506fc:	0013883a 	mov	r9,zero
 1050700:	803e610e 	bge	r16,zero,1050088 <__alt_data_end+0xfffd0088>
 1050704:	003fcb06 	br	1050634 <__alt_data_end+0xfffd0634>
 1050708:	58800104 	addi	r2,r11,4
 105070c:	5f000017 	ldw	fp,0(r11)
 1050710:	0013883a 	mov	r9,zero
 1050714:	803e420e 	bge	r16,zero,1050020 <__alt_data_end+0xfffd0020>
 1050718:	003f7e06 	br	1050514 <__alt_data_end+0xfffd0514>
 105071c:	5f000017 	ldw	fp,0(r11)
 1050720:	5ac00104 	addi	r11,r11,4
 1050724:	0013883a 	mov	r9,zero
 1050728:	dac02315 	stw	r11,140(sp)
 105072c:	003cce06 	br	104fa68 <__alt_data_end+0xfffcfa68>
 1050730:	8809883a 	mov	r4,r17
 1050734:	da002c15 	stw	r8,176(sp)
 1050738:	1045c580 	call	1045c58 <strlen>
 105073c:	d8802115 	stw	r2,132(sp)
 1050740:	da801d83 	ldbu	r10,118(sp)
 1050744:	df002315 	stw	fp,140(sp)
 1050748:	0021883a 	mov	r16,zero
 105074c:	da002c17 	ldw	r8,176(sp)
 1050750:	003cf606 	br	104fb2c <__alt_data_end+0xfffcfb2c>
 1050754:	00800184 	movi	r2,6
 1050758:	1400012e 	bgeu	r2,r16,1050760 <___svfiprintf_internal_r+0x10a4>
 105075c:	1021883a 	mov	r16,r2
 1050760:	dc002115 	stw	r16,132(sp)
 1050764:	8005883a 	mov	r2,r16
 1050768:	80003c16 	blt	r16,zero,105085c <___svfiprintf_internal_r+0x11a0>
 105076c:	04404174 	movhi	r17,261
 1050770:	d8802015 	stw	r2,128(sp)
 1050774:	df002315 	stw	fp,140(sp)
 1050778:	8c5acf04 	addi	r17,r17,27452
 105077c:	003d2e06 	br	104fc38 <__alt_data_end+0xfffcfc38>
 1050780:	04001004 	movi	r16,64
 1050784:	800b883a 	mov	r5,r16
 1050788:	104cff00 	call	104cff0 <_malloc_r>
 105078c:	dac02717 	ldw	r11,156(sp)
 1050790:	58800015 	stw	r2,0(r11)
 1050794:	58800415 	stw	r2,16(r11)
 1050798:	10004826 	beq	r2,zero,10508bc <___svfiprintf_internal_r+0x1200>
 105079c:	dac02717 	ldw	r11,156(sp)
 10507a0:	5c000515 	stw	r16,20(r11)
 10507a4:	003bd906 	br	104f70c <__alt_data_end+0xfffcf70c>
 10507a8:	9080004c 	andi	r2,r18,1
 10507ac:	0015883a 	mov	r10,zero
 10507b0:	10000626 	beq	r2,zero,10507cc <___svfiprintf_internal_r+0x1110>
 10507b4:	dac02b17 	ldw	r11,172(sp)
 10507b8:	00800c04 	movi	r2,48
 10507bc:	d88019c5 	stb	r2,103(sp)
 10507c0:	dac02115 	stw	r11,132(sp)
 10507c4:	dc4019c4 	addi	r17,sp,103
 10507c8:	003cd806 	br	104fb2c <__alt_data_end+0xfffcfb2c>
 10507cc:	d8002115 	stw	zero,132(sp)
 10507d0:	dc401a04 	addi	r17,sp,104
 10507d4:	003cd506 	br	104fb2c <__alt_data_end+0xfffcfb2c>
 10507d8:	01004174 	movhi	r4,261
 10507dc:	211b3704 	addi	r4,r4,27868
 10507e0:	d9002815 	stw	r4,160(sp)
 10507e4:	003d4306 	br	104fcf4 <__alt_data_end+0xfffcfcf4>
 10507e8:	00bfffc4 	movi	r2,-1
 10507ec:	003ec606 	br	1050308 <__alt_data_end+0xfffd0308>
 10507f0:	00800044 	movi	r2,1
 10507f4:	10803fcc 	andi	r2,r2,255
 10507f8:	00c00044 	movi	r3,1
 10507fc:	10fd8026 	beq	r2,r3,104fe00 <__alt_data_end+0xfffcfe00>
 1050800:	00c00084 	movi	r3,2
 1050804:	10fca426 	beq	r2,r3,104fa98 <__alt_data_end+0xfffcfa98>
 1050808:	003ce806 	br	104fbac <__alt_data_end+0xfffcfbac>
 105080c:	01004174 	movhi	r4,261
 1050810:	211b3704 	addi	r4,r4,27868
 1050814:	d9002815 	stw	r4,160(sp)
 1050818:	003e9906 	br	1050280 <__alt_data_end+0xfffd0280>
 105081c:	1025883a 	mov	r18,r2
 1050820:	0015883a 	mov	r10,zero
 1050824:	00800084 	movi	r2,2
 1050828:	003ff206 	br	10507f4 <__alt_data_end+0xfffd07f4>
 105082c:	01404174 	movhi	r5,261
 1050830:	295b3304 	addi	r5,r5,27852
 1050834:	d9402215 	stw	r5,136(sp)
 1050838:	003ee206 	br	10503c4 <__alt_data_end+0xfffd03c4>
 105083c:	5827883a 	mov	r19,r11
 1050840:	0021883a 	mov	r16,zero
 1050844:	003bed06 	br	104f7fc <__alt_data_end+0xfffcf7fc>
 1050848:	dc002115 	stw	r16,132(sp)
 105084c:	da801d83 	ldbu	r10,118(sp)
 1050850:	df002315 	stw	fp,140(sp)
 1050854:	0021883a 	mov	r16,zero
 1050858:	003cb406 	br	104fb2c <__alt_data_end+0xfffcfb2c>
 105085c:	0005883a 	mov	r2,zero
 1050860:	003fc206 	br	105076c <__alt_data_end+0xfffd076c>
 1050864:	d8802317 	ldw	r2,140(sp)
 1050868:	98c00043 	ldbu	r3,1(r19)
 105086c:	5827883a 	mov	r19,r11
 1050870:	14000017 	ldw	r16,0(r2)
 1050874:	10800104 	addi	r2,r2,4
 1050878:	d8802315 	stw	r2,140(sp)
 105087c:	803f760e 	bge	r16,zero,1050658 <__alt_data_end+0xfffd0658>
 1050880:	18c03fcc 	andi	r3,r3,255
 1050884:	18c0201c 	xori	r3,r3,128
 1050888:	043fffc4 	movi	r16,-1
 105088c:	18ffe004 	addi	r3,r3,-128
 1050890:	003bd906 	br	104f7f8 <__alt_data_end+0xfffcf7f8>
 1050894:	d9c01d85 	stb	r7,118(sp)
 1050898:	003cb606 	br	104fb74 <__alt_data_end+0xfffcfb74>
 105089c:	d9c01d85 	stb	r7,118(sp)
 10508a0:	003d2106 	br	104fd28 <__alt_data_end+0xfffcfd28>
 10508a4:	d9c01d85 	stb	r7,118(sp)
 10508a8:	003d8e06 	br	104fee4 <__alt_data_end+0xfffcfee4>
 10508ac:	d9c01d85 	stb	r7,118(sp)
 10508b0:	003db306 	br	104ff80 <__alt_data_end+0xfffcff80>
 10508b4:	d9c01d85 	stb	r7,118(sp)
 10508b8:	003c8a06 	br	104fae4 <__alt_data_end+0xfffcfae4>
 10508bc:	dac02a17 	ldw	r11,168(sp)
 10508c0:	00800304 	movi	r2,12
 10508c4:	58800015 	stw	r2,0(r11)
 10508c8:	00bfffc4 	movi	r2,-1
 10508cc:	003e8e06 	br	1050308 <__alt_data_end+0xfffd0308>
 10508d0:	d9c01d85 	stb	r7,118(sp)
 10508d4:	003dc706 	br	104fff4 <__alt_data_end+0xfffcfff4>
 10508d8:	d9c01d85 	stb	r7,118(sp)
 10508dc:	003ddf06 	br	105005c <__alt_data_end+0xfffd005c>
 10508e0:	d9c01d85 	stb	r7,118(sp)
 10508e4:	003d3706 	br	104fdc4 <__alt_data_end+0xfffcfdc4>
 10508e8:	d9c01d85 	stb	r7,118(sp)
 10508ec:	003c5406 	br	104fa40 <__alt_data_end+0xfffcfa40>
 10508f0:	d9c01d85 	stb	r7,118(sp)
 10508f4:	003d1d06 	br	104fd6c <__alt_data_end+0xfffcfd6c>

010508f8 <__sprint_r.part.0>:
 10508f8:	28801917 	ldw	r2,100(r5)
 10508fc:	defff604 	addi	sp,sp,-40
 1050900:	dd400515 	stw	r21,20(sp)
 1050904:	dfc00915 	stw	ra,36(sp)
 1050908:	df000815 	stw	fp,32(sp)
 105090c:	ddc00715 	stw	r23,28(sp)
 1050910:	dd800615 	stw	r22,24(sp)
 1050914:	dd000415 	stw	r20,16(sp)
 1050918:	dcc00315 	stw	r19,12(sp)
 105091c:	dc800215 	stw	r18,8(sp)
 1050920:	dc400115 	stw	r17,4(sp)
 1050924:	dc000015 	stw	r16,0(sp)
 1050928:	1088000c 	andi	r2,r2,8192
 105092c:	302b883a 	mov	r21,r6
 1050930:	10002e26 	beq	r2,zero,10509ec <__sprint_r.part.0+0xf4>
 1050934:	30800217 	ldw	r2,8(r6)
 1050938:	35800017 	ldw	r22,0(r6)
 105093c:	10002926 	beq	r2,zero,10509e4 <__sprint_r.part.0+0xec>
 1050940:	2827883a 	mov	r19,r5
 1050944:	2029883a 	mov	r20,r4
 1050948:	b5c00104 	addi	r23,r22,4
 105094c:	04bfffc4 	movi	r18,-1
 1050950:	bc400017 	ldw	r17,0(r23)
 1050954:	b4000017 	ldw	r16,0(r22)
 1050958:	0039883a 	mov	fp,zero
 105095c:	8822d0ba 	srli	r17,r17,2
 1050960:	8800031e 	bne	r17,zero,1050970 <__sprint_r.part.0+0x78>
 1050964:	00001806 	br	10509c8 <__sprint_r.part.0+0xd0>
 1050968:	84000104 	addi	r16,r16,4
 105096c:	8f001526 	beq	r17,fp,10509c4 <__sprint_r.part.0+0xcc>
 1050970:	81400017 	ldw	r5,0(r16)
 1050974:	980d883a 	mov	r6,r19
 1050978:	a009883a 	mov	r4,r20
 105097c:	10523200 	call	1052320 <_fputwc_r>
 1050980:	e7000044 	addi	fp,fp,1
 1050984:	14bff81e 	bne	r2,r18,1050968 <__alt_data_end+0xfffd0968>
 1050988:	9005883a 	mov	r2,r18
 105098c:	a8000215 	stw	zero,8(r21)
 1050990:	a8000115 	stw	zero,4(r21)
 1050994:	dfc00917 	ldw	ra,36(sp)
 1050998:	df000817 	ldw	fp,32(sp)
 105099c:	ddc00717 	ldw	r23,28(sp)
 10509a0:	dd800617 	ldw	r22,24(sp)
 10509a4:	dd400517 	ldw	r21,20(sp)
 10509a8:	dd000417 	ldw	r20,16(sp)
 10509ac:	dcc00317 	ldw	r19,12(sp)
 10509b0:	dc800217 	ldw	r18,8(sp)
 10509b4:	dc400117 	ldw	r17,4(sp)
 10509b8:	dc000017 	ldw	r16,0(sp)
 10509bc:	dec00a04 	addi	sp,sp,40
 10509c0:	f800283a 	ret
 10509c4:	a8800217 	ldw	r2,8(r21)
 10509c8:	8c63883a 	add	r17,r17,r17
 10509cc:	8c63883a 	add	r17,r17,r17
 10509d0:	1445c83a 	sub	r2,r2,r17
 10509d4:	a8800215 	stw	r2,8(r21)
 10509d8:	b5800204 	addi	r22,r22,8
 10509dc:	bdc00204 	addi	r23,r23,8
 10509e0:	103fdb1e 	bne	r2,zero,1050950 <__alt_data_end+0xfffd0950>
 10509e4:	0005883a 	mov	r2,zero
 10509e8:	003fe806 	br	105098c <__alt_data_end+0xfffd098c>
 10509ec:	104c7140 	call	104c714 <__sfvwrite_r>
 10509f0:	003fe606 	br	105098c <__alt_data_end+0xfffd098c>

010509f4 <__sprint_r>:
 10509f4:	30c00217 	ldw	r3,8(r6)
 10509f8:	18000126 	beq	r3,zero,1050a00 <__sprint_r+0xc>
 10509fc:	10508f81 	jmpi	10508f8 <__sprint_r.part.0>
 1050a00:	30000115 	stw	zero,4(r6)
 1050a04:	0005883a 	mov	r2,zero
 1050a08:	f800283a 	ret

01050a0c <___vfiprintf_internal_r>:
 1050a0c:	deffc904 	addi	sp,sp,-220
 1050a10:	df003515 	stw	fp,212(sp)
 1050a14:	dd003115 	stw	r20,196(sp)
 1050a18:	dfc03615 	stw	ra,216(sp)
 1050a1c:	ddc03415 	stw	r23,208(sp)
 1050a20:	dd803315 	stw	r22,204(sp)
 1050a24:	dd403215 	stw	r21,200(sp)
 1050a28:	dcc03015 	stw	r19,192(sp)
 1050a2c:	dc802f15 	stw	r18,188(sp)
 1050a30:	dc402e15 	stw	r17,184(sp)
 1050a34:	dc002d15 	stw	r16,180(sp)
 1050a38:	d9002015 	stw	r4,128(sp)
 1050a3c:	d9c02215 	stw	r7,136(sp)
 1050a40:	2829883a 	mov	r20,r5
 1050a44:	3039883a 	mov	fp,r6
 1050a48:	20000226 	beq	r4,zero,1050a54 <___vfiprintf_internal_r+0x48>
 1050a4c:	20800e17 	ldw	r2,56(r4)
 1050a50:	1000cf26 	beq	r2,zero,1050d90 <___vfiprintf_internal_r+0x384>
 1050a54:	a080030b 	ldhu	r2,12(r20)
 1050a58:	10c8000c 	andi	r3,r2,8192
 1050a5c:	1800061e 	bne	r3,zero,1050a78 <___vfiprintf_internal_r+0x6c>
 1050a60:	a1001917 	ldw	r4,100(r20)
 1050a64:	00f7ffc4 	movi	r3,-8193
 1050a68:	10880014 	ori	r2,r2,8192
 1050a6c:	20c6703a 	and	r3,r4,r3
 1050a70:	a080030d 	sth	r2,12(r20)
 1050a74:	a0c01915 	stw	r3,100(r20)
 1050a78:	10c0020c 	andi	r3,r2,8
 1050a7c:	1800a926 	beq	r3,zero,1050d24 <___vfiprintf_internal_r+0x318>
 1050a80:	a0c00417 	ldw	r3,16(r20)
 1050a84:	1800a726 	beq	r3,zero,1050d24 <___vfiprintf_internal_r+0x318>
 1050a88:	1080068c 	andi	r2,r2,26
 1050a8c:	00c00284 	movi	r3,10
 1050a90:	10c0ac26 	beq	r2,r3,1050d44 <___vfiprintf_internal_r+0x338>
 1050a94:	da801a04 	addi	r10,sp,104
 1050a98:	da801e15 	stw	r10,120(sp)
 1050a9c:	d8801e17 	ldw	r2,120(sp)
 1050aa0:	da8019c4 	addi	r10,sp,103
 1050aa4:	05804174 	movhi	r22,261
 1050aa8:	05c04174 	movhi	r23,261
 1050aac:	da801f15 	stw	r10,124(sp)
 1050ab0:	1295c83a 	sub	r10,r2,r10
 1050ab4:	b59b3f04 	addi	r22,r22,27900
 1050ab8:	bddb3b04 	addi	r23,r23,27884
 1050abc:	dec01a15 	stw	sp,104(sp)
 1050ac0:	d8001c15 	stw	zero,112(sp)
 1050ac4:	d8001b15 	stw	zero,108(sp)
 1050ac8:	d8002615 	stw	zero,152(sp)
 1050acc:	d8002315 	stw	zero,140(sp)
 1050ad0:	da802715 	stw	r10,156(sp)
 1050ad4:	d811883a 	mov	r8,sp
 1050ad8:	dd002115 	stw	r20,132(sp)
 1050adc:	e021883a 	mov	r16,fp
 1050ae0:	80800007 	ldb	r2,0(r16)
 1050ae4:	1003ea26 	beq	r2,zero,1051a90 <___vfiprintf_internal_r+0x1084>
 1050ae8:	00c00944 	movi	r3,37
 1050aec:	8025883a 	mov	r18,r16
 1050af0:	10c0021e 	bne	r2,r3,1050afc <___vfiprintf_internal_r+0xf0>
 1050af4:	00001606 	br	1050b50 <___vfiprintf_internal_r+0x144>
 1050af8:	10c00326 	beq	r2,r3,1050b08 <___vfiprintf_internal_r+0xfc>
 1050afc:	94800044 	addi	r18,r18,1
 1050b00:	90800007 	ldb	r2,0(r18)
 1050b04:	103ffc1e 	bne	r2,zero,1050af8 <__alt_data_end+0xfffd0af8>
 1050b08:	9423c83a 	sub	r17,r18,r16
 1050b0c:	88001026 	beq	r17,zero,1050b50 <___vfiprintf_internal_r+0x144>
 1050b10:	d8c01c17 	ldw	r3,112(sp)
 1050b14:	d8801b17 	ldw	r2,108(sp)
 1050b18:	44000015 	stw	r16,0(r8)
 1050b1c:	88c7883a 	add	r3,r17,r3
 1050b20:	10800044 	addi	r2,r2,1
 1050b24:	44400115 	stw	r17,4(r8)
 1050b28:	d8c01c15 	stw	r3,112(sp)
 1050b2c:	d8801b15 	stw	r2,108(sp)
 1050b30:	010001c4 	movi	r4,7
 1050b34:	2080760e 	bge	r4,r2,1050d10 <___vfiprintf_internal_r+0x304>
 1050b38:	1803821e 	bne	r3,zero,1051944 <___vfiprintf_internal_r+0xf38>
 1050b3c:	da802317 	ldw	r10,140(sp)
 1050b40:	d8001b15 	stw	zero,108(sp)
 1050b44:	d811883a 	mov	r8,sp
 1050b48:	5455883a 	add	r10,r10,r17
 1050b4c:	da802315 	stw	r10,140(sp)
 1050b50:	90800007 	ldb	r2,0(r18)
 1050b54:	10044626 	beq	r2,zero,1051c70 <___vfiprintf_internal_r+0x1264>
 1050b58:	90c00047 	ldb	r3,1(r18)
 1050b5c:	94000044 	addi	r16,r18,1
 1050b60:	d8001d85 	stb	zero,118(sp)
 1050b64:	0009883a 	mov	r4,zero
 1050b68:	000f883a 	mov	r7,zero
 1050b6c:	027fffc4 	movi	r9,-1
 1050b70:	0023883a 	mov	r17,zero
 1050b74:	0029883a 	mov	r20,zero
 1050b78:	01401604 	movi	r5,88
 1050b7c:	01800244 	movi	r6,9
 1050b80:	03400a84 	movi	r13,42
 1050b84:	03001b04 	movi	r12,108
 1050b88:	84000044 	addi	r16,r16,1
 1050b8c:	18bff804 	addi	r2,r3,-32
 1050b90:	28827336 	bltu	r5,r2,1051560 <___vfiprintf_internal_r+0xb54>
 1050b94:	100490ba 	slli	r2,r2,2
 1050b98:	02804174 	movhi	r10,261
 1050b9c:	5282eb04 	addi	r10,r10,2988
 1050ba0:	1285883a 	add	r2,r2,r10
 1050ba4:	10800017 	ldw	r2,0(r2)
 1050ba8:	1000683a 	jmp	r2
 1050bac:	01051294 	movui	r4,5194
 1050bb0:	01051560 	cmpeqi	r4,zero,5205
 1050bb4:	01051560 	cmpeqi	r4,zero,5205
 1050bb8:	010512b4 	movhi	r4,5194
 1050bbc:	01051560 	cmpeqi	r4,zero,5205
 1050bc0:	01051560 	cmpeqi	r4,zero,5205
 1050bc4:	01051560 	cmpeqi	r4,zero,5205
 1050bc8:	01051560 	cmpeqi	r4,zero,5205
 1050bcc:	01051560 	cmpeqi	r4,zero,5205
 1050bd0:	01051560 	cmpeqi	r4,zero,5205
 1050bd4:	0105149c 	xori	r4,zero,5202
 1050bd8:	010514b8 	rdprs	r4,zero,5202
 1050bdc:	01051560 	cmpeqi	r4,zero,5205
 1050be0:	01050da0 	cmpeqi	r4,zero,5174
 1050be4:	010514c8 	cmpgei	r4,zero,5203
 1050be8:	01051560 	cmpeqi	r4,zero,5205
 1050bec:	010512c0 	call	10512c <__alt_mem_onchip_memory2-0xf3aed4>
 1050bf0:	010512cc 	andi	r4,zero,5195
 1050bf4:	010512cc 	andi	r4,zero,5195
 1050bf8:	010512cc 	andi	r4,zero,5195
 1050bfc:	010512cc 	andi	r4,zero,5195
 1050c00:	010512cc 	andi	r4,zero,5195
 1050c04:	010512cc 	andi	r4,zero,5195
 1050c08:	010512cc 	andi	r4,zero,5195
 1050c0c:	010512cc 	andi	r4,zero,5195
 1050c10:	010512cc 	andi	r4,zero,5195
 1050c14:	01051560 	cmpeqi	r4,zero,5205
 1050c18:	01051560 	cmpeqi	r4,zero,5205
 1050c1c:	01051560 	cmpeqi	r4,zero,5205
 1050c20:	01051560 	cmpeqi	r4,zero,5205
 1050c24:	01051560 	cmpeqi	r4,zero,5205
 1050c28:	01051560 	cmpeqi	r4,zero,5205
 1050c2c:	01051560 	cmpeqi	r4,zero,5205
 1050c30:	01051560 	cmpeqi	r4,zero,5205
 1050c34:	01051560 	cmpeqi	r4,zero,5205
 1050c38:	01051560 	cmpeqi	r4,zero,5205
 1050c3c:	010512f8 	rdprs	r4,zero,5195
 1050c40:	01051560 	cmpeqi	r4,zero,5205
 1050c44:	01051560 	cmpeqi	r4,zero,5205
 1050c48:	01051560 	cmpeqi	r4,zero,5205
 1050c4c:	01051560 	cmpeqi	r4,zero,5205
 1050c50:	01051560 	cmpeqi	r4,zero,5205
 1050c54:	01051560 	cmpeqi	r4,zero,5205
 1050c58:	01051560 	cmpeqi	r4,zero,5205
 1050c5c:	01051560 	cmpeqi	r4,zero,5205
 1050c60:	01051560 	cmpeqi	r4,zero,5205
 1050c64:	01051560 	cmpeqi	r4,zero,5205
 1050c68:	01051330 	cmpltui	r4,zero,5196
 1050c6c:	01051560 	cmpeqi	r4,zero,5205
 1050c70:	01051560 	cmpeqi	r4,zero,5205
 1050c74:	01051560 	cmpeqi	r4,zero,5205
 1050c78:	01051560 	cmpeqi	r4,zero,5205
 1050c7c:	01051560 	cmpeqi	r4,zero,5205
 1050c80:	01051388 	cmpgei	r4,zero,5198
 1050c84:	01051560 	cmpeqi	r4,zero,5205
 1050c88:	01051560 	cmpeqi	r4,zero,5205
 1050c8c:	010513f8 	rdprs	r4,zero,5199
 1050c90:	01051560 	cmpeqi	r4,zero,5205
 1050c94:	01051560 	cmpeqi	r4,zero,5205
 1050c98:	01051560 	cmpeqi	r4,zero,5205
 1050c9c:	01051560 	cmpeqi	r4,zero,5205
 1050ca0:	01051560 	cmpeqi	r4,zero,5205
 1050ca4:	01051560 	cmpeqi	r4,zero,5205
 1050ca8:	01051560 	cmpeqi	r4,zero,5205
 1050cac:	01051560 	cmpeqi	r4,zero,5205
 1050cb0:	01051560 	cmpeqi	r4,zero,5205
 1050cb4:	01051560 	cmpeqi	r4,zero,5205
 1050cb8:	010511a4 	muli	r4,zero,5190
 1050cbc:	010511d0 	cmplti	r4,zero,5191
 1050cc0:	01051560 	cmpeqi	r4,zero,5205
 1050cc4:	01051560 	cmpeqi	r4,zero,5205
 1050cc8:	01051560 	cmpeqi	r4,zero,5205
 1050ccc:	01051508 	cmpgei	r4,zero,5204
 1050cd0:	010511d0 	cmplti	r4,zero,5191
 1050cd4:	01051560 	cmpeqi	r4,zero,5205
 1050cd8:	01051560 	cmpeqi	r4,zero,5205
 1050cdc:	01051064 	muli	r4,zero,5185
 1050ce0:	01051560 	cmpeqi	r4,zero,5205
 1050ce4:	01051074 	movhi	r4,5185
 1050ce8:	010510b0 	cmpltui	r4,zero,5186
 1050cec:	01050dac 	andhi	r4,zero,5174
 1050cf0:	01051058 	cmpnei	r4,zero,5185
 1050cf4:	01051560 	cmpeqi	r4,zero,5205
 1050cf8:	01051434 	movhi	r4,5200
 1050cfc:	01051560 	cmpeqi	r4,zero,5205
 1050d00:	0105148c 	andi	r4,zero,5202
 1050d04:	01051560 	cmpeqi	r4,zero,5205
 1050d08:	01051560 	cmpeqi	r4,zero,5205
 1050d0c:	01051150 	cmplti	r4,zero,5189
 1050d10:	42000204 	addi	r8,r8,8
 1050d14:	da802317 	ldw	r10,140(sp)
 1050d18:	5455883a 	add	r10,r10,r17
 1050d1c:	da802315 	stw	r10,140(sp)
 1050d20:	003f8b06 	br	1050b50 <__alt_data_end+0xfffd0b50>
 1050d24:	d9002017 	ldw	r4,128(sp)
 1050d28:	a00b883a 	mov	r5,r20
 1050d2c:	104a2bc0 	call	104a2bc <__swsetup_r>
 1050d30:	1003b11e 	bne	r2,zero,1051bf8 <___vfiprintf_internal_r+0x11ec>
 1050d34:	a080030b 	ldhu	r2,12(r20)
 1050d38:	00c00284 	movi	r3,10
 1050d3c:	1080068c 	andi	r2,r2,26
 1050d40:	10ff541e 	bne	r2,r3,1050a94 <__alt_data_end+0xfffd0a94>
 1050d44:	a080038f 	ldh	r2,14(r20)
 1050d48:	103f5216 	blt	r2,zero,1050a94 <__alt_data_end+0xfffd0a94>
 1050d4c:	d9c02217 	ldw	r7,136(sp)
 1050d50:	d9002017 	ldw	r4,128(sp)
 1050d54:	e00d883a 	mov	r6,fp
 1050d58:	a00b883a 	mov	r5,r20
 1050d5c:	1051e840 	call	1051e84 <__sbprintf>
 1050d60:	dfc03617 	ldw	ra,216(sp)
 1050d64:	df003517 	ldw	fp,212(sp)
 1050d68:	ddc03417 	ldw	r23,208(sp)
 1050d6c:	dd803317 	ldw	r22,204(sp)
 1050d70:	dd403217 	ldw	r21,200(sp)
 1050d74:	dd003117 	ldw	r20,196(sp)
 1050d78:	dcc03017 	ldw	r19,192(sp)
 1050d7c:	dc802f17 	ldw	r18,188(sp)
 1050d80:	dc402e17 	ldw	r17,184(sp)
 1050d84:	dc002d17 	ldw	r16,180(sp)
 1050d88:	dec03704 	addi	sp,sp,220
 1050d8c:	f800283a 	ret
 1050d90:	104c2900 	call	104c290 <__sinit>
 1050d94:	003f2f06 	br	1050a54 <__alt_data_end+0xfffd0a54>
 1050d98:	0463c83a 	sub	r17,zero,r17
 1050d9c:	d8802215 	stw	r2,136(sp)
 1050da0:	a5000114 	ori	r20,r20,4
 1050da4:	80c00007 	ldb	r3,0(r16)
 1050da8:	003f7706 	br	1050b88 <__alt_data_end+0xfffd0b88>
 1050dac:	00800c04 	movi	r2,48
 1050db0:	da802217 	ldw	r10,136(sp)
 1050db4:	d8801d05 	stb	r2,116(sp)
 1050db8:	00801e04 	movi	r2,120
 1050dbc:	d8801d45 	stb	r2,117(sp)
 1050dc0:	d8001d85 	stb	zero,118(sp)
 1050dc4:	50c00104 	addi	r3,r10,4
 1050dc8:	54800017 	ldw	r18,0(r10)
 1050dcc:	0027883a 	mov	r19,zero
 1050dd0:	a0800094 	ori	r2,r20,2
 1050dd4:	48030b16 	blt	r9,zero,1051a04 <___vfiprintf_internal_r+0xff8>
 1050dd8:	00bfdfc4 	movi	r2,-129
 1050ddc:	a096703a 	and	r11,r20,r2
 1050de0:	d8c02215 	stw	r3,136(sp)
 1050de4:	5d000094 	ori	r20,r11,2
 1050de8:	90032b1e 	bne	r18,zero,1051a98 <___vfiprintf_internal_r+0x108c>
 1050dec:	00804174 	movhi	r2,261
 1050df0:	109aca04 	addi	r2,r2,27432
 1050df4:	d8802615 	stw	r2,152(sp)
 1050df8:	0039883a 	mov	fp,zero
 1050dfc:	48017b1e 	bne	r9,zero,10513ec <___vfiprintf_internal_r+0x9e0>
 1050e00:	0013883a 	mov	r9,zero
 1050e04:	0027883a 	mov	r19,zero
 1050e08:	dd401a04 	addi	r21,sp,104
 1050e0c:	4825883a 	mov	r18,r9
 1050e10:	4cc0010e 	bge	r9,r19,1050e18 <___vfiprintf_internal_r+0x40c>
 1050e14:	9825883a 	mov	r18,r19
 1050e18:	e7003fcc 	andi	fp,fp,255
 1050e1c:	e700201c 	xori	fp,fp,128
 1050e20:	e73fe004 	addi	fp,fp,-128
 1050e24:	e0000126 	beq	fp,zero,1050e2c <___vfiprintf_internal_r+0x420>
 1050e28:	94800044 	addi	r18,r18,1
 1050e2c:	a380008c 	andi	r14,r20,2
 1050e30:	70000126 	beq	r14,zero,1050e38 <___vfiprintf_internal_r+0x42c>
 1050e34:	94800084 	addi	r18,r18,2
 1050e38:	a700210c 	andi	fp,r20,132
 1050e3c:	e001df1e 	bne	fp,zero,10515bc <___vfiprintf_internal_r+0xbb0>
 1050e40:	8c87c83a 	sub	r3,r17,r18
 1050e44:	00c1dd0e 	bge	zero,r3,10515bc <___vfiprintf_internal_r+0xbb0>
 1050e48:	01c00404 	movi	r7,16
 1050e4c:	d8801c17 	ldw	r2,112(sp)
 1050e50:	38c3ad0e 	bge	r7,r3,1051d08 <___vfiprintf_internal_r+0x12fc>
 1050e54:	02804174 	movhi	r10,261
 1050e58:	529b3f04 	addi	r10,r10,27900
 1050e5c:	dc002915 	stw	r16,164(sp)
 1050e60:	d9801b17 	ldw	r6,108(sp)
 1050e64:	da802415 	stw	r10,144(sp)
 1050e68:	03c001c4 	movi	r15,7
 1050e6c:	da402515 	stw	r9,148(sp)
 1050e70:	db802815 	stw	r14,160(sp)
 1050e74:	1821883a 	mov	r16,r3
 1050e78:	00000506 	br	1050e90 <___vfiprintf_internal_r+0x484>
 1050e7c:	31400084 	addi	r5,r6,2
 1050e80:	42000204 	addi	r8,r8,8
 1050e84:	200d883a 	mov	r6,r4
 1050e88:	843ffc04 	addi	r16,r16,-16
 1050e8c:	3c000d0e 	bge	r7,r16,1050ec4 <___vfiprintf_internal_r+0x4b8>
 1050e90:	10800404 	addi	r2,r2,16
 1050e94:	31000044 	addi	r4,r6,1
 1050e98:	45800015 	stw	r22,0(r8)
 1050e9c:	41c00115 	stw	r7,4(r8)
 1050ea0:	d8801c15 	stw	r2,112(sp)
 1050ea4:	d9001b15 	stw	r4,108(sp)
 1050ea8:	793ff40e 	bge	r15,r4,1050e7c <__alt_data_end+0xfffd0e7c>
 1050eac:	1001b51e 	bne	r2,zero,1051584 <___vfiprintf_internal_r+0xb78>
 1050eb0:	843ffc04 	addi	r16,r16,-16
 1050eb4:	000d883a 	mov	r6,zero
 1050eb8:	01400044 	movi	r5,1
 1050ebc:	d811883a 	mov	r8,sp
 1050ec0:	3c3ff316 	blt	r7,r16,1050e90 <__alt_data_end+0xfffd0e90>
 1050ec4:	8007883a 	mov	r3,r16
 1050ec8:	da402517 	ldw	r9,148(sp)
 1050ecc:	db802817 	ldw	r14,160(sp)
 1050ed0:	dc002917 	ldw	r16,164(sp)
 1050ed4:	da802417 	ldw	r10,144(sp)
 1050ed8:	1885883a 	add	r2,r3,r2
 1050edc:	40c00115 	stw	r3,4(r8)
 1050ee0:	42800015 	stw	r10,0(r8)
 1050ee4:	d8801c15 	stw	r2,112(sp)
 1050ee8:	d9401b15 	stw	r5,108(sp)
 1050eec:	00c001c4 	movi	r3,7
 1050ef0:	19426016 	blt	r3,r5,1051874 <___vfiprintf_internal_r+0xe68>
 1050ef4:	d8c01d87 	ldb	r3,118(sp)
 1050ef8:	42000204 	addi	r8,r8,8
 1050efc:	29000044 	addi	r4,r5,1
 1050f00:	1801b31e 	bne	r3,zero,10515d0 <___vfiprintf_internal_r+0xbc4>
 1050f04:	7001c026 	beq	r14,zero,1051608 <___vfiprintf_internal_r+0xbfc>
 1050f08:	d8c01d04 	addi	r3,sp,116
 1050f0c:	10800084 	addi	r2,r2,2
 1050f10:	40c00015 	stw	r3,0(r8)
 1050f14:	00c00084 	movi	r3,2
 1050f18:	40c00115 	stw	r3,4(r8)
 1050f1c:	d8801c15 	stw	r2,112(sp)
 1050f20:	d9001b15 	stw	r4,108(sp)
 1050f24:	00c001c4 	movi	r3,7
 1050f28:	1902650e 	bge	r3,r4,10518c0 <___vfiprintf_internal_r+0xeb4>
 1050f2c:	10029a1e 	bne	r2,zero,1051998 <___vfiprintf_internal_r+0xf8c>
 1050f30:	00c02004 	movi	r3,128
 1050f34:	01000044 	movi	r4,1
 1050f38:	000b883a 	mov	r5,zero
 1050f3c:	d811883a 	mov	r8,sp
 1050f40:	e0c1b31e 	bne	fp,r3,1051610 <___vfiprintf_internal_r+0xc04>
 1050f44:	8cb9c83a 	sub	fp,r17,r18
 1050f48:	0701b10e 	bge	zero,fp,1051610 <___vfiprintf_internal_r+0xc04>
 1050f4c:	01c00404 	movi	r7,16
 1050f50:	3f03890e 	bge	r7,fp,1051d78 <___vfiprintf_internal_r+0x136c>
 1050f54:	00c04174 	movhi	r3,261
 1050f58:	18db3b04 	addi	r3,r3,27884
 1050f5c:	d8c02415 	stw	r3,144(sp)
 1050f60:	8007883a 	mov	r3,r16
 1050f64:	034001c4 	movi	r13,7
 1050f68:	e021883a 	mov	r16,fp
 1050f6c:	da402515 	stw	r9,148(sp)
 1050f70:	1839883a 	mov	fp,r3
 1050f74:	00000506 	br	1050f8c <___vfiprintf_internal_r+0x580>
 1050f78:	29800084 	addi	r6,r5,2
 1050f7c:	42000204 	addi	r8,r8,8
 1050f80:	180b883a 	mov	r5,r3
 1050f84:	843ffc04 	addi	r16,r16,-16
 1050f88:	3c000d0e 	bge	r7,r16,1050fc0 <___vfiprintf_internal_r+0x5b4>
 1050f8c:	10800404 	addi	r2,r2,16
 1050f90:	28c00044 	addi	r3,r5,1
 1050f94:	45c00015 	stw	r23,0(r8)
 1050f98:	41c00115 	stw	r7,4(r8)
 1050f9c:	d8801c15 	stw	r2,112(sp)
 1050fa0:	d8c01b15 	stw	r3,108(sp)
 1050fa4:	68fff40e 	bge	r13,r3,1050f78 <__alt_data_end+0xfffd0f78>
 1050fa8:	1002241e 	bne	r2,zero,105183c <___vfiprintf_internal_r+0xe30>
 1050fac:	843ffc04 	addi	r16,r16,-16
 1050fb0:	01800044 	movi	r6,1
 1050fb4:	000b883a 	mov	r5,zero
 1050fb8:	d811883a 	mov	r8,sp
 1050fbc:	3c3ff316 	blt	r7,r16,1050f8c <__alt_data_end+0xfffd0f8c>
 1050fc0:	da402517 	ldw	r9,148(sp)
 1050fc4:	e007883a 	mov	r3,fp
 1050fc8:	8039883a 	mov	fp,r16
 1050fcc:	1821883a 	mov	r16,r3
 1050fd0:	d8c02417 	ldw	r3,144(sp)
 1050fd4:	1705883a 	add	r2,r2,fp
 1050fd8:	47000115 	stw	fp,4(r8)
 1050fdc:	40c00015 	stw	r3,0(r8)
 1050fe0:	d8801c15 	stw	r2,112(sp)
 1050fe4:	d9801b15 	stw	r6,108(sp)
 1050fe8:	00c001c4 	movi	r3,7
 1050fec:	19827616 	blt	r3,r6,10519c8 <___vfiprintf_internal_r+0xfbc>
 1050ff0:	4cf9c83a 	sub	fp,r9,r19
 1050ff4:	42000204 	addi	r8,r8,8
 1050ff8:	31000044 	addi	r4,r6,1
 1050ffc:	300b883a 	mov	r5,r6
 1051000:	07018516 	blt	zero,fp,1051618 <___vfiprintf_internal_r+0xc0c>
 1051004:	9885883a 	add	r2,r19,r2
 1051008:	45400015 	stw	r21,0(r8)
 105100c:	44c00115 	stw	r19,4(r8)
 1051010:	d8801c15 	stw	r2,112(sp)
 1051014:	d9001b15 	stw	r4,108(sp)
 1051018:	00c001c4 	movi	r3,7
 105101c:	1901dd0e 	bge	r3,r4,1051794 <___vfiprintf_internal_r+0xd88>
 1051020:	1002401e 	bne	r2,zero,1051924 <___vfiprintf_internal_r+0xf18>
 1051024:	d8001b15 	stw	zero,108(sp)
 1051028:	a2c0010c 	andi	r11,r20,4
 105102c:	58000226 	beq	r11,zero,1051038 <___vfiprintf_internal_r+0x62c>
 1051030:	8ca7c83a 	sub	r19,r17,r18
 1051034:	04c2f216 	blt	zero,r19,1051c00 <___vfiprintf_internal_r+0x11f4>
 1051038:	8c80010e 	bge	r17,r18,1051040 <___vfiprintf_internal_r+0x634>
 105103c:	9023883a 	mov	r17,r18
 1051040:	da802317 	ldw	r10,140(sp)
 1051044:	5455883a 	add	r10,r10,r17
 1051048:	da802315 	stw	r10,140(sp)
 105104c:	d8001b15 	stw	zero,108(sp)
 1051050:	d811883a 	mov	r8,sp
 1051054:	003ea206 	br	1050ae0 <__alt_data_end+0xfffd0ae0>
 1051058:	a5000814 	ori	r20,r20,32
 105105c:	80c00007 	ldb	r3,0(r16)
 1051060:	003ec906 	br	1050b88 <__alt_data_end+0xfffd0b88>
 1051064:	80c00007 	ldb	r3,0(r16)
 1051068:	1b030926 	beq	r3,r12,1051c90 <___vfiprintf_internal_r+0x1284>
 105106c:	a5000414 	ori	r20,r20,16
 1051070:	003ec506 	br	1050b88 <__alt_data_end+0xfffd0b88>
 1051074:	21003fcc 	andi	r4,r4,255
 1051078:	20035e1e 	bne	r4,zero,1051df4 <___vfiprintf_internal_r+0x13e8>
 105107c:	a080080c 	andi	r2,r20,32
 1051080:	1002a526 	beq	r2,zero,1051b18 <___vfiprintf_internal_r+0x110c>
 1051084:	da802217 	ldw	r10,136(sp)
 1051088:	50800017 	ldw	r2,0(r10)
 105108c:	da802317 	ldw	r10,140(sp)
 1051090:	5007d7fa 	srai	r3,r10,31
 1051094:	da802217 	ldw	r10,136(sp)
 1051098:	10c00115 	stw	r3,4(r2)
 105109c:	52800104 	addi	r10,r10,4
 10510a0:	da802215 	stw	r10,136(sp)
 10510a4:	da802317 	ldw	r10,140(sp)
 10510a8:	12800015 	stw	r10,0(r2)
 10510ac:	003e8c06 	br	1050ae0 <__alt_data_end+0xfffd0ae0>
 10510b0:	21003fcc 	andi	r4,r4,255
 10510b4:	2003511e 	bne	r4,zero,1051dfc <___vfiprintf_internal_r+0x13f0>
 10510b8:	a080080c 	andi	r2,r20,32
 10510bc:	1000a126 	beq	r2,zero,1051344 <___vfiprintf_internal_r+0x938>
 10510c0:	da802217 	ldw	r10,136(sp)
 10510c4:	d8001d85 	stb	zero,118(sp)
 10510c8:	50800204 	addi	r2,r10,8
 10510cc:	54800017 	ldw	r18,0(r10)
 10510d0:	54c00117 	ldw	r19,4(r10)
 10510d4:	4802b416 	blt	r9,zero,1051ba8 <___vfiprintf_internal_r+0x119c>
 10510d8:	013fdfc4 	movi	r4,-129
 10510dc:	94c6b03a 	or	r3,r18,r19
 10510e0:	d8802215 	stw	r2,136(sp)
 10510e4:	a128703a 	and	r20,r20,r4
 10510e8:	1800a226 	beq	r3,zero,1051374 <___vfiprintf_internal_r+0x968>
 10510ec:	0039883a 	mov	fp,zero
 10510f0:	dd401a04 	addi	r21,sp,104
 10510f4:	9006d0fa 	srli	r3,r18,3
 10510f8:	9808977a 	slli	r4,r19,29
 10510fc:	9826d0fa 	srli	r19,r19,3
 1051100:	948001cc 	andi	r18,r18,7
 1051104:	90800c04 	addi	r2,r18,48
 1051108:	ad7fffc4 	addi	r21,r21,-1
 105110c:	20e4b03a 	or	r18,r4,r3
 1051110:	a8800005 	stb	r2,0(r21)
 1051114:	94c6b03a 	or	r3,r18,r19
 1051118:	183ff61e 	bne	r3,zero,10510f4 <__alt_data_end+0xfffd10f4>
 105111c:	a0c0004c 	andi	r3,r20,1
 1051120:	18005926 	beq	r3,zero,1051288 <___vfiprintf_internal_r+0x87c>
 1051124:	10803fcc 	andi	r2,r2,255
 1051128:	1080201c 	xori	r2,r2,128
 105112c:	10bfe004 	addi	r2,r2,-128
 1051130:	00c00c04 	movi	r3,48
 1051134:	10c05426 	beq	r2,r3,1051288 <___vfiprintf_internal_r+0x87c>
 1051138:	da801e17 	ldw	r10,120(sp)
 105113c:	a8bfffc4 	addi	r2,r21,-1
 1051140:	a8ffffc5 	stb	r3,-1(r21)
 1051144:	50a7c83a 	sub	r19,r10,r2
 1051148:	102b883a 	mov	r21,r2
 105114c:	003f2f06 	br	1050e0c <__alt_data_end+0xfffd0e0c>
 1051150:	21003fcc 	andi	r4,r4,255
 1051154:	2003421e 	bne	r4,zero,1051e60 <___vfiprintf_internal_r+0x1454>
 1051158:	00804174 	movhi	r2,261
 105115c:	109aca04 	addi	r2,r2,27432
 1051160:	d8802615 	stw	r2,152(sp)
 1051164:	a080080c 	andi	r2,r20,32
 1051168:	1000aa26 	beq	r2,zero,1051414 <___vfiprintf_internal_r+0xa08>
 105116c:	da802217 	ldw	r10,136(sp)
 1051170:	54800017 	ldw	r18,0(r10)
 1051174:	54c00117 	ldw	r19,4(r10)
 1051178:	52800204 	addi	r10,r10,8
 105117c:	da802215 	stw	r10,136(sp)
 1051180:	a080004c 	andi	r2,r20,1
 1051184:	1001d226 	beq	r2,zero,10518d0 <___vfiprintf_internal_r+0xec4>
 1051188:	94c4b03a 	or	r2,r18,r19
 105118c:	1002351e 	bne	r2,zero,1051a64 <___vfiprintf_internal_r+0x1058>
 1051190:	d8001d85 	stb	zero,118(sp)
 1051194:	48022216 	blt	r9,zero,1051a20 <___vfiprintf_internal_r+0x1014>
 1051198:	00bfdfc4 	movi	r2,-129
 105119c:	a0a8703a 	and	r20,r20,r2
 10511a0:	003f1506 	br	1050df8 <__alt_data_end+0xfffd0df8>
 10511a4:	da802217 	ldw	r10,136(sp)
 10511a8:	04800044 	movi	r18,1
 10511ac:	d8001d85 	stb	zero,118(sp)
 10511b0:	50800017 	ldw	r2,0(r10)
 10511b4:	52800104 	addi	r10,r10,4
 10511b8:	da802215 	stw	r10,136(sp)
 10511bc:	d8801005 	stb	r2,64(sp)
 10511c0:	9027883a 	mov	r19,r18
 10511c4:	dd401004 	addi	r21,sp,64
 10511c8:	0013883a 	mov	r9,zero
 10511cc:	003f1706 	br	1050e2c <__alt_data_end+0xfffd0e2c>
 10511d0:	21003fcc 	andi	r4,r4,255
 10511d4:	2003201e 	bne	r4,zero,1051e58 <___vfiprintf_internal_r+0x144c>
 10511d8:	a080080c 	andi	r2,r20,32
 10511dc:	10004b26 	beq	r2,zero,105130c <___vfiprintf_internal_r+0x900>
 10511e0:	da802217 	ldw	r10,136(sp)
 10511e4:	50800117 	ldw	r2,4(r10)
 10511e8:	54800017 	ldw	r18,0(r10)
 10511ec:	52800204 	addi	r10,r10,8
 10511f0:	da802215 	stw	r10,136(sp)
 10511f4:	1027883a 	mov	r19,r2
 10511f8:	10022c16 	blt	r2,zero,1051aac <___vfiprintf_internal_r+0x10a0>
 10511fc:	df001d83 	ldbu	fp,118(sp)
 1051200:	48007216 	blt	r9,zero,10513cc <___vfiprintf_internal_r+0x9c0>
 1051204:	00ffdfc4 	movi	r3,-129
 1051208:	94c4b03a 	or	r2,r18,r19
 105120c:	a0e8703a 	and	r20,r20,r3
 1051210:	1000cc26 	beq	r2,zero,1051544 <___vfiprintf_internal_r+0xb38>
 1051214:	98021026 	beq	r19,zero,1051a58 <___vfiprintf_internal_r+0x104c>
 1051218:	dc402415 	stw	r17,144(sp)
 105121c:	dc002515 	stw	r16,148(sp)
 1051220:	9823883a 	mov	r17,r19
 1051224:	9021883a 	mov	r16,r18
 1051228:	dd401a04 	addi	r21,sp,104
 105122c:	4825883a 	mov	r18,r9
 1051230:	4027883a 	mov	r19,r8
 1051234:	8009883a 	mov	r4,r16
 1051238:	880b883a 	mov	r5,r17
 105123c:	01800284 	movi	r6,10
 1051240:	000f883a 	mov	r7,zero
 1051244:	1052dec0 	call	1052dec <__umoddi3>
 1051248:	10800c04 	addi	r2,r2,48
 105124c:	ad7fffc4 	addi	r21,r21,-1
 1051250:	8009883a 	mov	r4,r16
 1051254:	880b883a 	mov	r5,r17
 1051258:	a8800005 	stb	r2,0(r21)
 105125c:	01800284 	movi	r6,10
 1051260:	000f883a 	mov	r7,zero
 1051264:	10528740 	call	1052874 <__udivdi3>
 1051268:	1021883a 	mov	r16,r2
 105126c:	10c4b03a 	or	r2,r2,r3
 1051270:	1823883a 	mov	r17,r3
 1051274:	103fef1e 	bne	r2,zero,1051234 <__alt_data_end+0xfffd1234>
 1051278:	dc402417 	ldw	r17,144(sp)
 105127c:	dc002517 	ldw	r16,148(sp)
 1051280:	9013883a 	mov	r9,r18
 1051284:	9811883a 	mov	r8,r19
 1051288:	da801e17 	ldw	r10,120(sp)
 105128c:	5567c83a 	sub	r19,r10,r21
 1051290:	003ede06 	br	1050e0c <__alt_data_end+0xfffd0e0c>
 1051294:	38803fcc 	andi	r2,r7,255
 1051298:	1080201c 	xori	r2,r2,128
 105129c:	10bfe004 	addi	r2,r2,-128
 10512a0:	1002371e 	bne	r2,zero,1051b80 <___vfiprintf_internal_r+0x1174>
 10512a4:	01000044 	movi	r4,1
 10512a8:	01c00804 	movi	r7,32
 10512ac:	80c00007 	ldb	r3,0(r16)
 10512b0:	003e3506 	br	1050b88 <__alt_data_end+0xfffd0b88>
 10512b4:	a5000054 	ori	r20,r20,1
 10512b8:	80c00007 	ldb	r3,0(r16)
 10512bc:	003e3206 	br	1050b88 <__alt_data_end+0xfffd0b88>
 10512c0:	a5002014 	ori	r20,r20,128
 10512c4:	80c00007 	ldb	r3,0(r16)
 10512c8:	003e2f06 	br	1050b88 <__alt_data_end+0xfffd0b88>
 10512cc:	8015883a 	mov	r10,r16
 10512d0:	0023883a 	mov	r17,zero
 10512d4:	18bff404 	addi	r2,r3,-48
 10512d8:	50c00007 	ldb	r3,0(r10)
 10512dc:	8c4002a4 	muli	r17,r17,10
 10512e0:	84000044 	addi	r16,r16,1
 10512e4:	8015883a 	mov	r10,r16
 10512e8:	1463883a 	add	r17,r2,r17
 10512ec:	18bff404 	addi	r2,r3,-48
 10512f0:	30bff92e 	bgeu	r6,r2,10512d8 <__alt_data_end+0xfffd12d8>
 10512f4:	003e2506 	br	1050b8c <__alt_data_end+0xfffd0b8c>
 10512f8:	21003fcc 	andi	r4,r4,255
 10512fc:	2002d41e 	bne	r4,zero,1051e50 <___vfiprintf_internal_r+0x1444>
 1051300:	a5000414 	ori	r20,r20,16
 1051304:	a080080c 	andi	r2,r20,32
 1051308:	103fb51e 	bne	r2,zero,10511e0 <__alt_data_end+0xfffd11e0>
 105130c:	a080040c 	andi	r2,r20,16
 1051310:	1001f826 	beq	r2,zero,1051af4 <___vfiprintf_internal_r+0x10e8>
 1051314:	da802217 	ldw	r10,136(sp)
 1051318:	54800017 	ldw	r18,0(r10)
 105131c:	52800104 	addi	r10,r10,4
 1051320:	da802215 	stw	r10,136(sp)
 1051324:	9027d7fa 	srai	r19,r18,31
 1051328:	9805883a 	mov	r2,r19
 105132c:	003fb206 	br	10511f8 <__alt_data_end+0xfffd11f8>
 1051330:	21003fcc 	andi	r4,r4,255
 1051334:	2002c41e 	bne	r4,zero,1051e48 <___vfiprintf_internal_r+0x143c>
 1051338:	a5000414 	ori	r20,r20,16
 105133c:	a080080c 	andi	r2,r20,32
 1051340:	103f5f1e 	bne	r2,zero,10510c0 <__alt_data_end+0xfffd10c0>
 1051344:	a080040c 	andi	r2,r20,16
 1051348:	10020f26 	beq	r2,zero,1051b88 <___vfiprintf_internal_r+0x117c>
 105134c:	da802217 	ldw	r10,136(sp)
 1051350:	d8001d85 	stb	zero,118(sp)
 1051354:	0027883a 	mov	r19,zero
 1051358:	50800104 	addi	r2,r10,4
 105135c:	54800017 	ldw	r18,0(r10)
 1051360:	48021116 	blt	r9,zero,1051ba8 <___vfiprintf_internal_r+0x119c>
 1051364:	00ffdfc4 	movi	r3,-129
 1051368:	d8802215 	stw	r2,136(sp)
 105136c:	a0e8703a 	and	r20,r20,r3
 1051370:	903f5e1e 	bne	r18,zero,10510ec <__alt_data_end+0xfffd10ec>
 1051374:	0039883a 	mov	fp,zero
 1051378:	4802a626 	beq	r9,zero,1051e14 <___vfiprintf_internal_r+0x1408>
 105137c:	0025883a 	mov	r18,zero
 1051380:	0027883a 	mov	r19,zero
 1051384:	003f5a06 	br	10510f0 <__alt_data_end+0xfffd10f0>
 1051388:	21003fcc 	andi	r4,r4,255
 105138c:	20029f1e 	bne	r4,zero,1051e0c <___vfiprintf_internal_r+0x1400>
 1051390:	a5000414 	ori	r20,r20,16
 1051394:	a080080c 	andi	r2,r20,32
 1051398:	10005e1e 	bne	r2,zero,1051514 <___vfiprintf_internal_r+0xb08>
 105139c:	a080040c 	andi	r2,r20,16
 10513a0:	1001a21e 	bne	r2,zero,1051a2c <___vfiprintf_internal_r+0x1020>
 10513a4:	a080100c 	andi	r2,r20,64
 10513a8:	d8001d85 	stb	zero,118(sp)
 10513ac:	da802217 	ldw	r10,136(sp)
 10513b0:	1002231e 	bne	r2,zero,1051c40 <___vfiprintf_internal_r+0x1234>
 10513b4:	50800104 	addi	r2,r10,4
 10513b8:	54800017 	ldw	r18,0(r10)
 10513bc:	0027883a 	mov	r19,zero
 10513c0:	4801a00e 	bge	r9,zero,1051a44 <___vfiprintf_internal_r+0x1038>
 10513c4:	d8802215 	stw	r2,136(sp)
 10513c8:	0039883a 	mov	fp,zero
 10513cc:	94c4b03a 	or	r2,r18,r19
 10513d0:	103f901e 	bne	r2,zero,1051214 <__alt_data_end+0xfffd1214>
 10513d4:	00800044 	movi	r2,1
 10513d8:	10803fcc 	andi	r2,r2,255
 10513dc:	00c00044 	movi	r3,1
 10513e0:	10c05926 	beq	r2,r3,1051548 <___vfiprintf_internal_r+0xb3c>
 10513e4:	00c00084 	movi	r3,2
 10513e8:	10ffe41e 	bne	r2,r3,105137c <__alt_data_end+0xfffd137c>
 10513ec:	0025883a 	mov	r18,zero
 10513f0:	0027883a 	mov	r19,zero
 10513f4:	00013d06 	br	10518ec <___vfiprintf_internal_r+0xee0>
 10513f8:	21003fcc 	andi	r4,r4,255
 10513fc:	2002811e 	bne	r4,zero,1051e04 <___vfiprintf_internal_r+0x13f8>
 1051400:	00804174 	movhi	r2,261
 1051404:	109ac504 	addi	r2,r2,27412
 1051408:	d8802615 	stw	r2,152(sp)
 105140c:	a080080c 	andi	r2,r20,32
 1051410:	103f561e 	bne	r2,zero,105116c <__alt_data_end+0xfffd116c>
 1051414:	a080040c 	andi	r2,r20,16
 1051418:	1001d126 	beq	r2,zero,1051b60 <___vfiprintf_internal_r+0x1154>
 105141c:	da802217 	ldw	r10,136(sp)
 1051420:	0027883a 	mov	r19,zero
 1051424:	54800017 	ldw	r18,0(r10)
 1051428:	52800104 	addi	r10,r10,4
 105142c:	da802215 	stw	r10,136(sp)
 1051430:	003f5306 	br	1051180 <__alt_data_end+0xfffd1180>
 1051434:	da802217 	ldw	r10,136(sp)
 1051438:	d8001d85 	stb	zero,118(sp)
 105143c:	55400017 	ldw	r21,0(r10)
 1051440:	50c00104 	addi	r3,r10,4
 1051444:	a8024226 	beq	r21,zero,1051d50 <___vfiprintf_internal_r+0x1344>
 1051448:	48021816 	blt	r9,zero,1051cac <___vfiprintf_internal_r+0x12a0>
 105144c:	480d883a 	mov	r6,r9
 1051450:	000b883a 	mov	r5,zero
 1051454:	a809883a 	mov	r4,r21
 1051458:	d8c02a15 	stw	r3,168(sp)
 105145c:	da002b15 	stw	r8,172(sp)
 1051460:	da402c15 	stw	r9,176(sp)
 1051464:	104d7fc0 	call	104d7fc <memchr>
 1051468:	d8c02a17 	ldw	r3,168(sp)
 105146c:	da002b17 	ldw	r8,172(sp)
 1051470:	da402c17 	ldw	r9,176(sp)
 1051474:	10024826 	beq	r2,zero,1051d98 <___vfiprintf_internal_r+0x138c>
 1051478:	1567c83a 	sub	r19,r2,r21
 105147c:	df001d83 	ldbu	fp,118(sp)
 1051480:	d8c02215 	stw	r3,136(sp)
 1051484:	0013883a 	mov	r9,zero
 1051488:	003e6006 	br	1050e0c <__alt_data_end+0xfffd0e0c>
 105148c:	21003fcc 	andi	r4,r4,255
 1051490:	203fc026 	beq	r4,zero,1051394 <__alt_data_end+0xfffd1394>
 1051494:	d9c01d85 	stb	r7,118(sp)
 1051498:	003fbe06 	br	1051394 <__alt_data_end+0xfffd1394>
 105149c:	da802217 	ldw	r10,136(sp)
 10514a0:	54400017 	ldw	r17,0(r10)
 10514a4:	50800104 	addi	r2,r10,4
 10514a8:	883e3b16 	blt	r17,zero,1050d98 <__alt_data_end+0xfffd0d98>
 10514ac:	d8802215 	stw	r2,136(sp)
 10514b0:	80c00007 	ldb	r3,0(r16)
 10514b4:	003db406 	br	1050b88 <__alt_data_end+0xfffd0b88>
 10514b8:	01000044 	movi	r4,1
 10514bc:	01c00ac4 	movi	r7,43
 10514c0:	80c00007 	ldb	r3,0(r16)
 10514c4:	003db006 	br	1050b88 <__alt_data_end+0xfffd0b88>
 10514c8:	80c00007 	ldb	r3,0(r16)
 10514cc:	82800044 	addi	r10,r16,1
 10514d0:	1b423c26 	beq	r3,r13,1051dc4 <___vfiprintf_internal_r+0x13b8>
 10514d4:	18bff404 	addi	r2,r3,-48
 10514d8:	0013883a 	mov	r9,zero
 10514dc:	30822b36 	bltu	r6,r2,1051d8c <___vfiprintf_internal_r+0x1380>
 10514e0:	50c00007 	ldb	r3,0(r10)
 10514e4:	4a4002a4 	muli	r9,r9,10
 10514e8:	54000044 	addi	r16,r10,1
 10514ec:	8015883a 	mov	r10,r16
 10514f0:	4893883a 	add	r9,r9,r2
 10514f4:	18bff404 	addi	r2,r3,-48
 10514f8:	30bff92e 	bgeu	r6,r2,10514e0 <__alt_data_end+0xfffd14e0>
 10514fc:	483da30e 	bge	r9,zero,1050b8c <__alt_data_end+0xfffd0b8c>
 1051500:	027fffc4 	movi	r9,-1
 1051504:	003da106 	br	1050b8c <__alt_data_end+0xfffd0b8c>
 1051508:	a5001014 	ori	r20,r20,64
 105150c:	80c00007 	ldb	r3,0(r16)
 1051510:	003d9d06 	br	1050b88 <__alt_data_end+0xfffd0b88>
 1051514:	da802217 	ldw	r10,136(sp)
 1051518:	d8001d85 	stb	zero,118(sp)
 105151c:	50c00204 	addi	r3,r10,8
 1051520:	54800017 	ldw	r18,0(r10)
 1051524:	54c00117 	ldw	r19,4(r10)
 1051528:	4801ca16 	blt	r9,zero,1051c54 <___vfiprintf_internal_r+0x1248>
 105152c:	013fdfc4 	movi	r4,-129
 1051530:	94c4b03a 	or	r2,r18,r19
 1051534:	d8c02215 	stw	r3,136(sp)
 1051538:	a128703a 	and	r20,r20,r4
 105153c:	0039883a 	mov	fp,zero
 1051540:	103f341e 	bne	r2,zero,1051214 <__alt_data_end+0xfffd1214>
 1051544:	483e2e26 	beq	r9,zero,1050e00 <__alt_data_end+0xfffd0e00>
 1051548:	0025883a 	mov	r18,zero
 105154c:	94800c04 	addi	r18,r18,48
 1051550:	dc8019c5 	stb	r18,103(sp)
 1051554:	dcc02717 	ldw	r19,156(sp)
 1051558:	dd4019c4 	addi	r21,sp,103
 105155c:	003e2b06 	br	1050e0c <__alt_data_end+0xfffd0e0c>
 1051560:	21003fcc 	andi	r4,r4,255
 1051564:	2002361e 	bne	r4,zero,1051e40 <___vfiprintf_internal_r+0x1434>
 1051568:	1801c126 	beq	r3,zero,1051c70 <___vfiprintf_internal_r+0x1264>
 105156c:	04800044 	movi	r18,1
 1051570:	d8c01005 	stb	r3,64(sp)
 1051574:	d8001d85 	stb	zero,118(sp)
 1051578:	9027883a 	mov	r19,r18
 105157c:	dd401004 	addi	r21,sp,64
 1051580:	003f1106 	br	10511c8 <__alt_data_end+0xfffd11c8>
 1051584:	d9402117 	ldw	r5,132(sp)
 1051588:	d9002017 	ldw	r4,128(sp)
 105158c:	d9801a04 	addi	r6,sp,104
 1051590:	d9c02b15 	stw	r7,172(sp)
 1051594:	dbc02a15 	stw	r15,168(sp)
 1051598:	10508f80 	call	10508f8 <__sprint_r.part.0>
 105159c:	d9c02b17 	ldw	r7,172(sp)
 10515a0:	dbc02a17 	ldw	r15,168(sp)
 10515a4:	10006d1e 	bne	r2,zero,105175c <___vfiprintf_internal_r+0xd50>
 10515a8:	d9801b17 	ldw	r6,108(sp)
 10515ac:	d8801c17 	ldw	r2,112(sp)
 10515b0:	d811883a 	mov	r8,sp
 10515b4:	31400044 	addi	r5,r6,1
 10515b8:	003e3306 	br	1050e88 <__alt_data_end+0xfffd0e88>
 10515bc:	d9401b17 	ldw	r5,108(sp)
 10515c0:	d8801c17 	ldw	r2,112(sp)
 10515c4:	29000044 	addi	r4,r5,1
 10515c8:	d8c01d87 	ldb	r3,118(sp)
 10515cc:	183e4d26 	beq	r3,zero,1050f04 <__alt_data_end+0xfffd0f04>
 10515d0:	00c00044 	movi	r3,1
 10515d4:	d9401d84 	addi	r5,sp,118
 10515d8:	10c5883a 	add	r2,r2,r3
 10515dc:	41400015 	stw	r5,0(r8)
 10515e0:	40c00115 	stw	r3,4(r8)
 10515e4:	d8801c15 	stw	r2,112(sp)
 10515e8:	d9001b15 	stw	r4,108(sp)
 10515ec:	014001c4 	movi	r5,7
 10515f0:	2900a90e 	bge	r5,r4,1051898 <___vfiprintf_internal_r+0xe8c>
 10515f4:	1000da1e 	bne	r2,zero,1051960 <___vfiprintf_internal_r+0xf54>
 10515f8:	7000ab1e 	bne	r14,zero,10518a8 <___vfiprintf_internal_r+0xe9c>
 10515fc:	000b883a 	mov	r5,zero
 1051600:	1809883a 	mov	r4,r3
 1051604:	d811883a 	mov	r8,sp
 1051608:	00c02004 	movi	r3,128
 105160c:	e0fe4d26 	beq	fp,r3,1050f44 <__alt_data_end+0xfffd0f44>
 1051610:	4cf9c83a 	sub	fp,r9,r19
 1051614:	073e7b0e 	bge	zero,fp,1051004 <__alt_data_end+0xfffd1004>
 1051618:	01c00404 	movi	r7,16
 105161c:	3f01900e 	bge	r7,fp,1051c60 <___vfiprintf_internal_r+0x1254>
 1051620:	00c04174 	movhi	r3,261
 1051624:	18db3b04 	addi	r3,r3,27884
 1051628:	d8c02415 	stw	r3,144(sp)
 105162c:	034001c4 	movi	r13,7
 1051630:	00000506 	br	1051648 <___vfiprintf_internal_r+0xc3c>
 1051634:	29000084 	addi	r4,r5,2
 1051638:	42000204 	addi	r8,r8,8
 105163c:	180b883a 	mov	r5,r3
 1051640:	e73ffc04 	addi	fp,fp,-16
 1051644:	3f000d0e 	bge	r7,fp,105167c <___vfiprintf_internal_r+0xc70>
 1051648:	10800404 	addi	r2,r2,16
 105164c:	28c00044 	addi	r3,r5,1
 1051650:	45c00015 	stw	r23,0(r8)
 1051654:	41c00115 	stw	r7,4(r8)
 1051658:	d8801c15 	stw	r2,112(sp)
 105165c:	d8c01b15 	stw	r3,108(sp)
 1051660:	68fff40e 	bge	r13,r3,1051634 <__alt_data_end+0xfffd1634>
 1051664:	1000101e 	bne	r2,zero,10516a8 <___vfiprintf_internal_r+0xc9c>
 1051668:	e73ffc04 	addi	fp,fp,-16
 105166c:	01000044 	movi	r4,1
 1051670:	000b883a 	mov	r5,zero
 1051674:	d811883a 	mov	r8,sp
 1051678:	3f3ff316 	blt	r7,fp,1051648 <__alt_data_end+0xfffd1648>
 105167c:	da802417 	ldw	r10,144(sp)
 1051680:	1705883a 	add	r2,r2,fp
 1051684:	47000115 	stw	fp,4(r8)
 1051688:	42800015 	stw	r10,0(r8)
 105168c:	d8801c15 	stw	r2,112(sp)
 1051690:	d9001b15 	stw	r4,108(sp)
 1051694:	00c001c4 	movi	r3,7
 1051698:	19003616 	blt	r3,r4,1051774 <___vfiprintf_internal_r+0xd68>
 105169c:	42000204 	addi	r8,r8,8
 10516a0:	21000044 	addi	r4,r4,1
 10516a4:	003e5706 	br	1051004 <__alt_data_end+0xfffd1004>
 10516a8:	d9402117 	ldw	r5,132(sp)
 10516ac:	d9002017 	ldw	r4,128(sp)
 10516b0:	d9801a04 	addi	r6,sp,104
 10516b4:	d9c02b15 	stw	r7,172(sp)
 10516b8:	db402a15 	stw	r13,168(sp)
 10516bc:	10508f80 	call	10508f8 <__sprint_r.part.0>
 10516c0:	d9c02b17 	ldw	r7,172(sp)
 10516c4:	db402a17 	ldw	r13,168(sp)
 10516c8:	1000241e 	bne	r2,zero,105175c <___vfiprintf_internal_r+0xd50>
 10516cc:	d9401b17 	ldw	r5,108(sp)
 10516d0:	d8801c17 	ldw	r2,112(sp)
 10516d4:	d811883a 	mov	r8,sp
 10516d8:	29000044 	addi	r4,r5,1
 10516dc:	003fd806 	br	1051640 <__alt_data_end+0xfffd1640>
 10516e0:	d9401b17 	ldw	r5,108(sp)
 10516e4:	00c04174 	movhi	r3,261
 10516e8:	18db3f04 	addi	r3,r3,27900
 10516ec:	d8c02415 	stw	r3,144(sp)
 10516f0:	29400044 	addi	r5,r5,1
 10516f4:	d8c02417 	ldw	r3,144(sp)
 10516f8:	14c5883a 	add	r2,r2,r19
 10516fc:	44c00115 	stw	r19,4(r8)
 1051700:	40c00015 	stw	r3,0(r8)
 1051704:	d8801c15 	stw	r2,112(sp)
 1051708:	d9401b15 	stw	r5,108(sp)
 105170c:	00c001c4 	movi	r3,7
 1051710:	1940070e 	bge	r3,r5,1051730 <___vfiprintf_internal_r+0xd24>
 1051714:	103e4826 	beq	r2,zero,1051038 <__alt_data_end+0xfffd1038>
 1051718:	d9402117 	ldw	r5,132(sp)
 105171c:	d9002017 	ldw	r4,128(sp)
 1051720:	d9801a04 	addi	r6,sp,104
 1051724:	10508f80 	call	10508f8 <__sprint_r.part.0>
 1051728:	10000c1e 	bne	r2,zero,105175c <___vfiprintf_internal_r+0xd50>
 105172c:	d8801c17 	ldw	r2,112(sp)
 1051730:	8c80010e 	bge	r17,r18,1051738 <___vfiprintf_internal_r+0xd2c>
 1051734:	9023883a 	mov	r17,r18
 1051738:	da802317 	ldw	r10,140(sp)
 105173c:	5455883a 	add	r10,r10,r17
 1051740:	da802315 	stw	r10,140(sp)
 1051744:	103e4126 	beq	r2,zero,105104c <__alt_data_end+0xfffd104c>
 1051748:	d9402117 	ldw	r5,132(sp)
 105174c:	d9002017 	ldw	r4,128(sp)
 1051750:	d9801a04 	addi	r6,sp,104
 1051754:	10508f80 	call	10508f8 <__sprint_r.part.0>
 1051758:	103e3c26 	beq	r2,zero,105104c <__alt_data_end+0xfffd104c>
 105175c:	dd002117 	ldw	r20,132(sp)
 1051760:	a080030b 	ldhu	r2,12(r20)
 1051764:	1080100c 	andi	r2,r2,64
 1051768:	1001231e 	bne	r2,zero,1051bf8 <___vfiprintf_internal_r+0x11ec>
 105176c:	d8802317 	ldw	r2,140(sp)
 1051770:	003d7b06 	br	1050d60 <__alt_data_end+0xfffd0d60>
 1051774:	1000991e 	bne	r2,zero,10519dc <___vfiprintf_internal_r+0xfd0>
 1051778:	00c00044 	movi	r3,1
 105177c:	9805883a 	mov	r2,r19
 1051780:	dd400015 	stw	r21,0(sp)
 1051784:	dcc00115 	stw	r19,4(sp)
 1051788:	dcc01c15 	stw	r19,112(sp)
 105178c:	d8c01b15 	stw	r3,108(sp)
 1051790:	d811883a 	mov	r8,sp
 1051794:	42000204 	addi	r8,r8,8
 1051798:	a2c0010c 	andi	r11,r20,4
 105179c:	583fe426 	beq	r11,zero,1051730 <__alt_data_end+0xfffd1730>
 10517a0:	8ca7c83a 	sub	r19,r17,r18
 10517a4:	04ffe20e 	bge	zero,r19,1051730 <__alt_data_end+0xfffd1730>
 10517a8:	01c00404 	movi	r7,16
 10517ac:	3cffcc0e 	bge	r7,r19,10516e0 <__alt_data_end+0xfffd16e0>
 10517b0:	02804174 	movhi	r10,261
 10517b4:	529b3f04 	addi	r10,r10,27900
 10517b8:	d9001b17 	ldw	r4,108(sp)
 10517bc:	da802415 	stw	r10,144(sp)
 10517c0:	382b883a 	mov	r21,r7
 10517c4:	050001c4 	movi	r20,7
 10517c8:	df002017 	ldw	fp,128(sp)
 10517cc:	00000506 	br	10517e4 <___vfiprintf_internal_r+0xdd8>
 10517d0:	21400084 	addi	r5,r4,2
 10517d4:	42000204 	addi	r8,r8,8
 10517d8:	1809883a 	mov	r4,r3
 10517dc:	9cfffc04 	addi	r19,r19,-16
 10517e0:	acffc40e 	bge	r21,r19,10516f4 <__alt_data_end+0xfffd16f4>
 10517e4:	10800404 	addi	r2,r2,16
 10517e8:	20c00044 	addi	r3,r4,1
 10517ec:	45800015 	stw	r22,0(r8)
 10517f0:	45400115 	stw	r21,4(r8)
 10517f4:	d8801c15 	stw	r2,112(sp)
 10517f8:	d8c01b15 	stw	r3,108(sp)
 10517fc:	a0fff40e 	bge	r20,r3,10517d0 <__alt_data_end+0xfffd17d0>
 1051800:	1000041e 	bne	r2,zero,1051814 <___vfiprintf_internal_r+0xe08>
 1051804:	01400044 	movi	r5,1
 1051808:	0009883a 	mov	r4,zero
 105180c:	d811883a 	mov	r8,sp
 1051810:	003ff206 	br	10517dc <__alt_data_end+0xfffd17dc>
 1051814:	d9402117 	ldw	r5,132(sp)
 1051818:	d9801a04 	addi	r6,sp,104
 105181c:	e009883a 	mov	r4,fp
 1051820:	10508f80 	call	10508f8 <__sprint_r.part.0>
 1051824:	103fcd1e 	bne	r2,zero,105175c <__alt_data_end+0xfffd175c>
 1051828:	d9001b17 	ldw	r4,108(sp)
 105182c:	d8801c17 	ldw	r2,112(sp)
 1051830:	d811883a 	mov	r8,sp
 1051834:	21400044 	addi	r5,r4,1
 1051838:	003fe806 	br	10517dc <__alt_data_end+0xfffd17dc>
 105183c:	d9402117 	ldw	r5,132(sp)
 1051840:	d9002017 	ldw	r4,128(sp)
 1051844:	d9801a04 	addi	r6,sp,104
 1051848:	d9c02b15 	stw	r7,172(sp)
 105184c:	db402a15 	stw	r13,168(sp)
 1051850:	10508f80 	call	10508f8 <__sprint_r.part.0>
 1051854:	d9c02b17 	ldw	r7,172(sp)
 1051858:	db402a17 	ldw	r13,168(sp)
 105185c:	103fbf1e 	bne	r2,zero,105175c <__alt_data_end+0xfffd175c>
 1051860:	d9401b17 	ldw	r5,108(sp)
 1051864:	d8801c17 	ldw	r2,112(sp)
 1051868:	d811883a 	mov	r8,sp
 105186c:	29800044 	addi	r6,r5,1
 1051870:	003dc406 	br	1050f84 <__alt_data_end+0xfffd0f84>
 1051874:	1000d21e 	bne	r2,zero,1051bc0 <___vfiprintf_internal_r+0x11b4>
 1051878:	d8c01d87 	ldb	r3,118(sp)
 105187c:	18009526 	beq	r3,zero,1051ad4 <___vfiprintf_internal_r+0x10c8>
 1051880:	00800044 	movi	r2,1
 1051884:	d8c01d84 	addi	r3,sp,118
 1051888:	1009883a 	mov	r4,r2
 105188c:	d8c00015 	stw	r3,0(sp)
 1051890:	d8800115 	stw	r2,4(sp)
 1051894:	d811883a 	mov	r8,sp
 1051898:	200b883a 	mov	r5,r4
 105189c:	42000204 	addi	r8,r8,8
 10518a0:	21000044 	addi	r4,r4,1
 10518a4:	003d9706 	br	1050f04 <__alt_data_end+0xfffd0f04>
 10518a8:	d9001d04 	addi	r4,sp,116
 10518ac:	00800084 	movi	r2,2
 10518b0:	d9000015 	stw	r4,0(sp)
 10518b4:	d8800115 	stw	r2,4(sp)
 10518b8:	1809883a 	mov	r4,r3
 10518bc:	d811883a 	mov	r8,sp
 10518c0:	200b883a 	mov	r5,r4
 10518c4:	42000204 	addi	r8,r8,8
 10518c8:	21000044 	addi	r4,r4,1
 10518cc:	003f4e06 	br	1051608 <__alt_data_end+0xfffd1608>
 10518d0:	d8001d85 	stb	zero,118(sp)
 10518d4:	48005016 	blt	r9,zero,1051a18 <___vfiprintf_internal_r+0x100c>
 10518d8:	00ffdfc4 	movi	r3,-129
 10518dc:	94c4b03a 	or	r2,r18,r19
 10518e0:	a0e8703a 	and	r20,r20,r3
 10518e4:	103d4426 	beq	r2,zero,1050df8 <__alt_data_end+0xfffd0df8>
 10518e8:	0039883a 	mov	fp,zero
 10518ec:	d9002617 	ldw	r4,152(sp)
 10518f0:	dd401a04 	addi	r21,sp,104
 10518f4:	908003cc 	andi	r2,r18,15
 10518f8:	9806973a 	slli	r3,r19,28
 10518fc:	2085883a 	add	r2,r4,r2
 1051900:	9024d13a 	srli	r18,r18,4
 1051904:	10800003 	ldbu	r2,0(r2)
 1051908:	9826d13a 	srli	r19,r19,4
 105190c:	ad7fffc4 	addi	r21,r21,-1
 1051910:	1ca4b03a 	or	r18,r3,r18
 1051914:	a8800005 	stb	r2,0(r21)
 1051918:	94c4b03a 	or	r2,r18,r19
 105191c:	103ff51e 	bne	r2,zero,10518f4 <__alt_data_end+0xfffd18f4>
 1051920:	003e5906 	br	1051288 <__alt_data_end+0xfffd1288>
 1051924:	d9402117 	ldw	r5,132(sp)
 1051928:	d9002017 	ldw	r4,128(sp)
 105192c:	d9801a04 	addi	r6,sp,104
 1051930:	10508f80 	call	10508f8 <__sprint_r.part.0>
 1051934:	103f891e 	bne	r2,zero,105175c <__alt_data_end+0xfffd175c>
 1051938:	d8801c17 	ldw	r2,112(sp)
 105193c:	d811883a 	mov	r8,sp
 1051940:	003f9506 	br	1051798 <__alt_data_end+0xfffd1798>
 1051944:	d9402117 	ldw	r5,132(sp)
 1051948:	d9002017 	ldw	r4,128(sp)
 105194c:	d9801a04 	addi	r6,sp,104
 1051950:	10508f80 	call	10508f8 <__sprint_r.part.0>
 1051954:	103f811e 	bne	r2,zero,105175c <__alt_data_end+0xfffd175c>
 1051958:	d811883a 	mov	r8,sp
 105195c:	003ced06 	br	1050d14 <__alt_data_end+0xfffd0d14>
 1051960:	d9402117 	ldw	r5,132(sp)
 1051964:	d9002017 	ldw	r4,128(sp)
 1051968:	d9801a04 	addi	r6,sp,104
 105196c:	da402c15 	stw	r9,176(sp)
 1051970:	db802a15 	stw	r14,168(sp)
 1051974:	10508f80 	call	10508f8 <__sprint_r.part.0>
 1051978:	da402c17 	ldw	r9,176(sp)
 105197c:	db802a17 	ldw	r14,168(sp)
 1051980:	103f761e 	bne	r2,zero,105175c <__alt_data_end+0xfffd175c>
 1051984:	d9401b17 	ldw	r5,108(sp)
 1051988:	d8801c17 	ldw	r2,112(sp)
 105198c:	d811883a 	mov	r8,sp
 1051990:	29000044 	addi	r4,r5,1
 1051994:	003d5b06 	br	1050f04 <__alt_data_end+0xfffd0f04>
 1051998:	d9402117 	ldw	r5,132(sp)
 105199c:	d9002017 	ldw	r4,128(sp)
 10519a0:	d9801a04 	addi	r6,sp,104
 10519a4:	da402c15 	stw	r9,176(sp)
 10519a8:	10508f80 	call	10508f8 <__sprint_r.part.0>
 10519ac:	da402c17 	ldw	r9,176(sp)
 10519b0:	103f6a1e 	bne	r2,zero,105175c <__alt_data_end+0xfffd175c>
 10519b4:	d9401b17 	ldw	r5,108(sp)
 10519b8:	d8801c17 	ldw	r2,112(sp)
 10519bc:	d811883a 	mov	r8,sp
 10519c0:	29000044 	addi	r4,r5,1
 10519c4:	003f1006 	br	1051608 <__alt_data_end+0xfffd1608>
 10519c8:	1000c31e 	bne	r2,zero,1051cd8 <___vfiprintf_internal_r+0x12cc>
 10519cc:	01000044 	movi	r4,1
 10519d0:	000b883a 	mov	r5,zero
 10519d4:	d811883a 	mov	r8,sp
 10519d8:	003f0d06 	br	1051610 <__alt_data_end+0xfffd1610>
 10519dc:	d9402117 	ldw	r5,132(sp)
 10519e0:	d9002017 	ldw	r4,128(sp)
 10519e4:	d9801a04 	addi	r6,sp,104
 10519e8:	10508f80 	call	10508f8 <__sprint_r.part.0>
 10519ec:	103f5b1e 	bne	r2,zero,105175c <__alt_data_end+0xfffd175c>
 10519f0:	d9001b17 	ldw	r4,108(sp)
 10519f4:	d8801c17 	ldw	r2,112(sp)
 10519f8:	d811883a 	mov	r8,sp
 10519fc:	21000044 	addi	r4,r4,1
 1051a00:	003d8006 	br	1051004 <__alt_data_end+0xfffd1004>
 1051a04:	01004174 	movhi	r4,261
 1051a08:	211aca04 	addi	r4,r4,27432
 1051a0c:	d9002615 	stw	r4,152(sp)
 1051a10:	d8c02215 	stw	r3,136(sp)
 1051a14:	1029883a 	mov	r20,r2
 1051a18:	94c4b03a 	or	r2,r18,r19
 1051a1c:	103fb21e 	bne	r2,zero,10518e8 <__alt_data_end+0xfffd18e8>
 1051a20:	0039883a 	mov	fp,zero
 1051a24:	00800084 	movi	r2,2
 1051a28:	003e6b06 	br	10513d8 <__alt_data_end+0xfffd13d8>
 1051a2c:	da802217 	ldw	r10,136(sp)
 1051a30:	d8001d85 	stb	zero,118(sp)
 1051a34:	0027883a 	mov	r19,zero
 1051a38:	50800104 	addi	r2,r10,4
 1051a3c:	54800017 	ldw	r18,0(r10)
 1051a40:	483e6016 	blt	r9,zero,10513c4 <__alt_data_end+0xfffd13c4>
 1051a44:	00ffdfc4 	movi	r3,-129
 1051a48:	d8802215 	stw	r2,136(sp)
 1051a4c:	a0e8703a 	and	r20,r20,r3
 1051a50:	0039883a 	mov	fp,zero
 1051a54:	903ebb26 	beq	r18,zero,1051544 <__alt_data_end+0xfffd1544>
 1051a58:	00800244 	movi	r2,9
 1051a5c:	14bdee36 	bltu	r2,r18,1051218 <__alt_data_end+0xfffd1218>
 1051a60:	003eba06 	br	105154c <__alt_data_end+0xfffd154c>
 1051a64:	00800c04 	movi	r2,48
 1051a68:	d8c01d45 	stb	r3,117(sp)
 1051a6c:	d8801d05 	stb	r2,116(sp)
 1051a70:	d8001d85 	stb	zero,118(sp)
 1051a74:	a0c00094 	ori	r3,r20,2
 1051a78:	4800a916 	blt	r9,zero,1051d20 <___vfiprintf_internal_r+0x1314>
 1051a7c:	00bfdfc4 	movi	r2,-129
 1051a80:	a096703a 	and	r11,r20,r2
 1051a84:	5d000094 	ori	r20,r11,2
 1051a88:	0039883a 	mov	fp,zero
 1051a8c:	003f9706 	br	10518ec <__alt_data_end+0xfffd18ec>
 1051a90:	8025883a 	mov	r18,r16
 1051a94:	003c2e06 	br	1050b50 <__alt_data_end+0xfffd0b50>
 1051a98:	00804174 	movhi	r2,261
 1051a9c:	109aca04 	addi	r2,r2,27432
 1051aa0:	0039883a 	mov	fp,zero
 1051aa4:	d8802615 	stw	r2,152(sp)
 1051aa8:	003f9006 	br	10518ec <__alt_data_end+0xfffd18ec>
 1051aac:	04a5c83a 	sub	r18,zero,r18
 1051ab0:	07000b44 	movi	fp,45
 1051ab4:	9004c03a 	cmpne	r2,r18,zero
 1051ab8:	04e7c83a 	sub	r19,zero,r19
 1051abc:	df001d85 	stb	fp,118(sp)
 1051ac0:	98a7c83a 	sub	r19,r19,r2
 1051ac4:	48009f16 	blt	r9,zero,1051d44 <___vfiprintf_internal_r+0x1338>
 1051ac8:	00bfdfc4 	movi	r2,-129
 1051acc:	a0a8703a 	and	r20,r20,r2
 1051ad0:	003dd006 	br	1051214 <__alt_data_end+0xfffd1214>
 1051ad4:	70004c26 	beq	r14,zero,1051c08 <___vfiprintf_internal_r+0x11fc>
 1051ad8:	00800084 	movi	r2,2
 1051adc:	d8c01d04 	addi	r3,sp,116
 1051ae0:	d8c00015 	stw	r3,0(sp)
 1051ae4:	d8800115 	stw	r2,4(sp)
 1051ae8:	01000044 	movi	r4,1
 1051aec:	d811883a 	mov	r8,sp
 1051af0:	003f7306 	br	10518c0 <__alt_data_end+0xfffd18c0>
 1051af4:	a080100c 	andi	r2,r20,64
 1051af8:	da802217 	ldw	r10,136(sp)
 1051afc:	103e0626 	beq	r2,zero,1051318 <__alt_data_end+0xfffd1318>
 1051b00:	5480000f 	ldh	r18,0(r10)
 1051b04:	52800104 	addi	r10,r10,4
 1051b08:	da802215 	stw	r10,136(sp)
 1051b0c:	9027d7fa 	srai	r19,r18,31
 1051b10:	9805883a 	mov	r2,r19
 1051b14:	003db806 	br	10511f8 <__alt_data_end+0xfffd11f8>
 1051b18:	a080040c 	andi	r2,r20,16
 1051b1c:	1000091e 	bne	r2,zero,1051b44 <___vfiprintf_internal_r+0x1138>
 1051b20:	a2c0100c 	andi	r11,r20,64
 1051b24:	58000726 	beq	r11,zero,1051b44 <___vfiprintf_internal_r+0x1138>
 1051b28:	da802217 	ldw	r10,136(sp)
 1051b2c:	50800017 	ldw	r2,0(r10)
 1051b30:	52800104 	addi	r10,r10,4
 1051b34:	da802215 	stw	r10,136(sp)
 1051b38:	da802317 	ldw	r10,140(sp)
 1051b3c:	1280000d 	sth	r10,0(r2)
 1051b40:	003be706 	br	1050ae0 <__alt_data_end+0xfffd0ae0>
 1051b44:	da802217 	ldw	r10,136(sp)
 1051b48:	50800017 	ldw	r2,0(r10)
 1051b4c:	52800104 	addi	r10,r10,4
 1051b50:	da802215 	stw	r10,136(sp)
 1051b54:	da802317 	ldw	r10,140(sp)
 1051b58:	12800015 	stw	r10,0(r2)
 1051b5c:	003be006 	br	1050ae0 <__alt_data_end+0xfffd0ae0>
 1051b60:	a080100c 	andi	r2,r20,64
 1051b64:	da802217 	ldw	r10,136(sp)
 1051b68:	10003026 	beq	r2,zero,1051c2c <___vfiprintf_internal_r+0x1220>
 1051b6c:	5480000b 	ldhu	r18,0(r10)
 1051b70:	52800104 	addi	r10,r10,4
 1051b74:	0027883a 	mov	r19,zero
 1051b78:	da802215 	stw	r10,136(sp)
 1051b7c:	003d8006 	br	1051180 <__alt_data_end+0xfffd1180>
 1051b80:	80c00007 	ldb	r3,0(r16)
 1051b84:	003c0006 	br	1050b88 <__alt_data_end+0xfffd0b88>
 1051b88:	a080100c 	andi	r2,r20,64
 1051b8c:	d8001d85 	stb	zero,118(sp)
 1051b90:	da802217 	ldw	r10,136(sp)
 1051b94:	1000201e 	bne	r2,zero,1051c18 <___vfiprintf_internal_r+0x120c>
 1051b98:	50800104 	addi	r2,r10,4
 1051b9c:	54800017 	ldw	r18,0(r10)
 1051ba0:	0027883a 	mov	r19,zero
 1051ba4:	483def0e 	bge	r9,zero,1051364 <__alt_data_end+0xfffd1364>
 1051ba8:	94c6b03a 	or	r3,r18,r19
 1051bac:	d8802215 	stw	r2,136(sp)
 1051bb0:	183d4e1e 	bne	r3,zero,10510ec <__alt_data_end+0xfffd10ec>
 1051bb4:	0039883a 	mov	fp,zero
 1051bb8:	0005883a 	mov	r2,zero
 1051bbc:	003e0606 	br	10513d8 <__alt_data_end+0xfffd13d8>
 1051bc0:	d9402117 	ldw	r5,132(sp)
 1051bc4:	d9002017 	ldw	r4,128(sp)
 1051bc8:	d9801a04 	addi	r6,sp,104
 1051bcc:	da402c15 	stw	r9,176(sp)
 1051bd0:	db802a15 	stw	r14,168(sp)
 1051bd4:	10508f80 	call	10508f8 <__sprint_r.part.0>
 1051bd8:	da402c17 	ldw	r9,176(sp)
 1051bdc:	db802a17 	ldw	r14,168(sp)
 1051be0:	103ede1e 	bne	r2,zero,105175c <__alt_data_end+0xfffd175c>
 1051be4:	d9401b17 	ldw	r5,108(sp)
 1051be8:	d8801c17 	ldw	r2,112(sp)
 1051bec:	d811883a 	mov	r8,sp
 1051bf0:	29000044 	addi	r4,r5,1
 1051bf4:	003e7406 	br	10515c8 <__alt_data_end+0xfffd15c8>
 1051bf8:	00bfffc4 	movi	r2,-1
 1051bfc:	003c5806 	br	1050d60 <__alt_data_end+0xfffd0d60>
 1051c00:	d811883a 	mov	r8,sp
 1051c04:	003ee806 	br	10517a8 <__alt_data_end+0xfffd17a8>
 1051c08:	000b883a 	mov	r5,zero
 1051c0c:	01000044 	movi	r4,1
 1051c10:	d811883a 	mov	r8,sp
 1051c14:	003e7c06 	br	1051608 <__alt_data_end+0xfffd1608>
 1051c18:	50800104 	addi	r2,r10,4
 1051c1c:	5480000b 	ldhu	r18,0(r10)
 1051c20:	0027883a 	mov	r19,zero
 1051c24:	483dcf0e 	bge	r9,zero,1051364 <__alt_data_end+0xfffd1364>
 1051c28:	003fdf06 	br	1051ba8 <__alt_data_end+0xfffd1ba8>
 1051c2c:	54800017 	ldw	r18,0(r10)
 1051c30:	52800104 	addi	r10,r10,4
 1051c34:	0027883a 	mov	r19,zero
 1051c38:	da802215 	stw	r10,136(sp)
 1051c3c:	003d5006 	br	1051180 <__alt_data_end+0xfffd1180>
 1051c40:	50800104 	addi	r2,r10,4
 1051c44:	5480000b 	ldhu	r18,0(r10)
 1051c48:	0027883a 	mov	r19,zero
 1051c4c:	483f7d0e 	bge	r9,zero,1051a44 <__alt_data_end+0xfffd1a44>
 1051c50:	003ddc06 	br	10513c4 <__alt_data_end+0xfffd13c4>
 1051c54:	d8c02215 	stw	r3,136(sp)
 1051c58:	0039883a 	mov	fp,zero
 1051c5c:	003ddb06 	br	10513cc <__alt_data_end+0xfffd13cc>
 1051c60:	02804174 	movhi	r10,261
 1051c64:	529b3b04 	addi	r10,r10,27884
 1051c68:	da802415 	stw	r10,144(sp)
 1051c6c:	003e8306 	br	105167c <__alt_data_end+0xfffd167c>
 1051c70:	d8801c17 	ldw	r2,112(sp)
 1051c74:	dd002117 	ldw	r20,132(sp)
 1051c78:	103eb926 	beq	r2,zero,1051760 <__alt_data_end+0xfffd1760>
 1051c7c:	d9002017 	ldw	r4,128(sp)
 1051c80:	d9801a04 	addi	r6,sp,104
 1051c84:	a00b883a 	mov	r5,r20
 1051c88:	10508f80 	call	10508f8 <__sprint_r.part.0>
 1051c8c:	003eb406 	br	1051760 <__alt_data_end+0xfffd1760>
 1051c90:	80c00043 	ldbu	r3,1(r16)
 1051c94:	a5000814 	ori	r20,r20,32
 1051c98:	84000044 	addi	r16,r16,1
 1051c9c:	18c03fcc 	andi	r3,r3,255
 1051ca0:	18c0201c 	xori	r3,r3,128
 1051ca4:	18ffe004 	addi	r3,r3,-128
 1051ca8:	003bb706 	br	1050b88 <__alt_data_end+0xfffd0b88>
 1051cac:	a809883a 	mov	r4,r21
 1051cb0:	d8c02a15 	stw	r3,168(sp)
 1051cb4:	da002b15 	stw	r8,172(sp)
 1051cb8:	1045c580 	call	1045c58 <strlen>
 1051cbc:	d8c02a17 	ldw	r3,168(sp)
 1051cc0:	1027883a 	mov	r19,r2
 1051cc4:	df001d83 	ldbu	fp,118(sp)
 1051cc8:	d8c02215 	stw	r3,136(sp)
 1051ccc:	0013883a 	mov	r9,zero
 1051cd0:	da002b17 	ldw	r8,172(sp)
 1051cd4:	003c4d06 	br	1050e0c <__alt_data_end+0xfffd0e0c>
 1051cd8:	d9402117 	ldw	r5,132(sp)
 1051cdc:	d9002017 	ldw	r4,128(sp)
 1051ce0:	d9801a04 	addi	r6,sp,104
 1051ce4:	da402c15 	stw	r9,176(sp)
 1051ce8:	10508f80 	call	10508f8 <__sprint_r.part.0>
 1051cec:	da402c17 	ldw	r9,176(sp)
 1051cf0:	103e9a1e 	bne	r2,zero,105175c <__alt_data_end+0xfffd175c>
 1051cf4:	d9401b17 	ldw	r5,108(sp)
 1051cf8:	d8801c17 	ldw	r2,112(sp)
 1051cfc:	d811883a 	mov	r8,sp
 1051d00:	29000044 	addi	r4,r5,1
 1051d04:	003e4206 	br	1051610 <__alt_data_end+0xfffd1610>
 1051d08:	d9401b17 	ldw	r5,108(sp)
 1051d0c:	01004174 	movhi	r4,261
 1051d10:	211b3f04 	addi	r4,r4,27900
 1051d14:	d9002415 	stw	r4,144(sp)
 1051d18:	29400044 	addi	r5,r5,1
 1051d1c:	003c6d06 	br	1050ed4 <__alt_data_end+0xfffd0ed4>
 1051d20:	0039883a 	mov	fp,zero
 1051d24:	00800084 	movi	r2,2
 1051d28:	10803fcc 	andi	r2,r2,255
 1051d2c:	01000044 	movi	r4,1
 1051d30:	11001e26 	beq	r2,r4,1051dac <___vfiprintf_internal_r+0x13a0>
 1051d34:	01000084 	movi	r4,2
 1051d38:	11001e1e 	bne	r2,r4,1051db4 <___vfiprintf_internal_r+0x13a8>
 1051d3c:	1829883a 	mov	r20,r3
 1051d40:	003eea06 	br	10518ec <__alt_data_end+0xfffd18ec>
 1051d44:	a007883a 	mov	r3,r20
 1051d48:	00800044 	movi	r2,1
 1051d4c:	003ff606 	br	1051d28 <__alt_data_end+0xfffd1d28>
 1051d50:	00800184 	movi	r2,6
 1051d54:	1240012e 	bgeu	r2,r9,1051d5c <___vfiprintf_internal_r+0x1350>
 1051d58:	1013883a 	mov	r9,r2
 1051d5c:	4827883a 	mov	r19,r9
 1051d60:	4825883a 	mov	r18,r9
 1051d64:	48001516 	blt	r9,zero,1051dbc <___vfiprintf_internal_r+0x13b0>
 1051d68:	05404174 	movhi	r21,261
 1051d6c:	d8c02215 	stw	r3,136(sp)
 1051d70:	ad5acf04 	addi	r21,r21,27452
 1051d74:	003d1406 	br	10511c8 <__alt_data_end+0xfffd11c8>
 1051d78:	02804174 	movhi	r10,261
 1051d7c:	529b3b04 	addi	r10,r10,27884
 1051d80:	da802415 	stw	r10,144(sp)
 1051d84:	200d883a 	mov	r6,r4
 1051d88:	003c9106 	br	1050fd0 <__alt_data_end+0xfffd0fd0>
 1051d8c:	5021883a 	mov	r16,r10
 1051d90:	0013883a 	mov	r9,zero
 1051d94:	003b7d06 	br	1050b8c <__alt_data_end+0xfffd0b8c>
 1051d98:	4827883a 	mov	r19,r9
 1051d9c:	df001d83 	ldbu	fp,118(sp)
 1051da0:	d8c02215 	stw	r3,136(sp)
 1051da4:	0013883a 	mov	r9,zero
 1051da8:	003c1806 	br	1050e0c <__alt_data_end+0xfffd0e0c>
 1051dac:	1829883a 	mov	r20,r3
 1051db0:	003d1806 	br	1051214 <__alt_data_end+0xfffd1214>
 1051db4:	1829883a 	mov	r20,r3
 1051db8:	003ccd06 	br	10510f0 <__alt_data_end+0xfffd10f0>
 1051dbc:	0025883a 	mov	r18,zero
 1051dc0:	003fe906 	br	1051d68 <__alt_data_end+0xfffd1d68>
 1051dc4:	d8802217 	ldw	r2,136(sp)
 1051dc8:	80c00043 	ldbu	r3,1(r16)
 1051dcc:	5021883a 	mov	r16,r10
 1051dd0:	12400017 	ldw	r9,0(r2)
 1051dd4:	10800104 	addi	r2,r2,4
 1051dd8:	d8802215 	stw	r2,136(sp)
 1051ddc:	483faf0e 	bge	r9,zero,1051c9c <__alt_data_end+0xfffd1c9c>
 1051de0:	18c03fcc 	andi	r3,r3,255
 1051de4:	18c0201c 	xori	r3,r3,128
 1051de8:	027fffc4 	movi	r9,-1
 1051dec:	18ffe004 	addi	r3,r3,-128
 1051df0:	003b6506 	br	1050b88 <__alt_data_end+0xfffd0b88>
 1051df4:	d9c01d85 	stb	r7,118(sp)
 1051df8:	003ca006 	br	105107c <__alt_data_end+0xfffd107c>
 1051dfc:	d9c01d85 	stb	r7,118(sp)
 1051e00:	003cad06 	br	10510b8 <__alt_data_end+0xfffd10b8>
 1051e04:	d9c01d85 	stb	r7,118(sp)
 1051e08:	003d7d06 	br	1051400 <__alt_data_end+0xfffd1400>
 1051e0c:	d9c01d85 	stb	r7,118(sp)
 1051e10:	003d5f06 	br	1051390 <__alt_data_end+0xfffd1390>
 1051e14:	a080004c 	andi	r2,r20,1
 1051e18:	0039883a 	mov	fp,zero
 1051e1c:	10000526 	beq	r2,zero,1051e34 <___vfiprintf_internal_r+0x1428>
 1051e20:	00800c04 	movi	r2,48
 1051e24:	d88019c5 	stb	r2,103(sp)
 1051e28:	dcc02717 	ldw	r19,156(sp)
 1051e2c:	dd4019c4 	addi	r21,sp,103
 1051e30:	003bf606 	br	1050e0c <__alt_data_end+0xfffd0e0c>
 1051e34:	0027883a 	mov	r19,zero
 1051e38:	dd401a04 	addi	r21,sp,104
 1051e3c:	003bf306 	br	1050e0c <__alt_data_end+0xfffd0e0c>
 1051e40:	d9c01d85 	stb	r7,118(sp)
 1051e44:	003dc806 	br	1051568 <__alt_data_end+0xfffd1568>
 1051e48:	d9c01d85 	stb	r7,118(sp)
 1051e4c:	003d3a06 	br	1051338 <__alt_data_end+0xfffd1338>
 1051e50:	d9c01d85 	stb	r7,118(sp)
 1051e54:	003d2a06 	br	1051300 <__alt_data_end+0xfffd1300>
 1051e58:	d9c01d85 	stb	r7,118(sp)
 1051e5c:	003cde06 	br	10511d8 <__alt_data_end+0xfffd11d8>
 1051e60:	d9c01d85 	stb	r7,118(sp)
 1051e64:	003cbc06 	br	1051158 <__alt_data_end+0xfffd1158>

01051e68 <__vfiprintf_internal>:
 1051e68:	008041b4 	movhi	r2,262
 1051e6c:	10a1fa04 	addi	r2,r2,-30744
 1051e70:	300f883a 	mov	r7,r6
 1051e74:	280d883a 	mov	r6,r5
 1051e78:	200b883a 	mov	r5,r4
 1051e7c:	11000017 	ldw	r4,0(r2)
 1051e80:	1050a0c1 	jmpi	1050a0c <___vfiprintf_internal_r>

01051e84 <__sbprintf>:
 1051e84:	2880030b 	ldhu	r2,12(r5)
 1051e88:	2ac01917 	ldw	r11,100(r5)
 1051e8c:	2a80038b 	ldhu	r10,14(r5)
 1051e90:	2a400717 	ldw	r9,28(r5)
 1051e94:	2a000917 	ldw	r8,36(r5)
 1051e98:	defee204 	addi	sp,sp,-1144
 1051e9c:	00c10004 	movi	r3,1024
 1051ea0:	dc011a15 	stw	r16,1128(sp)
 1051ea4:	10bfff4c 	andi	r2,r2,65533
 1051ea8:	2821883a 	mov	r16,r5
 1051eac:	d8cb883a 	add	r5,sp,r3
 1051eb0:	dc811c15 	stw	r18,1136(sp)
 1051eb4:	dc411b15 	stw	r17,1132(sp)
 1051eb8:	dfc11d15 	stw	ra,1140(sp)
 1051ebc:	2025883a 	mov	r18,r4
 1051ec0:	d881030d 	sth	r2,1036(sp)
 1051ec4:	dac11915 	stw	r11,1124(sp)
 1051ec8:	da81038d 	sth	r10,1038(sp)
 1051ecc:	da410715 	stw	r9,1052(sp)
 1051ed0:	da010915 	stw	r8,1060(sp)
 1051ed4:	dec10015 	stw	sp,1024(sp)
 1051ed8:	dec10415 	stw	sp,1040(sp)
 1051edc:	d8c10215 	stw	r3,1032(sp)
 1051ee0:	d8c10515 	stw	r3,1044(sp)
 1051ee4:	d8010615 	stw	zero,1048(sp)
 1051ee8:	1050a0c0 	call	1050a0c <___vfiprintf_internal_r>
 1051eec:	1023883a 	mov	r17,r2
 1051ef0:	10000416 	blt	r2,zero,1051f04 <__sbprintf+0x80>
 1051ef4:	d9410004 	addi	r5,sp,1024
 1051ef8:	9009883a 	mov	r4,r18
 1051efc:	104beb40 	call	104beb4 <_fflush_r>
 1051f00:	10000d1e 	bne	r2,zero,1051f38 <__sbprintf+0xb4>
 1051f04:	d881030b 	ldhu	r2,1036(sp)
 1051f08:	1080100c 	andi	r2,r2,64
 1051f0c:	10000326 	beq	r2,zero,1051f1c <__sbprintf+0x98>
 1051f10:	8080030b 	ldhu	r2,12(r16)
 1051f14:	10801014 	ori	r2,r2,64
 1051f18:	8080030d 	sth	r2,12(r16)
 1051f1c:	8805883a 	mov	r2,r17
 1051f20:	dfc11d17 	ldw	ra,1140(sp)
 1051f24:	dc811c17 	ldw	r18,1136(sp)
 1051f28:	dc411b17 	ldw	r17,1132(sp)
 1051f2c:	dc011a17 	ldw	r16,1128(sp)
 1051f30:	dec11e04 	addi	sp,sp,1144
 1051f34:	f800283a 	ret
 1051f38:	047fffc4 	movi	r17,-1
 1051f3c:	003ff106 	br	1051f04 <__alt_data_end+0xfffd1f04>

01051f40 <_write_r>:
 1051f40:	defffd04 	addi	sp,sp,-12
 1051f44:	2805883a 	mov	r2,r5
 1051f48:	dc000015 	stw	r16,0(sp)
 1051f4c:	040041b4 	movhi	r16,262
 1051f50:	dc400115 	stw	r17,4(sp)
 1051f54:	300b883a 	mov	r5,r6
 1051f58:	8428ca04 	addi	r16,r16,-23768
 1051f5c:	2023883a 	mov	r17,r4
 1051f60:	380d883a 	mov	r6,r7
 1051f64:	1009883a 	mov	r4,r2
 1051f68:	dfc00215 	stw	ra,8(sp)
 1051f6c:	80000015 	stw	zero,0(r16)
 1051f70:	10546240 	call	1054624 <write>
 1051f74:	00ffffc4 	movi	r3,-1
 1051f78:	10c00526 	beq	r2,r3,1051f90 <_write_r+0x50>
 1051f7c:	dfc00217 	ldw	ra,8(sp)
 1051f80:	dc400117 	ldw	r17,4(sp)
 1051f84:	dc000017 	ldw	r16,0(sp)
 1051f88:	dec00304 	addi	sp,sp,12
 1051f8c:	f800283a 	ret
 1051f90:	80c00017 	ldw	r3,0(r16)
 1051f94:	183ff926 	beq	r3,zero,1051f7c <__alt_data_end+0xfffd1f7c>
 1051f98:	88c00015 	stw	r3,0(r17)
 1051f9c:	003ff706 	br	1051f7c <__alt_data_end+0xfffd1f7c>

01051fa0 <_close_r>:
 1051fa0:	defffd04 	addi	sp,sp,-12
 1051fa4:	dc000015 	stw	r16,0(sp)
 1051fa8:	040041b4 	movhi	r16,262
 1051fac:	dc400115 	stw	r17,4(sp)
 1051fb0:	8428ca04 	addi	r16,r16,-23768
 1051fb4:	2023883a 	mov	r17,r4
 1051fb8:	2809883a 	mov	r4,r5
 1051fbc:	dfc00215 	stw	ra,8(sp)
 1051fc0:	80000015 	stw	zero,0(r16)
 1051fc4:	1053de40 	call	1053de4 <close>
 1051fc8:	00ffffc4 	movi	r3,-1
 1051fcc:	10c00526 	beq	r2,r3,1051fe4 <_close_r+0x44>
 1051fd0:	dfc00217 	ldw	ra,8(sp)
 1051fd4:	dc400117 	ldw	r17,4(sp)
 1051fd8:	dc000017 	ldw	r16,0(sp)
 1051fdc:	dec00304 	addi	sp,sp,12
 1051fe0:	f800283a 	ret
 1051fe4:	80c00017 	ldw	r3,0(r16)
 1051fe8:	183ff926 	beq	r3,zero,1051fd0 <__alt_data_end+0xfffd1fd0>
 1051fec:	88c00015 	stw	r3,0(r17)
 1051ff0:	003ff706 	br	1051fd0 <__alt_data_end+0xfffd1fd0>

01051ff4 <_calloc_r>:
 1051ff4:	298b383a 	mul	r5,r5,r6
 1051ff8:	defffe04 	addi	sp,sp,-8
 1051ffc:	dfc00115 	stw	ra,4(sp)
 1052000:	dc000015 	stw	r16,0(sp)
 1052004:	104cff00 	call	104cff0 <_malloc_r>
 1052008:	10002926 	beq	r2,zero,10520b0 <_calloc_r+0xbc>
 105200c:	11bfff17 	ldw	r6,-4(r2)
 1052010:	1021883a 	mov	r16,r2
 1052014:	00bfff04 	movi	r2,-4
 1052018:	308c703a 	and	r6,r6,r2
 105201c:	00c00904 	movi	r3,36
 1052020:	308d883a 	add	r6,r6,r2
 1052024:	19801636 	bltu	r3,r6,1052080 <_calloc_r+0x8c>
 1052028:	008004c4 	movi	r2,19
 105202c:	11800b2e 	bgeu	r2,r6,105205c <_calloc_r+0x68>
 1052030:	80000015 	stw	zero,0(r16)
 1052034:	80000115 	stw	zero,4(r16)
 1052038:	008006c4 	movi	r2,27
 105203c:	11801a2e 	bgeu	r2,r6,10520a8 <_calloc_r+0xb4>
 1052040:	80000215 	stw	zero,8(r16)
 1052044:	80000315 	stw	zero,12(r16)
 1052048:	30c0151e 	bne	r6,r3,10520a0 <_calloc_r+0xac>
 105204c:	80000415 	stw	zero,16(r16)
 1052050:	80800604 	addi	r2,r16,24
 1052054:	80000515 	stw	zero,20(r16)
 1052058:	00000106 	br	1052060 <_calloc_r+0x6c>
 105205c:	8005883a 	mov	r2,r16
 1052060:	10000015 	stw	zero,0(r2)
 1052064:	10000115 	stw	zero,4(r2)
 1052068:	10000215 	stw	zero,8(r2)
 105206c:	8005883a 	mov	r2,r16
 1052070:	dfc00117 	ldw	ra,4(sp)
 1052074:	dc000017 	ldw	r16,0(sp)
 1052078:	dec00204 	addi	sp,sp,8
 105207c:	f800283a 	ret
 1052080:	000b883a 	mov	r5,zero
 1052084:	8009883a 	mov	r4,r16
 1052088:	104db840 	call	104db84 <memset>
 105208c:	8005883a 	mov	r2,r16
 1052090:	dfc00117 	ldw	ra,4(sp)
 1052094:	dc000017 	ldw	r16,0(sp)
 1052098:	dec00204 	addi	sp,sp,8
 105209c:	f800283a 	ret
 10520a0:	80800404 	addi	r2,r16,16
 10520a4:	003fee06 	br	1052060 <__alt_data_end+0xfffd2060>
 10520a8:	80800204 	addi	r2,r16,8
 10520ac:	003fec06 	br	1052060 <__alt_data_end+0xfffd2060>
 10520b0:	0005883a 	mov	r2,zero
 10520b4:	003fee06 	br	1052070 <__alt_data_end+0xfffd2070>

010520b8 <_fclose_r>:
 10520b8:	28003926 	beq	r5,zero,10521a0 <_fclose_r+0xe8>
 10520bc:	defffc04 	addi	sp,sp,-16
 10520c0:	dc400115 	stw	r17,4(sp)
 10520c4:	dc000015 	stw	r16,0(sp)
 10520c8:	dfc00315 	stw	ra,12(sp)
 10520cc:	dc800215 	stw	r18,8(sp)
 10520d0:	2023883a 	mov	r17,r4
 10520d4:	2821883a 	mov	r16,r5
 10520d8:	20000226 	beq	r4,zero,10520e4 <_fclose_r+0x2c>
 10520dc:	20800e17 	ldw	r2,56(r4)
 10520e0:	10002726 	beq	r2,zero,1052180 <_fclose_r+0xc8>
 10520e4:	8080030f 	ldh	r2,12(r16)
 10520e8:	1000071e 	bne	r2,zero,1052108 <_fclose_r+0x50>
 10520ec:	0005883a 	mov	r2,zero
 10520f0:	dfc00317 	ldw	ra,12(sp)
 10520f4:	dc800217 	ldw	r18,8(sp)
 10520f8:	dc400117 	ldw	r17,4(sp)
 10520fc:	dc000017 	ldw	r16,0(sp)
 1052100:	dec00404 	addi	sp,sp,16
 1052104:	f800283a 	ret
 1052108:	800b883a 	mov	r5,r16
 105210c:	8809883a 	mov	r4,r17
 1052110:	104bc980 	call	104bc98 <__sflush_r>
 1052114:	1025883a 	mov	r18,r2
 1052118:	80800b17 	ldw	r2,44(r16)
 105211c:	10000426 	beq	r2,zero,1052130 <_fclose_r+0x78>
 1052120:	81400717 	ldw	r5,28(r16)
 1052124:	8809883a 	mov	r4,r17
 1052128:	103ee83a 	callr	r2
 105212c:	10001616 	blt	r2,zero,1052188 <_fclose_r+0xd0>
 1052130:	8080030b 	ldhu	r2,12(r16)
 1052134:	1080200c 	andi	r2,r2,128
 1052138:	1000151e 	bne	r2,zero,1052190 <_fclose_r+0xd8>
 105213c:	81400c17 	ldw	r5,48(r16)
 1052140:	28000526 	beq	r5,zero,1052158 <_fclose_r+0xa0>
 1052144:	80801004 	addi	r2,r16,64
 1052148:	28800226 	beq	r5,r2,1052154 <_fclose_r+0x9c>
 105214c:	8809883a 	mov	r4,r17
 1052150:	104c4040 	call	104c404 <_free_r>
 1052154:	80000c15 	stw	zero,48(r16)
 1052158:	81401117 	ldw	r5,68(r16)
 105215c:	28000326 	beq	r5,zero,105216c <_fclose_r+0xb4>
 1052160:	8809883a 	mov	r4,r17
 1052164:	104c4040 	call	104c404 <_free_r>
 1052168:	80001115 	stw	zero,68(r16)
 105216c:	104c2a00 	call	104c2a0 <__sfp_lock_acquire>
 1052170:	8000030d 	sth	zero,12(r16)
 1052174:	104c2a40 	call	104c2a4 <__sfp_lock_release>
 1052178:	9005883a 	mov	r2,r18
 105217c:	003fdc06 	br	10520f0 <__alt_data_end+0xfffd20f0>
 1052180:	104c2900 	call	104c290 <__sinit>
 1052184:	003fd706 	br	10520e4 <__alt_data_end+0xfffd20e4>
 1052188:	04bfffc4 	movi	r18,-1
 105218c:	003fe806 	br	1052130 <__alt_data_end+0xfffd2130>
 1052190:	81400417 	ldw	r5,16(r16)
 1052194:	8809883a 	mov	r4,r17
 1052198:	104c4040 	call	104c404 <_free_r>
 105219c:	003fe706 	br	105213c <__alt_data_end+0xfffd213c>
 10521a0:	0005883a 	mov	r2,zero
 10521a4:	f800283a 	ret

010521a8 <fclose>:
 10521a8:	008041b4 	movhi	r2,262
 10521ac:	10a1fa04 	addi	r2,r2,-30744
 10521b0:	200b883a 	mov	r5,r4
 10521b4:	11000017 	ldw	r4,0(r2)
 10521b8:	10520b81 	jmpi	10520b8 <_fclose_r>

010521bc <__fputwc>:
 10521bc:	defff804 	addi	sp,sp,-32
 10521c0:	dcc00415 	stw	r19,16(sp)
 10521c4:	dc800315 	stw	r18,12(sp)
 10521c8:	dc000115 	stw	r16,4(sp)
 10521cc:	dfc00715 	stw	ra,28(sp)
 10521d0:	dd400615 	stw	r21,24(sp)
 10521d4:	dd000515 	stw	r20,20(sp)
 10521d8:	dc400215 	stw	r17,8(sp)
 10521dc:	2027883a 	mov	r19,r4
 10521e0:	2825883a 	mov	r18,r5
 10521e4:	3021883a 	mov	r16,r6
 10521e8:	104cde00 	call	104cde0 <__locale_mb_cur_max>
 10521ec:	00c00044 	movi	r3,1
 10521f0:	10c03e26 	beq	r2,r3,10522ec <__fputwc+0x130>
 10521f4:	81c01704 	addi	r7,r16,92
 10521f8:	900d883a 	mov	r6,r18
 10521fc:	d80b883a 	mov	r5,sp
 1052200:	9809883a 	mov	r4,r19
 1052204:	105268c0 	call	105268c <_wcrtomb_r>
 1052208:	1029883a 	mov	r20,r2
 105220c:	00bfffc4 	movi	r2,-1
 1052210:	a0802026 	beq	r20,r2,1052294 <__fputwc+0xd8>
 1052214:	d9400003 	ldbu	r5,0(sp)
 1052218:	a0001c26 	beq	r20,zero,105228c <__fputwc+0xd0>
 105221c:	0023883a 	mov	r17,zero
 1052220:	05400284 	movi	r21,10
 1052224:	00000906 	br	105224c <__fputwc+0x90>
 1052228:	80800017 	ldw	r2,0(r16)
 105222c:	11400005 	stb	r5,0(r2)
 1052230:	80c00017 	ldw	r3,0(r16)
 1052234:	18c00044 	addi	r3,r3,1
 1052238:	80c00015 	stw	r3,0(r16)
 105223c:	8c400044 	addi	r17,r17,1
 1052240:	dc45883a 	add	r2,sp,r17
 1052244:	8d00112e 	bgeu	r17,r20,105228c <__fputwc+0xd0>
 1052248:	11400003 	ldbu	r5,0(r2)
 105224c:	80c00217 	ldw	r3,8(r16)
 1052250:	18ffffc4 	addi	r3,r3,-1
 1052254:	80c00215 	stw	r3,8(r16)
 1052258:	183ff30e 	bge	r3,zero,1052228 <__alt_data_end+0xfffd2228>
 105225c:	80800617 	ldw	r2,24(r16)
 1052260:	18801916 	blt	r3,r2,10522c8 <__fputwc+0x10c>
 1052264:	80800017 	ldw	r2,0(r16)
 1052268:	11400005 	stb	r5,0(r2)
 105226c:	80800017 	ldw	r2,0(r16)
 1052270:	10c00003 	ldbu	r3,0(r2)
 1052274:	10800044 	addi	r2,r2,1
 1052278:	1d402326 	beq	r3,r21,1052308 <__fputwc+0x14c>
 105227c:	80800015 	stw	r2,0(r16)
 1052280:	8c400044 	addi	r17,r17,1
 1052284:	dc45883a 	add	r2,sp,r17
 1052288:	8d3fef36 	bltu	r17,r20,1052248 <__alt_data_end+0xfffd2248>
 105228c:	9005883a 	mov	r2,r18
 1052290:	00000406 	br	10522a4 <__fputwc+0xe8>
 1052294:	80c0030b 	ldhu	r3,12(r16)
 1052298:	a005883a 	mov	r2,r20
 105229c:	18c01014 	ori	r3,r3,64
 10522a0:	80c0030d 	sth	r3,12(r16)
 10522a4:	dfc00717 	ldw	ra,28(sp)
 10522a8:	dd400617 	ldw	r21,24(sp)
 10522ac:	dd000517 	ldw	r20,20(sp)
 10522b0:	dcc00417 	ldw	r19,16(sp)
 10522b4:	dc800317 	ldw	r18,12(sp)
 10522b8:	dc400217 	ldw	r17,8(sp)
 10522bc:	dc000117 	ldw	r16,4(sp)
 10522c0:	dec00804 	addi	sp,sp,32
 10522c4:	f800283a 	ret
 10522c8:	800d883a 	mov	r6,r16
 10522cc:	29403fcc 	andi	r5,r5,255
 10522d0:	9809883a 	mov	r4,r19
 10522d4:	10525340 	call	1052534 <__swbuf_r>
 10522d8:	10bfffe0 	cmpeqi	r2,r2,-1
 10522dc:	10803fcc 	andi	r2,r2,255
 10522e0:	103fd626 	beq	r2,zero,105223c <__alt_data_end+0xfffd223c>
 10522e4:	00bfffc4 	movi	r2,-1
 10522e8:	003fee06 	br	10522a4 <__alt_data_end+0xfffd22a4>
 10522ec:	90ffffc4 	addi	r3,r18,-1
 10522f0:	01003f84 	movi	r4,254
 10522f4:	20ffbf36 	bltu	r4,r3,10521f4 <__alt_data_end+0xfffd21f4>
 10522f8:	900b883a 	mov	r5,r18
 10522fc:	dc800005 	stb	r18,0(sp)
 1052300:	1029883a 	mov	r20,r2
 1052304:	003fc506 	br	105221c <__alt_data_end+0xfffd221c>
 1052308:	800d883a 	mov	r6,r16
 105230c:	a80b883a 	mov	r5,r21
 1052310:	9809883a 	mov	r4,r19
 1052314:	10525340 	call	1052534 <__swbuf_r>
 1052318:	10bfffe0 	cmpeqi	r2,r2,-1
 105231c:	003fef06 	br	10522dc <__alt_data_end+0xfffd22dc>

01052320 <_fputwc_r>:
 1052320:	3080030b 	ldhu	r2,12(r6)
 1052324:	10c8000c 	andi	r3,r2,8192
 1052328:	1800051e 	bne	r3,zero,1052340 <_fputwc_r+0x20>
 105232c:	30c01917 	ldw	r3,100(r6)
 1052330:	10880014 	ori	r2,r2,8192
 1052334:	3080030d 	sth	r2,12(r6)
 1052338:	18880014 	ori	r2,r3,8192
 105233c:	30801915 	stw	r2,100(r6)
 1052340:	10521bc1 	jmpi	10521bc <__fputwc>

01052344 <fputwc>:
 1052344:	008041b4 	movhi	r2,262
 1052348:	defffc04 	addi	sp,sp,-16
 105234c:	10a1fa04 	addi	r2,r2,-30744
 1052350:	dc000115 	stw	r16,4(sp)
 1052354:	14000017 	ldw	r16,0(r2)
 1052358:	dc400215 	stw	r17,8(sp)
 105235c:	dfc00315 	stw	ra,12(sp)
 1052360:	2023883a 	mov	r17,r4
 1052364:	80000226 	beq	r16,zero,1052370 <fputwc+0x2c>
 1052368:	80800e17 	ldw	r2,56(r16)
 105236c:	10001026 	beq	r2,zero,10523b0 <fputwc+0x6c>
 1052370:	2880030b 	ldhu	r2,12(r5)
 1052374:	10c8000c 	andi	r3,r2,8192
 1052378:	1800051e 	bne	r3,zero,1052390 <fputwc+0x4c>
 105237c:	28c01917 	ldw	r3,100(r5)
 1052380:	10880014 	ori	r2,r2,8192
 1052384:	2880030d 	sth	r2,12(r5)
 1052388:	18880014 	ori	r2,r3,8192
 105238c:	28801915 	stw	r2,100(r5)
 1052390:	280d883a 	mov	r6,r5
 1052394:	8009883a 	mov	r4,r16
 1052398:	880b883a 	mov	r5,r17
 105239c:	dfc00317 	ldw	ra,12(sp)
 10523a0:	dc400217 	ldw	r17,8(sp)
 10523a4:	dc000117 	ldw	r16,4(sp)
 10523a8:	dec00404 	addi	sp,sp,16
 10523ac:	10521bc1 	jmpi	10521bc <__fputwc>
 10523b0:	8009883a 	mov	r4,r16
 10523b4:	d9400015 	stw	r5,0(sp)
 10523b8:	104c2900 	call	104c290 <__sinit>
 10523bc:	d9400017 	ldw	r5,0(sp)
 10523c0:	003feb06 	br	1052370 <__alt_data_end+0xfffd2370>

010523c4 <_fstat_r>:
 10523c4:	defffd04 	addi	sp,sp,-12
 10523c8:	2805883a 	mov	r2,r5
 10523cc:	dc000015 	stw	r16,0(sp)
 10523d0:	040041b4 	movhi	r16,262
 10523d4:	dc400115 	stw	r17,4(sp)
 10523d8:	8428ca04 	addi	r16,r16,-23768
 10523dc:	2023883a 	mov	r17,r4
 10523e0:	300b883a 	mov	r5,r6
 10523e4:	1009883a 	mov	r4,r2
 10523e8:	dfc00215 	stw	ra,8(sp)
 10523ec:	80000015 	stw	zero,0(r16)
 10523f0:	1053f1c0 	call	1053f1c <fstat>
 10523f4:	00ffffc4 	movi	r3,-1
 10523f8:	10c00526 	beq	r2,r3,1052410 <_fstat_r+0x4c>
 10523fc:	dfc00217 	ldw	ra,8(sp)
 1052400:	dc400117 	ldw	r17,4(sp)
 1052404:	dc000017 	ldw	r16,0(sp)
 1052408:	dec00304 	addi	sp,sp,12
 105240c:	f800283a 	ret
 1052410:	80c00017 	ldw	r3,0(r16)
 1052414:	183ff926 	beq	r3,zero,10523fc <__alt_data_end+0xfffd23fc>
 1052418:	88c00015 	stw	r3,0(r17)
 105241c:	003ff706 	br	10523fc <__alt_data_end+0xfffd23fc>

01052420 <_isatty_r>:
 1052420:	defffd04 	addi	sp,sp,-12
 1052424:	dc000015 	stw	r16,0(sp)
 1052428:	040041b4 	movhi	r16,262
 105242c:	dc400115 	stw	r17,4(sp)
 1052430:	8428ca04 	addi	r16,r16,-23768
 1052434:	2023883a 	mov	r17,r4
 1052438:	2809883a 	mov	r4,r5
 105243c:	dfc00215 	stw	ra,8(sp)
 1052440:	80000015 	stw	zero,0(r16)
 1052444:	10540080 	call	1054008 <isatty>
 1052448:	00ffffc4 	movi	r3,-1
 105244c:	10c00526 	beq	r2,r3,1052464 <_isatty_r+0x44>
 1052450:	dfc00217 	ldw	ra,8(sp)
 1052454:	dc400117 	ldw	r17,4(sp)
 1052458:	dc000017 	ldw	r16,0(sp)
 105245c:	dec00304 	addi	sp,sp,12
 1052460:	f800283a 	ret
 1052464:	80c00017 	ldw	r3,0(r16)
 1052468:	183ff926 	beq	r3,zero,1052450 <__alt_data_end+0xfffd2450>
 105246c:	88c00015 	stw	r3,0(r17)
 1052470:	003ff706 	br	1052450 <__alt_data_end+0xfffd2450>

01052474 <_lseek_r>:
 1052474:	defffd04 	addi	sp,sp,-12
 1052478:	2805883a 	mov	r2,r5
 105247c:	dc000015 	stw	r16,0(sp)
 1052480:	040041b4 	movhi	r16,262
 1052484:	dc400115 	stw	r17,4(sp)
 1052488:	300b883a 	mov	r5,r6
 105248c:	8428ca04 	addi	r16,r16,-23768
 1052490:	2023883a 	mov	r17,r4
 1052494:	380d883a 	mov	r6,r7
 1052498:	1009883a 	mov	r4,r2
 105249c:	dfc00215 	stw	ra,8(sp)
 10524a0:	80000015 	stw	zero,0(r16)
 10524a4:	10541d40 	call	10541d4 <lseek>
 10524a8:	00ffffc4 	movi	r3,-1
 10524ac:	10c00526 	beq	r2,r3,10524c4 <_lseek_r+0x50>
 10524b0:	dfc00217 	ldw	ra,8(sp)
 10524b4:	dc400117 	ldw	r17,4(sp)
 10524b8:	dc000017 	ldw	r16,0(sp)
 10524bc:	dec00304 	addi	sp,sp,12
 10524c0:	f800283a 	ret
 10524c4:	80c00017 	ldw	r3,0(r16)
 10524c8:	183ff926 	beq	r3,zero,10524b0 <__alt_data_end+0xfffd24b0>
 10524cc:	88c00015 	stw	r3,0(r17)
 10524d0:	003ff706 	br	10524b0 <__alt_data_end+0xfffd24b0>

010524d4 <_read_r>:
 10524d4:	defffd04 	addi	sp,sp,-12
 10524d8:	2805883a 	mov	r2,r5
 10524dc:	dc000015 	stw	r16,0(sp)
 10524e0:	040041b4 	movhi	r16,262
 10524e4:	dc400115 	stw	r17,4(sp)
 10524e8:	300b883a 	mov	r5,r6
 10524ec:	8428ca04 	addi	r16,r16,-23768
 10524f0:	2023883a 	mov	r17,r4
 10524f4:	380d883a 	mov	r6,r7
 10524f8:	1009883a 	mov	r4,r2
 10524fc:	dfc00215 	stw	ra,8(sp)
 1052500:	80000015 	stw	zero,0(r16)
 1052504:	10543a80 	call	10543a8 <read>
 1052508:	00ffffc4 	movi	r3,-1
 105250c:	10c00526 	beq	r2,r3,1052524 <_read_r+0x50>
 1052510:	dfc00217 	ldw	ra,8(sp)
 1052514:	dc400117 	ldw	r17,4(sp)
 1052518:	dc000017 	ldw	r16,0(sp)
 105251c:	dec00304 	addi	sp,sp,12
 1052520:	f800283a 	ret
 1052524:	80c00017 	ldw	r3,0(r16)
 1052528:	183ff926 	beq	r3,zero,1052510 <__alt_data_end+0xfffd2510>
 105252c:	88c00015 	stw	r3,0(r17)
 1052530:	003ff706 	br	1052510 <__alt_data_end+0xfffd2510>

01052534 <__swbuf_r>:
 1052534:	defffb04 	addi	sp,sp,-20
 1052538:	dcc00315 	stw	r19,12(sp)
 105253c:	dc800215 	stw	r18,8(sp)
 1052540:	dc000015 	stw	r16,0(sp)
 1052544:	dfc00415 	stw	ra,16(sp)
 1052548:	dc400115 	stw	r17,4(sp)
 105254c:	2025883a 	mov	r18,r4
 1052550:	2827883a 	mov	r19,r5
 1052554:	3021883a 	mov	r16,r6
 1052558:	20000226 	beq	r4,zero,1052564 <__swbuf_r+0x30>
 105255c:	20800e17 	ldw	r2,56(r4)
 1052560:	10004226 	beq	r2,zero,105266c <__swbuf_r+0x138>
 1052564:	80800617 	ldw	r2,24(r16)
 1052568:	8100030b 	ldhu	r4,12(r16)
 105256c:	80800215 	stw	r2,8(r16)
 1052570:	2080020c 	andi	r2,r4,8
 1052574:	10003626 	beq	r2,zero,1052650 <__swbuf_r+0x11c>
 1052578:	80c00417 	ldw	r3,16(r16)
 105257c:	18003426 	beq	r3,zero,1052650 <__swbuf_r+0x11c>
 1052580:	2088000c 	andi	r2,r4,8192
 1052584:	9c403fcc 	andi	r17,r19,255
 1052588:	10001a26 	beq	r2,zero,10525f4 <__swbuf_r+0xc0>
 105258c:	80800017 	ldw	r2,0(r16)
 1052590:	81000517 	ldw	r4,20(r16)
 1052594:	10c7c83a 	sub	r3,r2,r3
 1052598:	1900200e 	bge	r3,r4,105261c <__swbuf_r+0xe8>
 105259c:	18c00044 	addi	r3,r3,1
 10525a0:	81000217 	ldw	r4,8(r16)
 10525a4:	11400044 	addi	r5,r2,1
 10525a8:	81400015 	stw	r5,0(r16)
 10525ac:	213fffc4 	addi	r4,r4,-1
 10525b0:	81000215 	stw	r4,8(r16)
 10525b4:	14c00005 	stb	r19,0(r2)
 10525b8:	80800517 	ldw	r2,20(r16)
 10525bc:	10c01e26 	beq	r2,r3,1052638 <__swbuf_r+0x104>
 10525c0:	8080030b 	ldhu	r2,12(r16)
 10525c4:	1080004c 	andi	r2,r2,1
 10525c8:	10000226 	beq	r2,zero,10525d4 <__swbuf_r+0xa0>
 10525cc:	00800284 	movi	r2,10
 10525d0:	88801926 	beq	r17,r2,1052638 <__swbuf_r+0x104>
 10525d4:	8805883a 	mov	r2,r17
 10525d8:	dfc00417 	ldw	ra,16(sp)
 10525dc:	dcc00317 	ldw	r19,12(sp)
 10525e0:	dc800217 	ldw	r18,8(sp)
 10525e4:	dc400117 	ldw	r17,4(sp)
 10525e8:	dc000017 	ldw	r16,0(sp)
 10525ec:	dec00504 	addi	sp,sp,20
 10525f0:	f800283a 	ret
 10525f4:	81401917 	ldw	r5,100(r16)
 10525f8:	00b7ffc4 	movi	r2,-8193
 10525fc:	21080014 	ori	r4,r4,8192
 1052600:	2884703a 	and	r2,r5,r2
 1052604:	80801915 	stw	r2,100(r16)
 1052608:	80800017 	ldw	r2,0(r16)
 105260c:	8100030d 	sth	r4,12(r16)
 1052610:	81000517 	ldw	r4,20(r16)
 1052614:	10c7c83a 	sub	r3,r2,r3
 1052618:	193fe016 	blt	r3,r4,105259c <__alt_data_end+0xfffd259c>
 105261c:	800b883a 	mov	r5,r16
 1052620:	9009883a 	mov	r4,r18
 1052624:	104beb40 	call	104beb4 <_fflush_r>
 1052628:	1000071e 	bne	r2,zero,1052648 <__swbuf_r+0x114>
 105262c:	80800017 	ldw	r2,0(r16)
 1052630:	00c00044 	movi	r3,1
 1052634:	003fda06 	br	10525a0 <__alt_data_end+0xfffd25a0>
 1052638:	800b883a 	mov	r5,r16
 105263c:	9009883a 	mov	r4,r18
 1052640:	104beb40 	call	104beb4 <_fflush_r>
 1052644:	103fe326 	beq	r2,zero,10525d4 <__alt_data_end+0xfffd25d4>
 1052648:	00bfffc4 	movi	r2,-1
 105264c:	003fe206 	br	10525d8 <__alt_data_end+0xfffd25d8>
 1052650:	800b883a 	mov	r5,r16
 1052654:	9009883a 	mov	r4,r18
 1052658:	104a2bc0 	call	104a2bc <__swsetup_r>
 105265c:	103ffa1e 	bne	r2,zero,1052648 <__alt_data_end+0xfffd2648>
 1052660:	8100030b 	ldhu	r4,12(r16)
 1052664:	80c00417 	ldw	r3,16(r16)
 1052668:	003fc506 	br	1052580 <__alt_data_end+0xfffd2580>
 105266c:	104c2900 	call	104c290 <__sinit>
 1052670:	003fbc06 	br	1052564 <__alt_data_end+0xfffd2564>

01052674 <__swbuf>:
 1052674:	008041b4 	movhi	r2,262
 1052678:	10a1fa04 	addi	r2,r2,-30744
 105267c:	280d883a 	mov	r6,r5
 1052680:	200b883a 	mov	r5,r4
 1052684:	11000017 	ldw	r4,0(r2)
 1052688:	10525341 	jmpi	1052534 <__swbuf_r>

0105268c <_wcrtomb_r>:
 105268c:	defff604 	addi	sp,sp,-40
 1052690:	008041b4 	movhi	r2,262
 1052694:	dc800815 	stw	r18,32(sp)
 1052698:	dc400715 	stw	r17,28(sp)
 105269c:	dc000615 	stw	r16,24(sp)
 10526a0:	10a1fe04 	addi	r2,r2,-30728
 10526a4:	dfc00915 	stw	ra,36(sp)
 10526a8:	2021883a 	mov	r16,r4
 10526ac:	3823883a 	mov	r17,r7
 10526b0:	14800017 	ldw	r18,0(r2)
 10526b4:	28001426 	beq	r5,zero,1052708 <_wcrtomb_r+0x7c>
 10526b8:	d9400415 	stw	r5,16(sp)
 10526bc:	d9800515 	stw	r6,20(sp)
 10526c0:	104cdd40 	call	104cdd4 <__locale_charset>
 10526c4:	d9800517 	ldw	r6,20(sp)
 10526c8:	d9400417 	ldw	r5,16(sp)
 10526cc:	100f883a 	mov	r7,r2
 10526d0:	dc400015 	stw	r17,0(sp)
 10526d4:	8009883a 	mov	r4,r16
 10526d8:	903ee83a 	callr	r18
 10526dc:	00ffffc4 	movi	r3,-1
 10526e0:	10c0031e 	bne	r2,r3,10526f0 <_wcrtomb_r+0x64>
 10526e4:	88000015 	stw	zero,0(r17)
 10526e8:	00c02284 	movi	r3,138
 10526ec:	80c00015 	stw	r3,0(r16)
 10526f0:	dfc00917 	ldw	ra,36(sp)
 10526f4:	dc800817 	ldw	r18,32(sp)
 10526f8:	dc400717 	ldw	r17,28(sp)
 10526fc:	dc000617 	ldw	r16,24(sp)
 1052700:	dec00a04 	addi	sp,sp,40
 1052704:	f800283a 	ret
 1052708:	104cdd40 	call	104cdd4 <__locale_charset>
 105270c:	100f883a 	mov	r7,r2
 1052710:	dc400015 	stw	r17,0(sp)
 1052714:	000d883a 	mov	r6,zero
 1052718:	d9400104 	addi	r5,sp,4
 105271c:	8009883a 	mov	r4,r16
 1052720:	903ee83a 	callr	r18
 1052724:	003fed06 	br	10526dc <__alt_data_end+0xfffd26dc>

01052728 <wcrtomb>:
 1052728:	defff604 	addi	sp,sp,-40
 105272c:	008041b4 	movhi	r2,262
 1052730:	dc800615 	stw	r18,24(sp)
 1052734:	dc400515 	stw	r17,20(sp)
 1052738:	10a1fa04 	addi	r2,r2,-30744
 105273c:	dfc00915 	stw	ra,36(sp)
 1052740:	dd000815 	stw	r20,32(sp)
 1052744:	dcc00715 	stw	r19,28(sp)
 1052748:	dc000415 	stw	r16,16(sp)
 105274c:	3025883a 	mov	r18,r6
 1052750:	14400017 	ldw	r17,0(r2)
 1052754:	20001926 	beq	r4,zero,10527bc <wcrtomb+0x94>
 1052758:	008041b4 	movhi	r2,262
 105275c:	10a1fe04 	addi	r2,r2,-30728
 1052760:	15000017 	ldw	r20,0(r2)
 1052764:	2021883a 	mov	r16,r4
 1052768:	2827883a 	mov	r19,r5
 105276c:	104cdd40 	call	104cdd4 <__locale_charset>
 1052770:	100f883a 	mov	r7,r2
 1052774:	dc800015 	stw	r18,0(sp)
 1052778:	980d883a 	mov	r6,r19
 105277c:	800b883a 	mov	r5,r16
 1052780:	8809883a 	mov	r4,r17
 1052784:	a03ee83a 	callr	r20
 1052788:	00ffffc4 	movi	r3,-1
 105278c:	10c0031e 	bne	r2,r3,105279c <wcrtomb+0x74>
 1052790:	90000015 	stw	zero,0(r18)
 1052794:	00c02284 	movi	r3,138
 1052798:	88c00015 	stw	r3,0(r17)
 105279c:	dfc00917 	ldw	ra,36(sp)
 10527a0:	dd000817 	ldw	r20,32(sp)
 10527a4:	dcc00717 	ldw	r19,28(sp)
 10527a8:	dc800617 	ldw	r18,24(sp)
 10527ac:	dc400517 	ldw	r17,20(sp)
 10527b0:	dc000417 	ldw	r16,16(sp)
 10527b4:	dec00a04 	addi	sp,sp,40
 10527b8:	f800283a 	ret
 10527bc:	008041b4 	movhi	r2,262
 10527c0:	10a1fe04 	addi	r2,r2,-30728
 10527c4:	14000017 	ldw	r16,0(r2)
 10527c8:	104cdd40 	call	104cdd4 <__locale_charset>
 10527cc:	100f883a 	mov	r7,r2
 10527d0:	dc800015 	stw	r18,0(sp)
 10527d4:	000d883a 	mov	r6,zero
 10527d8:	d9400104 	addi	r5,sp,4
 10527dc:	8809883a 	mov	r4,r17
 10527e0:	803ee83a 	callr	r16
 10527e4:	003fe806 	br	1052788 <__alt_data_end+0xfffd2788>

010527e8 <__ascii_wctomb>:
 10527e8:	28000526 	beq	r5,zero,1052800 <__ascii_wctomb+0x18>
 10527ec:	00803fc4 	movi	r2,255
 10527f0:	11800536 	bltu	r2,r6,1052808 <__ascii_wctomb+0x20>
 10527f4:	29800005 	stb	r6,0(r5)
 10527f8:	00800044 	movi	r2,1
 10527fc:	f800283a 	ret
 1052800:	0005883a 	mov	r2,zero
 1052804:	f800283a 	ret
 1052808:	00802284 	movi	r2,138
 105280c:	20800015 	stw	r2,0(r4)
 1052810:	00bfffc4 	movi	r2,-1
 1052814:	f800283a 	ret

01052818 <_wctomb_r>:
 1052818:	008041b4 	movhi	r2,262
 105281c:	defff904 	addi	sp,sp,-28
 1052820:	10a1fe04 	addi	r2,r2,-30728
 1052824:	dfc00615 	stw	ra,24(sp)
 1052828:	dc400515 	stw	r17,20(sp)
 105282c:	dc000415 	stw	r16,16(sp)
 1052830:	3823883a 	mov	r17,r7
 1052834:	14000017 	ldw	r16,0(r2)
 1052838:	d9000115 	stw	r4,4(sp)
 105283c:	d9400215 	stw	r5,8(sp)
 1052840:	d9800315 	stw	r6,12(sp)
 1052844:	104cdd40 	call	104cdd4 <__locale_charset>
 1052848:	d9800317 	ldw	r6,12(sp)
 105284c:	d9400217 	ldw	r5,8(sp)
 1052850:	d9000117 	ldw	r4,4(sp)
 1052854:	100f883a 	mov	r7,r2
 1052858:	dc400015 	stw	r17,0(sp)
 105285c:	803ee83a 	callr	r16
 1052860:	dfc00617 	ldw	ra,24(sp)
 1052864:	dc400517 	ldw	r17,20(sp)
 1052868:	dc000417 	ldw	r16,16(sp)
 105286c:	dec00704 	addi	sp,sp,28
 1052870:	f800283a 	ret

01052874 <__udivdi3>:
 1052874:	defff504 	addi	sp,sp,-44
 1052878:	dcc00415 	stw	r19,16(sp)
 105287c:	dc000115 	stw	r16,4(sp)
 1052880:	dfc00a15 	stw	ra,40(sp)
 1052884:	df000915 	stw	fp,36(sp)
 1052888:	ddc00815 	stw	r23,32(sp)
 105288c:	dd800715 	stw	r22,28(sp)
 1052890:	dd400615 	stw	r21,24(sp)
 1052894:	dd000515 	stw	r20,20(sp)
 1052898:	dc800315 	stw	r18,12(sp)
 105289c:	dc400215 	stw	r17,8(sp)
 10528a0:	2027883a 	mov	r19,r4
 10528a4:	2821883a 	mov	r16,r5
 10528a8:	3800411e 	bne	r7,zero,10529b0 <__udivdi3+0x13c>
 10528ac:	3023883a 	mov	r17,r6
 10528b0:	2025883a 	mov	r18,r4
 10528b4:	2980522e 	bgeu	r5,r6,1052a00 <__udivdi3+0x18c>
 10528b8:	00bfffd4 	movui	r2,65535
 10528bc:	282d883a 	mov	r22,r5
 10528c0:	1180a836 	bltu	r2,r6,1052b64 <__udivdi3+0x2f0>
 10528c4:	00803fc4 	movi	r2,255
 10528c8:	1185803a 	cmpltu	r2,r2,r6
 10528cc:	100490fa 	slli	r2,r2,3
 10528d0:	3086d83a 	srl	r3,r6,r2
 10528d4:	01004174 	movhi	r4,261
 10528d8:	211a8004 	addi	r4,r4,27136
 10528dc:	20c7883a 	add	r3,r4,r3
 10528e0:	18c00003 	ldbu	r3,0(r3)
 10528e4:	1885883a 	add	r2,r3,r2
 10528e8:	00c00804 	movi	r3,32
 10528ec:	1887c83a 	sub	r3,r3,r2
 10528f0:	18000526 	beq	r3,zero,1052908 <__udivdi3+0x94>
 10528f4:	80e0983a 	sll	r16,r16,r3
 10528f8:	9884d83a 	srl	r2,r19,r2
 10528fc:	30e2983a 	sll	r17,r6,r3
 1052900:	98e4983a 	sll	r18,r19,r3
 1052904:	142cb03a 	or	r22,r2,r16
 1052908:	882ad43a 	srli	r21,r17,16
 105290c:	b009883a 	mov	r4,r22
 1052910:	8d3fffcc 	andi	r20,r17,65535
 1052914:	a80b883a 	mov	r5,r21
 1052918:	1043e180 	call	1043e18 <__umodsi3>
 105291c:	b009883a 	mov	r4,r22
 1052920:	a80b883a 	mov	r5,r21
 1052924:	1027883a 	mov	r19,r2
 1052928:	1043db40 	call	1043db4 <__udivsi3>
 105292c:	102d883a 	mov	r22,r2
 1052930:	9826943a 	slli	r19,r19,16
 1052934:	9004d43a 	srli	r2,r18,16
 1052938:	a5a1383a 	mul	r16,r20,r22
 105293c:	14c4b03a 	or	r2,r2,r19
 1052940:	1400052e 	bgeu	r2,r16,1052958 <__udivdi3+0xe4>
 1052944:	1445883a 	add	r2,r2,r17
 1052948:	b0ffffc4 	addi	r3,r22,-1
 105294c:	14400136 	bltu	r2,r17,1052954 <__udivdi3+0xe0>
 1052950:	14012336 	bltu	r2,r16,1052de0 <__udivdi3+0x56c>
 1052954:	182d883a 	mov	r22,r3
 1052958:	1421c83a 	sub	r16,r2,r16
 105295c:	a80b883a 	mov	r5,r21
 1052960:	8009883a 	mov	r4,r16
 1052964:	1043e180 	call	1043e18 <__umodsi3>
 1052968:	1027883a 	mov	r19,r2
 105296c:	a80b883a 	mov	r5,r21
 1052970:	8009883a 	mov	r4,r16
 1052974:	1043db40 	call	1043db4 <__udivsi3>
 1052978:	9826943a 	slli	r19,r19,16
 105297c:	a0a9383a 	mul	r20,r20,r2
 1052980:	94bfffcc 	andi	r18,r18,65535
 1052984:	94e4b03a 	or	r18,r18,r19
 1052988:	9500052e 	bgeu	r18,r20,10529a0 <__udivdi3+0x12c>
 105298c:	8ca5883a 	add	r18,r17,r18
 1052990:	10ffffc4 	addi	r3,r2,-1
 1052994:	9440f136 	bltu	r18,r17,1052d5c <__udivdi3+0x4e8>
 1052998:	9500f02e 	bgeu	r18,r20,1052d5c <__udivdi3+0x4e8>
 105299c:	10bfff84 	addi	r2,r2,-2
 10529a0:	b00c943a 	slli	r6,r22,16
 10529a4:	0007883a 	mov	r3,zero
 10529a8:	3084b03a 	or	r2,r6,r2
 10529ac:	00005906 	br	1052b14 <__udivdi3+0x2a0>
 10529b0:	29c05636 	bltu	r5,r7,1052b0c <__udivdi3+0x298>
 10529b4:	00bfffd4 	movui	r2,65535
 10529b8:	11c0622e 	bgeu	r2,r7,1052b44 <__udivdi3+0x2d0>
 10529bc:	00804034 	movhi	r2,256
 10529c0:	10bfffc4 	addi	r2,r2,-1
 10529c4:	11c0ee36 	bltu	r2,r7,1052d80 <__udivdi3+0x50c>
 10529c8:	00800404 	movi	r2,16
 10529cc:	3886d83a 	srl	r3,r7,r2
 10529d0:	01004174 	movhi	r4,261
 10529d4:	211a8004 	addi	r4,r4,27136
 10529d8:	20c7883a 	add	r3,r4,r3
 10529dc:	18c00003 	ldbu	r3,0(r3)
 10529e0:	05400804 	movi	r21,32
 10529e4:	1885883a 	add	r2,r3,r2
 10529e8:	a8abc83a 	sub	r21,r21,r2
 10529ec:	a800621e 	bne	r21,zero,1052b78 <__udivdi3+0x304>
 10529f0:	3c00e936 	bltu	r7,r16,1052d98 <__udivdi3+0x524>
 10529f4:	9985403a 	cmpgeu	r2,r19,r6
 10529f8:	0007883a 	mov	r3,zero
 10529fc:	00004506 	br	1052b14 <__udivdi3+0x2a0>
 1052a00:	3000041e 	bne	r6,zero,1052a14 <__udivdi3+0x1a0>
 1052a04:	000b883a 	mov	r5,zero
 1052a08:	01000044 	movi	r4,1
 1052a0c:	1043db40 	call	1043db4 <__udivsi3>
 1052a10:	1023883a 	mov	r17,r2
 1052a14:	00bfffd4 	movui	r2,65535
 1052a18:	14404e2e 	bgeu	r2,r17,1052b54 <__udivdi3+0x2e0>
 1052a1c:	00804034 	movhi	r2,256
 1052a20:	10bfffc4 	addi	r2,r2,-1
 1052a24:	1440d836 	bltu	r2,r17,1052d88 <__udivdi3+0x514>
 1052a28:	00800404 	movi	r2,16
 1052a2c:	8886d83a 	srl	r3,r17,r2
 1052a30:	01004174 	movhi	r4,261
 1052a34:	211a8004 	addi	r4,r4,27136
 1052a38:	20c7883a 	add	r3,r4,r3
 1052a3c:	18c00003 	ldbu	r3,0(r3)
 1052a40:	1885883a 	add	r2,r3,r2
 1052a44:	00c00804 	movi	r3,32
 1052a48:	1887c83a 	sub	r3,r3,r2
 1052a4c:	18008f1e 	bne	r3,zero,1052c8c <__udivdi3+0x418>
 1052a50:	882ad43a 	srli	r21,r17,16
 1052a54:	8461c83a 	sub	r16,r16,r17
 1052a58:	8d3fffcc 	andi	r20,r17,65535
 1052a5c:	00c00044 	movi	r3,1
 1052a60:	8009883a 	mov	r4,r16
 1052a64:	a80b883a 	mov	r5,r21
 1052a68:	d8c00015 	stw	r3,0(sp)
 1052a6c:	1043e180 	call	1043e18 <__umodsi3>
 1052a70:	8009883a 	mov	r4,r16
 1052a74:	a80b883a 	mov	r5,r21
 1052a78:	1027883a 	mov	r19,r2
 1052a7c:	1043db40 	call	1043db4 <__udivsi3>
 1052a80:	9826943a 	slli	r19,r19,16
 1052a84:	9008d43a 	srli	r4,r18,16
 1052a88:	1521383a 	mul	r16,r2,r20
 1052a8c:	102d883a 	mov	r22,r2
 1052a90:	24c8b03a 	or	r4,r4,r19
 1052a94:	d8c00017 	ldw	r3,0(sp)
 1052a98:	2400052e 	bgeu	r4,r16,1052ab0 <__udivdi3+0x23c>
 1052a9c:	2449883a 	add	r4,r4,r17
 1052aa0:	b0bfffc4 	addi	r2,r22,-1
 1052aa4:	24400136 	bltu	r4,r17,1052aac <__udivdi3+0x238>
 1052aa8:	2400ca36 	bltu	r4,r16,1052dd4 <__udivdi3+0x560>
 1052aac:	102d883a 	mov	r22,r2
 1052ab0:	2421c83a 	sub	r16,r4,r16
 1052ab4:	a80b883a 	mov	r5,r21
 1052ab8:	8009883a 	mov	r4,r16
 1052abc:	d8c00015 	stw	r3,0(sp)
 1052ac0:	1043e180 	call	1043e18 <__umodsi3>
 1052ac4:	1027883a 	mov	r19,r2
 1052ac8:	a80b883a 	mov	r5,r21
 1052acc:	8009883a 	mov	r4,r16
 1052ad0:	1043db40 	call	1043db4 <__udivsi3>
 1052ad4:	9826943a 	slli	r19,r19,16
 1052ad8:	1529383a 	mul	r20,r2,r20
 1052adc:	94bfffcc 	andi	r18,r18,65535
 1052ae0:	94e4b03a 	or	r18,r18,r19
 1052ae4:	d8c00017 	ldw	r3,0(sp)
 1052ae8:	9500052e 	bgeu	r18,r20,1052b00 <__udivdi3+0x28c>
 1052aec:	8ca5883a 	add	r18,r17,r18
 1052af0:	113fffc4 	addi	r4,r2,-1
 1052af4:	94409736 	bltu	r18,r17,1052d54 <__udivdi3+0x4e0>
 1052af8:	9500962e 	bgeu	r18,r20,1052d54 <__udivdi3+0x4e0>
 1052afc:	10bfff84 	addi	r2,r2,-2
 1052b00:	b00c943a 	slli	r6,r22,16
 1052b04:	3084b03a 	or	r2,r6,r2
 1052b08:	00000206 	br	1052b14 <__udivdi3+0x2a0>
 1052b0c:	0007883a 	mov	r3,zero
 1052b10:	0005883a 	mov	r2,zero
 1052b14:	dfc00a17 	ldw	ra,40(sp)
 1052b18:	df000917 	ldw	fp,36(sp)
 1052b1c:	ddc00817 	ldw	r23,32(sp)
 1052b20:	dd800717 	ldw	r22,28(sp)
 1052b24:	dd400617 	ldw	r21,24(sp)
 1052b28:	dd000517 	ldw	r20,20(sp)
 1052b2c:	dcc00417 	ldw	r19,16(sp)
 1052b30:	dc800317 	ldw	r18,12(sp)
 1052b34:	dc400217 	ldw	r17,8(sp)
 1052b38:	dc000117 	ldw	r16,4(sp)
 1052b3c:	dec00b04 	addi	sp,sp,44
 1052b40:	f800283a 	ret
 1052b44:	00803fc4 	movi	r2,255
 1052b48:	11c5803a 	cmpltu	r2,r2,r7
 1052b4c:	100490fa 	slli	r2,r2,3
 1052b50:	003f9e06 	br	10529cc <__alt_data_end+0xfffd29cc>
 1052b54:	00803fc4 	movi	r2,255
 1052b58:	1445803a 	cmpltu	r2,r2,r17
 1052b5c:	100490fa 	slli	r2,r2,3
 1052b60:	003fb206 	br	1052a2c <__alt_data_end+0xfffd2a2c>
 1052b64:	00804034 	movhi	r2,256
 1052b68:	10bfffc4 	addi	r2,r2,-1
 1052b6c:	11808836 	bltu	r2,r6,1052d90 <__udivdi3+0x51c>
 1052b70:	00800404 	movi	r2,16
 1052b74:	003f5606 	br	10528d0 <__alt_data_end+0xfffd28d0>
 1052b78:	30aed83a 	srl	r23,r6,r2
 1052b7c:	3d4e983a 	sll	r7,r7,r21
 1052b80:	80acd83a 	srl	r22,r16,r2
 1052b84:	9884d83a 	srl	r2,r19,r2
 1052b88:	3deeb03a 	or	r23,r7,r23
 1052b8c:	b824d43a 	srli	r18,r23,16
 1052b90:	8560983a 	sll	r16,r16,r21
 1052b94:	b009883a 	mov	r4,r22
 1052b98:	900b883a 	mov	r5,r18
 1052b9c:	3568983a 	sll	r20,r6,r21
 1052ba0:	1420b03a 	or	r16,r2,r16
 1052ba4:	1043e180 	call	1043e18 <__umodsi3>
 1052ba8:	b009883a 	mov	r4,r22
 1052bac:	900b883a 	mov	r5,r18
 1052bb0:	1023883a 	mov	r17,r2
 1052bb4:	1043db40 	call	1043db4 <__udivsi3>
 1052bb8:	8808943a 	slli	r4,r17,16
 1052bbc:	bf3fffcc 	andi	fp,r23,65535
 1052bc0:	8006d43a 	srli	r3,r16,16
 1052bc4:	e0a3383a 	mul	r17,fp,r2
 1052bc8:	100d883a 	mov	r6,r2
 1052bcc:	1906b03a 	or	r3,r3,r4
 1052bd0:	1c40042e 	bgeu	r3,r17,1052be4 <__udivdi3+0x370>
 1052bd4:	1dc7883a 	add	r3,r3,r23
 1052bd8:	10bfffc4 	addi	r2,r2,-1
 1052bdc:	1dc0752e 	bgeu	r3,r23,1052db4 <__udivdi3+0x540>
 1052be0:	100d883a 	mov	r6,r2
 1052be4:	1c63c83a 	sub	r17,r3,r17
 1052be8:	900b883a 	mov	r5,r18
 1052bec:	8809883a 	mov	r4,r17
 1052bf0:	d9800015 	stw	r6,0(sp)
 1052bf4:	1043e180 	call	1043e18 <__umodsi3>
 1052bf8:	102d883a 	mov	r22,r2
 1052bfc:	8809883a 	mov	r4,r17
 1052c00:	900b883a 	mov	r5,r18
 1052c04:	1043db40 	call	1043db4 <__udivsi3>
 1052c08:	b02c943a 	slli	r22,r22,16
 1052c0c:	e089383a 	mul	r4,fp,r2
 1052c10:	843fffcc 	andi	r16,r16,65535
 1052c14:	85a0b03a 	or	r16,r16,r22
 1052c18:	d9800017 	ldw	r6,0(sp)
 1052c1c:	8100042e 	bgeu	r16,r4,1052c30 <__udivdi3+0x3bc>
 1052c20:	85e1883a 	add	r16,r16,r23
 1052c24:	10ffffc4 	addi	r3,r2,-1
 1052c28:	85c05e2e 	bgeu	r16,r23,1052da4 <__udivdi3+0x530>
 1052c2c:	1805883a 	mov	r2,r3
 1052c30:	300c943a 	slli	r6,r6,16
 1052c34:	a17fffcc 	andi	r5,r20,65535
 1052c38:	a028d43a 	srli	r20,r20,16
 1052c3c:	3084b03a 	or	r2,r6,r2
 1052c40:	10ffffcc 	andi	r3,r2,65535
 1052c44:	100cd43a 	srli	r6,r2,16
 1052c48:	194f383a 	mul	r7,r3,r5
 1052c4c:	1d07383a 	mul	r3,r3,r20
 1052c50:	314b383a 	mul	r5,r6,r5
 1052c54:	3810d43a 	srli	r8,r7,16
 1052c58:	8121c83a 	sub	r16,r16,r4
 1052c5c:	1947883a 	add	r3,r3,r5
 1052c60:	40c7883a 	add	r3,r8,r3
 1052c64:	350d383a 	mul	r6,r6,r20
 1052c68:	1940022e 	bgeu	r3,r5,1052c74 <__udivdi3+0x400>
 1052c6c:	01000074 	movhi	r4,1
 1052c70:	310d883a 	add	r6,r6,r4
 1052c74:	1828d43a 	srli	r20,r3,16
 1052c78:	a18d883a 	add	r6,r20,r6
 1052c7c:	81803e36 	bltu	r16,r6,1052d78 <__udivdi3+0x504>
 1052c80:	81803826 	beq	r16,r6,1052d64 <__udivdi3+0x4f0>
 1052c84:	0007883a 	mov	r3,zero
 1052c88:	003fa206 	br	1052b14 <__alt_data_end+0xfffd2b14>
 1052c8c:	88e2983a 	sll	r17,r17,r3
 1052c90:	80a8d83a 	srl	r20,r16,r2
 1052c94:	80e0983a 	sll	r16,r16,r3
 1052c98:	882ad43a 	srli	r21,r17,16
 1052c9c:	9884d83a 	srl	r2,r19,r2
 1052ca0:	a009883a 	mov	r4,r20
 1052ca4:	a80b883a 	mov	r5,r21
 1052ca8:	142eb03a 	or	r23,r2,r16
 1052cac:	98e4983a 	sll	r18,r19,r3
 1052cb0:	1043e180 	call	1043e18 <__umodsi3>
 1052cb4:	a009883a 	mov	r4,r20
 1052cb8:	a80b883a 	mov	r5,r21
 1052cbc:	1021883a 	mov	r16,r2
 1052cc0:	1043db40 	call	1043db4 <__udivsi3>
 1052cc4:	1039883a 	mov	fp,r2
 1052cc8:	8d3fffcc 	andi	r20,r17,65535
 1052ccc:	8020943a 	slli	r16,r16,16
 1052cd0:	b804d43a 	srli	r2,r23,16
 1052cd4:	a72d383a 	mul	r22,r20,fp
 1052cd8:	1404b03a 	or	r2,r2,r16
 1052cdc:	1580062e 	bgeu	r2,r22,1052cf8 <__udivdi3+0x484>
 1052ce0:	1445883a 	add	r2,r2,r17
 1052ce4:	e0ffffc4 	addi	r3,fp,-1
 1052ce8:	14403836 	bltu	r2,r17,1052dcc <__udivdi3+0x558>
 1052cec:	1580372e 	bgeu	r2,r22,1052dcc <__udivdi3+0x558>
 1052cf0:	e73fff84 	addi	fp,fp,-2
 1052cf4:	1445883a 	add	r2,r2,r17
 1052cf8:	15adc83a 	sub	r22,r2,r22
 1052cfc:	a80b883a 	mov	r5,r21
 1052d00:	b009883a 	mov	r4,r22
 1052d04:	1043e180 	call	1043e18 <__umodsi3>
 1052d08:	1027883a 	mov	r19,r2
 1052d0c:	b009883a 	mov	r4,r22
 1052d10:	a80b883a 	mov	r5,r21
 1052d14:	1043db40 	call	1043db4 <__udivsi3>
 1052d18:	9826943a 	slli	r19,r19,16
 1052d1c:	a0a1383a 	mul	r16,r20,r2
 1052d20:	b93fffcc 	andi	r4,r23,65535
 1052d24:	24c8b03a 	or	r4,r4,r19
 1052d28:	2400062e 	bgeu	r4,r16,1052d44 <__udivdi3+0x4d0>
 1052d2c:	2449883a 	add	r4,r4,r17
 1052d30:	10ffffc4 	addi	r3,r2,-1
 1052d34:	24402336 	bltu	r4,r17,1052dc4 <__udivdi3+0x550>
 1052d38:	2400222e 	bgeu	r4,r16,1052dc4 <__udivdi3+0x550>
 1052d3c:	10bfff84 	addi	r2,r2,-2
 1052d40:	2449883a 	add	r4,r4,r17
 1052d44:	e038943a 	slli	fp,fp,16
 1052d48:	2421c83a 	sub	r16,r4,r16
 1052d4c:	e086b03a 	or	r3,fp,r2
 1052d50:	003f4306 	br	1052a60 <__alt_data_end+0xfffd2a60>
 1052d54:	2005883a 	mov	r2,r4
 1052d58:	003f6906 	br	1052b00 <__alt_data_end+0xfffd2b00>
 1052d5c:	1805883a 	mov	r2,r3
 1052d60:	003f0f06 	br	10529a0 <__alt_data_end+0xfffd29a0>
 1052d64:	1806943a 	slli	r3,r3,16
 1052d68:	9d66983a 	sll	r19,r19,r21
 1052d6c:	39ffffcc 	andi	r7,r7,65535
 1052d70:	19c7883a 	add	r3,r3,r7
 1052d74:	98ffc32e 	bgeu	r19,r3,1052c84 <__alt_data_end+0xfffd2c84>
 1052d78:	10bfffc4 	addi	r2,r2,-1
 1052d7c:	003fc106 	br	1052c84 <__alt_data_end+0xfffd2c84>
 1052d80:	00800604 	movi	r2,24
 1052d84:	003f1106 	br	10529cc <__alt_data_end+0xfffd29cc>
 1052d88:	00800604 	movi	r2,24
 1052d8c:	003f2706 	br	1052a2c <__alt_data_end+0xfffd2a2c>
 1052d90:	00800604 	movi	r2,24
 1052d94:	003ece06 	br	10528d0 <__alt_data_end+0xfffd28d0>
 1052d98:	0007883a 	mov	r3,zero
 1052d9c:	00800044 	movi	r2,1
 1052da0:	003f5c06 	br	1052b14 <__alt_data_end+0xfffd2b14>
 1052da4:	813fa12e 	bgeu	r16,r4,1052c2c <__alt_data_end+0xfffd2c2c>
 1052da8:	10bfff84 	addi	r2,r2,-2
 1052dac:	85e1883a 	add	r16,r16,r23
 1052db0:	003f9f06 	br	1052c30 <__alt_data_end+0xfffd2c30>
 1052db4:	1c7f8a2e 	bgeu	r3,r17,1052be0 <__alt_data_end+0xfffd2be0>
 1052db8:	31bfff84 	addi	r6,r6,-2
 1052dbc:	1dc7883a 	add	r3,r3,r23
 1052dc0:	003f8806 	br	1052be4 <__alt_data_end+0xfffd2be4>
 1052dc4:	1805883a 	mov	r2,r3
 1052dc8:	003fde06 	br	1052d44 <__alt_data_end+0xfffd2d44>
 1052dcc:	1839883a 	mov	fp,r3
 1052dd0:	003fc906 	br	1052cf8 <__alt_data_end+0xfffd2cf8>
 1052dd4:	b5bfff84 	addi	r22,r22,-2
 1052dd8:	2449883a 	add	r4,r4,r17
 1052ddc:	003f3406 	br	1052ab0 <__alt_data_end+0xfffd2ab0>
 1052de0:	b5bfff84 	addi	r22,r22,-2
 1052de4:	1445883a 	add	r2,r2,r17
 1052de8:	003edb06 	br	1052958 <__alt_data_end+0xfffd2958>

01052dec <__umoddi3>:
 1052dec:	defff404 	addi	sp,sp,-48
 1052df0:	df000a15 	stw	fp,40(sp)
 1052df4:	dc400315 	stw	r17,12(sp)
 1052df8:	dc000215 	stw	r16,8(sp)
 1052dfc:	dfc00b15 	stw	ra,44(sp)
 1052e00:	ddc00915 	stw	r23,36(sp)
 1052e04:	dd800815 	stw	r22,32(sp)
 1052e08:	dd400715 	stw	r21,28(sp)
 1052e0c:	dd000615 	stw	r20,24(sp)
 1052e10:	dcc00515 	stw	r19,20(sp)
 1052e14:	dc800415 	stw	r18,16(sp)
 1052e18:	2021883a 	mov	r16,r4
 1052e1c:	2823883a 	mov	r17,r5
 1052e20:	2839883a 	mov	fp,r5
 1052e24:	38003c1e 	bne	r7,zero,1052f18 <__umoddi3+0x12c>
 1052e28:	3027883a 	mov	r19,r6
 1052e2c:	2029883a 	mov	r20,r4
 1052e30:	2980512e 	bgeu	r5,r6,1052f78 <__umoddi3+0x18c>
 1052e34:	00bfffd4 	movui	r2,65535
 1052e38:	11809a36 	bltu	r2,r6,10530a4 <__umoddi3+0x2b8>
 1052e3c:	01003fc4 	movi	r4,255
 1052e40:	2189803a 	cmpltu	r4,r4,r6
 1052e44:	200890fa 	slli	r4,r4,3
 1052e48:	3104d83a 	srl	r2,r6,r4
 1052e4c:	00c04174 	movhi	r3,261
 1052e50:	18da8004 	addi	r3,r3,27136
 1052e54:	1885883a 	add	r2,r3,r2
 1052e58:	10c00003 	ldbu	r3,0(r2)
 1052e5c:	00800804 	movi	r2,32
 1052e60:	1909883a 	add	r4,r3,r4
 1052e64:	1125c83a 	sub	r18,r2,r4
 1052e68:	90000526 	beq	r18,zero,1052e80 <__umoddi3+0x94>
 1052e6c:	8ca2983a 	sll	r17,r17,r18
 1052e70:	8108d83a 	srl	r4,r16,r4
 1052e74:	34a6983a 	sll	r19,r6,r18
 1052e78:	84a8983a 	sll	r20,r16,r18
 1052e7c:	2478b03a 	or	fp,r4,r17
 1052e80:	982ed43a 	srli	r23,r19,16
 1052e84:	e009883a 	mov	r4,fp
 1052e88:	9dbfffcc 	andi	r22,r19,65535
 1052e8c:	b80b883a 	mov	r5,r23
 1052e90:	1043e180 	call	1043e18 <__umodsi3>
 1052e94:	e009883a 	mov	r4,fp
 1052e98:	b80b883a 	mov	r5,r23
 1052e9c:	102b883a 	mov	r21,r2
 1052ea0:	1043db40 	call	1043db4 <__udivsi3>
 1052ea4:	a806943a 	slli	r3,r21,16
 1052ea8:	a008d43a 	srli	r4,r20,16
 1052eac:	b085383a 	mul	r2,r22,r2
 1052eb0:	20c8b03a 	or	r4,r4,r3
 1052eb4:	2080032e 	bgeu	r4,r2,1052ec4 <__umoddi3+0xd8>
 1052eb8:	24c9883a 	add	r4,r4,r19
 1052ebc:	24c00136 	bltu	r4,r19,1052ec4 <__umoddi3+0xd8>
 1052ec0:	20811036 	bltu	r4,r2,1053304 <__umoddi3+0x518>
 1052ec4:	20abc83a 	sub	r21,r4,r2
 1052ec8:	b80b883a 	mov	r5,r23
 1052ecc:	a809883a 	mov	r4,r21
 1052ed0:	1043e180 	call	1043e18 <__umodsi3>
 1052ed4:	1023883a 	mov	r17,r2
 1052ed8:	b80b883a 	mov	r5,r23
 1052edc:	a809883a 	mov	r4,r21
 1052ee0:	1043db40 	call	1043db4 <__udivsi3>
 1052ee4:	8822943a 	slli	r17,r17,16
 1052ee8:	b085383a 	mul	r2,r22,r2
 1052eec:	a0ffffcc 	andi	r3,r20,65535
 1052ef0:	1c46b03a 	or	r3,r3,r17
 1052ef4:	1880042e 	bgeu	r3,r2,1052f08 <__umoddi3+0x11c>
 1052ef8:	1cc7883a 	add	r3,r3,r19
 1052efc:	1cc00236 	bltu	r3,r19,1052f08 <__umoddi3+0x11c>
 1052f00:	1880012e 	bgeu	r3,r2,1052f08 <__umoddi3+0x11c>
 1052f04:	1cc7883a 	add	r3,r3,r19
 1052f08:	1885c83a 	sub	r2,r3,r2
 1052f0c:	1484d83a 	srl	r2,r2,r18
 1052f10:	0007883a 	mov	r3,zero
 1052f14:	00004f06 	br	1053054 <__umoddi3+0x268>
 1052f18:	29c04c36 	bltu	r5,r7,105304c <__umoddi3+0x260>
 1052f1c:	00bfffd4 	movui	r2,65535
 1052f20:	11c0582e 	bgeu	r2,r7,1053084 <__umoddi3+0x298>
 1052f24:	00804034 	movhi	r2,256
 1052f28:	10bfffc4 	addi	r2,r2,-1
 1052f2c:	11c0e736 	bltu	r2,r7,10532cc <__umoddi3+0x4e0>
 1052f30:	01000404 	movi	r4,16
 1052f34:	3904d83a 	srl	r2,r7,r4
 1052f38:	00c04174 	movhi	r3,261
 1052f3c:	18da8004 	addi	r3,r3,27136
 1052f40:	1885883a 	add	r2,r3,r2
 1052f44:	14c00003 	ldbu	r19,0(r2)
 1052f48:	00c00804 	movi	r3,32
 1052f4c:	9927883a 	add	r19,r19,r4
 1052f50:	1ce9c83a 	sub	r20,r3,r19
 1052f54:	a000581e 	bne	r20,zero,10530b8 <__umoddi3+0x2cc>
 1052f58:	3c400136 	bltu	r7,r17,1052f60 <__umoddi3+0x174>
 1052f5c:	8180eb36 	bltu	r16,r6,105330c <__umoddi3+0x520>
 1052f60:	8185c83a 	sub	r2,r16,r6
 1052f64:	89e3c83a 	sub	r17,r17,r7
 1052f68:	8089803a 	cmpltu	r4,r16,r2
 1052f6c:	8939c83a 	sub	fp,r17,r4
 1052f70:	e007883a 	mov	r3,fp
 1052f74:	00003706 	br	1053054 <__umoddi3+0x268>
 1052f78:	3000041e 	bne	r6,zero,1052f8c <__umoddi3+0x1a0>
 1052f7c:	000b883a 	mov	r5,zero
 1052f80:	01000044 	movi	r4,1
 1052f84:	1043db40 	call	1043db4 <__udivsi3>
 1052f88:	1027883a 	mov	r19,r2
 1052f8c:	00bfffd4 	movui	r2,65535
 1052f90:	14c0402e 	bgeu	r2,r19,1053094 <__umoddi3+0x2a8>
 1052f94:	00804034 	movhi	r2,256
 1052f98:	10bfffc4 	addi	r2,r2,-1
 1052f9c:	14c0cd36 	bltu	r2,r19,10532d4 <__umoddi3+0x4e8>
 1052fa0:	00800404 	movi	r2,16
 1052fa4:	9886d83a 	srl	r3,r19,r2
 1052fa8:	01004174 	movhi	r4,261
 1052fac:	211a8004 	addi	r4,r4,27136
 1052fb0:	20c7883a 	add	r3,r4,r3
 1052fb4:	18c00003 	ldbu	r3,0(r3)
 1052fb8:	1887883a 	add	r3,r3,r2
 1052fbc:	00800804 	movi	r2,32
 1052fc0:	10e5c83a 	sub	r18,r2,r3
 1052fc4:	9000901e 	bne	r18,zero,1053208 <__umoddi3+0x41c>
 1052fc8:	982cd43a 	srli	r22,r19,16
 1052fcc:	8ce3c83a 	sub	r17,r17,r19
 1052fd0:	9d7fffcc 	andi	r21,r19,65535
 1052fd4:	b00b883a 	mov	r5,r22
 1052fd8:	8809883a 	mov	r4,r17
 1052fdc:	1043e180 	call	1043e18 <__umodsi3>
 1052fe0:	8809883a 	mov	r4,r17
 1052fe4:	b00b883a 	mov	r5,r22
 1052fe8:	1021883a 	mov	r16,r2
 1052fec:	1043db40 	call	1043db4 <__udivsi3>
 1052ff0:	8006943a 	slli	r3,r16,16
 1052ff4:	a008d43a 	srli	r4,r20,16
 1052ff8:	1545383a 	mul	r2,r2,r21
 1052ffc:	20c8b03a 	or	r4,r4,r3
 1053000:	2080042e 	bgeu	r4,r2,1053014 <__umoddi3+0x228>
 1053004:	24c9883a 	add	r4,r4,r19
 1053008:	24c00236 	bltu	r4,r19,1053014 <__umoddi3+0x228>
 105300c:	2080012e 	bgeu	r4,r2,1053014 <__umoddi3+0x228>
 1053010:	24c9883a 	add	r4,r4,r19
 1053014:	20a1c83a 	sub	r16,r4,r2
 1053018:	b00b883a 	mov	r5,r22
 105301c:	8009883a 	mov	r4,r16
 1053020:	1043e180 	call	1043e18 <__umodsi3>
 1053024:	1023883a 	mov	r17,r2
 1053028:	b00b883a 	mov	r5,r22
 105302c:	8009883a 	mov	r4,r16
 1053030:	1043db40 	call	1043db4 <__udivsi3>
 1053034:	8822943a 	slli	r17,r17,16
 1053038:	1545383a 	mul	r2,r2,r21
 105303c:	a53fffcc 	andi	r20,r20,65535
 1053040:	a446b03a 	or	r3,r20,r17
 1053044:	18bfb02e 	bgeu	r3,r2,1052f08 <__alt_data_end+0xfffd2f08>
 1053048:	003fab06 	br	1052ef8 <__alt_data_end+0xfffd2ef8>
 105304c:	2005883a 	mov	r2,r4
 1053050:	2807883a 	mov	r3,r5
 1053054:	dfc00b17 	ldw	ra,44(sp)
 1053058:	df000a17 	ldw	fp,40(sp)
 105305c:	ddc00917 	ldw	r23,36(sp)
 1053060:	dd800817 	ldw	r22,32(sp)
 1053064:	dd400717 	ldw	r21,28(sp)
 1053068:	dd000617 	ldw	r20,24(sp)
 105306c:	dcc00517 	ldw	r19,20(sp)
 1053070:	dc800417 	ldw	r18,16(sp)
 1053074:	dc400317 	ldw	r17,12(sp)
 1053078:	dc000217 	ldw	r16,8(sp)
 105307c:	dec00c04 	addi	sp,sp,48
 1053080:	f800283a 	ret
 1053084:	04c03fc4 	movi	r19,255
 1053088:	99c9803a 	cmpltu	r4,r19,r7
 105308c:	200890fa 	slli	r4,r4,3
 1053090:	003fa806 	br	1052f34 <__alt_data_end+0xfffd2f34>
 1053094:	00803fc4 	movi	r2,255
 1053098:	14c5803a 	cmpltu	r2,r2,r19
 105309c:	100490fa 	slli	r2,r2,3
 10530a0:	003fc006 	br	1052fa4 <__alt_data_end+0xfffd2fa4>
 10530a4:	00804034 	movhi	r2,256
 10530a8:	10bfffc4 	addi	r2,r2,-1
 10530ac:	11808b36 	bltu	r2,r6,10532dc <__umoddi3+0x4f0>
 10530b0:	01000404 	movi	r4,16
 10530b4:	003f6406 	br	1052e48 <__alt_data_end+0xfffd2e48>
 10530b8:	34c4d83a 	srl	r2,r6,r19
 10530bc:	3d0e983a 	sll	r7,r7,r20
 10530c0:	8cf8d83a 	srl	fp,r17,r19
 10530c4:	8d10983a 	sll	r8,r17,r20
 10530c8:	38aab03a 	or	r21,r7,r2
 10530cc:	a82cd43a 	srli	r22,r21,16
 10530d0:	84e2d83a 	srl	r17,r16,r19
 10530d4:	e009883a 	mov	r4,fp
 10530d8:	b00b883a 	mov	r5,r22
 10530dc:	8a22b03a 	or	r17,r17,r8
 10530e0:	3524983a 	sll	r18,r6,r20
 10530e4:	1043e180 	call	1043e18 <__umodsi3>
 10530e8:	e009883a 	mov	r4,fp
 10530ec:	b00b883a 	mov	r5,r22
 10530f0:	102f883a 	mov	r23,r2
 10530f4:	1043db40 	call	1043db4 <__udivsi3>
 10530f8:	100d883a 	mov	r6,r2
 10530fc:	b808943a 	slli	r4,r23,16
 1053100:	aa3fffcc 	andi	r8,r21,65535
 1053104:	8804d43a 	srli	r2,r17,16
 1053108:	41af383a 	mul	r23,r8,r6
 105310c:	8520983a 	sll	r16,r16,r20
 1053110:	1104b03a 	or	r2,r2,r4
 1053114:	15c0042e 	bgeu	r2,r23,1053128 <__umoddi3+0x33c>
 1053118:	1545883a 	add	r2,r2,r21
 105311c:	30ffffc4 	addi	r3,r6,-1
 1053120:	1540742e 	bgeu	r2,r21,10532f4 <__umoddi3+0x508>
 1053124:	180d883a 	mov	r6,r3
 1053128:	15efc83a 	sub	r23,r2,r23
 105312c:	b00b883a 	mov	r5,r22
 1053130:	b809883a 	mov	r4,r23
 1053134:	d9800115 	stw	r6,4(sp)
 1053138:	da000015 	stw	r8,0(sp)
 105313c:	1043e180 	call	1043e18 <__umodsi3>
 1053140:	b00b883a 	mov	r5,r22
 1053144:	b809883a 	mov	r4,r23
 1053148:	1039883a 	mov	fp,r2
 105314c:	1043db40 	call	1043db4 <__udivsi3>
 1053150:	da000017 	ldw	r8,0(sp)
 1053154:	e038943a 	slli	fp,fp,16
 1053158:	100b883a 	mov	r5,r2
 105315c:	4089383a 	mul	r4,r8,r2
 1053160:	8a3fffcc 	andi	r8,r17,65535
 1053164:	4710b03a 	or	r8,r8,fp
 1053168:	d9800117 	ldw	r6,4(sp)
 105316c:	4100042e 	bgeu	r8,r4,1053180 <__umoddi3+0x394>
 1053170:	4551883a 	add	r8,r8,r21
 1053174:	10bfffc4 	addi	r2,r2,-1
 1053178:	45405a2e 	bgeu	r8,r21,10532e4 <__umoddi3+0x4f8>
 105317c:	100b883a 	mov	r5,r2
 1053180:	300c943a 	slli	r6,r6,16
 1053184:	91ffffcc 	andi	r7,r18,65535
 1053188:	9004d43a 	srli	r2,r18,16
 105318c:	314cb03a 	or	r6,r6,r5
 1053190:	317fffcc 	andi	r5,r6,65535
 1053194:	300cd43a 	srli	r6,r6,16
 1053198:	29d3383a 	mul	r9,r5,r7
 105319c:	288b383a 	mul	r5,r5,r2
 10531a0:	31cf383a 	mul	r7,r6,r7
 10531a4:	4806d43a 	srli	r3,r9,16
 10531a8:	4111c83a 	sub	r8,r8,r4
 10531ac:	29cb883a 	add	r5,r5,r7
 10531b0:	194b883a 	add	r5,r3,r5
 10531b4:	3085383a 	mul	r2,r6,r2
 10531b8:	29c0022e 	bgeu	r5,r7,10531c4 <__umoddi3+0x3d8>
 10531bc:	00c00074 	movhi	r3,1
 10531c0:	10c5883a 	add	r2,r2,r3
 10531c4:	2808d43a 	srli	r4,r5,16
 10531c8:	280a943a 	slli	r5,r5,16
 10531cc:	4a7fffcc 	andi	r9,r9,65535
 10531d0:	2085883a 	add	r2,r4,r2
 10531d4:	2a4b883a 	add	r5,r5,r9
 10531d8:	40803636 	bltu	r8,r2,10532b4 <__umoddi3+0x4c8>
 10531dc:	40804d26 	beq	r8,r2,1053314 <__umoddi3+0x528>
 10531e0:	4089c83a 	sub	r4,r8,r2
 10531e4:	280f883a 	mov	r7,r5
 10531e8:	81cfc83a 	sub	r7,r16,r7
 10531ec:	81c7803a 	cmpltu	r3,r16,r7
 10531f0:	20c7c83a 	sub	r3,r4,r3
 10531f4:	1cc4983a 	sll	r2,r3,r19
 10531f8:	3d0ed83a 	srl	r7,r7,r20
 10531fc:	1d06d83a 	srl	r3,r3,r20
 1053200:	11c4b03a 	or	r2,r2,r7
 1053204:	003f9306 	br	1053054 <__alt_data_end+0xfffd3054>
 1053208:	9ca6983a 	sll	r19,r19,r18
 105320c:	88e8d83a 	srl	r20,r17,r3
 1053210:	80c4d83a 	srl	r2,r16,r3
 1053214:	982cd43a 	srli	r22,r19,16
 1053218:	8ca2983a 	sll	r17,r17,r18
 105321c:	a009883a 	mov	r4,r20
 1053220:	b00b883a 	mov	r5,r22
 1053224:	1478b03a 	or	fp,r2,r17
 1053228:	1043e180 	call	1043e18 <__umodsi3>
 105322c:	a009883a 	mov	r4,r20
 1053230:	b00b883a 	mov	r5,r22
 1053234:	1023883a 	mov	r17,r2
 1053238:	1043db40 	call	1043db4 <__udivsi3>
 105323c:	9d7fffcc 	andi	r21,r19,65535
 1053240:	880a943a 	slli	r5,r17,16
 1053244:	e008d43a 	srli	r4,fp,16
 1053248:	a885383a 	mul	r2,r21,r2
 105324c:	84a8983a 	sll	r20,r16,r18
 1053250:	2148b03a 	or	r4,r4,r5
 1053254:	2080042e 	bgeu	r4,r2,1053268 <__umoddi3+0x47c>
 1053258:	24c9883a 	add	r4,r4,r19
 105325c:	24c00236 	bltu	r4,r19,1053268 <__umoddi3+0x47c>
 1053260:	2080012e 	bgeu	r4,r2,1053268 <__umoddi3+0x47c>
 1053264:	24c9883a 	add	r4,r4,r19
 1053268:	20a3c83a 	sub	r17,r4,r2
 105326c:	b00b883a 	mov	r5,r22
 1053270:	8809883a 	mov	r4,r17
 1053274:	1043e180 	call	1043e18 <__umodsi3>
 1053278:	102f883a 	mov	r23,r2
 105327c:	8809883a 	mov	r4,r17
 1053280:	b00b883a 	mov	r5,r22
 1053284:	1043db40 	call	1043db4 <__udivsi3>
 1053288:	b82e943a 	slli	r23,r23,16
 105328c:	a885383a 	mul	r2,r21,r2
 1053290:	e13fffcc 	andi	r4,fp,65535
 1053294:	25c8b03a 	or	r4,r4,r23
 1053298:	2080042e 	bgeu	r4,r2,10532ac <__umoddi3+0x4c0>
 105329c:	24c9883a 	add	r4,r4,r19
 10532a0:	24c00236 	bltu	r4,r19,10532ac <__umoddi3+0x4c0>
 10532a4:	2080012e 	bgeu	r4,r2,10532ac <__umoddi3+0x4c0>
 10532a8:	24c9883a 	add	r4,r4,r19
 10532ac:	20a3c83a 	sub	r17,r4,r2
 10532b0:	003f4806 	br	1052fd4 <__alt_data_end+0xfffd2fd4>
 10532b4:	2c8fc83a 	sub	r7,r5,r18
 10532b8:	1545c83a 	sub	r2,r2,r21
 10532bc:	29cb803a 	cmpltu	r5,r5,r7
 10532c0:	1145c83a 	sub	r2,r2,r5
 10532c4:	4089c83a 	sub	r4,r8,r2
 10532c8:	003fc706 	br	10531e8 <__alt_data_end+0xfffd31e8>
 10532cc:	01000604 	movi	r4,24
 10532d0:	003f1806 	br	1052f34 <__alt_data_end+0xfffd2f34>
 10532d4:	00800604 	movi	r2,24
 10532d8:	003f3206 	br	1052fa4 <__alt_data_end+0xfffd2fa4>
 10532dc:	01000604 	movi	r4,24
 10532e0:	003ed906 	br	1052e48 <__alt_data_end+0xfffd2e48>
 10532e4:	413fa52e 	bgeu	r8,r4,105317c <__alt_data_end+0xfffd317c>
 10532e8:	297fff84 	addi	r5,r5,-2
 10532ec:	4551883a 	add	r8,r8,r21
 10532f0:	003fa306 	br	1053180 <__alt_data_end+0xfffd3180>
 10532f4:	15ff8b2e 	bgeu	r2,r23,1053124 <__alt_data_end+0xfffd3124>
 10532f8:	31bfff84 	addi	r6,r6,-2
 10532fc:	1545883a 	add	r2,r2,r21
 1053300:	003f8906 	br	1053128 <__alt_data_end+0xfffd3128>
 1053304:	24c9883a 	add	r4,r4,r19
 1053308:	003eee06 	br	1052ec4 <__alt_data_end+0xfffd2ec4>
 105330c:	8005883a 	mov	r2,r16
 1053310:	003f1706 	br	1052f70 <__alt_data_end+0xfffd2f70>
 1053314:	817fe736 	bltu	r16,r5,10532b4 <__alt_data_end+0xfffd32b4>
 1053318:	280f883a 	mov	r7,r5
 105331c:	0009883a 	mov	r4,zero
 1053320:	003fb106 	br	10531e8 <__alt_data_end+0xfffd31e8>

01053324 <__divdf3>:
 1053324:	defff204 	addi	sp,sp,-56
 1053328:	dd400915 	stw	r21,36(sp)
 105332c:	282ad53a 	srli	r21,r5,20
 1053330:	dd000815 	stw	r20,32(sp)
 1053334:	2828d7fa 	srli	r20,r5,31
 1053338:	dc000415 	stw	r16,16(sp)
 105333c:	04000434 	movhi	r16,16
 1053340:	df000c15 	stw	fp,48(sp)
 1053344:	843fffc4 	addi	r16,r16,-1
 1053348:	dfc00d15 	stw	ra,52(sp)
 105334c:	ddc00b15 	stw	r23,44(sp)
 1053350:	dd800a15 	stw	r22,40(sp)
 1053354:	dcc00715 	stw	r19,28(sp)
 1053358:	dc800615 	stw	r18,24(sp)
 105335c:	dc400515 	stw	r17,20(sp)
 1053360:	ad41ffcc 	andi	r21,r21,2047
 1053364:	2c20703a 	and	r16,r5,r16
 1053368:	a7003fcc 	andi	fp,r20,255
 105336c:	a8006126 	beq	r21,zero,10534f4 <__divdf3+0x1d0>
 1053370:	0081ffc4 	movi	r2,2047
 1053374:	2025883a 	mov	r18,r4
 1053378:	a8803726 	beq	r21,r2,1053458 <__divdf3+0x134>
 105337c:	80800434 	orhi	r2,r16,16
 1053380:	100490fa 	slli	r2,r2,3
 1053384:	2020d77a 	srli	r16,r4,29
 1053388:	202490fa 	slli	r18,r4,3
 105338c:	ad7f0044 	addi	r21,r21,-1023
 1053390:	80a0b03a 	or	r16,r16,r2
 1053394:	0027883a 	mov	r19,zero
 1053398:	0013883a 	mov	r9,zero
 105339c:	3804d53a 	srli	r2,r7,20
 10533a0:	382cd7fa 	srli	r22,r7,31
 10533a4:	04400434 	movhi	r17,16
 10533a8:	8c7fffc4 	addi	r17,r17,-1
 10533ac:	1081ffcc 	andi	r2,r2,2047
 10533b0:	3011883a 	mov	r8,r6
 10533b4:	3c62703a 	and	r17,r7,r17
 10533b8:	b5c03fcc 	andi	r23,r22,255
 10533bc:	10006c26 	beq	r2,zero,1053570 <__divdf3+0x24c>
 10533c0:	00c1ffc4 	movi	r3,2047
 10533c4:	10c06426 	beq	r2,r3,1053558 <__divdf3+0x234>
 10533c8:	88c00434 	orhi	r3,r17,16
 10533cc:	180690fa 	slli	r3,r3,3
 10533d0:	3022d77a 	srli	r17,r6,29
 10533d4:	301090fa 	slli	r8,r6,3
 10533d8:	10bf0044 	addi	r2,r2,-1023
 10533dc:	88e2b03a 	or	r17,r17,r3
 10533e0:	000f883a 	mov	r7,zero
 10533e4:	a58cf03a 	xor	r6,r20,r22
 10533e8:	3cc8b03a 	or	r4,r7,r19
 10533ec:	a8abc83a 	sub	r21,r21,r2
 10533f0:	008003c4 	movi	r2,15
 10533f4:	3007883a 	mov	r3,r6
 10533f8:	34c03fcc 	andi	r19,r6,255
 10533fc:	11009036 	bltu	r2,r4,1053640 <__divdf3+0x31c>
 1053400:	200890ba 	slli	r4,r4,2
 1053404:	00804174 	movhi	r2,261
 1053408:	108d0604 	addi	r2,r2,13336
 105340c:	2089883a 	add	r4,r4,r2
 1053410:	20800017 	ldw	r2,0(r4)
 1053414:	1000683a 	jmp	r2
 1053418:	01053640 	call	105364 <__alt_mem_onchip_memory2-0xf3ac9c>
 105341c:	01053490 	cmplti	r4,zero,5330
 1053420:	01053630 	cmpltui	r4,zero,5336
 1053424:	01053484 	movi	r4,5330
 1053428:	01053630 	cmpltui	r4,zero,5336
 105342c:	01053604 	movi	r4,5336
 1053430:	01053630 	cmpltui	r4,zero,5336
 1053434:	01053484 	movi	r4,5330
 1053438:	01053490 	cmplti	r4,zero,5330
 105343c:	01053490 	cmplti	r4,zero,5330
 1053440:	01053604 	movi	r4,5336
 1053444:	01053484 	movi	r4,5330
 1053448:	01053474 	movhi	r4,5329
 105344c:	01053474 	movhi	r4,5329
 1053450:	01053474 	movhi	r4,5329
 1053454:	01053924 	muli	r4,zero,5348
 1053458:	2404b03a 	or	r2,r4,r16
 105345c:	1000661e 	bne	r2,zero,10535f8 <__divdf3+0x2d4>
 1053460:	04c00204 	movi	r19,8
 1053464:	0021883a 	mov	r16,zero
 1053468:	0025883a 	mov	r18,zero
 105346c:	02400084 	movi	r9,2
 1053470:	003fca06 	br	105339c <__alt_data_end+0xfffd339c>
 1053474:	8023883a 	mov	r17,r16
 1053478:	9011883a 	mov	r8,r18
 105347c:	e02f883a 	mov	r23,fp
 1053480:	480f883a 	mov	r7,r9
 1053484:	00800084 	movi	r2,2
 1053488:	3881311e 	bne	r7,r2,1053950 <__divdf3+0x62c>
 105348c:	b827883a 	mov	r19,r23
 1053490:	98c0004c 	andi	r3,r19,1
 1053494:	0081ffc4 	movi	r2,2047
 1053498:	000b883a 	mov	r5,zero
 105349c:	0025883a 	mov	r18,zero
 10534a0:	1004953a 	slli	r2,r2,20
 10534a4:	18c03fcc 	andi	r3,r3,255
 10534a8:	04400434 	movhi	r17,16
 10534ac:	8c7fffc4 	addi	r17,r17,-1
 10534b0:	180697fa 	slli	r3,r3,31
 10534b4:	2c4a703a 	and	r5,r5,r17
 10534b8:	288ab03a 	or	r5,r5,r2
 10534bc:	28c6b03a 	or	r3,r5,r3
 10534c0:	9005883a 	mov	r2,r18
 10534c4:	dfc00d17 	ldw	ra,52(sp)
 10534c8:	df000c17 	ldw	fp,48(sp)
 10534cc:	ddc00b17 	ldw	r23,44(sp)
 10534d0:	dd800a17 	ldw	r22,40(sp)
 10534d4:	dd400917 	ldw	r21,36(sp)
 10534d8:	dd000817 	ldw	r20,32(sp)
 10534dc:	dcc00717 	ldw	r19,28(sp)
 10534e0:	dc800617 	ldw	r18,24(sp)
 10534e4:	dc400517 	ldw	r17,20(sp)
 10534e8:	dc000417 	ldw	r16,16(sp)
 10534ec:	dec00e04 	addi	sp,sp,56
 10534f0:	f800283a 	ret
 10534f4:	2404b03a 	or	r2,r4,r16
 10534f8:	2027883a 	mov	r19,r4
 10534fc:	10003926 	beq	r2,zero,10535e4 <__divdf3+0x2c0>
 1053500:	80012e26 	beq	r16,zero,10539bc <__divdf3+0x698>
 1053504:	8009883a 	mov	r4,r16
 1053508:	d9800315 	stw	r6,12(sp)
 105350c:	d9c00215 	stw	r7,8(sp)
 1053510:	10459f00 	call	10459f0 <__clzsi2>
 1053514:	d9800317 	ldw	r6,12(sp)
 1053518:	d9c00217 	ldw	r7,8(sp)
 105351c:	113ffd44 	addi	r4,r2,-11
 1053520:	00c00704 	movi	r3,28
 1053524:	19012116 	blt	r3,r4,10539ac <__divdf3+0x688>
 1053528:	00c00744 	movi	r3,29
 105352c:	147ffe04 	addi	r17,r2,-8
 1053530:	1907c83a 	sub	r3,r3,r4
 1053534:	8460983a 	sll	r16,r16,r17
 1053538:	98c6d83a 	srl	r3,r19,r3
 105353c:	9c64983a 	sll	r18,r19,r17
 1053540:	1c20b03a 	or	r16,r3,r16
 1053544:	1080fcc4 	addi	r2,r2,1011
 1053548:	00abc83a 	sub	r21,zero,r2
 105354c:	0027883a 	mov	r19,zero
 1053550:	0013883a 	mov	r9,zero
 1053554:	003f9106 	br	105339c <__alt_data_end+0xfffd339c>
 1053558:	3446b03a 	or	r3,r6,r17
 105355c:	18001f1e 	bne	r3,zero,10535dc <__divdf3+0x2b8>
 1053560:	0023883a 	mov	r17,zero
 1053564:	0011883a 	mov	r8,zero
 1053568:	01c00084 	movi	r7,2
 105356c:	003f9d06 	br	10533e4 <__alt_data_end+0xfffd33e4>
 1053570:	3446b03a 	or	r3,r6,r17
 1053574:	18001526 	beq	r3,zero,10535cc <__divdf3+0x2a8>
 1053578:	88011b26 	beq	r17,zero,10539e8 <__divdf3+0x6c4>
 105357c:	8809883a 	mov	r4,r17
 1053580:	d9800315 	stw	r6,12(sp)
 1053584:	da400115 	stw	r9,4(sp)
 1053588:	10459f00 	call	10459f0 <__clzsi2>
 105358c:	d9800317 	ldw	r6,12(sp)
 1053590:	da400117 	ldw	r9,4(sp)
 1053594:	113ffd44 	addi	r4,r2,-11
 1053598:	00c00704 	movi	r3,28
 105359c:	19010e16 	blt	r3,r4,10539d8 <__divdf3+0x6b4>
 10535a0:	00c00744 	movi	r3,29
 10535a4:	123ffe04 	addi	r8,r2,-8
 10535a8:	1907c83a 	sub	r3,r3,r4
 10535ac:	8a22983a 	sll	r17,r17,r8
 10535b0:	30c6d83a 	srl	r3,r6,r3
 10535b4:	3210983a 	sll	r8,r6,r8
 10535b8:	1c62b03a 	or	r17,r3,r17
 10535bc:	1080fcc4 	addi	r2,r2,1011
 10535c0:	0085c83a 	sub	r2,zero,r2
 10535c4:	000f883a 	mov	r7,zero
 10535c8:	003f8606 	br	10533e4 <__alt_data_end+0xfffd33e4>
 10535cc:	0023883a 	mov	r17,zero
 10535d0:	0011883a 	mov	r8,zero
 10535d4:	01c00044 	movi	r7,1
 10535d8:	003f8206 	br	10533e4 <__alt_data_end+0xfffd33e4>
 10535dc:	01c000c4 	movi	r7,3
 10535e0:	003f8006 	br	10533e4 <__alt_data_end+0xfffd33e4>
 10535e4:	04c00104 	movi	r19,4
 10535e8:	0021883a 	mov	r16,zero
 10535ec:	0025883a 	mov	r18,zero
 10535f0:	02400044 	movi	r9,1
 10535f4:	003f6906 	br	105339c <__alt_data_end+0xfffd339c>
 10535f8:	04c00304 	movi	r19,12
 10535fc:	024000c4 	movi	r9,3
 1053600:	003f6606 	br	105339c <__alt_data_end+0xfffd339c>
 1053604:	01400434 	movhi	r5,16
 1053608:	0007883a 	mov	r3,zero
 105360c:	297fffc4 	addi	r5,r5,-1
 1053610:	04bfffc4 	movi	r18,-1
 1053614:	0081ffc4 	movi	r2,2047
 1053618:	003fa106 	br	10534a0 <__alt_data_end+0xfffd34a0>
 105361c:	00c00044 	movi	r3,1
 1053620:	1887c83a 	sub	r3,r3,r2
 1053624:	01000e04 	movi	r4,56
 1053628:	20c1210e 	bge	r4,r3,1053ab0 <__divdf3+0x78c>
 105362c:	98c0004c 	andi	r3,r19,1
 1053630:	0005883a 	mov	r2,zero
 1053634:	000b883a 	mov	r5,zero
 1053638:	0025883a 	mov	r18,zero
 105363c:	003f9806 	br	10534a0 <__alt_data_end+0xfffd34a0>
 1053640:	8c00fd36 	bltu	r17,r16,1053a38 <__divdf3+0x714>
 1053644:	8440fb26 	beq	r16,r17,1053a34 <__divdf3+0x710>
 1053648:	8007883a 	mov	r3,r16
 105364c:	ad7fffc4 	addi	r21,r21,-1
 1053650:	0021883a 	mov	r16,zero
 1053654:	4004d63a 	srli	r2,r8,24
 1053658:	8822923a 	slli	r17,r17,8
 105365c:	1809883a 	mov	r4,r3
 1053660:	402c923a 	slli	r22,r8,8
 1053664:	88b8b03a 	or	fp,r17,r2
 1053668:	e028d43a 	srli	r20,fp,16
 105366c:	d8c00015 	stw	r3,0(sp)
 1053670:	e5ffffcc 	andi	r23,fp,65535
 1053674:	a00b883a 	mov	r5,r20
 1053678:	1043db40 	call	1043db4 <__udivsi3>
 105367c:	d8c00017 	ldw	r3,0(sp)
 1053680:	a00b883a 	mov	r5,r20
 1053684:	d8800315 	stw	r2,12(sp)
 1053688:	1809883a 	mov	r4,r3
 105368c:	1043e180 	call	1043e18 <__umodsi3>
 1053690:	d9800317 	ldw	r6,12(sp)
 1053694:	1006943a 	slli	r3,r2,16
 1053698:	9004d43a 	srli	r2,r18,16
 105369c:	b9a3383a 	mul	r17,r23,r6
 10536a0:	10c4b03a 	or	r2,r2,r3
 10536a4:	1440062e 	bgeu	r2,r17,10536c0 <__divdf3+0x39c>
 10536a8:	1705883a 	add	r2,r2,fp
 10536ac:	30ffffc4 	addi	r3,r6,-1
 10536b0:	1700ee36 	bltu	r2,fp,1053a6c <__divdf3+0x748>
 10536b4:	1440ed2e 	bgeu	r2,r17,1053a6c <__divdf3+0x748>
 10536b8:	31bfff84 	addi	r6,r6,-2
 10536bc:	1705883a 	add	r2,r2,fp
 10536c0:	1463c83a 	sub	r17,r2,r17
 10536c4:	a00b883a 	mov	r5,r20
 10536c8:	8809883a 	mov	r4,r17
 10536cc:	d9800315 	stw	r6,12(sp)
 10536d0:	1043db40 	call	1043db4 <__udivsi3>
 10536d4:	a00b883a 	mov	r5,r20
 10536d8:	8809883a 	mov	r4,r17
 10536dc:	d8800215 	stw	r2,8(sp)
 10536e0:	1043e180 	call	1043e18 <__umodsi3>
 10536e4:	d9c00217 	ldw	r7,8(sp)
 10536e8:	1004943a 	slli	r2,r2,16
 10536ec:	94bfffcc 	andi	r18,r18,65535
 10536f0:	b9d1383a 	mul	r8,r23,r7
 10536f4:	90a4b03a 	or	r18,r18,r2
 10536f8:	d9800317 	ldw	r6,12(sp)
 10536fc:	9200062e 	bgeu	r18,r8,1053718 <__divdf3+0x3f4>
 1053700:	9725883a 	add	r18,r18,fp
 1053704:	38bfffc4 	addi	r2,r7,-1
 1053708:	9700d636 	bltu	r18,fp,1053a64 <__divdf3+0x740>
 105370c:	9200d52e 	bgeu	r18,r8,1053a64 <__divdf3+0x740>
 1053710:	39ffff84 	addi	r7,r7,-2
 1053714:	9725883a 	add	r18,r18,fp
 1053718:	3004943a 	slli	r2,r6,16
 105371c:	b012d43a 	srli	r9,r22,16
 1053720:	b1bfffcc 	andi	r6,r22,65535
 1053724:	11e2b03a 	or	r17,r2,r7
 1053728:	8806d43a 	srli	r3,r17,16
 105372c:	893fffcc 	andi	r4,r17,65535
 1053730:	218b383a 	mul	r5,r4,r6
 1053734:	30c5383a 	mul	r2,r6,r3
 1053738:	2249383a 	mul	r4,r4,r9
 105373c:	280ed43a 	srli	r7,r5,16
 1053740:	9225c83a 	sub	r18,r18,r8
 1053744:	2089883a 	add	r4,r4,r2
 1053748:	3909883a 	add	r4,r7,r4
 105374c:	1a47383a 	mul	r3,r3,r9
 1053750:	2080022e 	bgeu	r4,r2,105375c <__divdf3+0x438>
 1053754:	00800074 	movhi	r2,1
 1053758:	1887883a 	add	r3,r3,r2
 105375c:	2004d43a 	srli	r2,r4,16
 1053760:	2008943a 	slli	r4,r4,16
 1053764:	297fffcc 	andi	r5,r5,65535
 1053768:	10c7883a 	add	r3,r2,r3
 105376c:	2149883a 	add	r4,r4,r5
 1053770:	90c0a536 	bltu	r18,r3,1053a08 <__divdf3+0x6e4>
 1053774:	90c0bf26 	beq	r18,r3,1053a74 <__divdf3+0x750>
 1053778:	90c7c83a 	sub	r3,r18,r3
 105377c:	810fc83a 	sub	r7,r16,r4
 1053780:	81e5803a 	cmpltu	r18,r16,r7
 1053784:	1ca5c83a 	sub	r18,r3,r18
 1053788:	e480c126 	beq	fp,r18,1053a90 <__divdf3+0x76c>
 105378c:	a00b883a 	mov	r5,r20
 1053790:	9009883a 	mov	r4,r18
 1053794:	d9800315 	stw	r6,12(sp)
 1053798:	d9c00215 	stw	r7,8(sp)
 105379c:	da400115 	stw	r9,4(sp)
 10537a0:	1043db40 	call	1043db4 <__udivsi3>
 10537a4:	a00b883a 	mov	r5,r20
 10537a8:	9009883a 	mov	r4,r18
 10537ac:	d8800015 	stw	r2,0(sp)
 10537b0:	1043e180 	call	1043e18 <__umodsi3>
 10537b4:	d9c00217 	ldw	r7,8(sp)
 10537b8:	da000017 	ldw	r8,0(sp)
 10537bc:	1006943a 	slli	r3,r2,16
 10537c0:	3804d43a 	srli	r2,r7,16
 10537c4:	ba21383a 	mul	r16,r23,r8
 10537c8:	d9800317 	ldw	r6,12(sp)
 10537cc:	10c4b03a 	or	r2,r2,r3
 10537d0:	da400117 	ldw	r9,4(sp)
 10537d4:	1400062e 	bgeu	r2,r16,10537f0 <__divdf3+0x4cc>
 10537d8:	1705883a 	add	r2,r2,fp
 10537dc:	40ffffc4 	addi	r3,r8,-1
 10537e0:	1700ad36 	bltu	r2,fp,1053a98 <__divdf3+0x774>
 10537e4:	1400ac2e 	bgeu	r2,r16,1053a98 <__divdf3+0x774>
 10537e8:	423fff84 	addi	r8,r8,-2
 10537ec:	1705883a 	add	r2,r2,fp
 10537f0:	1421c83a 	sub	r16,r2,r16
 10537f4:	a00b883a 	mov	r5,r20
 10537f8:	8009883a 	mov	r4,r16
 10537fc:	d9800315 	stw	r6,12(sp)
 1053800:	d9c00215 	stw	r7,8(sp)
 1053804:	da000015 	stw	r8,0(sp)
 1053808:	da400115 	stw	r9,4(sp)
 105380c:	1043db40 	call	1043db4 <__udivsi3>
 1053810:	8009883a 	mov	r4,r16
 1053814:	a00b883a 	mov	r5,r20
 1053818:	1025883a 	mov	r18,r2
 105381c:	1043e180 	call	1043e18 <__umodsi3>
 1053820:	d9c00217 	ldw	r7,8(sp)
 1053824:	1004943a 	slli	r2,r2,16
 1053828:	bcaf383a 	mul	r23,r23,r18
 105382c:	393fffcc 	andi	r4,r7,65535
 1053830:	2088b03a 	or	r4,r4,r2
 1053834:	d9800317 	ldw	r6,12(sp)
 1053838:	da000017 	ldw	r8,0(sp)
 105383c:	da400117 	ldw	r9,4(sp)
 1053840:	25c0062e 	bgeu	r4,r23,105385c <__divdf3+0x538>
 1053844:	2709883a 	add	r4,r4,fp
 1053848:	90bfffc4 	addi	r2,r18,-1
 105384c:	27009436 	bltu	r4,fp,1053aa0 <__divdf3+0x77c>
 1053850:	25c0932e 	bgeu	r4,r23,1053aa0 <__divdf3+0x77c>
 1053854:	94bfff84 	addi	r18,r18,-2
 1053858:	2709883a 	add	r4,r4,fp
 105385c:	4004943a 	slli	r2,r8,16
 1053860:	25efc83a 	sub	r23,r4,r23
 1053864:	1490b03a 	or	r8,r2,r18
 1053868:	4008d43a 	srli	r4,r8,16
 105386c:	40ffffcc 	andi	r3,r8,65535
 1053870:	30c5383a 	mul	r2,r6,r3
 1053874:	1a47383a 	mul	r3,r3,r9
 1053878:	310d383a 	mul	r6,r6,r4
 105387c:	100ad43a 	srli	r5,r2,16
 1053880:	4913383a 	mul	r9,r9,r4
 1053884:	1987883a 	add	r3,r3,r6
 1053888:	28c7883a 	add	r3,r5,r3
 105388c:	1980022e 	bgeu	r3,r6,1053898 <__divdf3+0x574>
 1053890:	01000074 	movhi	r4,1
 1053894:	4913883a 	add	r9,r9,r4
 1053898:	1808d43a 	srli	r4,r3,16
 105389c:	1806943a 	slli	r3,r3,16
 10538a0:	10bfffcc 	andi	r2,r2,65535
 10538a4:	2253883a 	add	r9,r4,r9
 10538a8:	1887883a 	add	r3,r3,r2
 10538ac:	ba403836 	bltu	r23,r9,1053990 <__divdf3+0x66c>
 10538b0:	ba403626 	beq	r23,r9,105398c <__divdf3+0x668>
 10538b4:	42000054 	ori	r8,r8,1
 10538b8:	a880ffc4 	addi	r2,r21,1023
 10538bc:	00bf570e 	bge	zero,r2,105361c <__alt_data_end+0xfffd361c>
 10538c0:	40c001cc 	andi	r3,r8,7
 10538c4:	18000726 	beq	r3,zero,10538e4 <__divdf3+0x5c0>
 10538c8:	40c003cc 	andi	r3,r8,15
 10538cc:	01000104 	movi	r4,4
 10538d0:	19000426 	beq	r3,r4,10538e4 <__divdf3+0x5c0>
 10538d4:	4107883a 	add	r3,r8,r4
 10538d8:	1a11803a 	cmpltu	r8,r3,r8
 10538dc:	8a23883a 	add	r17,r17,r8
 10538e0:	1811883a 	mov	r8,r3
 10538e4:	88c0402c 	andhi	r3,r17,256
 10538e8:	18000426 	beq	r3,zero,10538fc <__divdf3+0x5d8>
 10538ec:	00ffc034 	movhi	r3,65280
 10538f0:	18ffffc4 	addi	r3,r3,-1
 10538f4:	a8810004 	addi	r2,r21,1024
 10538f8:	88e2703a 	and	r17,r17,r3
 10538fc:	00c1ff84 	movi	r3,2046
 1053900:	18bee316 	blt	r3,r2,1053490 <__alt_data_end+0xfffd3490>
 1053904:	8824977a 	slli	r18,r17,29
 1053908:	4010d0fa 	srli	r8,r8,3
 105390c:	8822927a 	slli	r17,r17,9
 1053910:	1081ffcc 	andi	r2,r2,2047
 1053914:	9224b03a 	or	r18,r18,r8
 1053918:	880ad33a 	srli	r5,r17,12
 105391c:	98c0004c 	andi	r3,r19,1
 1053920:	003edf06 	br	10534a0 <__alt_data_end+0xfffd34a0>
 1053924:	8080022c 	andhi	r2,r16,8
 1053928:	10001226 	beq	r2,zero,1053974 <__divdf3+0x650>
 105392c:	8880022c 	andhi	r2,r17,8
 1053930:	1000101e 	bne	r2,zero,1053974 <__divdf3+0x650>
 1053934:	00800434 	movhi	r2,16
 1053938:	89400234 	orhi	r5,r17,8
 105393c:	10bfffc4 	addi	r2,r2,-1
 1053940:	b007883a 	mov	r3,r22
 1053944:	288a703a 	and	r5,r5,r2
 1053948:	4025883a 	mov	r18,r8
 105394c:	003f3106 	br	1053614 <__alt_data_end+0xfffd3614>
 1053950:	008000c4 	movi	r2,3
 1053954:	3880a626 	beq	r7,r2,1053bf0 <__divdf3+0x8cc>
 1053958:	00800044 	movi	r2,1
 105395c:	3880521e 	bne	r7,r2,1053aa8 <__divdf3+0x784>
 1053960:	b807883a 	mov	r3,r23
 1053964:	0005883a 	mov	r2,zero
 1053968:	000b883a 	mov	r5,zero
 105396c:	0025883a 	mov	r18,zero
 1053970:	003ecb06 	br	10534a0 <__alt_data_end+0xfffd34a0>
 1053974:	00800434 	movhi	r2,16
 1053978:	81400234 	orhi	r5,r16,8
 105397c:	10bfffc4 	addi	r2,r2,-1
 1053980:	a007883a 	mov	r3,r20
 1053984:	288a703a 	and	r5,r5,r2
 1053988:	003f2206 	br	1053614 <__alt_data_end+0xfffd3614>
 105398c:	183fca26 	beq	r3,zero,10538b8 <__alt_data_end+0xfffd38b8>
 1053990:	e5ef883a 	add	r23,fp,r23
 1053994:	40bfffc4 	addi	r2,r8,-1
 1053998:	bf00392e 	bgeu	r23,fp,1053a80 <__divdf3+0x75c>
 105399c:	1011883a 	mov	r8,r2
 10539a0:	ba7fc41e 	bne	r23,r9,10538b4 <__alt_data_end+0xfffd38b4>
 10539a4:	b0ffc31e 	bne	r22,r3,10538b4 <__alt_data_end+0xfffd38b4>
 10539a8:	003fc306 	br	10538b8 <__alt_data_end+0xfffd38b8>
 10539ac:	143ff604 	addi	r16,r2,-40
 10539b0:	9c20983a 	sll	r16,r19,r16
 10539b4:	0025883a 	mov	r18,zero
 10539b8:	003ee206 	br	1053544 <__alt_data_end+0xfffd3544>
 10539bc:	d9800315 	stw	r6,12(sp)
 10539c0:	d9c00215 	stw	r7,8(sp)
 10539c4:	10459f00 	call	10459f0 <__clzsi2>
 10539c8:	10800804 	addi	r2,r2,32
 10539cc:	d9c00217 	ldw	r7,8(sp)
 10539d0:	d9800317 	ldw	r6,12(sp)
 10539d4:	003ed106 	br	105351c <__alt_data_end+0xfffd351c>
 10539d8:	147ff604 	addi	r17,r2,-40
 10539dc:	3462983a 	sll	r17,r6,r17
 10539e0:	0011883a 	mov	r8,zero
 10539e4:	003ef506 	br	10535bc <__alt_data_end+0xfffd35bc>
 10539e8:	3009883a 	mov	r4,r6
 10539ec:	d9800315 	stw	r6,12(sp)
 10539f0:	da400115 	stw	r9,4(sp)
 10539f4:	10459f00 	call	10459f0 <__clzsi2>
 10539f8:	10800804 	addi	r2,r2,32
 10539fc:	da400117 	ldw	r9,4(sp)
 1053a00:	d9800317 	ldw	r6,12(sp)
 1053a04:	003ee306 	br	1053594 <__alt_data_end+0xfffd3594>
 1053a08:	85a1883a 	add	r16,r16,r22
 1053a0c:	8585803a 	cmpltu	r2,r16,r22
 1053a10:	1705883a 	add	r2,r2,fp
 1053a14:	14a5883a 	add	r18,r2,r18
 1053a18:	88bfffc4 	addi	r2,r17,-1
 1053a1c:	e4800c2e 	bgeu	fp,r18,1053a50 <__divdf3+0x72c>
 1053a20:	90c03e36 	bltu	r18,r3,1053b1c <__divdf3+0x7f8>
 1053a24:	1c806926 	beq	r3,r18,1053bcc <__divdf3+0x8a8>
 1053a28:	90c7c83a 	sub	r3,r18,r3
 1053a2c:	1023883a 	mov	r17,r2
 1053a30:	003f5206 	br	105377c <__alt_data_end+0xfffd377c>
 1053a34:	923f0436 	bltu	r18,r8,1053648 <__alt_data_end+0xfffd3648>
 1053a38:	800897fa 	slli	r4,r16,31
 1053a3c:	9004d07a 	srli	r2,r18,1
 1053a40:	8006d07a 	srli	r3,r16,1
 1053a44:	902097fa 	slli	r16,r18,31
 1053a48:	20a4b03a 	or	r18,r4,r2
 1053a4c:	003f0106 	br	1053654 <__alt_data_end+0xfffd3654>
 1053a50:	e4bff51e 	bne	fp,r18,1053a28 <__alt_data_end+0xfffd3a28>
 1053a54:	85bff22e 	bgeu	r16,r22,1053a20 <__alt_data_end+0xfffd3a20>
 1053a58:	e0c7c83a 	sub	r3,fp,r3
 1053a5c:	1023883a 	mov	r17,r2
 1053a60:	003f4606 	br	105377c <__alt_data_end+0xfffd377c>
 1053a64:	100f883a 	mov	r7,r2
 1053a68:	003f2b06 	br	1053718 <__alt_data_end+0xfffd3718>
 1053a6c:	180d883a 	mov	r6,r3
 1053a70:	003f1306 	br	10536c0 <__alt_data_end+0xfffd36c0>
 1053a74:	813fe436 	bltu	r16,r4,1053a08 <__alt_data_end+0xfffd3a08>
 1053a78:	0007883a 	mov	r3,zero
 1053a7c:	003f3f06 	br	105377c <__alt_data_end+0xfffd377c>
 1053a80:	ba402c36 	bltu	r23,r9,1053b34 <__divdf3+0x810>
 1053a84:	4dc05426 	beq	r9,r23,1053bd8 <__divdf3+0x8b4>
 1053a88:	1011883a 	mov	r8,r2
 1053a8c:	003f8906 	br	10538b4 <__alt_data_end+0xfffd38b4>
 1053a90:	023fffc4 	movi	r8,-1
 1053a94:	003f8806 	br	10538b8 <__alt_data_end+0xfffd38b8>
 1053a98:	1811883a 	mov	r8,r3
 1053a9c:	003f5406 	br	10537f0 <__alt_data_end+0xfffd37f0>
 1053aa0:	1025883a 	mov	r18,r2
 1053aa4:	003f6d06 	br	105385c <__alt_data_end+0xfffd385c>
 1053aa8:	b827883a 	mov	r19,r23
 1053aac:	003f8206 	br	10538b8 <__alt_data_end+0xfffd38b8>
 1053ab0:	010007c4 	movi	r4,31
 1053ab4:	20c02616 	blt	r4,r3,1053b50 <__divdf3+0x82c>
 1053ab8:	00800804 	movi	r2,32
 1053abc:	10c5c83a 	sub	r2,r2,r3
 1053ac0:	888a983a 	sll	r5,r17,r2
 1053ac4:	40c8d83a 	srl	r4,r8,r3
 1053ac8:	4084983a 	sll	r2,r8,r2
 1053acc:	88e2d83a 	srl	r17,r17,r3
 1053ad0:	2906b03a 	or	r3,r5,r4
 1053ad4:	1004c03a 	cmpne	r2,r2,zero
 1053ad8:	1886b03a 	or	r3,r3,r2
 1053adc:	188001cc 	andi	r2,r3,7
 1053ae0:	10000726 	beq	r2,zero,1053b00 <__divdf3+0x7dc>
 1053ae4:	188003cc 	andi	r2,r3,15
 1053ae8:	01000104 	movi	r4,4
 1053aec:	11000426 	beq	r2,r4,1053b00 <__divdf3+0x7dc>
 1053af0:	1805883a 	mov	r2,r3
 1053af4:	10c00104 	addi	r3,r2,4
 1053af8:	1885803a 	cmpltu	r2,r3,r2
 1053afc:	88a3883a 	add	r17,r17,r2
 1053b00:	8880202c 	andhi	r2,r17,128
 1053b04:	10002726 	beq	r2,zero,1053ba4 <__divdf3+0x880>
 1053b08:	98c0004c 	andi	r3,r19,1
 1053b0c:	00800044 	movi	r2,1
 1053b10:	000b883a 	mov	r5,zero
 1053b14:	0025883a 	mov	r18,zero
 1053b18:	003e6106 	br	10534a0 <__alt_data_end+0xfffd34a0>
 1053b1c:	85a1883a 	add	r16,r16,r22
 1053b20:	8585803a 	cmpltu	r2,r16,r22
 1053b24:	1705883a 	add	r2,r2,fp
 1053b28:	14a5883a 	add	r18,r2,r18
 1053b2c:	8c7fff84 	addi	r17,r17,-2
 1053b30:	003f1106 	br	1053778 <__alt_data_end+0xfffd3778>
 1053b34:	b589883a 	add	r4,r22,r22
 1053b38:	25ad803a 	cmpltu	r22,r4,r22
 1053b3c:	b739883a 	add	fp,r22,fp
 1053b40:	40bfff84 	addi	r2,r8,-2
 1053b44:	bf2f883a 	add	r23,r23,fp
 1053b48:	202d883a 	mov	r22,r4
 1053b4c:	003f9306 	br	105399c <__alt_data_end+0xfffd399c>
 1053b50:	013ff844 	movi	r4,-31
 1053b54:	2085c83a 	sub	r2,r4,r2
 1053b58:	8888d83a 	srl	r4,r17,r2
 1053b5c:	00800804 	movi	r2,32
 1053b60:	18802126 	beq	r3,r2,1053be8 <__divdf3+0x8c4>
 1053b64:	00801004 	movi	r2,64
 1053b68:	10c5c83a 	sub	r2,r2,r3
 1053b6c:	8884983a 	sll	r2,r17,r2
 1053b70:	1204b03a 	or	r2,r2,r8
 1053b74:	1004c03a 	cmpne	r2,r2,zero
 1053b78:	2084b03a 	or	r2,r4,r2
 1053b7c:	144001cc 	andi	r17,r2,7
 1053b80:	88000d1e 	bne	r17,zero,1053bb8 <__divdf3+0x894>
 1053b84:	000b883a 	mov	r5,zero
 1053b88:	1024d0fa 	srli	r18,r2,3
 1053b8c:	98c0004c 	andi	r3,r19,1
 1053b90:	0005883a 	mov	r2,zero
 1053b94:	9464b03a 	or	r18,r18,r17
 1053b98:	003e4106 	br	10534a0 <__alt_data_end+0xfffd34a0>
 1053b9c:	1007883a 	mov	r3,r2
 1053ba0:	0023883a 	mov	r17,zero
 1053ba4:	880a927a 	slli	r5,r17,9
 1053ba8:	1805883a 	mov	r2,r3
 1053bac:	8822977a 	slli	r17,r17,29
 1053bb0:	280ad33a 	srli	r5,r5,12
 1053bb4:	003ff406 	br	1053b88 <__alt_data_end+0xfffd3b88>
 1053bb8:	10c003cc 	andi	r3,r2,15
 1053bbc:	01000104 	movi	r4,4
 1053bc0:	193ff626 	beq	r3,r4,1053b9c <__alt_data_end+0xfffd3b9c>
 1053bc4:	0023883a 	mov	r17,zero
 1053bc8:	003fca06 	br	1053af4 <__alt_data_end+0xfffd3af4>
 1053bcc:	813fd336 	bltu	r16,r4,1053b1c <__alt_data_end+0xfffd3b1c>
 1053bd0:	1023883a 	mov	r17,r2
 1053bd4:	003fa806 	br	1053a78 <__alt_data_end+0xfffd3a78>
 1053bd8:	b0ffd636 	bltu	r22,r3,1053b34 <__alt_data_end+0xfffd3b34>
 1053bdc:	1011883a 	mov	r8,r2
 1053be0:	b0ff341e 	bne	r22,r3,10538b4 <__alt_data_end+0xfffd38b4>
 1053be4:	003f3406 	br	10538b8 <__alt_data_end+0xfffd38b8>
 1053be8:	0005883a 	mov	r2,zero
 1053bec:	003fe006 	br	1053b70 <__alt_data_end+0xfffd3b70>
 1053bf0:	00800434 	movhi	r2,16
 1053bf4:	89400234 	orhi	r5,r17,8
 1053bf8:	10bfffc4 	addi	r2,r2,-1
 1053bfc:	b807883a 	mov	r3,r23
 1053c00:	288a703a 	and	r5,r5,r2
 1053c04:	4025883a 	mov	r18,r8
 1053c08:	003e8206 	br	1053614 <__alt_data_end+0xfffd3614>

01053c0c <__ledf2>:
 1053c0c:	2804d53a 	srli	r2,r5,20
 1053c10:	3810d53a 	srli	r8,r7,20
 1053c14:	00c00434 	movhi	r3,16
 1053c18:	18ffffc4 	addi	r3,r3,-1
 1053c1c:	1081ffcc 	andi	r2,r2,2047
 1053c20:	0241ffc4 	movi	r9,2047
 1053c24:	28d4703a 	and	r10,r5,r3
 1053c28:	4201ffcc 	andi	r8,r8,2047
 1053c2c:	38c6703a 	and	r3,r7,r3
 1053c30:	280ad7fa 	srli	r5,r5,31
 1053c34:	380ed7fa 	srli	r7,r7,31
 1053c38:	12401f26 	beq	r2,r9,1053cb8 <__ledf2+0xac>
 1053c3c:	0241ffc4 	movi	r9,2047
 1053c40:	42401426 	beq	r8,r9,1053c94 <__ledf2+0x88>
 1053c44:	1000091e 	bne	r2,zero,1053c6c <__ledf2+0x60>
 1053c48:	2296b03a 	or	r11,r4,r10
 1053c4c:	5813003a 	cmpeq	r9,r11,zero
 1053c50:	29403fcc 	andi	r5,r5,255
 1053c54:	40000a1e 	bne	r8,zero,1053c80 <__ledf2+0x74>
 1053c58:	30d8b03a 	or	r12,r6,r3
 1053c5c:	6000081e 	bne	r12,zero,1053c80 <__ledf2+0x74>
 1053c60:	0005883a 	mov	r2,zero
 1053c64:	5800111e 	bne	r11,zero,1053cac <__ledf2+0xa0>
 1053c68:	f800283a 	ret
 1053c6c:	29403fcc 	andi	r5,r5,255
 1053c70:	40000c1e 	bne	r8,zero,1053ca4 <__ledf2+0x98>
 1053c74:	30d2b03a 	or	r9,r6,r3
 1053c78:	48000c26 	beq	r9,zero,1053cac <__ledf2+0xa0>
 1053c7c:	0013883a 	mov	r9,zero
 1053c80:	39c03fcc 	andi	r7,r7,255
 1053c84:	48000826 	beq	r9,zero,1053ca8 <__ledf2+0x9c>
 1053c88:	38001126 	beq	r7,zero,1053cd0 <__ledf2+0xc4>
 1053c8c:	00800044 	movi	r2,1
 1053c90:	f800283a 	ret
 1053c94:	30d2b03a 	or	r9,r6,r3
 1053c98:	483fea26 	beq	r9,zero,1053c44 <__alt_data_end+0xfffd3c44>
 1053c9c:	00800084 	movi	r2,2
 1053ca0:	f800283a 	ret
 1053ca4:	39c03fcc 	andi	r7,r7,255
 1053ca8:	39400726 	beq	r7,r5,1053cc8 <__ledf2+0xbc>
 1053cac:	2800081e 	bne	r5,zero,1053cd0 <__ledf2+0xc4>
 1053cb0:	00800044 	movi	r2,1
 1053cb4:	f800283a 	ret
 1053cb8:	2292b03a 	or	r9,r4,r10
 1053cbc:	483fdf26 	beq	r9,zero,1053c3c <__alt_data_end+0xfffd3c3c>
 1053cc0:	00800084 	movi	r2,2
 1053cc4:	f800283a 	ret
 1053cc8:	4080030e 	bge	r8,r2,1053cd8 <__ledf2+0xcc>
 1053ccc:	383fef26 	beq	r7,zero,1053c8c <__alt_data_end+0xfffd3c8c>
 1053cd0:	00bfffc4 	movi	r2,-1
 1053cd4:	f800283a 	ret
 1053cd8:	123feb16 	blt	r2,r8,1053c88 <__alt_data_end+0xfffd3c88>
 1053cdc:	1abff336 	bltu	r3,r10,1053cac <__alt_data_end+0xfffd3cac>
 1053ce0:	50c00326 	beq	r10,r3,1053cf0 <__ledf2+0xe4>
 1053ce4:	50c0042e 	bgeu	r10,r3,1053cf8 <__ledf2+0xec>
 1053ce8:	283fe81e 	bne	r5,zero,1053c8c <__alt_data_end+0xfffd3c8c>
 1053cec:	003ff806 	br	1053cd0 <__alt_data_end+0xfffd3cd0>
 1053cf0:	313fee36 	bltu	r6,r4,1053cac <__alt_data_end+0xfffd3cac>
 1053cf4:	21bffc36 	bltu	r4,r6,1053ce8 <__alt_data_end+0xfffd3ce8>
 1053cf8:	0005883a 	mov	r2,zero
 1053cfc:	f800283a 	ret

01053d00 <__floatunsidf>:
 1053d00:	defffe04 	addi	sp,sp,-8
 1053d04:	dc000015 	stw	r16,0(sp)
 1053d08:	dfc00115 	stw	ra,4(sp)
 1053d0c:	2021883a 	mov	r16,r4
 1053d10:	20002226 	beq	r4,zero,1053d9c <__floatunsidf+0x9c>
 1053d14:	10459f00 	call	10459f0 <__clzsi2>
 1053d18:	01010784 	movi	r4,1054
 1053d1c:	2089c83a 	sub	r4,r4,r2
 1053d20:	01810cc4 	movi	r6,1075
 1053d24:	310dc83a 	sub	r6,r6,r4
 1053d28:	00c007c4 	movi	r3,31
 1053d2c:	1980120e 	bge	r3,r6,1053d78 <__floatunsidf+0x78>
 1053d30:	00c104c4 	movi	r3,1043
 1053d34:	1907c83a 	sub	r3,r3,r4
 1053d38:	80ca983a 	sll	r5,r16,r3
 1053d3c:	00800434 	movhi	r2,16
 1053d40:	10bfffc4 	addi	r2,r2,-1
 1053d44:	2101ffcc 	andi	r4,r4,2047
 1053d48:	0021883a 	mov	r16,zero
 1053d4c:	288a703a 	and	r5,r5,r2
 1053d50:	2008953a 	slli	r4,r4,20
 1053d54:	00c00434 	movhi	r3,16
 1053d58:	18ffffc4 	addi	r3,r3,-1
 1053d5c:	28c6703a 	and	r3,r5,r3
 1053d60:	8005883a 	mov	r2,r16
 1053d64:	1906b03a 	or	r3,r3,r4
 1053d68:	dfc00117 	ldw	ra,4(sp)
 1053d6c:	dc000017 	ldw	r16,0(sp)
 1053d70:	dec00204 	addi	sp,sp,8
 1053d74:	f800283a 	ret
 1053d78:	00c002c4 	movi	r3,11
 1053d7c:	188bc83a 	sub	r5,r3,r2
 1053d80:	814ad83a 	srl	r5,r16,r5
 1053d84:	00c00434 	movhi	r3,16
 1053d88:	18ffffc4 	addi	r3,r3,-1
 1053d8c:	81a0983a 	sll	r16,r16,r6
 1053d90:	2101ffcc 	andi	r4,r4,2047
 1053d94:	28ca703a 	and	r5,r5,r3
 1053d98:	003fed06 	br	1053d50 <__alt_data_end+0xfffd3d50>
 1053d9c:	0009883a 	mov	r4,zero
 1053da0:	000b883a 	mov	r5,zero
 1053da4:	003fea06 	br	1053d50 <__alt_data_end+0xfffd3d50>

01053da8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 1053da8:	defffe04 	addi	sp,sp,-8
 1053dac:	dfc00115 	stw	ra,4(sp)
 1053db0:	df000015 	stw	fp,0(sp)
 1053db4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 1053db8:	d0a00b17 	ldw	r2,-32724(gp)
 1053dbc:	10000326 	beq	r2,zero,1053dcc <alt_get_errno+0x24>
 1053dc0:	d0a00b17 	ldw	r2,-32724(gp)
 1053dc4:	103ee83a 	callr	r2
 1053dc8:	00000106 	br	1053dd0 <alt_get_errno+0x28>
 1053dcc:	d0a6d104 	addi	r2,gp,-25788
}
 1053dd0:	e037883a 	mov	sp,fp
 1053dd4:	dfc00117 	ldw	ra,4(sp)
 1053dd8:	df000017 	ldw	fp,0(sp)
 1053ddc:	dec00204 	addi	sp,sp,8
 1053de0:	f800283a 	ret

01053de4 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 1053de4:	defffb04 	addi	sp,sp,-20
 1053de8:	dfc00415 	stw	ra,16(sp)
 1053dec:	df000315 	stw	fp,12(sp)
 1053df0:	df000304 	addi	fp,sp,12
 1053df4:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 1053df8:	e0bfff17 	ldw	r2,-4(fp)
 1053dfc:	10000616 	blt	r2,zero,1053e18 <close+0x34>
 1053e00:	e0bfff17 	ldw	r2,-4(fp)
 1053e04:	10c00324 	muli	r3,r2,12
 1053e08:	00804174 	movhi	r2,261
 1053e0c:	109d8104 	addi	r2,r2,30212
 1053e10:	1885883a 	add	r2,r3,r2
 1053e14:	00000106 	br	1053e1c <close+0x38>
 1053e18:	0005883a 	mov	r2,zero
 1053e1c:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 1053e20:	e0bffd17 	ldw	r2,-12(fp)
 1053e24:	10001926 	beq	r2,zero,1053e8c <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 1053e28:	e0bffd17 	ldw	r2,-12(fp)
 1053e2c:	10800017 	ldw	r2,0(r2)
 1053e30:	10800417 	ldw	r2,16(r2)
 1053e34:	10000626 	beq	r2,zero,1053e50 <close+0x6c>
 1053e38:	e0bffd17 	ldw	r2,-12(fp)
 1053e3c:	10800017 	ldw	r2,0(r2)
 1053e40:	10800417 	ldw	r2,16(r2)
 1053e44:	e13ffd17 	ldw	r4,-12(fp)
 1053e48:	103ee83a 	callr	r2
 1053e4c:	00000106 	br	1053e54 <close+0x70>
 1053e50:	0005883a 	mov	r2,zero
 1053e54:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 1053e58:	e13fff17 	ldw	r4,-4(fp)
 1053e5c:	10544a40 	call	10544a4 <alt_release_fd>
    if (rval < 0)
 1053e60:	e0bffe17 	ldw	r2,-8(fp)
 1053e64:	1000070e 	bge	r2,zero,1053e84 <close+0xa0>
    {
      ALT_ERRNO = -rval;
 1053e68:	1053da80 	call	1053da8 <alt_get_errno>
 1053e6c:	1007883a 	mov	r3,r2
 1053e70:	e0bffe17 	ldw	r2,-8(fp)
 1053e74:	0085c83a 	sub	r2,zero,r2
 1053e78:	18800015 	stw	r2,0(r3)
      return -1;
 1053e7c:	00bfffc4 	movi	r2,-1
 1053e80:	00000706 	br	1053ea0 <close+0xbc>
    }
    return 0;
 1053e84:	0005883a 	mov	r2,zero
 1053e88:	00000506 	br	1053ea0 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 1053e8c:	1053da80 	call	1053da8 <alt_get_errno>
 1053e90:	1007883a 	mov	r3,r2
 1053e94:	00801444 	movi	r2,81
 1053e98:	18800015 	stw	r2,0(r3)
    return -1;
 1053e9c:	00bfffc4 	movi	r2,-1
  }
}
 1053ea0:	e037883a 	mov	sp,fp
 1053ea4:	dfc00117 	ldw	ra,4(sp)
 1053ea8:	df000017 	ldw	fp,0(sp)
 1053eac:	dec00204 	addi	sp,sp,8
 1053eb0:	f800283a 	ret

01053eb4 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 1053eb4:	defffc04 	addi	sp,sp,-16
 1053eb8:	df000315 	stw	fp,12(sp)
 1053ebc:	df000304 	addi	fp,sp,12
 1053ec0:	e13ffd15 	stw	r4,-12(fp)
 1053ec4:	e17ffe15 	stw	r5,-8(fp)
 1053ec8:	e1bfff15 	stw	r6,-4(fp)
  return len;
 1053ecc:	e0bfff17 	ldw	r2,-4(fp)
}
 1053ed0:	e037883a 	mov	sp,fp
 1053ed4:	df000017 	ldw	fp,0(sp)
 1053ed8:	dec00104 	addi	sp,sp,4
 1053edc:	f800283a 	ret

01053ee0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 1053ee0:	defffe04 	addi	sp,sp,-8
 1053ee4:	dfc00115 	stw	ra,4(sp)
 1053ee8:	df000015 	stw	fp,0(sp)
 1053eec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 1053ef0:	d0a00b17 	ldw	r2,-32724(gp)
 1053ef4:	10000326 	beq	r2,zero,1053f04 <alt_get_errno+0x24>
 1053ef8:	d0a00b17 	ldw	r2,-32724(gp)
 1053efc:	103ee83a 	callr	r2
 1053f00:	00000106 	br	1053f08 <alt_get_errno+0x28>
 1053f04:	d0a6d104 	addi	r2,gp,-25788
}
 1053f08:	e037883a 	mov	sp,fp
 1053f0c:	dfc00117 	ldw	ra,4(sp)
 1053f10:	df000017 	ldw	fp,0(sp)
 1053f14:	dec00204 	addi	sp,sp,8
 1053f18:	f800283a 	ret

01053f1c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 1053f1c:	defffb04 	addi	sp,sp,-20
 1053f20:	dfc00415 	stw	ra,16(sp)
 1053f24:	df000315 	stw	fp,12(sp)
 1053f28:	df000304 	addi	fp,sp,12
 1053f2c:	e13ffe15 	stw	r4,-8(fp)
 1053f30:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 1053f34:	e0bffe17 	ldw	r2,-8(fp)
 1053f38:	10000616 	blt	r2,zero,1053f54 <fstat+0x38>
 1053f3c:	e0bffe17 	ldw	r2,-8(fp)
 1053f40:	10c00324 	muli	r3,r2,12
 1053f44:	00804174 	movhi	r2,261
 1053f48:	109d8104 	addi	r2,r2,30212
 1053f4c:	1885883a 	add	r2,r3,r2
 1053f50:	00000106 	br	1053f58 <fstat+0x3c>
 1053f54:	0005883a 	mov	r2,zero
 1053f58:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 1053f5c:	e0bffd17 	ldw	r2,-12(fp)
 1053f60:	10001026 	beq	r2,zero,1053fa4 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 1053f64:	e0bffd17 	ldw	r2,-12(fp)
 1053f68:	10800017 	ldw	r2,0(r2)
 1053f6c:	10800817 	ldw	r2,32(r2)
 1053f70:	10000726 	beq	r2,zero,1053f90 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
 1053f74:	e0bffd17 	ldw	r2,-12(fp)
 1053f78:	10800017 	ldw	r2,0(r2)
 1053f7c:	10800817 	ldw	r2,32(r2)
 1053f80:	e17fff17 	ldw	r5,-4(fp)
 1053f84:	e13ffd17 	ldw	r4,-12(fp)
 1053f88:	103ee83a 	callr	r2
 1053f8c:	00000a06 	br	1053fb8 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 1053f90:	e0bfff17 	ldw	r2,-4(fp)
 1053f94:	00c80004 	movi	r3,8192
 1053f98:	10c00115 	stw	r3,4(r2)
      return 0;
 1053f9c:	0005883a 	mov	r2,zero
 1053fa0:	00000506 	br	1053fb8 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 1053fa4:	1053ee00 	call	1053ee0 <alt_get_errno>
 1053fa8:	1007883a 	mov	r3,r2
 1053fac:	00801444 	movi	r2,81
 1053fb0:	18800015 	stw	r2,0(r3)
    return -1;
 1053fb4:	00bfffc4 	movi	r2,-1
  }
}
 1053fb8:	e037883a 	mov	sp,fp
 1053fbc:	dfc00117 	ldw	ra,4(sp)
 1053fc0:	df000017 	ldw	fp,0(sp)
 1053fc4:	dec00204 	addi	sp,sp,8
 1053fc8:	f800283a 	ret

01053fcc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 1053fcc:	defffe04 	addi	sp,sp,-8
 1053fd0:	dfc00115 	stw	ra,4(sp)
 1053fd4:	df000015 	stw	fp,0(sp)
 1053fd8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 1053fdc:	d0a00b17 	ldw	r2,-32724(gp)
 1053fe0:	10000326 	beq	r2,zero,1053ff0 <alt_get_errno+0x24>
 1053fe4:	d0a00b17 	ldw	r2,-32724(gp)
 1053fe8:	103ee83a 	callr	r2
 1053fec:	00000106 	br	1053ff4 <alt_get_errno+0x28>
 1053ff0:	d0a6d104 	addi	r2,gp,-25788
}
 1053ff4:	e037883a 	mov	sp,fp
 1053ff8:	dfc00117 	ldw	ra,4(sp)
 1053ffc:	df000017 	ldw	fp,0(sp)
 1054000:	dec00204 	addi	sp,sp,8
 1054004:	f800283a 	ret

01054008 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 1054008:	deffed04 	addi	sp,sp,-76
 105400c:	dfc01215 	stw	ra,72(sp)
 1054010:	df001115 	stw	fp,68(sp)
 1054014:	df001104 	addi	fp,sp,68
 1054018:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 105401c:	e0bfff17 	ldw	r2,-4(fp)
 1054020:	10000616 	blt	r2,zero,105403c <isatty+0x34>
 1054024:	e0bfff17 	ldw	r2,-4(fp)
 1054028:	10c00324 	muli	r3,r2,12
 105402c:	00804174 	movhi	r2,261
 1054030:	109d8104 	addi	r2,r2,30212
 1054034:	1885883a 	add	r2,r3,r2
 1054038:	00000106 	br	1054040 <isatty+0x38>
 105403c:	0005883a 	mov	r2,zero
 1054040:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 1054044:	e0bfef17 	ldw	r2,-68(fp)
 1054048:	10000e26 	beq	r2,zero,1054084 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 105404c:	e0bfef17 	ldw	r2,-68(fp)
 1054050:	10800017 	ldw	r2,0(r2)
 1054054:	10800817 	ldw	r2,32(r2)
 1054058:	1000021e 	bne	r2,zero,1054064 <isatty+0x5c>
    {
      return 1;
 105405c:	00800044 	movi	r2,1
 1054060:	00000d06 	br	1054098 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 1054064:	e0bff004 	addi	r2,fp,-64
 1054068:	100b883a 	mov	r5,r2
 105406c:	e13fff17 	ldw	r4,-4(fp)
 1054070:	1053f1c0 	call	1053f1c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 1054074:	e0bff117 	ldw	r2,-60(fp)
 1054078:	10880020 	cmpeqi	r2,r2,8192
 105407c:	10803fcc 	andi	r2,r2,255
 1054080:	00000506 	br	1054098 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 1054084:	1053fcc0 	call	1053fcc <alt_get_errno>
 1054088:	1007883a 	mov	r3,r2
 105408c:	00801444 	movi	r2,81
 1054090:	18800015 	stw	r2,0(r3)
    return 0;
 1054094:	0005883a 	mov	r2,zero
  }
}
 1054098:	e037883a 	mov	sp,fp
 105409c:	dfc00117 	ldw	ra,4(sp)
 10540a0:	df000017 	ldw	fp,0(sp)
 10540a4:	dec00204 	addi	sp,sp,8
 10540a8:	f800283a 	ret

010540ac <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 10540ac:	defffc04 	addi	sp,sp,-16
 10540b0:	df000315 	stw	fp,12(sp)
 10540b4:	df000304 	addi	fp,sp,12
 10540b8:	e13ffd15 	stw	r4,-12(fp)
 10540bc:	e17ffe15 	stw	r5,-8(fp)
 10540c0:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 10540c4:	e0fffe17 	ldw	r3,-8(fp)
 10540c8:	e0bffd17 	ldw	r2,-12(fp)
 10540cc:	18800c26 	beq	r3,r2,1054100 <alt_load_section+0x54>
  {
    while( to != end )
 10540d0:	00000806 	br	10540f4 <alt_load_section+0x48>
    {
      *to++ = *from++;
 10540d4:	e0bffe17 	ldw	r2,-8(fp)
 10540d8:	10c00104 	addi	r3,r2,4
 10540dc:	e0fffe15 	stw	r3,-8(fp)
 10540e0:	e0fffd17 	ldw	r3,-12(fp)
 10540e4:	19000104 	addi	r4,r3,4
 10540e8:	e13ffd15 	stw	r4,-12(fp)
 10540ec:	18c00017 	ldw	r3,0(r3)
 10540f0:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 10540f4:	e0fffe17 	ldw	r3,-8(fp)
 10540f8:	e0bfff17 	ldw	r2,-4(fp)
 10540fc:	18bff51e 	bne	r3,r2,10540d4 <__alt_data_end+0xfffd40d4>
    {
      *to++ = *from++;
    }
  }
}
 1054100:	0001883a 	nop
 1054104:	e037883a 	mov	sp,fp
 1054108:	df000017 	ldw	fp,0(sp)
 105410c:	dec00104 	addi	sp,sp,4
 1054110:	f800283a 	ret

01054114 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 1054114:	defffe04 	addi	sp,sp,-8
 1054118:	dfc00115 	stw	ra,4(sp)
 105411c:	df000015 	stw	fp,0(sp)
 1054120:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 1054124:	018041b4 	movhi	r6,262
 1054128:	31a20904 	addi	r6,r6,-30684
 105412c:	01404174 	movhi	r5,261
 1054130:	295b4e04 	addi	r5,r5,27960
 1054134:	010041b4 	movhi	r4,262
 1054138:	21220904 	addi	r4,r4,-30684
 105413c:	10540ac0 	call	10540ac <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 1054140:	01804134 	movhi	r6,260
 1054144:	31809104 	addi	r6,r6,580
 1054148:	01404134 	movhi	r5,260
 105414c:	29400804 	addi	r5,r5,32
 1054150:	01004134 	movhi	r4,260
 1054154:	21000804 	addi	r4,r4,32
 1054158:	10540ac0 	call	10540ac <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 105415c:	01804174 	movhi	r6,261
 1054160:	319b4e04 	addi	r6,r6,27960
 1054164:	01404174 	movhi	r5,261
 1054168:	2959ac04 	addi	r5,r5,26288
 105416c:	01004174 	movhi	r4,261
 1054170:	2119ac04 	addi	r4,r4,26288
 1054174:	10540ac0 	call	10540ac <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 1054178:	105559c0 	call	105559c <alt_dcache_flush_all>
  alt_icache_flush_all();
 105417c:	10557840 	call	1055784 <alt_icache_flush_all>
}
 1054180:	0001883a 	nop
 1054184:	e037883a 	mov	sp,fp
 1054188:	dfc00117 	ldw	ra,4(sp)
 105418c:	df000017 	ldw	fp,0(sp)
 1054190:	dec00204 	addi	sp,sp,8
 1054194:	f800283a 	ret

01054198 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 1054198:	defffe04 	addi	sp,sp,-8
 105419c:	dfc00115 	stw	ra,4(sp)
 10541a0:	df000015 	stw	fp,0(sp)
 10541a4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 10541a8:	d0a00b17 	ldw	r2,-32724(gp)
 10541ac:	10000326 	beq	r2,zero,10541bc <alt_get_errno+0x24>
 10541b0:	d0a00b17 	ldw	r2,-32724(gp)
 10541b4:	103ee83a 	callr	r2
 10541b8:	00000106 	br	10541c0 <alt_get_errno+0x28>
 10541bc:	d0a6d104 	addi	r2,gp,-25788
}
 10541c0:	e037883a 	mov	sp,fp
 10541c4:	dfc00117 	ldw	ra,4(sp)
 10541c8:	df000017 	ldw	fp,0(sp)
 10541cc:	dec00204 	addi	sp,sp,8
 10541d0:	f800283a 	ret

010541d4 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 10541d4:	defff904 	addi	sp,sp,-28
 10541d8:	dfc00615 	stw	ra,24(sp)
 10541dc:	df000515 	stw	fp,20(sp)
 10541e0:	df000504 	addi	fp,sp,20
 10541e4:	e13ffd15 	stw	r4,-12(fp)
 10541e8:	e17ffe15 	stw	r5,-8(fp)
 10541ec:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 10541f0:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 10541f4:	e0bffd17 	ldw	r2,-12(fp)
 10541f8:	10000616 	blt	r2,zero,1054214 <lseek+0x40>
 10541fc:	e0bffd17 	ldw	r2,-12(fp)
 1054200:	10c00324 	muli	r3,r2,12
 1054204:	00804174 	movhi	r2,261
 1054208:	109d8104 	addi	r2,r2,30212
 105420c:	1885883a 	add	r2,r3,r2
 1054210:	00000106 	br	1054218 <lseek+0x44>
 1054214:	0005883a 	mov	r2,zero
 1054218:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 105421c:	e0bffc17 	ldw	r2,-16(fp)
 1054220:	10001026 	beq	r2,zero,1054264 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 1054224:	e0bffc17 	ldw	r2,-16(fp)
 1054228:	10800017 	ldw	r2,0(r2)
 105422c:	10800717 	ldw	r2,28(r2)
 1054230:	10000926 	beq	r2,zero,1054258 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 1054234:	e0bffc17 	ldw	r2,-16(fp)
 1054238:	10800017 	ldw	r2,0(r2)
 105423c:	10800717 	ldw	r2,28(r2)
 1054240:	e1bfff17 	ldw	r6,-4(fp)
 1054244:	e17ffe17 	ldw	r5,-8(fp)
 1054248:	e13ffc17 	ldw	r4,-16(fp)
 105424c:	103ee83a 	callr	r2
 1054250:	e0bffb15 	stw	r2,-20(fp)
 1054254:	00000506 	br	105426c <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 1054258:	00bfde84 	movi	r2,-134
 105425c:	e0bffb15 	stw	r2,-20(fp)
 1054260:	00000206 	br	105426c <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
 1054264:	00bfebc4 	movi	r2,-81
 1054268:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 105426c:	e0bffb17 	ldw	r2,-20(fp)
 1054270:	1000070e 	bge	r2,zero,1054290 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
 1054274:	10541980 	call	1054198 <alt_get_errno>
 1054278:	1007883a 	mov	r3,r2
 105427c:	e0bffb17 	ldw	r2,-20(fp)
 1054280:	0085c83a 	sub	r2,zero,r2
 1054284:	18800015 	stw	r2,0(r3)
    rc = -1;
 1054288:	00bfffc4 	movi	r2,-1
 105428c:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 1054290:	e0bffb17 	ldw	r2,-20(fp)
}
 1054294:	e037883a 	mov	sp,fp
 1054298:	dfc00117 	ldw	ra,4(sp)
 105429c:	df000017 	ldw	fp,0(sp)
 10542a0:	dec00204 	addi	sp,sp,8
 10542a4:	f800283a 	ret

010542a8 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 10542a8:	defffd04 	addi	sp,sp,-12
 10542ac:	dfc00215 	stw	ra,8(sp)
 10542b0:	df000115 	stw	fp,4(sp)
 10542b4:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 10542b8:	0009883a 	mov	r4,zero
 10542bc:	10547500 	call	1054750 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 10542c0:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 10542c4:	10547880 	call	1054788 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 10542c8:	01804174 	movhi	r6,261
 10542cc:	319b4604 	addi	r6,r6,27928
 10542d0:	01404174 	movhi	r5,261
 10542d4:	295b4604 	addi	r5,r5,27928
 10542d8:	01004174 	movhi	r4,261
 10542dc:	211b4604 	addi	r4,r4,27928
 10542e0:	1055b1c0 	call	1055b1c <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 10542e4:	10556c40 	call	10556c4 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 10542e8:	01004174 	movhi	r4,261
 10542ec:	2115c904 	addi	r4,r4,22308
 10542f0:	105631c0 	call	105631c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 10542f4:	d0a6d217 	ldw	r2,-25784(gp)
 10542f8:	d0e6d317 	ldw	r3,-25780(gp)
 10542fc:	d126d417 	ldw	r4,-25776(gp)
 1054300:	200d883a 	mov	r6,r4
 1054304:	180b883a 	mov	r5,r3
 1054308:	1009883a 	mov	r4,r2
 105430c:	1041a0c0 	call	1041a0c <main>
 1054310:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 1054314:	01000044 	movi	r4,1
 1054318:	1053de40 	call	1053de4 <close>
  exit (result);
 105431c:	e13fff17 	ldw	r4,-4(fp)
 1054320:	10563300 	call	1056330 <exit>

01054324 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 1054324:	defffe04 	addi	sp,sp,-8
 1054328:	df000115 	stw	fp,4(sp)
 105432c:	df000104 	addi	fp,sp,4
 1054330:	e13fff15 	stw	r4,-4(fp)
}
 1054334:	0001883a 	nop
 1054338:	e037883a 	mov	sp,fp
 105433c:	df000017 	ldw	fp,0(sp)
 1054340:	dec00104 	addi	sp,sp,4
 1054344:	f800283a 	ret

01054348 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 1054348:	defffe04 	addi	sp,sp,-8
 105434c:	df000115 	stw	fp,4(sp)
 1054350:	df000104 	addi	fp,sp,4
 1054354:	e13fff15 	stw	r4,-4(fp)
}
 1054358:	0001883a 	nop
 105435c:	e037883a 	mov	sp,fp
 1054360:	df000017 	ldw	fp,0(sp)
 1054364:	dec00104 	addi	sp,sp,4
 1054368:	f800283a 	ret

0105436c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 105436c:	defffe04 	addi	sp,sp,-8
 1054370:	dfc00115 	stw	ra,4(sp)
 1054374:	df000015 	stw	fp,0(sp)
 1054378:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 105437c:	d0a00b17 	ldw	r2,-32724(gp)
 1054380:	10000326 	beq	r2,zero,1054390 <alt_get_errno+0x24>
 1054384:	d0a00b17 	ldw	r2,-32724(gp)
 1054388:	103ee83a 	callr	r2
 105438c:	00000106 	br	1054394 <alt_get_errno+0x28>
 1054390:	d0a6d104 	addi	r2,gp,-25788
}
 1054394:	e037883a 	mov	sp,fp
 1054398:	dfc00117 	ldw	ra,4(sp)
 105439c:	df000017 	ldw	fp,0(sp)
 10543a0:	dec00204 	addi	sp,sp,8
 10543a4:	f800283a 	ret

010543a8 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 10543a8:	defff904 	addi	sp,sp,-28
 10543ac:	dfc00615 	stw	ra,24(sp)
 10543b0:	df000515 	stw	fp,20(sp)
 10543b4:	df000504 	addi	fp,sp,20
 10543b8:	e13ffd15 	stw	r4,-12(fp)
 10543bc:	e17ffe15 	stw	r5,-8(fp)
 10543c0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 10543c4:	e0bffd17 	ldw	r2,-12(fp)
 10543c8:	10000616 	blt	r2,zero,10543e4 <read+0x3c>
 10543cc:	e0bffd17 	ldw	r2,-12(fp)
 10543d0:	10c00324 	muli	r3,r2,12
 10543d4:	00804174 	movhi	r2,261
 10543d8:	109d8104 	addi	r2,r2,30212
 10543dc:	1885883a 	add	r2,r3,r2
 10543e0:	00000106 	br	10543e8 <read+0x40>
 10543e4:	0005883a 	mov	r2,zero
 10543e8:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 10543ec:	e0bffb17 	ldw	r2,-20(fp)
 10543f0:	10002226 	beq	r2,zero,105447c <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 10543f4:	e0bffb17 	ldw	r2,-20(fp)
 10543f8:	10800217 	ldw	r2,8(r2)
 10543fc:	108000cc 	andi	r2,r2,3
 1054400:	10800060 	cmpeqi	r2,r2,1
 1054404:	1000181e 	bne	r2,zero,1054468 <read+0xc0>
        (fd->dev->read))
 1054408:	e0bffb17 	ldw	r2,-20(fp)
 105440c:	10800017 	ldw	r2,0(r2)
 1054410:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 1054414:	10001426 	beq	r2,zero,1054468 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 1054418:	e0bffb17 	ldw	r2,-20(fp)
 105441c:	10800017 	ldw	r2,0(r2)
 1054420:	10800517 	ldw	r2,20(r2)
 1054424:	e0ffff17 	ldw	r3,-4(fp)
 1054428:	180d883a 	mov	r6,r3
 105442c:	e17ffe17 	ldw	r5,-8(fp)
 1054430:	e13ffb17 	ldw	r4,-20(fp)
 1054434:	103ee83a 	callr	r2
 1054438:	e0bffc15 	stw	r2,-16(fp)
 105443c:	e0bffc17 	ldw	r2,-16(fp)
 1054440:	1000070e 	bge	r2,zero,1054460 <read+0xb8>
        {
          ALT_ERRNO = -rval;
 1054444:	105436c0 	call	105436c <alt_get_errno>
 1054448:	1007883a 	mov	r3,r2
 105444c:	e0bffc17 	ldw	r2,-16(fp)
 1054450:	0085c83a 	sub	r2,zero,r2
 1054454:	18800015 	stw	r2,0(r3)
          return -1;
 1054458:	00bfffc4 	movi	r2,-1
 105445c:	00000c06 	br	1054490 <read+0xe8>
        }
        return rval;
 1054460:	e0bffc17 	ldw	r2,-16(fp)
 1054464:	00000a06 	br	1054490 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
 1054468:	105436c0 	call	105436c <alt_get_errno>
 105446c:	1007883a 	mov	r3,r2
 1054470:	00800344 	movi	r2,13
 1054474:	18800015 	stw	r2,0(r3)
 1054478:	00000406 	br	105448c <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 105447c:	105436c0 	call	105436c <alt_get_errno>
 1054480:	1007883a 	mov	r3,r2
 1054484:	00801444 	movi	r2,81
 1054488:	18800015 	stw	r2,0(r3)
  }
  return -1;
 105448c:	00bfffc4 	movi	r2,-1
}
 1054490:	e037883a 	mov	sp,fp
 1054494:	dfc00117 	ldw	ra,4(sp)
 1054498:	df000017 	ldw	fp,0(sp)
 105449c:	dec00204 	addi	sp,sp,8
 10544a0:	f800283a 	ret

010544a4 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 10544a4:	defffe04 	addi	sp,sp,-8
 10544a8:	df000115 	stw	fp,4(sp)
 10544ac:	df000104 	addi	fp,sp,4
 10544b0:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
 10544b4:	e0bfff17 	ldw	r2,-4(fp)
 10544b8:	108000d0 	cmplti	r2,r2,3
 10544bc:	10000d1e 	bne	r2,zero,10544f4 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
 10544c0:	00804174 	movhi	r2,261
 10544c4:	109d8104 	addi	r2,r2,30212
 10544c8:	e0ffff17 	ldw	r3,-4(fp)
 10544cc:	18c00324 	muli	r3,r3,12
 10544d0:	10c5883a 	add	r2,r2,r3
 10544d4:	10800204 	addi	r2,r2,8
 10544d8:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 10544dc:	00804174 	movhi	r2,261
 10544e0:	109d8104 	addi	r2,r2,30212
 10544e4:	e0ffff17 	ldw	r3,-4(fp)
 10544e8:	18c00324 	muli	r3,r3,12
 10544ec:	10c5883a 	add	r2,r2,r3
 10544f0:	10000015 	stw	zero,0(r2)
  }
}
 10544f4:	0001883a 	nop
 10544f8:	e037883a 	mov	sp,fp
 10544fc:	df000017 	ldw	fp,0(sp)
 1054500:	dec00104 	addi	sp,sp,4
 1054504:	f800283a 	ret

01054508 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 1054508:	defff904 	addi	sp,sp,-28
 105450c:	df000615 	stw	fp,24(sp)
 1054510:	df000604 	addi	fp,sp,24
 1054514:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 1054518:	0005303a 	rdctl	r2,status
 105451c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 1054520:	e0fffe17 	ldw	r3,-8(fp)
 1054524:	00bfff84 	movi	r2,-2
 1054528:	1884703a 	and	r2,r3,r2
 105452c:	1001703a 	wrctl	status,r2
  
  return context;
 1054530:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 1054534:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 1054538:	d0a00c17 	ldw	r2,-32720(gp)
 105453c:	10c000c4 	addi	r3,r2,3
 1054540:	00bfff04 	movi	r2,-4
 1054544:	1884703a 	and	r2,r3,r2
 1054548:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 105454c:	d0e00c17 	ldw	r3,-32720(gp)
 1054550:	e0bfff17 	ldw	r2,-4(fp)
 1054554:	1887883a 	add	r3,r3,r2
 1054558:	00804234 	movhi	r2,264
 105455c:	10800004 	addi	r2,r2,0
 1054560:	10c0062e 	bgeu	r2,r3,105457c <sbrk+0x74>
 1054564:	e0bffb17 	ldw	r2,-20(fp)
 1054568:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 105456c:	e0bffa17 	ldw	r2,-24(fp)
 1054570:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 1054574:	00bfffc4 	movi	r2,-1
 1054578:	00000b06 	br	10545a8 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 105457c:	d0a00c17 	ldw	r2,-32720(gp)
 1054580:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
 1054584:	d0e00c17 	ldw	r3,-32720(gp)
 1054588:	e0bfff17 	ldw	r2,-4(fp)
 105458c:	1885883a 	add	r2,r3,r2
 1054590:	d0a00c15 	stw	r2,-32720(gp)
 1054594:	e0bffb17 	ldw	r2,-20(fp)
 1054598:	e0bffc15 	stw	r2,-16(fp)
 105459c:	e0bffc17 	ldw	r2,-16(fp)
 10545a0:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 10545a4:	e0bffd17 	ldw	r2,-12(fp)
} 
 10545a8:	e037883a 	mov	sp,fp
 10545ac:	df000017 	ldw	fp,0(sp)
 10545b0:	dec00104 	addi	sp,sp,4
 10545b4:	f800283a 	ret

010545b8 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
 10545b8:	defffd04 	addi	sp,sp,-12
 10545bc:	dfc00215 	stw	ra,8(sp)
 10545c0:	df000115 	stw	fp,4(sp)
 10545c4:	df000104 	addi	fp,sp,4
 10545c8:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
 10545cc:	e13fff17 	ldw	r4,-4(fp)
 10545d0:	10554740 	call	1055474 <alt_busy_sleep>
}
 10545d4:	e037883a 	mov	sp,fp
 10545d8:	dfc00117 	ldw	ra,4(sp)
 10545dc:	df000017 	ldw	fp,0(sp)
 10545e0:	dec00204 	addi	sp,sp,8
 10545e4:	f800283a 	ret

010545e8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 10545e8:	defffe04 	addi	sp,sp,-8
 10545ec:	dfc00115 	stw	ra,4(sp)
 10545f0:	df000015 	stw	fp,0(sp)
 10545f4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 10545f8:	d0a00b17 	ldw	r2,-32724(gp)
 10545fc:	10000326 	beq	r2,zero,105460c <alt_get_errno+0x24>
 1054600:	d0a00b17 	ldw	r2,-32724(gp)
 1054604:	103ee83a 	callr	r2
 1054608:	00000106 	br	1054610 <alt_get_errno+0x28>
 105460c:	d0a6d104 	addi	r2,gp,-25788
}
 1054610:	e037883a 	mov	sp,fp
 1054614:	dfc00117 	ldw	ra,4(sp)
 1054618:	df000017 	ldw	fp,0(sp)
 105461c:	dec00204 	addi	sp,sp,8
 1054620:	f800283a 	ret

01054624 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 1054624:	defff904 	addi	sp,sp,-28
 1054628:	dfc00615 	stw	ra,24(sp)
 105462c:	df000515 	stw	fp,20(sp)
 1054630:	df000504 	addi	fp,sp,20
 1054634:	e13ffd15 	stw	r4,-12(fp)
 1054638:	e17ffe15 	stw	r5,-8(fp)
 105463c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 1054640:	e0bffd17 	ldw	r2,-12(fp)
 1054644:	10000616 	blt	r2,zero,1054660 <write+0x3c>
 1054648:	e0bffd17 	ldw	r2,-12(fp)
 105464c:	10c00324 	muli	r3,r2,12
 1054650:	00804174 	movhi	r2,261
 1054654:	109d8104 	addi	r2,r2,30212
 1054658:	1885883a 	add	r2,r3,r2
 105465c:	00000106 	br	1054664 <write+0x40>
 1054660:	0005883a 	mov	r2,zero
 1054664:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 1054668:	e0bffb17 	ldw	r2,-20(fp)
 105466c:	10002126 	beq	r2,zero,10546f4 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 1054670:	e0bffb17 	ldw	r2,-20(fp)
 1054674:	10800217 	ldw	r2,8(r2)
 1054678:	108000cc 	andi	r2,r2,3
 105467c:	10001826 	beq	r2,zero,10546e0 <write+0xbc>
 1054680:	e0bffb17 	ldw	r2,-20(fp)
 1054684:	10800017 	ldw	r2,0(r2)
 1054688:	10800617 	ldw	r2,24(r2)
 105468c:	10001426 	beq	r2,zero,10546e0 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 1054690:	e0bffb17 	ldw	r2,-20(fp)
 1054694:	10800017 	ldw	r2,0(r2)
 1054698:	10800617 	ldw	r2,24(r2)
 105469c:	e0ffff17 	ldw	r3,-4(fp)
 10546a0:	180d883a 	mov	r6,r3
 10546a4:	e17ffe17 	ldw	r5,-8(fp)
 10546a8:	e13ffb17 	ldw	r4,-20(fp)
 10546ac:	103ee83a 	callr	r2
 10546b0:	e0bffc15 	stw	r2,-16(fp)
 10546b4:	e0bffc17 	ldw	r2,-16(fp)
 10546b8:	1000070e 	bge	r2,zero,10546d8 <write+0xb4>
      {
        ALT_ERRNO = -rval;
 10546bc:	10545e80 	call	10545e8 <alt_get_errno>
 10546c0:	1007883a 	mov	r3,r2
 10546c4:	e0bffc17 	ldw	r2,-16(fp)
 10546c8:	0085c83a 	sub	r2,zero,r2
 10546cc:	18800015 	stw	r2,0(r3)
        return -1;
 10546d0:	00bfffc4 	movi	r2,-1
 10546d4:	00000c06 	br	1054708 <write+0xe4>
      }
      return rval;
 10546d8:	e0bffc17 	ldw	r2,-16(fp)
 10546dc:	00000a06 	br	1054708 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
 10546e0:	10545e80 	call	10545e8 <alt_get_errno>
 10546e4:	1007883a 	mov	r3,r2
 10546e8:	00800344 	movi	r2,13
 10546ec:	18800015 	stw	r2,0(r3)
 10546f0:	00000406 	br	1054704 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 10546f4:	10545e80 	call	10545e8 <alt_get_errno>
 10546f8:	1007883a 	mov	r3,r2
 10546fc:	00801444 	movi	r2,81
 1054700:	18800015 	stw	r2,0(r3)
  }
  return -1;
 1054704:	00bfffc4 	movi	r2,-1
}
 1054708:	e037883a 	mov	sp,fp
 105470c:	dfc00117 	ldw	ra,4(sp)
 1054710:	df000017 	ldw	fp,0(sp)
 1054714:	dec00204 	addi	sp,sp,8
 1054718:	f800283a 	ret

0105471c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 105471c:	defffd04 	addi	sp,sp,-12
 1054720:	dfc00215 	stw	ra,8(sp)
 1054724:	df000115 	stw	fp,4(sp)
 1054728:	df000104 	addi	fp,sp,4
 105472c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 1054730:	d1600804 	addi	r5,gp,-32736
 1054734:	e13fff17 	ldw	r4,-4(fp)
 1054738:	10556200 	call	1055620 <alt_dev_llist_insert>
}
 105473c:	e037883a 	mov	sp,fp
 1054740:	dfc00117 	ldw	ra,4(sp)
 1054744:	df000017 	ldw	fp,0(sp)
 1054748:	dec00204 	addi	sp,sp,8
 105474c:	f800283a 	ret

01054750 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 1054750:	defffd04 	addi	sp,sp,-12
 1054754:	dfc00215 	stw	ra,8(sp)
 1054758:	df000115 	stw	fp,4(sp)
 105475c:	df000104 	addi	fp,sp,4
 1054760:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2, nios2_gen2);
 1054764:	1055f900 	call	1055f90 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 1054768:	00800044 	movi	r2,1
 105476c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 1054770:	0001883a 	nop
 1054774:	e037883a 	mov	sp,fp
 1054778:	dfc00117 	ldw	ra,4(sp)
 105477c:	df000017 	ldw	fp,0(sp)
 1054780:	dec00204 	addi	sp,sp,8
 1054784:	f800283a 	ret

01054788 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 1054788:	defffe04 	addi	sp,sp,-8
 105478c:	dfc00115 	stw	ra,4(sp)
 1054790:	df000015 	stw	fp,0(sp)
 1054794:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
 1054798:	01c0fa04 	movi	r7,1000
 105479c:	01800044 	movi	r6,1
 10547a0:	000b883a 	mov	r5,zero
 10547a4:	01004234 	movhi	r4,264
 10547a8:	21080004 	addi	r4,r4,8192
 10547ac:	10552cc0 	call	10552cc <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
 10547b0:	000d883a 	mov	r6,zero
 10547b4:	000b883a 	mov	r5,zero
 10547b8:	01004174 	movhi	r4,261
 10547bc:	211deb04 	addi	r4,r4,30636
 10547c0:	10549500 	call	1054950 <altera_avalon_jtag_uart_init>
 10547c4:	01004174 	movhi	r4,261
 10547c8:	211de104 	addi	r4,r4,30596
 10547cc:	105471c0 	call	105471c <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS, sysid_qsys);
 10547d0:	0001883a 	nop
}
 10547d4:	0001883a 	nop
 10547d8:	e037883a 	mov	sp,fp
 10547dc:	dfc00117 	ldw	ra,4(sp)
 10547e0:	df000017 	ldw	fp,0(sp)
 10547e4:	dec00204 	addi	sp,sp,8
 10547e8:	f800283a 	ret

010547ec <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 10547ec:	defffa04 	addi	sp,sp,-24
 10547f0:	dfc00515 	stw	ra,20(sp)
 10547f4:	df000415 	stw	fp,16(sp)
 10547f8:	df000404 	addi	fp,sp,16
 10547fc:	e13ffd15 	stw	r4,-12(fp)
 1054800:	e17ffe15 	stw	r5,-8(fp)
 1054804:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 1054808:	e0bffd17 	ldw	r2,-12(fp)
 105480c:	10800017 	ldw	r2,0(r2)
 1054810:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 1054814:	e0bffc17 	ldw	r2,-16(fp)
 1054818:	10c00a04 	addi	r3,r2,40
 105481c:	e0bffd17 	ldw	r2,-12(fp)
 1054820:	10800217 	ldw	r2,8(r2)
 1054824:	100f883a 	mov	r7,r2
 1054828:	e1bfff17 	ldw	r6,-4(fp)
 105482c:	e17ffe17 	ldw	r5,-8(fp)
 1054830:	1809883a 	mov	r4,r3
 1054834:	1054e140 	call	1054e14 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 1054838:	e037883a 	mov	sp,fp
 105483c:	dfc00117 	ldw	ra,4(sp)
 1054840:	df000017 	ldw	fp,0(sp)
 1054844:	dec00204 	addi	sp,sp,8
 1054848:	f800283a 	ret

0105484c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 105484c:	defffa04 	addi	sp,sp,-24
 1054850:	dfc00515 	stw	ra,20(sp)
 1054854:	df000415 	stw	fp,16(sp)
 1054858:	df000404 	addi	fp,sp,16
 105485c:	e13ffd15 	stw	r4,-12(fp)
 1054860:	e17ffe15 	stw	r5,-8(fp)
 1054864:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 1054868:	e0bffd17 	ldw	r2,-12(fp)
 105486c:	10800017 	ldw	r2,0(r2)
 1054870:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 1054874:	e0bffc17 	ldw	r2,-16(fp)
 1054878:	10c00a04 	addi	r3,r2,40
 105487c:	e0bffd17 	ldw	r2,-12(fp)
 1054880:	10800217 	ldw	r2,8(r2)
 1054884:	100f883a 	mov	r7,r2
 1054888:	e1bfff17 	ldw	r6,-4(fp)
 105488c:	e17ffe17 	ldw	r5,-8(fp)
 1054890:	1809883a 	mov	r4,r3
 1054894:	10550300 	call	1055030 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 1054898:	e037883a 	mov	sp,fp
 105489c:	dfc00117 	ldw	ra,4(sp)
 10548a0:	df000017 	ldw	fp,0(sp)
 10548a4:	dec00204 	addi	sp,sp,8
 10548a8:	f800283a 	ret

010548ac <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 10548ac:	defffc04 	addi	sp,sp,-16
 10548b0:	dfc00315 	stw	ra,12(sp)
 10548b4:	df000215 	stw	fp,8(sp)
 10548b8:	df000204 	addi	fp,sp,8
 10548bc:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 10548c0:	e0bfff17 	ldw	r2,-4(fp)
 10548c4:	10800017 	ldw	r2,0(r2)
 10548c8:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 10548cc:	e0bffe17 	ldw	r2,-8(fp)
 10548d0:	10c00a04 	addi	r3,r2,40
 10548d4:	e0bfff17 	ldw	r2,-4(fp)
 10548d8:	10800217 	ldw	r2,8(r2)
 10548dc:	100b883a 	mov	r5,r2
 10548e0:	1809883a 	mov	r4,r3
 10548e4:	1054cbc0 	call	1054cbc <altera_avalon_jtag_uart_close>
}
 10548e8:	e037883a 	mov	sp,fp
 10548ec:	dfc00117 	ldw	ra,4(sp)
 10548f0:	df000017 	ldw	fp,0(sp)
 10548f4:	dec00204 	addi	sp,sp,8
 10548f8:	f800283a 	ret

010548fc <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 10548fc:	defffa04 	addi	sp,sp,-24
 1054900:	dfc00515 	stw	ra,20(sp)
 1054904:	df000415 	stw	fp,16(sp)
 1054908:	df000404 	addi	fp,sp,16
 105490c:	e13ffd15 	stw	r4,-12(fp)
 1054910:	e17ffe15 	stw	r5,-8(fp)
 1054914:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 1054918:	e0bffd17 	ldw	r2,-12(fp)
 105491c:	10800017 	ldw	r2,0(r2)
 1054920:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 1054924:	e0bffc17 	ldw	r2,-16(fp)
 1054928:	10800a04 	addi	r2,r2,40
 105492c:	e1bfff17 	ldw	r6,-4(fp)
 1054930:	e17ffe17 	ldw	r5,-8(fp)
 1054934:	1009883a 	mov	r4,r2
 1054938:	1054d240 	call	1054d24 <altera_avalon_jtag_uart_ioctl>
}
 105493c:	e037883a 	mov	sp,fp
 1054940:	dfc00117 	ldw	ra,4(sp)
 1054944:	df000017 	ldw	fp,0(sp)
 1054948:	dec00204 	addi	sp,sp,8
 105494c:	f800283a 	ret

01054950 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 1054950:	defffa04 	addi	sp,sp,-24
 1054954:	dfc00515 	stw	ra,20(sp)
 1054958:	df000415 	stw	fp,16(sp)
 105495c:	df000404 	addi	fp,sp,16
 1054960:	e13ffd15 	stw	r4,-12(fp)
 1054964:	e17ffe15 	stw	r5,-8(fp)
 1054968:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 105496c:	e0bffd17 	ldw	r2,-12(fp)
 1054970:	00c00044 	movi	r3,1
 1054974:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 1054978:	e0bffd17 	ldw	r2,-12(fp)
 105497c:	10800017 	ldw	r2,0(r2)
 1054980:	10800104 	addi	r2,r2,4
 1054984:	1007883a 	mov	r3,r2
 1054988:	e0bffd17 	ldw	r2,-12(fp)
 105498c:	10800817 	ldw	r2,32(r2)
 1054990:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 1054994:	e0bffe17 	ldw	r2,-8(fp)
 1054998:	e0ffff17 	ldw	r3,-4(fp)
 105499c:	d8000015 	stw	zero,0(sp)
 10549a0:	e1fffd17 	ldw	r7,-12(fp)
 10549a4:	01804174 	movhi	r6,261
 10549a8:	31928404 	addi	r6,r6,18960
 10549ac:	180b883a 	mov	r5,r3
 10549b0:	1009883a 	mov	r4,r2
 10549b4:	10557b80 	call	10557b8 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 10549b8:	e0bffd17 	ldw	r2,-12(fp)
 10549bc:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 10549c0:	e0bffd17 	ldw	r2,-12(fp)
 10549c4:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 10549c8:	d0e6d617 	ldw	r3,-25768(gp)
 10549cc:	e1fffd17 	ldw	r7,-12(fp)
 10549d0:	01804174 	movhi	r6,261
 10549d4:	31930704 	addi	r6,r6,19484
 10549d8:	180b883a 	mov	r5,r3
 10549dc:	1009883a 	mov	r4,r2
 10549e0:	10553480 	call	1055348 <alt_alarm_start>
 10549e4:	1000040e 	bge	r2,zero,10549f8 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 10549e8:	e0fffd17 	ldw	r3,-12(fp)
 10549ec:	00a00034 	movhi	r2,32768
 10549f0:	10bfffc4 	addi	r2,r2,-1
 10549f4:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 10549f8:	0001883a 	nop
 10549fc:	e037883a 	mov	sp,fp
 1054a00:	dfc00117 	ldw	ra,4(sp)
 1054a04:	df000017 	ldw	fp,0(sp)
 1054a08:	dec00204 	addi	sp,sp,8
 1054a0c:	f800283a 	ret

01054a10 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 1054a10:	defff804 	addi	sp,sp,-32
 1054a14:	df000715 	stw	fp,28(sp)
 1054a18:	df000704 	addi	fp,sp,28
 1054a1c:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 1054a20:	e0bfff17 	ldw	r2,-4(fp)
 1054a24:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 1054a28:	e0bffb17 	ldw	r2,-20(fp)
 1054a2c:	10800017 	ldw	r2,0(r2)
 1054a30:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 1054a34:	e0bffc17 	ldw	r2,-16(fp)
 1054a38:	10800104 	addi	r2,r2,4
 1054a3c:	10800037 	ldwio	r2,0(r2)
 1054a40:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 1054a44:	e0bffd17 	ldw	r2,-12(fp)
 1054a48:	1080c00c 	andi	r2,r2,768
 1054a4c:	10006d26 	beq	r2,zero,1054c04 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 1054a50:	e0bffd17 	ldw	r2,-12(fp)
 1054a54:	1080400c 	andi	r2,r2,256
 1054a58:	10003526 	beq	r2,zero,1054b30 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 1054a5c:	00800074 	movhi	r2,1
 1054a60:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 1054a64:	e0bffb17 	ldw	r2,-20(fp)
 1054a68:	10800a17 	ldw	r2,40(r2)
 1054a6c:	10800044 	addi	r2,r2,1
 1054a70:	1081ffcc 	andi	r2,r2,2047
 1054a74:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 1054a78:	e0bffb17 	ldw	r2,-20(fp)
 1054a7c:	10c00b17 	ldw	r3,44(r2)
 1054a80:	e0bffe17 	ldw	r2,-8(fp)
 1054a84:	18801526 	beq	r3,r2,1054adc <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 1054a88:	e0bffc17 	ldw	r2,-16(fp)
 1054a8c:	10800037 	ldwio	r2,0(r2)
 1054a90:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 1054a94:	e0bff917 	ldw	r2,-28(fp)
 1054a98:	10a0000c 	andi	r2,r2,32768
 1054a9c:	10001126 	beq	r2,zero,1054ae4 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 1054aa0:	e0bffb17 	ldw	r2,-20(fp)
 1054aa4:	10800a17 	ldw	r2,40(r2)
 1054aa8:	e0fff917 	ldw	r3,-28(fp)
 1054aac:	1809883a 	mov	r4,r3
 1054ab0:	e0fffb17 	ldw	r3,-20(fp)
 1054ab4:	1885883a 	add	r2,r3,r2
 1054ab8:	10800e04 	addi	r2,r2,56
 1054abc:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 1054ac0:	e0bffb17 	ldw	r2,-20(fp)
 1054ac4:	10800a17 	ldw	r2,40(r2)
 1054ac8:	10800044 	addi	r2,r2,1
 1054acc:	10c1ffcc 	andi	r3,r2,2047
 1054ad0:	e0bffb17 	ldw	r2,-20(fp)
 1054ad4:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 1054ad8:	003fe206 	br	1054a64 <__alt_data_end+0xfffd4a64>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
 1054adc:	0001883a 	nop
 1054ae0:	00000106 	br	1054ae8 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
 1054ae4:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 1054ae8:	e0bff917 	ldw	r2,-28(fp)
 1054aec:	10bfffec 	andhi	r2,r2,65535
 1054af0:	10000f26 	beq	r2,zero,1054b30 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 1054af4:	e0bffb17 	ldw	r2,-20(fp)
 1054af8:	10c00817 	ldw	r3,32(r2)
 1054afc:	00bfff84 	movi	r2,-2
 1054b00:	1886703a 	and	r3,r3,r2
 1054b04:	e0bffb17 	ldw	r2,-20(fp)
 1054b08:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 1054b0c:	e0bffc17 	ldw	r2,-16(fp)
 1054b10:	10800104 	addi	r2,r2,4
 1054b14:	1007883a 	mov	r3,r2
 1054b18:	e0bffb17 	ldw	r2,-20(fp)
 1054b1c:	10800817 	ldw	r2,32(r2)
 1054b20:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 1054b24:	e0bffc17 	ldw	r2,-16(fp)
 1054b28:	10800104 	addi	r2,r2,4
 1054b2c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 1054b30:	e0bffd17 	ldw	r2,-12(fp)
 1054b34:	1080800c 	andi	r2,r2,512
 1054b38:	103fbe26 	beq	r2,zero,1054a34 <__alt_data_end+0xfffd4a34>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 1054b3c:	e0bffd17 	ldw	r2,-12(fp)
 1054b40:	1004d43a 	srli	r2,r2,16
 1054b44:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 1054b48:	00001406 	br	1054b9c <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 1054b4c:	e0bffc17 	ldw	r2,-16(fp)
 1054b50:	e0fffb17 	ldw	r3,-20(fp)
 1054b54:	18c00d17 	ldw	r3,52(r3)
 1054b58:	e13ffb17 	ldw	r4,-20(fp)
 1054b5c:	20c7883a 	add	r3,r4,r3
 1054b60:	18c20e04 	addi	r3,r3,2104
 1054b64:	18c00003 	ldbu	r3,0(r3)
 1054b68:	18c03fcc 	andi	r3,r3,255
 1054b6c:	18c0201c 	xori	r3,r3,128
 1054b70:	18ffe004 	addi	r3,r3,-128
 1054b74:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 1054b78:	e0bffb17 	ldw	r2,-20(fp)
 1054b7c:	10800d17 	ldw	r2,52(r2)
 1054b80:	10800044 	addi	r2,r2,1
 1054b84:	10c1ffcc 	andi	r3,r2,2047
 1054b88:	e0bffb17 	ldw	r2,-20(fp)
 1054b8c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 1054b90:	e0bffa17 	ldw	r2,-24(fp)
 1054b94:	10bfffc4 	addi	r2,r2,-1
 1054b98:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 1054b9c:	e0bffa17 	ldw	r2,-24(fp)
 1054ba0:	10000526 	beq	r2,zero,1054bb8 <altera_avalon_jtag_uart_irq+0x1a8>
 1054ba4:	e0bffb17 	ldw	r2,-20(fp)
 1054ba8:	10c00d17 	ldw	r3,52(r2)
 1054bac:	e0bffb17 	ldw	r2,-20(fp)
 1054bb0:	10800c17 	ldw	r2,48(r2)
 1054bb4:	18bfe51e 	bne	r3,r2,1054b4c <__alt_data_end+0xfffd4b4c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 1054bb8:	e0bffa17 	ldw	r2,-24(fp)
 1054bbc:	103f9d26 	beq	r2,zero,1054a34 <__alt_data_end+0xfffd4a34>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 1054bc0:	e0bffb17 	ldw	r2,-20(fp)
 1054bc4:	10c00817 	ldw	r3,32(r2)
 1054bc8:	00bfff44 	movi	r2,-3
 1054bcc:	1886703a 	and	r3,r3,r2
 1054bd0:	e0bffb17 	ldw	r2,-20(fp)
 1054bd4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 1054bd8:	e0bffb17 	ldw	r2,-20(fp)
 1054bdc:	10800017 	ldw	r2,0(r2)
 1054be0:	10800104 	addi	r2,r2,4
 1054be4:	1007883a 	mov	r3,r2
 1054be8:	e0bffb17 	ldw	r2,-20(fp)
 1054bec:	10800817 	ldw	r2,32(r2)
 1054bf0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 1054bf4:	e0bffc17 	ldw	r2,-16(fp)
 1054bf8:	10800104 	addi	r2,r2,4
 1054bfc:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 1054c00:	003f8c06 	br	1054a34 <__alt_data_end+0xfffd4a34>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
 1054c04:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
 1054c08:	0001883a 	nop
 1054c0c:	e037883a 	mov	sp,fp
 1054c10:	df000017 	ldw	fp,0(sp)
 1054c14:	dec00104 	addi	sp,sp,4
 1054c18:	f800283a 	ret

01054c1c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 1054c1c:	defff804 	addi	sp,sp,-32
 1054c20:	df000715 	stw	fp,28(sp)
 1054c24:	df000704 	addi	fp,sp,28
 1054c28:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 1054c2c:	e0bffb17 	ldw	r2,-20(fp)
 1054c30:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 1054c34:	e0bff917 	ldw	r2,-28(fp)
 1054c38:	10800017 	ldw	r2,0(r2)
 1054c3c:	10800104 	addi	r2,r2,4
 1054c40:	10800037 	ldwio	r2,0(r2)
 1054c44:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 1054c48:	e0bffa17 	ldw	r2,-24(fp)
 1054c4c:	1081000c 	andi	r2,r2,1024
 1054c50:	10000b26 	beq	r2,zero,1054c80 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 1054c54:	e0bff917 	ldw	r2,-28(fp)
 1054c58:	10800017 	ldw	r2,0(r2)
 1054c5c:	10800104 	addi	r2,r2,4
 1054c60:	1007883a 	mov	r3,r2
 1054c64:	e0bff917 	ldw	r2,-28(fp)
 1054c68:	10800817 	ldw	r2,32(r2)
 1054c6c:	10810014 	ori	r2,r2,1024
 1054c70:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 1054c74:	e0bff917 	ldw	r2,-28(fp)
 1054c78:	10000915 	stw	zero,36(r2)
 1054c7c:	00000a06 	br	1054ca8 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 1054c80:	e0bff917 	ldw	r2,-28(fp)
 1054c84:	10c00917 	ldw	r3,36(r2)
 1054c88:	00a00034 	movhi	r2,32768
 1054c8c:	10bfff04 	addi	r2,r2,-4
 1054c90:	10c00536 	bltu	r2,r3,1054ca8 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 1054c94:	e0bff917 	ldw	r2,-28(fp)
 1054c98:	10800917 	ldw	r2,36(r2)
 1054c9c:	10c00044 	addi	r3,r2,1
 1054ca0:	e0bff917 	ldw	r2,-28(fp)
 1054ca4:	10c00915 	stw	r3,36(r2)
 1054ca8:	d0a6d617 	ldw	r2,-25768(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 1054cac:	e037883a 	mov	sp,fp
 1054cb0:	df000017 	ldw	fp,0(sp)
 1054cb4:	dec00104 	addi	sp,sp,4
 1054cb8:	f800283a 	ret

01054cbc <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 1054cbc:	defffd04 	addi	sp,sp,-12
 1054cc0:	df000215 	stw	fp,8(sp)
 1054cc4:	df000204 	addi	fp,sp,8
 1054cc8:	e13ffe15 	stw	r4,-8(fp)
 1054ccc:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 1054cd0:	00000506 	br	1054ce8 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 1054cd4:	e0bfff17 	ldw	r2,-4(fp)
 1054cd8:	1090000c 	andi	r2,r2,16384
 1054cdc:	10000226 	beq	r2,zero,1054ce8 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 1054ce0:	00bffd44 	movi	r2,-11
 1054ce4:	00000b06 	br	1054d14 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 1054ce8:	e0bffe17 	ldw	r2,-8(fp)
 1054cec:	10c00d17 	ldw	r3,52(r2)
 1054cf0:	e0bffe17 	ldw	r2,-8(fp)
 1054cf4:	10800c17 	ldw	r2,48(r2)
 1054cf8:	18800526 	beq	r3,r2,1054d10 <altera_avalon_jtag_uart_close+0x54>
 1054cfc:	e0bffe17 	ldw	r2,-8(fp)
 1054d00:	10c00917 	ldw	r3,36(r2)
 1054d04:	e0bffe17 	ldw	r2,-8(fp)
 1054d08:	10800117 	ldw	r2,4(r2)
 1054d0c:	18bff136 	bltu	r3,r2,1054cd4 <__alt_data_end+0xfffd4cd4>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 1054d10:	0005883a 	mov	r2,zero
}
 1054d14:	e037883a 	mov	sp,fp
 1054d18:	df000017 	ldw	fp,0(sp)
 1054d1c:	dec00104 	addi	sp,sp,4
 1054d20:	f800283a 	ret

01054d24 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 1054d24:	defffa04 	addi	sp,sp,-24
 1054d28:	df000515 	stw	fp,20(sp)
 1054d2c:	df000504 	addi	fp,sp,20
 1054d30:	e13ffd15 	stw	r4,-12(fp)
 1054d34:	e17ffe15 	stw	r5,-8(fp)
 1054d38:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 1054d3c:	00bff9c4 	movi	r2,-25
 1054d40:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 1054d44:	e0bffe17 	ldw	r2,-8(fp)
 1054d48:	10da8060 	cmpeqi	r3,r2,27137
 1054d4c:	1800031e 	bne	r3,zero,1054d5c <altera_avalon_jtag_uart_ioctl+0x38>
 1054d50:	109a80a0 	cmpeqi	r2,r2,27138
 1054d54:	1000181e 	bne	r2,zero,1054db8 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
 1054d58:	00002906 	br	1054e00 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 1054d5c:	e0bffd17 	ldw	r2,-12(fp)
 1054d60:	10c00117 	ldw	r3,4(r2)
 1054d64:	00a00034 	movhi	r2,32768
 1054d68:	10bfffc4 	addi	r2,r2,-1
 1054d6c:	18802126 	beq	r3,r2,1054df4 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
 1054d70:	e0bfff17 	ldw	r2,-4(fp)
 1054d74:	10800017 	ldw	r2,0(r2)
 1054d78:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 1054d7c:	e0bffc17 	ldw	r2,-16(fp)
 1054d80:	10800090 	cmplti	r2,r2,2
 1054d84:	1000061e 	bne	r2,zero,1054da0 <altera_avalon_jtag_uart_ioctl+0x7c>
 1054d88:	e0fffc17 	ldw	r3,-16(fp)
 1054d8c:	00a00034 	movhi	r2,32768
 1054d90:	10bfffc4 	addi	r2,r2,-1
 1054d94:	18800226 	beq	r3,r2,1054da0 <altera_avalon_jtag_uart_ioctl+0x7c>
 1054d98:	e0bffc17 	ldw	r2,-16(fp)
 1054d9c:	00000206 	br	1054da8 <altera_avalon_jtag_uart_ioctl+0x84>
 1054da0:	00a00034 	movhi	r2,32768
 1054da4:	10bfff84 	addi	r2,r2,-2
 1054da8:	e0fffd17 	ldw	r3,-12(fp)
 1054dac:	18800115 	stw	r2,4(r3)
      rc = 0;
 1054db0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 1054db4:	00000f06 	br	1054df4 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 1054db8:	e0bffd17 	ldw	r2,-12(fp)
 1054dbc:	10c00117 	ldw	r3,4(r2)
 1054dc0:	00a00034 	movhi	r2,32768
 1054dc4:	10bfffc4 	addi	r2,r2,-1
 1054dc8:	18800c26 	beq	r3,r2,1054dfc <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 1054dcc:	e0bffd17 	ldw	r2,-12(fp)
 1054dd0:	10c00917 	ldw	r3,36(r2)
 1054dd4:	e0bffd17 	ldw	r2,-12(fp)
 1054dd8:	10800117 	ldw	r2,4(r2)
 1054ddc:	1885803a 	cmpltu	r2,r3,r2
 1054de0:	10c03fcc 	andi	r3,r2,255
 1054de4:	e0bfff17 	ldw	r2,-4(fp)
 1054de8:	10c00015 	stw	r3,0(r2)
      rc = 0;
 1054dec:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 1054df0:	00000206 	br	1054dfc <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
 1054df4:	0001883a 	nop
 1054df8:	00000106 	br	1054e00 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
 1054dfc:	0001883a 	nop

  default:
    break;
  }

  return rc;
 1054e00:	e0bffb17 	ldw	r2,-20(fp)
}
 1054e04:	e037883a 	mov	sp,fp
 1054e08:	df000017 	ldw	fp,0(sp)
 1054e0c:	dec00104 	addi	sp,sp,4
 1054e10:	f800283a 	ret

01054e14 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 1054e14:	defff304 	addi	sp,sp,-52
 1054e18:	dfc00c15 	stw	ra,48(sp)
 1054e1c:	df000b15 	stw	fp,44(sp)
 1054e20:	df000b04 	addi	fp,sp,44
 1054e24:	e13ffc15 	stw	r4,-16(fp)
 1054e28:	e17ffd15 	stw	r5,-12(fp)
 1054e2c:	e1bffe15 	stw	r6,-8(fp)
 1054e30:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 1054e34:	e0bffd17 	ldw	r2,-12(fp)
 1054e38:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 1054e3c:	00004706 	br	1054f5c <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 1054e40:	e0bffc17 	ldw	r2,-16(fp)
 1054e44:	10800a17 	ldw	r2,40(r2)
 1054e48:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 1054e4c:	e0bffc17 	ldw	r2,-16(fp)
 1054e50:	10800b17 	ldw	r2,44(r2)
 1054e54:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 1054e58:	e0fff717 	ldw	r3,-36(fp)
 1054e5c:	e0bff817 	ldw	r2,-32(fp)
 1054e60:	18800536 	bltu	r3,r2,1054e78 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 1054e64:	e0fff717 	ldw	r3,-36(fp)
 1054e68:	e0bff817 	ldw	r2,-32(fp)
 1054e6c:	1885c83a 	sub	r2,r3,r2
 1054e70:	e0bff615 	stw	r2,-40(fp)
 1054e74:	00000406 	br	1054e88 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 1054e78:	00c20004 	movi	r3,2048
 1054e7c:	e0bff817 	ldw	r2,-32(fp)
 1054e80:	1885c83a 	sub	r2,r3,r2
 1054e84:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 1054e88:	e0bff617 	ldw	r2,-40(fp)
 1054e8c:	10001e26 	beq	r2,zero,1054f08 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 1054e90:	e0fffe17 	ldw	r3,-8(fp)
 1054e94:	e0bff617 	ldw	r2,-40(fp)
 1054e98:	1880022e 	bgeu	r3,r2,1054ea4 <altera_avalon_jtag_uart_read+0x90>
        n = space;
 1054e9c:	e0bffe17 	ldw	r2,-8(fp)
 1054ea0:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 1054ea4:	e0bffc17 	ldw	r2,-16(fp)
 1054ea8:	10c00e04 	addi	r3,r2,56
 1054eac:	e0bff817 	ldw	r2,-32(fp)
 1054eb0:	1885883a 	add	r2,r3,r2
 1054eb4:	e1bff617 	ldw	r6,-40(fp)
 1054eb8:	100b883a 	mov	r5,r2
 1054ebc:	e13ff517 	ldw	r4,-44(fp)
 1054ec0:	104d8e00 	call	104d8e0 <memcpy>
      ptr   += n;
 1054ec4:	e0fff517 	ldw	r3,-44(fp)
 1054ec8:	e0bff617 	ldw	r2,-40(fp)
 1054ecc:	1885883a 	add	r2,r3,r2
 1054ed0:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 1054ed4:	e0fffe17 	ldw	r3,-8(fp)
 1054ed8:	e0bff617 	ldw	r2,-40(fp)
 1054edc:	1885c83a 	sub	r2,r3,r2
 1054ee0:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 1054ee4:	e0fff817 	ldw	r3,-32(fp)
 1054ee8:	e0bff617 	ldw	r2,-40(fp)
 1054eec:	1885883a 	add	r2,r3,r2
 1054ef0:	10c1ffcc 	andi	r3,r2,2047
 1054ef4:	e0bffc17 	ldw	r2,-16(fp)
 1054ef8:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 1054efc:	e0bffe17 	ldw	r2,-8(fp)
 1054f00:	00bfcf16 	blt	zero,r2,1054e40 <__alt_data_end+0xfffd4e40>
 1054f04:	00000106 	br	1054f0c <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
 1054f08:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
 1054f0c:	e0fff517 	ldw	r3,-44(fp)
 1054f10:	e0bffd17 	ldw	r2,-12(fp)
 1054f14:	1880141e 	bne	r3,r2,1054f68 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 1054f18:	e0bfff17 	ldw	r2,-4(fp)
 1054f1c:	1090000c 	andi	r2,r2,16384
 1054f20:	1000131e 	bne	r2,zero,1054f70 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 1054f24:	0001883a 	nop
 1054f28:	e0bffc17 	ldw	r2,-16(fp)
 1054f2c:	10c00a17 	ldw	r3,40(r2)
 1054f30:	e0bff717 	ldw	r2,-36(fp)
 1054f34:	1880051e 	bne	r3,r2,1054f4c <altera_avalon_jtag_uart_read+0x138>
 1054f38:	e0bffc17 	ldw	r2,-16(fp)
 1054f3c:	10c00917 	ldw	r3,36(r2)
 1054f40:	e0bffc17 	ldw	r2,-16(fp)
 1054f44:	10800117 	ldw	r2,4(r2)
 1054f48:	18bff736 	bltu	r3,r2,1054f28 <__alt_data_end+0xfffd4f28>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 1054f4c:	e0bffc17 	ldw	r2,-16(fp)
 1054f50:	10c00a17 	ldw	r3,40(r2)
 1054f54:	e0bff717 	ldw	r2,-36(fp)
 1054f58:	18800726 	beq	r3,r2,1054f78 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 1054f5c:	e0bffe17 	ldw	r2,-8(fp)
 1054f60:	00bfb716 	blt	zero,r2,1054e40 <__alt_data_end+0xfffd4e40>
 1054f64:	00000506 	br	1054f7c <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
 1054f68:	0001883a 	nop
 1054f6c:	00000306 	br	1054f7c <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
 1054f70:	0001883a 	nop
 1054f74:	00000106 	br	1054f7c <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
 1054f78:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 1054f7c:	e0fff517 	ldw	r3,-44(fp)
 1054f80:	e0bffd17 	ldw	r2,-12(fp)
 1054f84:	18801826 	beq	r3,r2,1054fe8 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 1054f88:	0005303a 	rdctl	r2,status
 1054f8c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 1054f90:	e0fffb17 	ldw	r3,-20(fp)
 1054f94:	00bfff84 	movi	r2,-2
 1054f98:	1884703a 	and	r2,r3,r2
 1054f9c:	1001703a 	wrctl	status,r2
  
  return context;
 1054fa0:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 1054fa4:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 1054fa8:	e0bffc17 	ldw	r2,-16(fp)
 1054fac:	10800817 	ldw	r2,32(r2)
 1054fb0:	10c00054 	ori	r3,r2,1
 1054fb4:	e0bffc17 	ldw	r2,-16(fp)
 1054fb8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 1054fbc:	e0bffc17 	ldw	r2,-16(fp)
 1054fc0:	10800017 	ldw	r2,0(r2)
 1054fc4:	10800104 	addi	r2,r2,4
 1054fc8:	1007883a 	mov	r3,r2
 1054fcc:	e0bffc17 	ldw	r2,-16(fp)
 1054fd0:	10800817 	ldw	r2,32(r2)
 1054fd4:	18800035 	stwio	r2,0(r3)
 1054fd8:	e0bffa17 	ldw	r2,-24(fp)
 1054fdc:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 1054fe0:	e0bff917 	ldw	r2,-28(fp)
 1054fe4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 1054fe8:	e0fff517 	ldw	r3,-44(fp)
 1054fec:	e0bffd17 	ldw	r2,-12(fp)
 1054ff0:	18800426 	beq	r3,r2,1055004 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
 1054ff4:	e0fff517 	ldw	r3,-44(fp)
 1054ff8:	e0bffd17 	ldw	r2,-12(fp)
 1054ffc:	1885c83a 	sub	r2,r3,r2
 1055000:	00000606 	br	105501c <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
 1055004:	e0bfff17 	ldw	r2,-4(fp)
 1055008:	1090000c 	andi	r2,r2,16384
 105500c:	10000226 	beq	r2,zero,1055018 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 1055010:	00bffd44 	movi	r2,-11
 1055014:	00000106 	br	105501c <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
 1055018:	00bffec4 	movi	r2,-5
}
 105501c:	e037883a 	mov	sp,fp
 1055020:	dfc00117 	ldw	ra,4(sp)
 1055024:	df000017 	ldw	fp,0(sp)
 1055028:	dec00204 	addi	sp,sp,8
 105502c:	f800283a 	ret

01055030 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 1055030:	defff304 	addi	sp,sp,-52
 1055034:	dfc00c15 	stw	ra,48(sp)
 1055038:	df000b15 	stw	fp,44(sp)
 105503c:	df000b04 	addi	fp,sp,44
 1055040:	e13ffc15 	stw	r4,-16(fp)
 1055044:	e17ffd15 	stw	r5,-12(fp)
 1055048:	e1bffe15 	stw	r6,-8(fp)
 105504c:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 1055050:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 1055054:	e0bffd17 	ldw	r2,-12(fp)
 1055058:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 105505c:	00003706 	br	105513c <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 1055060:	e0bffc17 	ldw	r2,-16(fp)
 1055064:	10800c17 	ldw	r2,48(r2)
 1055068:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
 105506c:	e0bffc17 	ldw	r2,-16(fp)
 1055070:	10800d17 	ldw	r2,52(r2)
 1055074:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 1055078:	e0fff917 	ldw	r3,-28(fp)
 105507c:	e0bff517 	ldw	r2,-44(fp)
 1055080:	1880062e 	bgeu	r3,r2,105509c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 1055084:	e0fff517 	ldw	r3,-44(fp)
 1055088:	e0bff917 	ldw	r2,-28(fp)
 105508c:	1885c83a 	sub	r2,r3,r2
 1055090:	10bfffc4 	addi	r2,r2,-1
 1055094:	e0bff615 	stw	r2,-40(fp)
 1055098:	00000b06 	br	10550c8 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 105509c:	e0bff517 	ldw	r2,-44(fp)
 10550a0:	10000526 	beq	r2,zero,10550b8 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 10550a4:	00c20004 	movi	r3,2048
 10550a8:	e0bff917 	ldw	r2,-28(fp)
 10550ac:	1885c83a 	sub	r2,r3,r2
 10550b0:	e0bff615 	stw	r2,-40(fp)
 10550b4:	00000406 	br	10550c8 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 10550b8:	00c1ffc4 	movi	r3,2047
 10550bc:	e0bff917 	ldw	r2,-28(fp)
 10550c0:	1885c83a 	sub	r2,r3,r2
 10550c4:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 10550c8:	e0bff617 	ldw	r2,-40(fp)
 10550cc:	10001e26 	beq	r2,zero,1055148 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 10550d0:	e0fffe17 	ldw	r3,-8(fp)
 10550d4:	e0bff617 	ldw	r2,-40(fp)
 10550d8:	1880022e 	bgeu	r3,r2,10550e4 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 10550dc:	e0bffe17 	ldw	r2,-8(fp)
 10550e0:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 10550e4:	e0bffc17 	ldw	r2,-16(fp)
 10550e8:	10c20e04 	addi	r3,r2,2104
 10550ec:	e0bff917 	ldw	r2,-28(fp)
 10550f0:	1885883a 	add	r2,r3,r2
 10550f4:	e1bff617 	ldw	r6,-40(fp)
 10550f8:	e17ffd17 	ldw	r5,-12(fp)
 10550fc:	1009883a 	mov	r4,r2
 1055100:	104d8e00 	call	104d8e0 <memcpy>
      ptr   += n;
 1055104:	e0fffd17 	ldw	r3,-12(fp)
 1055108:	e0bff617 	ldw	r2,-40(fp)
 105510c:	1885883a 	add	r2,r3,r2
 1055110:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 1055114:	e0fffe17 	ldw	r3,-8(fp)
 1055118:	e0bff617 	ldw	r2,-40(fp)
 105511c:	1885c83a 	sub	r2,r3,r2
 1055120:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 1055124:	e0fff917 	ldw	r3,-28(fp)
 1055128:	e0bff617 	ldw	r2,-40(fp)
 105512c:	1885883a 	add	r2,r3,r2
 1055130:	10c1ffcc 	andi	r3,r2,2047
 1055134:	e0bffc17 	ldw	r2,-16(fp)
 1055138:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 105513c:	e0bffe17 	ldw	r2,-8(fp)
 1055140:	00bfc716 	blt	zero,r2,1055060 <__alt_data_end+0xfffd5060>
 1055144:	00000106 	br	105514c <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
 1055148:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 105514c:	0005303a 	rdctl	r2,status
 1055150:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 1055154:	e0fffb17 	ldw	r3,-20(fp)
 1055158:	00bfff84 	movi	r2,-2
 105515c:	1884703a 	and	r2,r3,r2
 1055160:	1001703a 	wrctl	status,r2
  
  return context;
 1055164:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 1055168:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 105516c:	e0bffc17 	ldw	r2,-16(fp)
 1055170:	10800817 	ldw	r2,32(r2)
 1055174:	10c00094 	ori	r3,r2,2
 1055178:	e0bffc17 	ldw	r2,-16(fp)
 105517c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 1055180:	e0bffc17 	ldw	r2,-16(fp)
 1055184:	10800017 	ldw	r2,0(r2)
 1055188:	10800104 	addi	r2,r2,4
 105518c:	1007883a 	mov	r3,r2
 1055190:	e0bffc17 	ldw	r2,-16(fp)
 1055194:	10800817 	ldw	r2,32(r2)
 1055198:	18800035 	stwio	r2,0(r3)
 105519c:	e0bffa17 	ldw	r2,-24(fp)
 10551a0:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 10551a4:	e0bff817 	ldw	r2,-32(fp)
 10551a8:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 10551ac:	e0bffe17 	ldw	r2,-8(fp)
 10551b0:	0080100e 	bge	zero,r2,10551f4 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
 10551b4:	e0bfff17 	ldw	r2,-4(fp)
 10551b8:	1090000c 	andi	r2,r2,16384
 10551bc:	1000101e 	bne	r2,zero,1055200 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 10551c0:	0001883a 	nop
 10551c4:	e0bffc17 	ldw	r2,-16(fp)
 10551c8:	10c00d17 	ldw	r3,52(r2)
 10551cc:	e0bff517 	ldw	r2,-44(fp)
 10551d0:	1880051e 	bne	r3,r2,10551e8 <altera_avalon_jtag_uart_write+0x1b8>
 10551d4:	e0bffc17 	ldw	r2,-16(fp)
 10551d8:	10c00917 	ldw	r3,36(r2)
 10551dc:	e0bffc17 	ldw	r2,-16(fp)
 10551e0:	10800117 	ldw	r2,4(r2)
 10551e4:	18bff736 	bltu	r3,r2,10551c4 <__alt_data_end+0xfffd51c4>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 10551e8:	e0bffc17 	ldw	r2,-16(fp)
 10551ec:	10800917 	ldw	r2,36(r2)
 10551f0:	1000051e 	bne	r2,zero,1055208 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
 10551f4:	e0bffe17 	ldw	r2,-8(fp)
 10551f8:	00bfd016 	blt	zero,r2,105513c <__alt_data_end+0xfffd513c>
 10551fc:	00000306 	br	105520c <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
 1055200:	0001883a 	nop
 1055204:	00000106 	br	105520c <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
 1055208:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 105520c:	e0fffd17 	ldw	r3,-12(fp)
 1055210:	e0bff717 	ldw	r2,-36(fp)
 1055214:	18800426 	beq	r3,r2,1055228 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
 1055218:	e0fffd17 	ldw	r3,-12(fp)
 105521c:	e0bff717 	ldw	r2,-36(fp)
 1055220:	1885c83a 	sub	r2,r3,r2
 1055224:	00000606 	br	1055240 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
 1055228:	e0bfff17 	ldw	r2,-4(fp)
 105522c:	1090000c 	andi	r2,r2,16384
 1055230:	10000226 	beq	r2,zero,105523c <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
 1055234:	00bffd44 	movi	r2,-11
 1055238:	00000106 	br	1055240 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 105523c:	00bffec4 	movi	r2,-5
}
 1055240:	e037883a 	mov	sp,fp
 1055244:	dfc00117 	ldw	ra,4(sp)
 1055248:	df000017 	ldw	fp,0(sp)
 105524c:	dec00204 	addi	sp,sp,8
 1055250:	f800283a 	ret

01055254 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
 1055254:	defffa04 	addi	sp,sp,-24
 1055258:	dfc00515 	stw	ra,20(sp)
 105525c:	df000415 	stw	fp,16(sp)
 1055260:	df000404 	addi	fp,sp,16
 1055264:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
 1055268:	0007883a 	mov	r3,zero
 105526c:	e0bfff17 	ldw	r2,-4(fp)
 1055270:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
 1055274:	e0bfff17 	ldw	r2,-4(fp)
 1055278:	10800104 	addi	r2,r2,4
 105527c:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 1055280:	0005303a 	rdctl	r2,status
 1055284:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 1055288:	e0fffd17 	ldw	r3,-12(fp)
 105528c:	00bfff84 	movi	r2,-2
 1055290:	1884703a 	and	r2,r3,r2
 1055294:	1001703a 	wrctl	status,r2
  
  return context;
 1055298:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
 105529c:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
 10552a0:	1055e880 	call	1055e88 <alt_tick>
 10552a4:	e0bffc17 	ldw	r2,-16(fp)
 10552a8:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 10552ac:	e0bffe17 	ldw	r2,-8(fp)
 10552b0:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
 10552b4:	0001883a 	nop
 10552b8:	e037883a 	mov	sp,fp
 10552bc:	dfc00117 	ldw	ra,4(sp)
 10552c0:	df000017 	ldw	fp,0(sp)
 10552c4:	dec00204 	addi	sp,sp,8
 10552c8:	f800283a 	ret

010552cc <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
 10552cc:	defff804 	addi	sp,sp,-32
 10552d0:	dfc00715 	stw	ra,28(sp)
 10552d4:	df000615 	stw	fp,24(sp)
 10552d8:	df000604 	addi	fp,sp,24
 10552dc:	e13ffc15 	stw	r4,-16(fp)
 10552e0:	e17ffd15 	stw	r5,-12(fp)
 10552e4:	e1bffe15 	stw	r6,-8(fp)
 10552e8:	e1ffff15 	stw	r7,-4(fp)
 10552ec:	e0bfff17 	ldw	r2,-4(fp)
 10552f0:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
 10552f4:	d0a6d617 	ldw	r2,-25768(gp)
 10552f8:	1000021e 	bne	r2,zero,1055304 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
 10552fc:	e0bffb17 	ldw	r2,-20(fp)
 1055300:	d0a6d615 	stw	r2,-25768(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
 1055304:	e0bffc17 	ldw	r2,-16(fp)
 1055308:	10800104 	addi	r2,r2,4
 105530c:	00c001c4 	movi	r3,7
 1055310:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
 1055314:	d8000015 	stw	zero,0(sp)
 1055318:	e1fffc17 	ldw	r7,-16(fp)
 105531c:	01804174 	movhi	r6,261
 1055320:	31949504 	addi	r6,r6,21076
 1055324:	e17ffe17 	ldw	r5,-8(fp)
 1055328:	e13ffd17 	ldw	r4,-12(fp)
 105532c:	10557b80 	call	10557b8 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
 1055330:	0001883a 	nop
 1055334:	e037883a 	mov	sp,fp
 1055338:	dfc00117 	ldw	ra,4(sp)
 105533c:	df000017 	ldw	fp,0(sp)
 1055340:	dec00204 	addi	sp,sp,8
 1055344:	f800283a 	ret

01055348 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 1055348:	defff504 	addi	sp,sp,-44
 105534c:	df000a15 	stw	fp,40(sp)
 1055350:	df000a04 	addi	fp,sp,40
 1055354:	e13ffc15 	stw	r4,-16(fp)
 1055358:	e17ffd15 	stw	r5,-12(fp)
 105535c:	e1bffe15 	stw	r6,-8(fp)
 1055360:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 1055364:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 1055368:	d0a6d617 	ldw	r2,-25768(gp)
  
  if (alt_ticks_per_second ())
 105536c:	10003c26 	beq	r2,zero,1055460 <alt_alarm_start+0x118>
  {
    if (alarm)
 1055370:	e0bffc17 	ldw	r2,-16(fp)
 1055374:	10003826 	beq	r2,zero,1055458 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
 1055378:	e0bffc17 	ldw	r2,-16(fp)
 105537c:	e0fffe17 	ldw	r3,-8(fp)
 1055380:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 1055384:	e0bffc17 	ldw	r2,-16(fp)
 1055388:	e0ffff17 	ldw	r3,-4(fp)
 105538c:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 1055390:	0005303a 	rdctl	r2,status
 1055394:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 1055398:	e0fff917 	ldw	r3,-28(fp)
 105539c:	00bfff84 	movi	r2,-2
 10553a0:	1884703a 	and	r2,r3,r2
 10553a4:	1001703a 	wrctl	status,r2
  
  return context;
 10553a8:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
 10553ac:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 10553b0:	d0a6d717 	ldw	r2,-25764(gp)
      
      current_nticks = alt_nticks();
 10553b4:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 10553b8:	e0fffd17 	ldw	r3,-12(fp)
 10553bc:	e0bff617 	ldw	r2,-40(fp)
 10553c0:	1885883a 	add	r2,r3,r2
 10553c4:	10c00044 	addi	r3,r2,1
 10553c8:	e0bffc17 	ldw	r2,-16(fp)
 10553cc:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 10553d0:	e0bffc17 	ldw	r2,-16(fp)
 10553d4:	10c00217 	ldw	r3,8(r2)
 10553d8:	e0bff617 	ldw	r2,-40(fp)
 10553dc:	1880042e 	bgeu	r3,r2,10553f0 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
 10553e0:	e0bffc17 	ldw	r2,-16(fp)
 10553e4:	00c00044 	movi	r3,1
 10553e8:	10c00405 	stb	r3,16(r2)
 10553ec:	00000206 	br	10553f8 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
 10553f0:	e0bffc17 	ldw	r2,-16(fp)
 10553f4:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 10553f8:	e0bffc17 	ldw	r2,-16(fp)
 10553fc:	d0e00e04 	addi	r3,gp,-32712
 1055400:	e0fffa15 	stw	r3,-24(fp)
 1055404:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 1055408:	e0bffb17 	ldw	r2,-20(fp)
 105540c:	e0fffa17 	ldw	r3,-24(fp)
 1055410:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 1055414:	e0bffa17 	ldw	r2,-24(fp)
 1055418:	10c00017 	ldw	r3,0(r2)
 105541c:	e0bffb17 	ldw	r2,-20(fp)
 1055420:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 1055424:	e0bffa17 	ldw	r2,-24(fp)
 1055428:	10800017 	ldw	r2,0(r2)
 105542c:	e0fffb17 	ldw	r3,-20(fp)
 1055430:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 1055434:	e0bffa17 	ldw	r2,-24(fp)
 1055438:	e0fffb17 	ldw	r3,-20(fp)
 105543c:	10c00015 	stw	r3,0(r2)
 1055440:	e0bff817 	ldw	r2,-32(fp)
 1055444:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 1055448:	e0bff717 	ldw	r2,-36(fp)
 105544c:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 1055450:	0005883a 	mov	r2,zero
 1055454:	00000306 	br	1055464 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
 1055458:	00bffa84 	movi	r2,-22
 105545c:	00000106 	br	1055464 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
 1055460:	00bfde84 	movi	r2,-134
  }
}
 1055464:	e037883a 	mov	sp,fp
 1055468:	df000017 	ldw	fp,0(sp)
 105546c:	dec00104 	addi	sp,sp,4
 1055470:	f800283a 	ret

01055474 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
 1055474:	defffb04 	addi	sp,sp,-20
 1055478:	df000415 	stw	fp,16(sp)
 105547c:	df000404 	addi	fp,sp,16
 1055480:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
 1055484:	008000c4 	movi	r2,3
 1055488:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
 105548c:	e0fffd17 	ldw	r3,-12(fp)
 1055490:	008003f4 	movhi	r2,15
 1055494:	10909004 	addi	r2,r2,16960
 1055498:	1887383a 	mul	r3,r3,r2
 105549c:	00817db4 	movhi	r2,1526
 10554a0:	10b84004 	addi	r2,r2,-7936
 10554a4:	10c7203a 	divu	r3,r2,r3
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
 10554a8:	00a00034 	movhi	r2,32768
 10554ac:	10bfffc4 	addi	r2,r2,-1
 10554b0:	10c5203a 	divu	r2,r2,r3
 10554b4:	e0ffff17 	ldw	r3,-4(fp)
 10554b8:	1885203a 	divu	r2,r3,r2
 10554bc:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
 10554c0:	e0bffe17 	ldw	r2,-8(fp)
 10554c4:	10002526 	beq	r2,zero,105555c <alt_busy_sleep+0xe8>
  {
    for(i=0;i<big_loops;i++)
 10554c8:	e03ffc15 	stw	zero,-16(fp)
 10554cc:	00001406 	br	1055520 <alt_busy_sleep+0xac>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
 10554d0:	00a00034 	movhi	r2,32768
 10554d4:	10bfffc4 	addi	r2,r2,-1
 10554d8:	10bfffc4 	addi	r2,r2,-1
 10554dc:	103ffe1e 	bne	r2,zero,10554d8 <__alt_data_end+0xfffd54d8>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
 10554e0:	e0fffd17 	ldw	r3,-12(fp)
 10554e4:	008003f4 	movhi	r2,15
 10554e8:	10909004 	addi	r2,r2,16960
 10554ec:	1887383a 	mul	r3,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
 10554f0:	00817db4 	movhi	r2,1526
 10554f4:	10b84004 	addi	r2,r2,-7936
 10554f8:	10c7203a 	divu	r3,r2,r3
 10554fc:	00a00034 	movhi	r2,32768
 1055500:	10bfffc4 	addi	r2,r2,-1
 1055504:	10c5203a 	divu	r2,r2,r3
 1055508:	e0ffff17 	ldw	r3,-4(fp)
 105550c:	1885c83a 	sub	r2,r3,r2
 1055510:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
 1055514:	e0bffc17 	ldw	r2,-16(fp)
 1055518:	10800044 	addi	r2,r2,1
 105551c:	e0bffc15 	stw	r2,-16(fp)
 1055520:	e0fffc17 	ldw	r3,-16(fp)
 1055524:	e0bffe17 	ldw	r2,-8(fp)
 1055528:	18bfe916 	blt	r3,r2,10554d0 <__alt_data_end+0xfffd54d0>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 105552c:	e0fffd17 	ldw	r3,-12(fp)
 1055530:	008003f4 	movhi	r2,15
 1055534:	10909004 	addi	r2,r2,16960
 1055538:	1887383a 	mul	r3,r3,r2
 105553c:	00817db4 	movhi	r2,1526
 1055540:	10b84004 	addi	r2,r2,-7936
 1055544:	10c7203a 	divu	r3,r2,r3
 1055548:	e0bfff17 	ldw	r2,-4(fp)
 105554c:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 1055550:	10bfffc4 	addi	r2,r2,-1
 1055554:	103ffe1e 	bne	r2,zero,1055550 <__alt_data_end+0xfffd5550>
 1055558:	00000b06 	br	1055588 <alt_busy_sleep+0x114>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
 105555c:	e0fffd17 	ldw	r3,-12(fp)
 1055560:	008003f4 	movhi	r2,15
 1055564:	10909004 	addi	r2,r2,16960
 1055568:	1887383a 	mul	r3,r3,r2
 105556c:	00817db4 	movhi	r2,1526
 1055570:	10b84004 	addi	r2,r2,-7936
 1055574:	10c7203a 	divu	r3,r2,r3
 1055578:	e0bfff17 	ldw	r2,-4(fp)
 105557c:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
 1055580:	10bfffc4 	addi	r2,r2,-1
 1055584:	00bffe16 	blt	zero,r2,1055580 <__alt_data_end+0xfffd5580>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
 1055588:	0005883a 	mov	r2,zero
}
 105558c:	e037883a 	mov	sp,fp
 1055590:	df000017 	ldw	fp,0(sp)
 1055594:	dec00104 	addi	sp,sp,4
 1055598:	f800283a 	ret

0105559c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 105559c:	defffe04 	addi	sp,sp,-8
 10555a0:	df000115 	stw	fp,4(sp)
 10555a4:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 10555a8:	e03fff15 	stw	zero,-4(fp)
 10555ac:	00000506 	br	10555c4 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
 10555b0:	e0bfff17 	ldw	r2,-4(fp)
 10555b4:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
 10555b8:	e0bfff17 	ldw	r2,-4(fp)
 10555bc:	10800804 	addi	r2,r2,32
 10555c0:	e0bfff15 	stw	r2,-4(fp)
 10555c4:	e0bfff17 	ldw	r2,-4(fp)
 10555c8:	10820030 	cmpltui	r2,r2,2048
 10555cc:	103ff81e 	bne	r2,zero,10555b0 <__alt_data_end+0xfffd55b0>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 10555d0:	0001883a 	nop
 10555d4:	e037883a 	mov	sp,fp
 10555d8:	df000017 	ldw	fp,0(sp)
 10555dc:	dec00104 	addi	sp,sp,4
 10555e0:	f800283a 	ret

010555e4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 10555e4:	defffe04 	addi	sp,sp,-8
 10555e8:	dfc00115 	stw	ra,4(sp)
 10555ec:	df000015 	stw	fp,0(sp)
 10555f0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 10555f4:	d0a00b17 	ldw	r2,-32724(gp)
 10555f8:	10000326 	beq	r2,zero,1055608 <alt_get_errno+0x24>
 10555fc:	d0a00b17 	ldw	r2,-32724(gp)
 1055600:	103ee83a 	callr	r2
 1055604:	00000106 	br	105560c <alt_get_errno+0x28>
 1055608:	d0a6d104 	addi	r2,gp,-25788
}
 105560c:	e037883a 	mov	sp,fp
 1055610:	dfc00117 	ldw	ra,4(sp)
 1055614:	df000017 	ldw	fp,0(sp)
 1055618:	dec00204 	addi	sp,sp,8
 105561c:	f800283a 	ret

01055620 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 1055620:	defffa04 	addi	sp,sp,-24
 1055624:	dfc00515 	stw	ra,20(sp)
 1055628:	df000415 	stw	fp,16(sp)
 105562c:	df000404 	addi	fp,sp,16
 1055630:	e13ffe15 	stw	r4,-8(fp)
 1055634:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 1055638:	e0bffe17 	ldw	r2,-8(fp)
 105563c:	10000326 	beq	r2,zero,105564c <alt_dev_llist_insert+0x2c>
 1055640:	e0bffe17 	ldw	r2,-8(fp)
 1055644:	10800217 	ldw	r2,8(r2)
 1055648:	1000061e 	bne	r2,zero,1055664 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 105564c:	10555e40 	call	10555e4 <alt_get_errno>
 1055650:	1007883a 	mov	r3,r2
 1055654:	00800584 	movi	r2,22
 1055658:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 105565c:	00bffa84 	movi	r2,-22
 1055660:	00001306 	br	10556b0 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 1055664:	e0bffe17 	ldw	r2,-8(fp)
 1055668:	e0ffff17 	ldw	r3,-4(fp)
 105566c:	e0fffc15 	stw	r3,-16(fp)
 1055670:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 1055674:	e0bffd17 	ldw	r2,-12(fp)
 1055678:	e0fffc17 	ldw	r3,-16(fp)
 105567c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 1055680:	e0bffc17 	ldw	r2,-16(fp)
 1055684:	10c00017 	ldw	r3,0(r2)
 1055688:	e0bffd17 	ldw	r2,-12(fp)
 105568c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 1055690:	e0bffc17 	ldw	r2,-16(fp)
 1055694:	10800017 	ldw	r2,0(r2)
 1055698:	e0fffd17 	ldw	r3,-12(fp)
 105569c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 10556a0:	e0bffc17 	ldw	r2,-16(fp)
 10556a4:	e0fffd17 	ldw	r3,-12(fp)
 10556a8:	10c00015 	stw	r3,0(r2)

  return 0;  
 10556ac:	0005883a 	mov	r2,zero
}
 10556b0:	e037883a 	mov	sp,fp
 10556b4:	dfc00117 	ldw	ra,4(sp)
 10556b8:	df000017 	ldw	fp,0(sp)
 10556bc:	dec00204 	addi	sp,sp,8
 10556c0:	f800283a 	ret

010556c4 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 10556c4:	defffd04 	addi	sp,sp,-12
 10556c8:	dfc00215 	stw	ra,8(sp)
 10556cc:	df000115 	stw	fp,4(sp)
 10556d0:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 10556d4:	00804174 	movhi	r2,261
 10556d8:	1099ab04 	addi	r2,r2,26284
 10556dc:	e0bfff15 	stw	r2,-4(fp)
 10556e0:	00000606 	br	10556fc <_do_ctors+0x38>
        (*ctor) (); 
 10556e4:	e0bfff17 	ldw	r2,-4(fp)
 10556e8:	10800017 	ldw	r2,0(r2)
 10556ec:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 10556f0:	e0bfff17 	ldw	r2,-4(fp)
 10556f4:	10bfff04 	addi	r2,r2,-4
 10556f8:	e0bfff15 	stw	r2,-4(fp)
 10556fc:	e0ffff17 	ldw	r3,-4(fp)
 1055700:	00804174 	movhi	r2,261
 1055704:	1099ac04 	addi	r2,r2,26288
 1055708:	18bff62e 	bgeu	r3,r2,10556e4 <__alt_data_end+0xfffd56e4>
        (*ctor) (); 
}
 105570c:	0001883a 	nop
 1055710:	e037883a 	mov	sp,fp
 1055714:	dfc00117 	ldw	ra,4(sp)
 1055718:	df000017 	ldw	fp,0(sp)
 105571c:	dec00204 	addi	sp,sp,8
 1055720:	f800283a 	ret

01055724 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 1055724:	defffd04 	addi	sp,sp,-12
 1055728:	dfc00215 	stw	ra,8(sp)
 105572c:	df000115 	stw	fp,4(sp)
 1055730:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 1055734:	00804174 	movhi	r2,261
 1055738:	1099ab04 	addi	r2,r2,26284
 105573c:	e0bfff15 	stw	r2,-4(fp)
 1055740:	00000606 	br	105575c <_do_dtors+0x38>
        (*dtor) (); 
 1055744:	e0bfff17 	ldw	r2,-4(fp)
 1055748:	10800017 	ldw	r2,0(r2)
 105574c:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 1055750:	e0bfff17 	ldw	r2,-4(fp)
 1055754:	10bfff04 	addi	r2,r2,-4
 1055758:	e0bfff15 	stw	r2,-4(fp)
 105575c:	e0ffff17 	ldw	r3,-4(fp)
 1055760:	00804174 	movhi	r2,261
 1055764:	1099ac04 	addi	r2,r2,26288
 1055768:	18bff62e 	bgeu	r3,r2,1055744 <__alt_data_end+0xfffd5744>
        (*dtor) (); 
}
 105576c:	0001883a 	nop
 1055770:	e037883a 	mov	sp,fp
 1055774:	dfc00117 	ldw	ra,4(sp)
 1055778:	df000017 	ldw	fp,0(sp)
 105577c:	dec00204 	addi	sp,sp,8
 1055780:	f800283a 	ret

01055784 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 1055784:	defffe04 	addi	sp,sp,-8
 1055788:	dfc00115 	stw	ra,4(sp)
 105578c:	df000015 	stw	fp,0(sp)
 1055790:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
 1055794:	01440004 	movi	r5,4096
 1055798:	0009883a 	mov	r4,zero
 105579c:	10561f00 	call	10561f0 <alt_icache_flush>
#endif
}
 10557a0:	0001883a 	nop
 10557a4:	e037883a 	mov	sp,fp
 10557a8:	dfc00117 	ldw	ra,4(sp)
 10557ac:	df000017 	ldw	fp,0(sp)
 10557b0:	dec00204 	addi	sp,sp,8
 10557b4:	f800283a 	ret

010557b8 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 10557b8:	defff904 	addi	sp,sp,-28
 10557bc:	dfc00615 	stw	ra,24(sp)
 10557c0:	df000515 	stw	fp,20(sp)
 10557c4:	df000504 	addi	fp,sp,20
 10557c8:	e13ffc15 	stw	r4,-16(fp)
 10557cc:	e17ffd15 	stw	r5,-12(fp)
 10557d0:	e1bffe15 	stw	r6,-8(fp)
 10557d4:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 10557d8:	e0800217 	ldw	r2,8(fp)
 10557dc:	d8800015 	stw	r2,0(sp)
 10557e0:	e1ffff17 	ldw	r7,-4(fp)
 10557e4:	e1bffe17 	ldw	r6,-8(fp)
 10557e8:	e17ffd17 	ldw	r5,-12(fp)
 10557ec:	e13ffc17 	ldw	r4,-16(fp)
 10557f0:	10559680 	call	1055968 <alt_iic_isr_register>
}  
 10557f4:	e037883a 	mov	sp,fp
 10557f8:	dfc00117 	ldw	ra,4(sp)
 10557fc:	df000017 	ldw	fp,0(sp)
 1055800:	dec00204 	addi	sp,sp,8
 1055804:	f800283a 	ret

01055808 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 1055808:	defff904 	addi	sp,sp,-28
 105580c:	df000615 	stw	fp,24(sp)
 1055810:	df000604 	addi	fp,sp,24
 1055814:	e13ffe15 	stw	r4,-8(fp)
 1055818:	e17fff15 	stw	r5,-4(fp)
 105581c:	e0bfff17 	ldw	r2,-4(fp)
 1055820:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 1055824:	0005303a 	rdctl	r2,status
 1055828:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 105582c:	e0fffb17 	ldw	r3,-20(fp)
 1055830:	00bfff84 	movi	r2,-2
 1055834:	1884703a 	and	r2,r3,r2
 1055838:	1001703a 	wrctl	status,r2
  
  return context;
 105583c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 1055840:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 1055844:	00c00044 	movi	r3,1
 1055848:	e0bffa17 	ldw	r2,-24(fp)
 105584c:	1884983a 	sll	r2,r3,r2
 1055850:	1007883a 	mov	r3,r2
 1055854:	d0a6d517 	ldw	r2,-25772(gp)
 1055858:	1884b03a 	or	r2,r3,r2
 105585c:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 1055860:	d0a6d517 	ldw	r2,-25772(gp)
 1055864:	100170fa 	wrctl	ienable,r2
 1055868:	e0bffc17 	ldw	r2,-16(fp)
 105586c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 1055870:	e0bffd17 	ldw	r2,-12(fp)
 1055874:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 1055878:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 105587c:	0001883a 	nop
}
 1055880:	e037883a 	mov	sp,fp
 1055884:	df000017 	ldw	fp,0(sp)
 1055888:	dec00104 	addi	sp,sp,4
 105588c:	f800283a 	ret

01055890 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 1055890:	defff904 	addi	sp,sp,-28
 1055894:	df000615 	stw	fp,24(sp)
 1055898:	df000604 	addi	fp,sp,24
 105589c:	e13ffe15 	stw	r4,-8(fp)
 10558a0:	e17fff15 	stw	r5,-4(fp)
 10558a4:	e0bfff17 	ldw	r2,-4(fp)
 10558a8:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 10558ac:	0005303a 	rdctl	r2,status
 10558b0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 10558b4:	e0fffb17 	ldw	r3,-20(fp)
 10558b8:	00bfff84 	movi	r2,-2
 10558bc:	1884703a 	and	r2,r3,r2
 10558c0:	1001703a 	wrctl	status,r2
  
  return context;
 10558c4:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 10558c8:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 10558cc:	00c00044 	movi	r3,1
 10558d0:	e0bffa17 	ldw	r2,-24(fp)
 10558d4:	1884983a 	sll	r2,r3,r2
 10558d8:	0084303a 	nor	r2,zero,r2
 10558dc:	1007883a 	mov	r3,r2
 10558e0:	d0a6d517 	ldw	r2,-25772(gp)
 10558e4:	1884703a 	and	r2,r3,r2
 10558e8:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 10558ec:	d0a6d517 	ldw	r2,-25772(gp)
 10558f0:	100170fa 	wrctl	ienable,r2
 10558f4:	e0bffc17 	ldw	r2,-16(fp)
 10558f8:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 10558fc:	e0bffd17 	ldw	r2,-12(fp)
 1055900:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 1055904:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 1055908:	0001883a 	nop
}
 105590c:	e037883a 	mov	sp,fp
 1055910:	df000017 	ldw	fp,0(sp)
 1055914:	dec00104 	addi	sp,sp,4
 1055918:	f800283a 	ret

0105591c <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 105591c:	defffc04 	addi	sp,sp,-16
 1055920:	df000315 	stw	fp,12(sp)
 1055924:	df000304 	addi	fp,sp,12
 1055928:	e13ffe15 	stw	r4,-8(fp)
 105592c:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 1055930:	000530fa 	rdctl	r2,ienable
 1055934:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 1055938:	00c00044 	movi	r3,1
 105593c:	e0bfff17 	ldw	r2,-4(fp)
 1055940:	1884983a 	sll	r2,r3,r2
 1055944:	1007883a 	mov	r3,r2
 1055948:	e0bffd17 	ldw	r2,-12(fp)
 105594c:	1884703a 	and	r2,r3,r2
 1055950:	1004c03a 	cmpne	r2,r2,zero
 1055954:	10803fcc 	andi	r2,r2,255
}
 1055958:	e037883a 	mov	sp,fp
 105595c:	df000017 	ldw	fp,0(sp)
 1055960:	dec00104 	addi	sp,sp,4
 1055964:	f800283a 	ret

01055968 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 1055968:	defff504 	addi	sp,sp,-44
 105596c:	dfc00a15 	stw	ra,40(sp)
 1055970:	df000915 	stw	fp,36(sp)
 1055974:	df000904 	addi	fp,sp,36
 1055978:	e13ffc15 	stw	r4,-16(fp)
 105597c:	e17ffd15 	stw	r5,-12(fp)
 1055980:	e1bffe15 	stw	r6,-8(fp)
 1055984:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 1055988:	00bffa84 	movi	r2,-22
 105598c:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 1055990:	e0bffd17 	ldw	r2,-12(fp)
 1055994:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 1055998:	e0bff817 	ldw	r2,-32(fp)
 105599c:	10800808 	cmpgei	r2,r2,32
 10559a0:	1000271e 	bne	r2,zero,1055a40 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 10559a4:	0005303a 	rdctl	r2,status
 10559a8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 10559ac:	e0fffb17 	ldw	r3,-20(fp)
 10559b0:	00bfff84 	movi	r2,-2
 10559b4:	1884703a 	and	r2,r3,r2
 10559b8:	1001703a 	wrctl	status,r2
  
  return context;
 10559bc:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 10559c0:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
 10559c4:	008041b4 	movhi	r2,262
 10559c8:	10a8e604 	addi	r2,r2,-23656
 10559cc:	e0fff817 	ldw	r3,-32(fp)
 10559d0:	180690fa 	slli	r3,r3,3
 10559d4:	10c5883a 	add	r2,r2,r3
 10559d8:	e0fffe17 	ldw	r3,-8(fp)
 10559dc:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 10559e0:	008041b4 	movhi	r2,262
 10559e4:	10a8e604 	addi	r2,r2,-23656
 10559e8:	e0fff817 	ldw	r3,-32(fp)
 10559ec:	180690fa 	slli	r3,r3,3
 10559f0:	10c5883a 	add	r2,r2,r3
 10559f4:	10800104 	addi	r2,r2,4
 10559f8:	e0ffff17 	ldw	r3,-4(fp)
 10559fc:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 1055a00:	e0bffe17 	ldw	r2,-8(fp)
 1055a04:	10000526 	beq	r2,zero,1055a1c <alt_iic_isr_register+0xb4>
 1055a08:	e0bff817 	ldw	r2,-32(fp)
 1055a0c:	100b883a 	mov	r5,r2
 1055a10:	e13ffc17 	ldw	r4,-16(fp)
 1055a14:	10558080 	call	1055808 <alt_ic_irq_enable>
 1055a18:	00000406 	br	1055a2c <alt_iic_isr_register+0xc4>
 1055a1c:	e0bff817 	ldw	r2,-32(fp)
 1055a20:	100b883a 	mov	r5,r2
 1055a24:	e13ffc17 	ldw	r4,-16(fp)
 1055a28:	10558900 	call	1055890 <alt_ic_irq_disable>
 1055a2c:	e0bff715 	stw	r2,-36(fp)
 1055a30:	e0bffa17 	ldw	r2,-24(fp)
 1055a34:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 1055a38:	e0bff917 	ldw	r2,-28(fp)
 1055a3c:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 1055a40:	e0bff717 	ldw	r2,-36(fp)
}
 1055a44:	e037883a 	mov	sp,fp
 1055a48:	dfc00117 	ldw	ra,4(sp)
 1055a4c:	df000017 	ldw	fp,0(sp)
 1055a50:	dec00204 	addi	sp,sp,8
 1055a54:	f800283a 	ret

01055a58 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 1055a58:	defff904 	addi	sp,sp,-28
 1055a5c:	dfc00615 	stw	ra,24(sp)
 1055a60:	df000515 	stw	fp,20(sp)
 1055a64:	df000504 	addi	fp,sp,20
 1055a68:	e13ffc15 	stw	r4,-16(fp)
 1055a6c:	e17ffd15 	stw	r5,-12(fp)
 1055a70:	e1bffe15 	stw	r6,-8(fp)
 1055a74:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
 1055a78:	e1bfff17 	ldw	r6,-4(fp)
 1055a7c:	e17ffe17 	ldw	r5,-8(fp)
 1055a80:	e13ffd17 	ldw	r4,-12(fp)
 1055a84:	1055c980 	call	1055c98 <open>
 1055a88:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
 1055a8c:	e0bffb17 	ldw	r2,-20(fp)
 1055a90:	10001c16 	blt	r2,zero,1055b04 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
 1055a94:	00804174 	movhi	r2,261
 1055a98:	109d8104 	addi	r2,r2,30212
 1055a9c:	e0fffb17 	ldw	r3,-20(fp)
 1055aa0:	18c00324 	muli	r3,r3,12
 1055aa4:	10c5883a 	add	r2,r2,r3
 1055aa8:	10c00017 	ldw	r3,0(r2)
 1055aac:	e0bffc17 	ldw	r2,-16(fp)
 1055ab0:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 1055ab4:	00804174 	movhi	r2,261
 1055ab8:	109d8104 	addi	r2,r2,30212
 1055abc:	e0fffb17 	ldw	r3,-20(fp)
 1055ac0:	18c00324 	muli	r3,r3,12
 1055ac4:	10c5883a 	add	r2,r2,r3
 1055ac8:	10800104 	addi	r2,r2,4
 1055acc:	10c00017 	ldw	r3,0(r2)
 1055ad0:	e0bffc17 	ldw	r2,-16(fp)
 1055ad4:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 1055ad8:	00804174 	movhi	r2,261
 1055adc:	109d8104 	addi	r2,r2,30212
 1055ae0:	e0fffb17 	ldw	r3,-20(fp)
 1055ae4:	18c00324 	muli	r3,r3,12
 1055ae8:	10c5883a 	add	r2,r2,r3
 1055aec:	10800204 	addi	r2,r2,8
 1055af0:	10c00017 	ldw	r3,0(r2)
 1055af4:	e0bffc17 	ldw	r2,-16(fp)
 1055af8:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 1055afc:	e13ffb17 	ldw	r4,-20(fp)
 1055b00:	10544a40 	call	10544a4 <alt_release_fd>
  }
} 
 1055b04:	0001883a 	nop
 1055b08:	e037883a 	mov	sp,fp
 1055b0c:	dfc00117 	ldw	ra,4(sp)
 1055b10:	df000017 	ldw	fp,0(sp)
 1055b14:	dec00204 	addi	sp,sp,8
 1055b18:	f800283a 	ret

01055b1c <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 1055b1c:	defffb04 	addi	sp,sp,-20
 1055b20:	dfc00415 	stw	ra,16(sp)
 1055b24:	df000315 	stw	fp,12(sp)
 1055b28:	df000304 	addi	fp,sp,12
 1055b2c:	e13ffd15 	stw	r4,-12(fp)
 1055b30:	e17ffe15 	stw	r5,-8(fp)
 1055b34:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 1055b38:	01c07fc4 	movi	r7,511
 1055b3c:	01800044 	movi	r6,1
 1055b40:	e17ffd17 	ldw	r5,-12(fp)
 1055b44:	01004174 	movhi	r4,261
 1055b48:	211d8404 	addi	r4,r4,30224
 1055b4c:	1055a580 	call	1055a58 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 1055b50:	01c07fc4 	movi	r7,511
 1055b54:	000d883a 	mov	r6,zero
 1055b58:	e17ffe17 	ldw	r5,-8(fp)
 1055b5c:	01004174 	movhi	r4,261
 1055b60:	211d8104 	addi	r4,r4,30212
 1055b64:	1055a580 	call	1055a58 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 1055b68:	01c07fc4 	movi	r7,511
 1055b6c:	01800044 	movi	r6,1
 1055b70:	e17fff17 	ldw	r5,-4(fp)
 1055b74:	01004174 	movhi	r4,261
 1055b78:	211d8704 	addi	r4,r4,30236
 1055b7c:	1055a580 	call	1055a58 <alt_open_fd>
}  
 1055b80:	0001883a 	nop
 1055b84:	e037883a 	mov	sp,fp
 1055b88:	dfc00117 	ldw	ra,4(sp)
 1055b8c:	df000017 	ldw	fp,0(sp)
 1055b90:	dec00204 	addi	sp,sp,8
 1055b94:	f800283a 	ret

01055b98 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 1055b98:	defffe04 	addi	sp,sp,-8
 1055b9c:	dfc00115 	stw	ra,4(sp)
 1055ba0:	df000015 	stw	fp,0(sp)
 1055ba4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 1055ba8:	d0a00b17 	ldw	r2,-32724(gp)
 1055bac:	10000326 	beq	r2,zero,1055bbc <alt_get_errno+0x24>
 1055bb0:	d0a00b17 	ldw	r2,-32724(gp)
 1055bb4:	103ee83a 	callr	r2
 1055bb8:	00000106 	br	1055bc0 <alt_get_errno+0x28>
 1055bbc:	d0a6d104 	addi	r2,gp,-25788
}
 1055bc0:	e037883a 	mov	sp,fp
 1055bc4:	dfc00117 	ldw	ra,4(sp)
 1055bc8:	df000017 	ldw	fp,0(sp)
 1055bcc:	dec00204 	addi	sp,sp,8
 1055bd0:	f800283a 	ret

01055bd4 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 1055bd4:	defffd04 	addi	sp,sp,-12
 1055bd8:	df000215 	stw	fp,8(sp)
 1055bdc:	df000204 	addi	fp,sp,8
 1055be0:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 1055be4:	e0bfff17 	ldw	r2,-4(fp)
 1055be8:	10800217 	ldw	r2,8(r2)
 1055bec:	10d00034 	orhi	r3,r2,16384
 1055bf0:	e0bfff17 	ldw	r2,-4(fp)
 1055bf4:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 1055bf8:	e03ffe15 	stw	zero,-8(fp)
 1055bfc:	00001d06 	br	1055c74 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 1055c00:	00804174 	movhi	r2,261
 1055c04:	109d8104 	addi	r2,r2,30212
 1055c08:	e0fffe17 	ldw	r3,-8(fp)
 1055c0c:	18c00324 	muli	r3,r3,12
 1055c10:	10c5883a 	add	r2,r2,r3
 1055c14:	10c00017 	ldw	r3,0(r2)
 1055c18:	e0bfff17 	ldw	r2,-4(fp)
 1055c1c:	10800017 	ldw	r2,0(r2)
 1055c20:	1880111e 	bne	r3,r2,1055c68 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 1055c24:	00804174 	movhi	r2,261
 1055c28:	109d8104 	addi	r2,r2,30212
 1055c2c:	e0fffe17 	ldw	r3,-8(fp)
 1055c30:	18c00324 	muli	r3,r3,12
 1055c34:	10c5883a 	add	r2,r2,r3
 1055c38:	10800204 	addi	r2,r2,8
 1055c3c:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 1055c40:	1000090e 	bge	r2,zero,1055c68 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 1055c44:	e0bffe17 	ldw	r2,-8(fp)
 1055c48:	10c00324 	muli	r3,r2,12
 1055c4c:	00804174 	movhi	r2,261
 1055c50:	109d8104 	addi	r2,r2,30212
 1055c54:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 1055c58:	e0bfff17 	ldw	r2,-4(fp)
 1055c5c:	18800226 	beq	r3,r2,1055c68 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 1055c60:	00bffcc4 	movi	r2,-13
 1055c64:	00000806 	br	1055c88 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 1055c68:	e0bffe17 	ldw	r2,-8(fp)
 1055c6c:	10800044 	addi	r2,r2,1
 1055c70:	e0bffe15 	stw	r2,-8(fp)
 1055c74:	d0a00a17 	ldw	r2,-32728(gp)
 1055c78:	1007883a 	mov	r3,r2
 1055c7c:	e0bffe17 	ldw	r2,-8(fp)
 1055c80:	18bfdf2e 	bgeu	r3,r2,1055c00 <__alt_data_end+0xfffd5c00>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 1055c84:	0005883a 	mov	r2,zero
}
 1055c88:	e037883a 	mov	sp,fp
 1055c8c:	df000017 	ldw	fp,0(sp)
 1055c90:	dec00104 	addi	sp,sp,4
 1055c94:	f800283a 	ret

01055c98 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 1055c98:	defff604 	addi	sp,sp,-40
 1055c9c:	dfc00915 	stw	ra,36(sp)
 1055ca0:	df000815 	stw	fp,32(sp)
 1055ca4:	df000804 	addi	fp,sp,32
 1055ca8:	e13ffd15 	stw	r4,-12(fp)
 1055cac:	e17ffe15 	stw	r5,-8(fp)
 1055cb0:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 1055cb4:	00bfffc4 	movi	r2,-1
 1055cb8:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 1055cbc:	00bffb44 	movi	r2,-19
 1055cc0:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 1055cc4:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 1055cc8:	d1600804 	addi	r5,gp,-32736
 1055ccc:	e13ffd17 	ldw	r4,-12(fp)
 1055cd0:	1055fb40 	call	1055fb4 <alt_find_dev>
 1055cd4:	e0bff815 	stw	r2,-32(fp)
 1055cd8:	e0bff817 	ldw	r2,-32(fp)
 1055cdc:	1000051e 	bne	r2,zero,1055cf4 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 1055ce0:	e13ffd17 	ldw	r4,-12(fp)
 1055ce4:	10560440 	call	1056044 <alt_find_file>
 1055ce8:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 1055cec:	00800044 	movi	r2,1
 1055cf0:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 1055cf4:	e0bff817 	ldw	r2,-32(fp)
 1055cf8:	10002926 	beq	r2,zero,1055da0 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
 1055cfc:	e13ff817 	ldw	r4,-32(fp)
 1055d00:	105614c0 	call	105614c <alt_get_fd>
 1055d04:	e0bff915 	stw	r2,-28(fp)
 1055d08:	e0bff917 	ldw	r2,-28(fp)
 1055d0c:	1000030e 	bge	r2,zero,1055d1c <open+0x84>
    {
      status = index;
 1055d10:	e0bff917 	ldw	r2,-28(fp)
 1055d14:	e0bffa15 	stw	r2,-24(fp)
 1055d18:	00002306 	br	1055da8 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
 1055d1c:	e0bff917 	ldw	r2,-28(fp)
 1055d20:	10c00324 	muli	r3,r2,12
 1055d24:	00804174 	movhi	r2,261
 1055d28:	109d8104 	addi	r2,r2,30212
 1055d2c:	1885883a 	add	r2,r3,r2
 1055d30:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 1055d34:	e0fffe17 	ldw	r3,-8(fp)
 1055d38:	00900034 	movhi	r2,16384
 1055d3c:	10bfffc4 	addi	r2,r2,-1
 1055d40:	1886703a 	and	r3,r3,r2
 1055d44:	e0bffc17 	ldw	r2,-16(fp)
 1055d48:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 1055d4c:	e0bffb17 	ldw	r2,-20(fp)
 1055d50:	1000051e 	bne	r2,zero,1055d68 <open+0xd0>
 1055d54:	e13ffc17 	ldw	r4,-16(fp)
 1055d58:	1055bd40 	call	1055bd4 <alt_file_locked>
 1055d5c:	e0bffa15 	stw	r2,-24(fp)
 1055d60:	e0bffa17 	ldw	r2,-24(fp)
 1055d64:	10001016 	blt	r2,zero,1055da8 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 1055d68:	e0bff817 	ldw	r2,-32(fp)
 1055d6c:	10800317 	ldw	r2,12(r2)
 1055d70:	10000826 	beq	r2,zero,1055d94 <open+0xfc>
 1055d74:	e0bff817 	ldw	r2,-32(fp)
 1055d78:	10800317 	ldw	r2,12(r2)
 1055d7c:	e1ffff17 	ldw	r7,-4(fp)
 1055d80:	e1bffe17 	ldw	r6,-8(fp)
 1055d84:	e17ffd17 	ldw	r5,-12(fp)
 1055d88:	e13ffc17 	ldw	r4,-16(fp)
 1055d8c:	103ee83a 	callr	r2
 1055d90:	00000106 	br	1055d98 <open+0x100>
 1055d94:	0005883a 	mov	r2,zero
 1055d98:	e0bffa15 	stw	r2,-24(fp)
 1055d9c:	00000206 	br	1055da8 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
 1055da0:	00bffb44 	movi	r2,-19
 1055da4:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 1055da8:	e0bffa17 	ldw	r2,-24(fp)
 1055dac:	1000090e 	bge	r2,zero,1055dd4 <open+0x13c>
  {
    alt_release_fd (index);  
 1055db0:	e13ff917 	ldw	r4,-28(fp)
 1055db4:	10544a40 	call	10544a4 <alt_release_fd>
    ALT_ERRNO = -status;
 1055db8:	1055b980 	call	1055b98 <alt_get_errno>
 1055dbc:	1007883a 	mov	r3,r2
 1055dc0:	e0bffa17 	ldw	r2,-24(fp)
 1055dc4:	0085c83a 	sub	r2,zero,r2
 1055dc8:	18800015 	stw	r2,0(r3)
    return -1;
 1055dcc:	00bfffc4 	movi	r2,-1
 1055dd0:	00000106 	br	1055dd8 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
 1055dd4:	e0bff917 	ldw	r2,-28(fp)
}
 1055dd8:	e037883a 	mov	sp,fp
 1055ddc:	dfc00117 	ldw	ra,4(sp)
 1055de0:	df000017 	ldw	fp,0(sp)
 1055de4:	dec00204 	addi	sp,sp,8
 1055de8:	f800283a 	ret

01055dec <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 1055dec:	defffa04 	addi	sp,sp,-24
 1055df0:	df000515 	stw	fp,20(sp)
 1055df4:	df000504 	addi	fp,sp,20
 1055df8:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 1055dfc:	0005303a 	rdctl	r2,status
 1055e00:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 1055e04:	e0fffc17 	ldw	r3,-16(fp)
 1055e08:	00bfff84 	movi	r2,-2
 1055e0c:	1884703a 	and	r2,r3,r2
 1055e10:	1001703a 	wrctl	status,r2
  
  return context;
 1055e14:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 1055e18:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 1055e1c:	e0bfff17 	ldw	r2,-4(fp)
 1055e20:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 1055e24:	e0bffd17 	ldw	r2,-12(fp)
 1055e28:	10800017 	ldw	r2,0(r2)
 1055e2c:	e0fffd17 	ldw	r3,-12(fp)
 1055e30:	18c00117 	ldw	r3,4(r3)
 1055e34:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 1055e38:	e0bffd17 	ldw	r2,-12(fp)
 1055e3c:	10800117 	ldw	r2,4(r2)
 1055e40:	e0fffd17 	ldw	r3,-12(fp)
 1055e44:	18c00017 	ldw	r3,0(r3)
 1055e48:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 1055e4c:	e0bffd17 	ldw	r2,-12(fp)
 1055e50:	e0fffd17 	ldw	r3,-12(fp)
 1055e54:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 1055e58:	e0bffd17 	ldw	r2,-12(fp)
 1055e5c:	e0fffd17 	ldw	r3,-12(fp)
 1055e60:	10c00015 	stw	r3,0(r2)
 1055e64:	e0bffb17 	ldw	r2,-20(fp)
 1055e68:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 1055e6c:	e0bffe17 	ldw	r2,-8(fp)
 1055e70:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 1055e74:	0001883a 	nop
 1055e78:	e037883a 	mov	sp,fp
 1055e7c:	df000017 	ldw	fp,0(sp)
 1055e80:	dec00104 	addi	sp,sp,4
 1055e84:	f800283a 	ret

01055e88 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 1055e88:	defffb04 	addi	sp,sp,-20
 1055e8c:	dfc00415 	stw	ra,16(sp)
 1055e90:	df000315 	stw	fp,12(sp)
 1055e94:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 1055e98:	d0a00e17 	ldw	r2,-32712(gp)
 1055e9c:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 1055ea0:	d0a6d717 	ldw	r2,-25764(gp)
 1055ea4:	10800044 	addi	r2,r2,1
 1055ea8:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 1055eac:	00002e06 	br	1055f68 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 1055eb0:	e0bffd17 	ldw	r2,-12(fp)
 1055eb4:	10800017 	ldw	r2,0(r2)
 1055eb8:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 1055ebc:	e0bffd17 	ldw	r2,-12(fp)
 1055ec0:	10800403 	ldbu	r2,16(r2)
 1055ec4:	10803fcc 	andi	r2,r2,255
 1055ec8:	10000426 	beq	r2,zero,1055edc <alt_tick+0x54>
 1055ecc:	d0a6d717 	ldw	r2,-25764(gp)
 1055ed0:	1000021e 	bne	r2,zero,1055edc <alt_tick+0x54>
    {
      alarm->rollover = 0;
 1055ed4:	e0bffd17 	ldw	r2,-12(fp)
 1055ed8:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 1055edc:	e0bffd17 	ldw	r2,-12(fp)
 1055ee0:	10800217 	ldw	r2,8(r2)
 1055ee4:	d0e6d717 	ldw	r3,-25764(gp)
 1055ee8:	18801d36 	bltu	r3,r2,1055f60 <alt_tick+0xd8>
 1055eec:	e0bffd17 	ldw	r2,-12(fp)
 1055ef0:	10800403 	ldbu	r2,16(r2)
 1055ef4:	10803fcc 	andi	r2,r2,255
 1055ef8:	1000191e 	bne	r2,zero,1055f60 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 1055efc:	e0bffd17 	ldw	r2,-12(fp)
 1055f00:	10800317 	ldw	r2,12(r2)
 1055f04:	e0fffd17 	ldw	r3,-12(fp)
 1055f08:	18c00517 	ldw	r3,20(r3)
 1055f0c:	1809883a 	mov	r4,r3
 1055f10:	103ee83a 	callr	r2
 1055f14:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 1055f18:	e0bfff17 	ldw	r2,-4(fp)
 1055f1c:	1000031e 	bne	r2,zero,1055f2c <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 1055f20:	e13ffd17 	ldw	r4,-12(fp)
 1055f24:	1055dec0 	call	1055dec <alt_alarm_stop>
 1055f28:	00000d06 	br	1055f60 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 1055f2c:	e0bffd17 	ldw	r2,-12(fp)
 1055f30:	10c00217 	ldw	r3,8(r2)
 1055f34:	e0bfff17 	ldw	r2,-4(fp)
 1055f38:	1887883a 	add	r3,r3,r2
 1055f3c:	e0bffd17 	ldw	r2,-12(fp)
 1055f40:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 1055f44:	e0bffd17 	ldw	r2,-12(fp)
 1055f48:	10c00217 	ldw	r3,8(r2)
 1055f4c:	d0a6d717 	ldw	r2,-25764(gp)
 1055f50:	1880032e 	bgeu	r3,r2,1055f60 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 1055f54:	e0bffd17 	ldw	r2,-12(fp)
 1055f58:	00c00044 	movi	r3,1
 1055f5c:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 1055f60:	e0bffe17 	ldw	r2,-8(fp)
 1055f64:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 1055f68:	e0fffd17 	ldw	r3,-12(fp)
 1055f6c:	d0a00e04 	addi	r2,gp,-32712
 1055f70:	18bfcf1e 	bne	r3,r2,1055eb0 <__alt_data_end+0xfffd5eb0>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 1055f74:	0001883a 	nop
}
 1055f78:	0001883a 	nop
 1055f7c:	e037883a 	mov	sp,fp
 1055f80:	dfc00117 	ldw	ra,4(sp)
 1055f84:	df000017 	ldw	fp,0(sp)
 1055f88:	dec00204 	addi	sp,sp,8
 1055f8c:	f800283a 	ret

01055f90 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 1055f90:	deffff04 	addi	sp,sp,-4
 1055f94:	df000015 	stw	fp,0(sp)
 1055f98:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 1055f9c:	000170fa 	wrctl	ienable,zero
}
 1055fa0:	0001883a 	nop
 1055fa4:	e037883a 	mov	sp,fp
 1055fa8:	df000017 	ldw	fp,0(sp)
 1055fac:	dec00104 	addi	sp,sp,4
 1055fb0:	f800283a 	ret

01055fb4 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 1055fb4:	defffa04 	addi	sp,sp,-24
 1055fb8:	dfc00515 	stw	ra,20(sp)
 1055fbc:	df000415 	stw	fp,16(sp)
 1055fc0:	df000404 	addi	fp,sp,16
 1055fc4:	e13ffe15 	stw	r4,-8(fp)
 1055fc8:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 1055fcc:	e0bfff17 	ldw	r2,-4(fp)
 1055fd0:	10800017 	ldw	r2,0(r2)
 1055fd4:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 1055fd8:	e13ffe17 	ldw	r4,-8(fp)
 1055fdc:	1045c580 	call	1045c58 <strlen>
 1055fe0:	10800044 	addi	r2,r2,1
 1055fe4:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 1055fe8:	00000d06 	br	1056020 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 1055fec:	e0bffc17 	ldw	r2,-16(fp)
 1055ff0:	10800217 	ldw	r2,8(r2)
 1055ff4:	e0fffd17 	ldw	r3,-12(fp)
 1055ff8:	180d883a 	mov	r6,r3
 1055ffc:	e17ffe17 	ldw	r5,-8(fp)
 1056000:	1009883a 	mov	r4,r2
 1056004:	10563680 	call	1056368 <memcmp>
 1056008:	1000021e 	bne	r2,zero,1056014 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 105600c:	e0bffc17 	ldw	r2,-16(fp)
 1056010:	00000706 	br	1056030 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 1056014:	e0bffc17 	ldw	r2,-16(fp)
 1056018:	10800017 	ldw	r2,0(r2)
 105601c:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 1056020:	e0fffc17 	ldw	r3,-16(fp)
 1056024:	e0bfff17 	ldw	r2,-4(fp)
 1056028:	18bff01e 	bne	r3,r2,1055fec <__alt_data_end+0xfffd5fec>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 105602c:	0005883a 	mov	r2,zero
}
 1056030:	e037883a 	mov	sp,fp
 1056034:	dfc00117 	ldw	ra,4(sp)
 1056038:	df000017 	ldw	fp,0(sp)
 105603c:	dec00204 	addi	sp,sp,8
 1056040:	f800283a 	ret

01056044 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 1056044:	defffb04 	addi	sp,sp,-20
 1056048:	dfc00415 	stw	ra,16(sp)
 105604c:	df000315 	stw	fp,12(sp)
 1056050:	df000304 	addi	fp,sp,12
 1056054:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 1056058:	d0a00617 	ldw	r2,-32744(gp)
 105605c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 1056060:	00003106 	br	1056128 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
 1056064:	e0bffd17 	ldw	r2,-12(fp)
 1056068:	10800217 	ldw	r2,8(r2)
 105606c:	1009883a 	mov	r4,r2
 1056070:	1045c580 	call	1045c58 <strlen>
 1056074:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 1056078:	e0bffd17 	ldw	r2,-12(fp)
 105607c:	10c00217 	ldw	r3,8(r2)
 1056080:	e0bffe17 	ldw	r2,-8(fp)
 1056084:	10bfffc4 	addi	r2,r2,-1
 1056088:	1885883a 	add	r2,r3,r2
 105608c:	10800003 	ldbu	r2,0(r2)
 1056090:	10803fcc 	andi	r2,r2,255
 1056094:	1080201c 	xori	r2,r2,128
 1056098:	10bfe004 	addi	r2,r2,-128
 105609c:	10800bd8 	cmpnei	r2,r2,47
 10560a0:	1000031e 	bne	r2,zero,10560b0 <alt_find_file+0x6c>
    {
      len -= 1;
 10560a4:	e0bffe17 	ldw	r2,-8(fp)
 10560a8:	10bfffc4 	addi	r2,r2,-1
 10560ac:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 10560b0:	e0bffe17 	ldw	r2,-8(fp)
 10560b4:	e0ffff17 	ldw	r3,-4(fp)
 10560b8:	1885883a 	add	r2,r3,r2
 10560bc:	10800003 	ldbu	r2,0(r2)
 10560c0:	10803fcc 	andi	r2,r2,255
 10560c4:	1080201c 	xori	r2,r2,128
 10560c8:	10bfe004 	addi	r2,r2,-128
 10560cc:	10800be0 	cmpeqi	r2,r2,47
 10560d0:	1000081e 	bne	r2,zero,10560f4 <alt_find_file+0xb0>
 10560d4:	e0bffe17 	ldw	r2,-8(fp)
 10560d8:	e0ffff17 	ldw	r3,-4(fp)
 10560dc:	1885883a 	add	r2,r3,r2
 10560e0:	10800003 	ldbu	r2,0(r2)
 10560e4:	10803fcc 	andi	r2,r2,255
 10560e8:	1080201c 	xori	r2,r2,128
 10560ec:	10bfe004 	addi	r2,r2,-128
 10560f0:	10000a1e 	bne	r2,zero,105611c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
 10560f4:	e0bffd17 	ldw	r2,-12(fp)
 10560f8:	10800217 	ldw	r2,8(r2)
 10560fc:	e0fffe17 	ldw	r3,-8(fp)
 1056100:	180d883a 	mov	r6,r3
 1056104:	e17fff17 	ldw	r5,-4(fp)
 1056108:	1009883a 	mov	r4,r2
 105610c:	10563680 	call	1056368 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 1056110:	1000021e 	bne	r2,zero,105611c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 1056114:	e0bffd17 	ldw	r2,-12(fp)
 1056118:	00000706 	br	1056138 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
 105611c:	e0bffd17 	ldw	r2,-12(fp)
 1056120:	10800017 	ldw	r2,0(r2)
 1056124:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 1056128:	e0fffd17 	ldw	r3,-12(fp)
 105612c:	d0a00604 	addi	r2,gp,-32744
 1056130:	18bfcc1e 	bne	r3,r2,1056064 <__alt_data_end+0xfffd6064>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 1056134:	0005883a 	mov	r2,zero
}
 1056138:	e037883a 	mov	sp,fp
 105613c:	dfc00117 	ldw	ra,4(sp)
 1056140:	df000017 	ldw	fp,0(sp)
 1056144:	dec00204 	addi	sp,sp,8
 1056148:	f800283a 	ret

0105614c <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 105614c:	defffc04 	addi	sp,sp,-16
 1056150:	df000315 	stw	fp,12(sp)
 1056154:	df000304 	addi	fp,sp,12
 1056158:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
 105615c:	00bffa04 	movi	r2,-24
 1056160:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 1056164:	e03ffd15 	stw	zero,-12(fp)
 1056168:	00001906 	br	10561d0 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
 105616c:	00804174 	movhi	r2,261
 1056170:	109d8104 	addi	r2,r2,30212
 1056174:	e0fffd17 	ldw	r3,-12(fp)
 1056178:	18c00324 	muli	r3,r3,12
 105617c:	10c5883a 	add	r2,r2,r3
 1056180:	10800017 	ldw	r2,0(r2)
 1056184:	10000f1e 	bne	r2,zero,10561c4 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
 1056188:	00804174 	movhi	r2,261
 105618c:	109d8104 	addi	r2,r2,30212
 1056190:	e0fffd17 	ldw	r3,-12(fp)
 1056194:	18c00324 	muli	r3,r3,12
 1056198:	10c5883a 	add	r2,r2,r3
 105619c:	e0ffff17 	ldw	r3,-4(fp)
 10561a0:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 10561a4:	d0e00a17 	ldw	r3,-32728(gp)
 10561a8:	e0bffd17 	ldw	r2,-12(fp)
 10561ac:	1880020e 	bge	r3,r2,10561b8 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
 10561b0:	e0bffd17 	ldw	r2,-12(fp)
 10561b4:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
 10561b8:	e0bffd17 	ldw	r2,-12(fp)
 10561bc:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
 10561c0:	00000606 	br	10561dc <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 10561c4:	e0bffd17 	ldw	r2,-12(fp)
 10561c8:	10800044 	addi	r2,r2,1
 10561cc:	e0bffd15 	stw	r2,-12(fp)
 10561d0:	e0bffd17 	ldw	r2,-12(fp)
 10561d4:	10800810 	cmplti	r2,r2,32
 10561d8:	103fe41e 	bne	r2,zero,105616c <__alt_data_end+0xfffd616c>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 10561dc:	e0bffe17 	ldw	r2,-8(fp)
}
 10561e0:	e037883a 	mov	sp,fp
 10561e4:	df000017 	ldw	fp,0(sp)
 10561e8:	dec00104 	addi	sp,sp,4
 10561ec:	f800283a 	ret

010561f0 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
 10561f0:	defffb04 	addi	sp,sp,-20
 10561f4:	df000415 	stw	fp,16(sp)
 10561f8:	df000404 	addi	fp,sp,16
 10561fc:	e13ffe15 	stw	r4,-8(fp)
 1056200:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
 1056204:	e0bfff17 	ldw	r2,-4(fp)
 1056208:	10840070 	cmpltui	r2,r2,4097
 105620c:	1000021e 	bne	r2,zero,1056218 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
 1056210:	00840004 	movi	r2,4096
 1056214:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
 1056218:	e0fffe17 	ldw	r3,-8(fp)
 105621c:	e0bfff17 	ldw	r2,-4(fp)
 1056220:	1885883a 	add	r2,r3,r2
 1056224:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 1056228:	e0bffe17 	ldw	r2,-8(fp)
 105622c:	e0bffc15 	stw	r2,-16(fp)
 1056230:	00000506 	br	1056248 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
 1056234:	e0bffc17 	ldw	r2,-16(fp)
 1056238:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
 105623c:	e0bffc17 	ldw	r2,-16(fp)
 1056240:	10800804 	addi	r2,r2,32
 1056244:	e0bffc15 	stw	r2,-16(fp)
 1056248:	e0fffc17 	ldw	r3,-16(fp)
 105624c:	e0bffd17 	ldw	r2,-12(fp)
 1056250:	18bff836 	bltu	r3,r2,1056234 <__alt_data_end+0xfffd6234>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
 1056254:	e0bffe17 	ldw	r2,-8(fp)
 1056258:	108007cc 	andi	r2,r2,31
 105625c:	10000226 	beq	r2,zero,1056268 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
 1056260:	e0bffc17 	ldw	r2,-16(fp)
 1056264:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
 1056268:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
 105626c:	0001883a 	nop
 1056270:	e037883a 	mov	sp,fp
 1056274:	df000017 	ldw	fp,0(sp)
 1056278:	dec00104 	addi	sp,sp,4
 105627c:	f800283a 	ret

01056280 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 1056280:	defffe04 	addi	sp,sp,-8
 1056284:	df000115 	stw	fp,4(sp)
 1056288:	df000104 	addi	fp,sp,4
 105628c:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
 1056290:	e0bfff17 	ldw	r2,-4(fp)
 1056294:	10bffe84 	addi	r2,r2,-6
 1056298:	10c00428 	cmpgeui	r3,r2,16
 105629c:	18001a1e 	bne	r3,zero,1056308 <alt_exception_cause_generated_bad_addr+0x88>
 10562a0:	100690ba 	slli	r3,r2,2
 10562a4:	00804174 	movhi	r2,261
 10562a8:	1098ae04 	addi	r2,r2,25272
 10562ac:	1885883a 	add	r2,r3,r2
 10562b0:	10800017 	ldw	r2,0(r2)
 10562b4:	1000683a 	jmp	r2
 10562b8:	010562f8 	rdprs	r4,zero,5515
 10562bc:	010562f8 	rdprs	r4,zero,5515
 10562c0:	01056308 	cmpgei	r4,zero,5516
 10562c4:	01056308 	cmpgei	r4,zero,5516
 10562c8:	01056308 	cmpgei	r4,zero,5516
 10562cc:	010562f8 	rdprs	r4,zero,5515
 10562d0:	01056300 	call	105630 <__alt_mem_onchip_memory2-0xf3a9d0>
 10562d4:	01056308 	cmpgei	r4,zero,5516
 10562d8:	010562f8 	rdprs	r4,zero,5515
 10562dc:	010562f8 	rdprs	r4,zero,5515
 10562e0:	01056308 	cmpgei	r4,zero,5516
 10562e4:	010562f8 	rdprs	r4,zero,5515
 10562e8:	01056300 	call	105630 <__alt_mem_onchip_memory2-0xf3a9d0>
 10562ec:	01056308 	cmpgei	r4,zero,5516
 10562f0:	01056308 	cmpgei	r4,zero,5516
 10562f4:	010562f8 	rdprs	r4,zero,5515
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 10562f8:	00800044 	movi	r2,1
 10562fc:	00000306 	br	105630c <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 1056300:	0005883a 	mov	r2,zero
 1056304:	00000106 	br	105630c <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
 1056308:	0005883a 	mov	r2,zero
  }
}
 105630c:	e037883a 	mov	sp,fp
 1056310:	df000017 	ldw	fp,0(sp)
 1056314:	dec00104 	addi	sp,sp,4
 1056318:	f800283a 	ret

0105631c <atexit>:
 105631c:	200b883a 	mov	r5,r4
 1056320:	000f883a 	mov	r7,zero
 1056324:	000d883a 	mov	r6,zero
 1056328:	0009883a 	mov	r4,zero
 105632c:	10563e41 	jmpi	10563e4 <__register_exitproc>

01056330 <exit>:
 1056330:	defffe04 	addi	sp,sp,-8
 1056334:	000b883a 	mov	r5,zero
 1056338:	dc000015 	stw	r16,0(sp)
 105633c:	dfc00115 	stw	ra,4(sp)
 1056340:	2021883a 	mov	r16,r4
 1056344:	10564fc0 	call	10564fc <__call_exitprocs>
 1056348:	008041b4 	movhi	r2,262
 105634c:	10a1f904 	addi	r2,r2,-30748
 1056350:	11000017 	ldw	r4,0(r2)
 1056354:	20800f17 	ldw	r2,60(r4)
 1056358:	10000126 	beq	r2,zero,1056360 <exit+0x30>
 105635c:	103ee83a 	callr	r2
 1056360:	8009883a 	mov	r4,r16
 1056364:	105667c0 	call	105667c <_exit>

01056368 <memcmp>:
 1056368:	01c000c4 	movi	r7,3
 105636c:	3980192e 	bgeu	r7,r6,10563d4 <memcmp+0x6c>
 1056370:	2144b03a 	or	r2,r4,r5
 1056374:	11c4703a 	and	r2,r2,r7
 1056378:	10000f26 	beq	r2,zero,10563b8 <memcmp+0x50>
 105637c:	20800003 	ldbu	r2,0(r4)
 1056380:	28c00003 	ldbu	r3,0(r5)
 1056384:	10c0151e 	bne	r2,r3,10563dc <memcmp+0x74>
 1056388:	31bfff84 	addi	r6,r6,-2
 105638c:	01ffffc4 	movi	r7,-1
 1056390:	00000406 	br	10563a4 <memcmp+0x3c>
 1056394:	20800003 	ldbu	r2,0(r4)
 1056398:	28c00003 	ldbu	r3,0(r5)
 105639c:	31bfffc4 	addi	r6,r6,-1
 10563a0:	10c00e1e 	bne	r2,r3,10563dc <memcmp+0x74>
 10563a4:	21000044 	addi	r4,r4,1
 10563a8:	29400044 	addi	r5,r5,1
 10563ac:	31fff91e 	bne	r6,r7,1056394 <__alt_data_end+0xfffd6394>
 10563b0:	0005883a 	mov	r2,zero
 10563b4:	f800283a 	ret
 10563b8:	20c00017 	ldw	r3,0(r4)
 10563bc:	28800017 	ldw	r2,0(r5)
 10563c0:	18bfee1e 	bne	r3,r2,105637c <__alt_data_end+0xfffd637c>
 10563c4:	31bfff04 	addi	r6,r6,-4
 10563c8:	21000104 	addi	r4,r4,4
 10563cc:	29400104 	addi	r5,r5,4
 10563d0:	39bff936 	bltu	r7,r6,10563b8 <__alt_data_end+0xfffd63b8>
 10563d4:	303fe91e 	bne	r6,zero,105637c <__alt_data_end+0xfffd637c>
 10563d8:	003ff506 	br	10563b0 <__alt_data_end+0xfffd63b0>
 10563dc:	10c5c83a 	sub	r2,r2,r3
 10563e0:	f800283a 	ret

010563e4 <__register_exitproc>:
 10563e4:	defffa04 	addi	sp,sp,-24
 10563e8:	dc000315 	stw	r16,12(sp)
 10563ec:	040041b4 	movhi	r16,262
 10563f0:	8421f904 	addi	r16,r16,-30748
 10563f4:	80c00017 	ldw	r3,0(r16)
 10563f8:	dc400415 	stw	r17,16(sp)
 10563fc:	dfc00515 	stw	ra,20(sp)
 1056400:	18805217 	ldw	r2,328(r3)
 1056404:	2023883a 	mov	r17,r4
 1056408:	10003726 	beq	r2,zero,10564e8 <__register_exitproc+0x104>
 105640c:	10c00117 	ldw	r3,4(r2)
 1056410:	010007c4 	movi	r4,31
 1056414:	20c00e16 	blt	r4,r3,1056450 <__register_exitproc+0x6c>
 1056418:	1a000044 	addi	r8,r3,1
 105641c:	8800221e 	bne	r17,zero,10564a8 <__register_exitproc+0xc4>
 1056420:	18c00084 	addi	r3,r3,2
 1056424:	18c7883a 	add	r3,r3,r3
 1056428:	18c7883a 	add	r3,r3,r3
 105642c:	12000115 	stw	r8,4(r2)
 1056430:	10c7883a 	add	r3,r2,r3
 1056434:	19400015 	stw	r5,0(r3)
 1056438:	0005883a 	mov	r2,zero
 105643c:	dfc00517 	ldw	ra,20(sp)
 1056440:	dc400417 	ldw	r17,16(sp)
 1056444:	dc000317 	ldw	r16,12(sp)
 1056448:	dec00604 	addi	sp,sp,24
 105644c:	f800283a 	ret
 1056450:	00800034 	movhi	r2,0
 1056454:	10800004 	addi	r2,r2,0
 1056458:	10002626 	beq	r2,zero,10564f4 <__register_exitproc+0x110>
 105645c:	01006404 	movi	r4,400
 1056460:	d9400015 	stw	r5,0(sp)
 1056464:	d9800115 	stw	r6,4(sp)
 1056468:	d9c00215 	stw	r7,8(sp)
 105646c:	00000000 	call	0 <__alt_mem_onchip_memory2-0x1040000>
 1056470:	d9400017 	ldw	r5,0(sp)
 1056474:	d9800117 	ldw	r6,4(sp)
 1056478:	d9c00217 	ldw	r7,8(sp)
 105647c:	10001d26 	beq	r2,zero,10564f4 <__register_exitproc+0x110>
 1056480:	81000017 	ldw	r4,0(r16)
 1056484:	10000115 	stw	zero,4(r2)
 1056488:	02000044 	movi	r8,1
 105648c:	22405217 	ldw	r9,328(r4)
 1056490:	0007883a 	mov	r3,zero
 1056494:	12400015 	stw	r9,0(r2)
 1056498:	20805215 	stw	r2,328(r4)
 105649c:	10006215 	stw	zero,392(r2)
 10564a0:	10006315 	stw	zero,396(r2)
 10564a4:	883fde26 	beq	r17,zero,1056420 <__alt_data_end+0xfffd6420>
 10564a8:	18c9883a 	add	r4,r3,r3
 10564ac:	2109883a 	add	r4,r4,r4
 10564b0:	1109883a 	add	r4,r2,r4
 10564b4:	21802215 	stw	r6,136(r4)
 10564b8:	01800044 	movi	r6,1
 10564bc:	12406217 	ldw	r9,392(r2)
 10564c0:	30cc983a 	sll	r6,r6,r3
 10564c4:	4992b03a 	or	r9,r9,r6
 10564c8:	12406215 	stw	r9,392(r2)
 10564cc:	21c04215 	stw	r7,264(r4)
 10564d0:	01000084 	movi	r4,2
 10564d4:	893fd21e 	bne	r17,r4,1056420 <__alt_data_end+0xfffd6420>
 10564d8:	11006317 	ldw	r4,396(r2)
 10564dc:	218cb03a 	or	r6,r4,r6
 10564e0:	11806315 	stw	r6,396(r2)
 10564e4:	003fce06 	br	1056420 <__alt_data_end+0xfffd6420>
 10564e8:	18805304 	addi	r2,r3,332
 10564ec:	18805215 	stw	r2,328(r3)
 10564f0:	003fc606 	br	105640c <__alt_data_end+0xfffd640c>
 10564f4:	00bfffc4 	movi	r2,-1
 10564f8:	003fd006 	br	105643c <__alt_data_end+0xfffd643c>

010564fc <__call_exitprocs>:
 10564fc:	defff504 	addi	sp,sp,-44
 1056500:	df000915 	stw	fp,36(sp)
 1056504:	dd400615 	stw	r21,24(sp)
 1056508:	dc800315 	stw	r18,12(sp)
 105650c:	dfc00a15 	stw	ra,40(sp)
 1056510:	ddc00815 	stw	r23,32(sp)
 1056514:	dd800715 	stw	r22,28(sp)
 1056518:	dd000515 	stw	r20,20(sp)
 105651c:	dcc00415 	stw	r19,16(sp)
 1056520:	dc400215 	stw	r17,8(sp)
 1056524:	dc000115 	stw	r16,4(sp)
 1056528:	d9000015 	stw	r4,0(sp)
 105652c:	2839883a 	mov	fp,r5
 1056530:	04800044 	movi	r18,1
 1056534:	057fffc4 	movi	r21,-1
 1056538:	008041b4 	movhi	r2,262
 105653c:	10a1f904 	addi	r2,r2,-30748
 1056540:	12000017 	ldw	r8,0(r2)
 1056544:	45005217 	ldw	r20,328(r8)
 1056548:	44c05204 	addi	r19,r8,328
 105654c:	a0001c26 	beq	r20,zero,10565c0 <__call_exitprocs+0xc4>
 1056550:	a0800117 	ldw	r2,4(r20)
 1056554:	15ffffc4 	addi	r23,r2,-1
 1056558:	b8000d16 	blt	r23,zero,1056590 <__call_exitprocs+0x94>
 105655c:	14000044 	addi	r16,r2,1
 1056560:	8421883a 	add	r16,r16,r16
 1056564:	8421883a 	add	r16,r16,r16
 1056568:	84402004 	addi	r17,r16,128
 105656c:	a463883a 	add	r17,r20,r17
 1056570:	a421883a 	add	r16,r20,r16
 1056574:	e0001e26 	beq	fp,zero,10565f0 <__call_exitprocs+0xf4>
 1056578:	80804017 	ldw	r2,256(r16)
 105657c:	e0801c26 	beq	fp,r2,10565f0 <__call_exitprocs+0xf4>
 1056580:	bdffffc4 	addi	r23,r23,-1
 1056584:	843fff04 	addi	r16,r16,-4
 1056588:	8c7fff04 	addi	r17,r17,-4
 105658c:	bd7ff91e 	bne	r23,r21,1056574 <__alt_data_end+0xfffd6574>
 1056590:	00800034 	movhi	r2,0
 1056594:	10800004 	addi	r2,r2,0
 1056598:	10000926 	beq	r2,zero,10565c0 <__call_exitprocs+0xc4>
 105659c:	a0800117 	ldw	r2,4(r20)
 10565a0:	1000301e 	bne	r2,zero,1056664 <__call_exitprocs+0x168>
 10565a4:	a0800017 	ldw	r2,0(r20)
 10565a8:	10003226 	beq	r2,zero,1056674 <__call_exitprocs+0x178>
 10565ac:	a009883a 	mov	r4,r20
 10565b0:	98800015 	stw	r2,0(r19)
 10565b4:	00000000 	call	0 <__alt_mem_onchip_memory2-0x1040000>
 10565b8:	9d000017 	ldw	r20,0(r19)
 10565bc:	a03fe41e 	bne	r20,zero,1056550 <__alt_data_end+0xfffd6550>
 10565c0:	dfc00a17 	ldw	ra,40(sp)
 10565c4:	df000917 	ldw	fp,36(sp)
 10565c8:	ddc00817 	ldw	r23,32(sp)
 10565cc:	dd800717 	ldw	r22,28(sp)
 10565d0:	dd400617 	ldw	r21,24(sp)
 10565d4:	dd000517 	ldw	r20,20(sp)
 10565d8:	dcc00417 	ldw	r19,16(sp)
 10565dc:	dc800317 	ldw	r18,12(sp)
 10565e0:	dc400217 	ldw	r17,8(sp)
 10565e4:	dc000117 	ldw	r16,4(sp)
 10565e8:	dec00b04 	addi	sp,sp,44
 10565ec:	f800283a 	ret
 10565f0:	a0800117 	ldw	r2,4(r20)
 10565f4:	80c00017 	ldw	r3,0(r16)
 10565f8:	10bfffc4 	addi	r2,r2,-1
 10565fc:	15c01426 	beq	r2,r23,1056650 <__call_exitprocs+0x154>
 1056600:	80000015 	stw	zero,0(r16)
 1056604:	183fde26 	beq	r3,zero,1056580 <__alt_data_end+0xfffd6580>
 1056608:	95c8983a 	sll	r4,r18,r23
 105660c:	a0806217 	ldw	r2,392(r20)
 1056610:	a5800117 	ldw	r22,4(r20)
 1056614:	2084703a 	and	r2,r4,r2
 1056618:	10000b26 	beq	r2,zero,1056648 <__call_exitprocs+0x14c>
 105661c:	a0806317 	ldw	r2,396(r20)
 1056620:	2088703a 	and	r4,r4,r2
 1056624:	20000c1e 	bne	r4,zero,1056658 <__call_exitprocs+0x15c>
 1056628:	89400017 	ldw	r5,0(r17)
 105662c:	d9000017 	ldw	r4,0(sp)
 1056630:	183ee83a 	callr	r3
 1056634:	a0800117 	ldw	r2,4(r20)
 1056638:	15bfbf1e 	bne	r2,r22,1056538 <__alt_data_end+0xfffd6538>
 105663c:	98800017 	ldw	r2,0(r19)
 1056640:	153fcf26 	beq	r2,r20,1056580 <__alt_data_end+0xfffd6580>
 1056644:	003fbc06 	br	1056538 <__alt_data_end+0xfffd6538>
 1056648:	183ee83a 	callr	r3
 105664c:	003ff906 	br	1056634 <__alt_data_end+0xfffd6634>
 1056650:	a5c00115 	stw	r23,4(r20)
 1056654:	003feb06 	br	1056604 <__alt_data_end+0xfffd6604>
 1056658:	89000017 	ldw	r4,0(r17)
 105665c:	183ee83a 	callr	r3
 1056660:	003ff406 	br	1056634 <__alt_data_end+0xfffd6634>
 1056664:	a0800017 	ldw	r2,0(r20)
 1056668:	a027883a 	mov	r19,r20
 105666c:	1029883a 	mov	r20,r2
 1056670:	003fb606 	br	105654c <__alt_data_end+0xfffd654c>
 1056674:	0005883a 	mov	r2,zero
 1056678:	003ffb06 	br	1056668 <__alt_data_end+0xfffd6668>

0105667c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 105667c:	defffd04 	addi	sp,sp,-12
 1056680:	df000215 	stw	fp,8(sp)
 1056684:	df000204 	addi	fp,sp,8
 1056688:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 105668c:	0001883a 	nop
 1056690:	e0bfff17 	ldw	r2,-4(fp)
 1056694:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 1056698:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 105669c:	10000226 	beq	r2,zero,10566a8 <_exit+0x2c>
    ALT_SIM_FAIL();
 10566a0:	002af070 	cmpltui	zero,zero,43969
 10566a4:	00000106 	br	10566ac <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 10566a8:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 10566ac:	003fff06 	br	10566ac <__alt_data_end+0xfffd66ac>
